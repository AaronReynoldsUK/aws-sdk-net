// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ServiceClientGenerator.Generators
{
    using System.IO;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class BaseGenerator : BaseGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 9 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
	
    // An object that contains all the information about a service
	public ServiceConfiguration Config { get; set; }

    // Adds the Amazon Apache 2.0 license
    public void AddLicenseHeader()
    {

        
        #line default
        #line hidden
        
        #line 16 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(@"/*
 * Copyright 2010-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the ""License"").
 * You may not use this file except in compliance with the License.
 * A copy of the License is located at
 * 
 *  http://aws.amazon.com/apache2.0
 * 
 * or in the ""license"" file accompanying this file. This file is distributed
 * on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/*
 * Do not modify this file. This file is generated from the ");

        
        #line default
        #line hidden
        
        #line 33 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Path.GetFileName(this.Config.ModelPath)));

        
        #line default
        #line hidden
        
        #line 33 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" service model.\r\n */\r\n");

        
        #line default
        #line hidden
        
        #line 35 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

    // Generates documentation for async calls based on the operation name
	public void AddAsyncDocumentation(Operation operation)
    {

        
        #line default
        #line hidden
        
        #line 41 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Initiates the asynchronous execution of the ");

        
        #line default
        #line hidden
        
        #line 43 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 43 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation.\r\n        /// </summary>\r\n        /// \r\n        /// <param name=\"reque" +
        "st\">Container for the necessary parameters to execute the ");

        
        #line default
        #line hidden
        
        #line 46 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 46 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(@" operation.</param>
        /// <param name=""cancellationToken"">
        ///     A cancellation token that can be used by other objects or threads to receive notice of cancellation.
        /// </param>
        /// <returns>The task object representing the asynchronous operation.</returns>
");

        
        #line default
        #line hidden
        
        #line 51 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 54 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 55 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 55 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 55 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 55 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 56 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

	// Generates documentation for async calls for unity based on the operation name
	public void AddUnityAsyncDocumentation(Operation operation, bool isSupportedOnlyByUnityWebRequest = false)
    {

        
        #line default
        #line hidden
        
        #line 63 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Initiates the asynchronous execution of the ");

        
        #line default
        #line hidden
        
        #line 65 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 65 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation.\r\n");

        
        #line default
        #line hidden
        
        #line 66 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		if(isSupportedOnlyByUnityWebRequest)
		{

        
        #line default
        #line hidden
        
        #line 69 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t/// This API is supported only when AWSConfigs.HttpClient is set to AWSConfigs." +
        "HttpClientOption.UnityWebRequest, the default value for this configuration optio" +
        "n is AWSConfigs.HttpClientOption.UnityWWW\r\n");

        
        #line default
        #line hidden
        
        #line 71 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		}

        
        #line default
        #line hidden
        
        #line 73 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </summary>\r\n        /// \r\n        /// <param name=\"request\">Container" +
        " for the necessary parameters to execute the ");

        
        #line default
        #line hidden
        
        #line 76 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 76 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation on Amazon");

        
        #line default
        #line hidden
        
        #line 76 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 76 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(@"Client.</param>
        /// <param name=""callback"">An Action delegate that is invoked when the operation completes.</param>
        /// <param name=""options"">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
        ///          procedure using the AsyncState property.</param>
");

        
        #line default
        #line hidden
        
        #line 80 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 83 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 84 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 84 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 84 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 84 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 85 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

    // Adds documentation to the begin operation based on the name
    public void AddBeginAsyncDocumentation(Operation operation)
    {

        
        #line default
        #line hidden
        
        #line 92 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Initiates the asynchronous execution of the ");

        
        #line default
        #line hidden
        
        #line 94 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 94 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation.\r\n        /// </summary>\r\n        /// \r\n        /// <param name=\"reque" +
        "st\">Container for the necessary parameters to execute the ");

        
        #line default
        #line hidden
        
        #line 97 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 97 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation on Amazon");

        
        #line default
        #line hidden
        
        #line 97 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 97 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(@"Client.</param>
        /// <param name=""callback"">An AsyncCallback delegate that is invoked when the operation completes.</param>
        /// <param name=""state"">A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
        ///          procedure using the AsyncState property.</param>
        /// 
        /// <returns>An IAsyncResult that can be used to poll or wait for results, or both; this value is also needed when invoking End");

        
        #line default
        #line hidden
        
        #line 102 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 102 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n        ///         operation.</returns>\r\n");

        
        #line default
        #line hidden
        
        #line 104 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 107 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 108 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 108 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 108 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 108 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 109 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

    // Generates the end operation async documentation
    public void AddEndAsyncDocumentation(Operation operation)
    {

        
        #line default
        #line hidden
        
        #line 116 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Finishes the asynchronous execution of the  ");

        
        #line default
        #line hidden
        
        #line 118 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 118 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation.\r\n        /// </summary>\r\n        /// \r\n        /// <param name=\"async" +
        "Result\">The IAsyncResult returned by the call to Begin");

        
        #line default
        #line hidden
        
        #line 121 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 121 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".</param>\r\n        /// \r\n        /// <returns>Returns a  ");

        
        #line default
        #line hidden
        
        #line 123 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 123 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Result from ");

        
        #line default
        #line hidden
        
        #line 123 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 123 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".</returns>\r\n");

        
        #line default
        #line hidden
        
        #line 124 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 127 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 128 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 128 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 128 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 128 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 129 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

    // Generates Client documentation
    public void FormatServiceClientDocumentation(string documentation)
    {
        documentation = CleanupDocumentation(documentation);

        
        #line default
        #line hidden
        
        #line 137 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// <summary>\r\n    /// Implementation for accessing ");

        
        #line default
        #line hidden
        
        #line 139 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 139 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n    ///\r\n");

        
        #line default
        #line hidden
        
        #line 141 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("    ", documentation);

        
        #line default
        #line hidden
        
        #line 143 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 145 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

    // Generates interface documentation
    public void FormatServiceInterfaceDocumentation(string documentation)
    {
        documentation = CleanupDocumentation(documentation);

        
        #line default
        #line hidden
        
        #line 152 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// <summary>\r\n    /// Interface for accessing ");

        
        #line default
        #line hidden
        
        #line 154 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 154 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n    ///\r\n");

        
        #line default
        #line hidden
        
        #line 156 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("    ", documentation);

        
        #line default
        #line hidden
        
        #line 158 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 160 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

    // Adds documentation to the class based on the shape
    public void FormatClassDocumentation(Shape structure)
    {
        if(structure == null)
		{

        
        #line default
        #line hidden
        
        #line 168 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// <summary>\r\n\t/// Empty class reserved for future use.\r\n    /// </summary>\r" +
        "\n");

        
        #line default
        #line hidden
        
        #line 172 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

            return;
		}
        var documentation = CleanupDocumentation(structure.Documentation);

        
        #line default
        #line hidden
        
        #line 176 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// <summary>\r\n");

        
        #line default
        #line hidden
        
        #line 178 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("    ", documentation);

        
        #line default
        #line hidden
        
        #line 180 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("    /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 182 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

    // Adds documentation to the members of a structure
    public void FormatPropertyDocumentation(Member member)
    {
        var documentation = CleanupDocumentation(string.Format("Gets and sets the property {0}. {1}", member.PropertyName, member.Documentation));


        
        #line default
        #line hidden
        
        #line 190 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n");

        
        #line default
        #line hidden
        
        #line 192 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("        ", documentation);

        
        #line default
        #line hidden
        
        #line 194 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 196 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

    public void FormatOperationDocumentationSync(Operation operation, bool includeRequest)
    {
        FormatOperationDocumentationHelper(operation, includeRequest, false, false);
    }

    public void FormatOperationDocumentationAsync(Operation operation, bool includeRequest)
    {
        FormatOperationDocumentationHelper(operation, includeRequest, true, false);
    }

	public void FormatUnityOperationDocumentationSync(Operation operation, bool includeRequest,bool isSupportedOnlyByUnityWebRequest = false)
	{
		FormatOperationDocumentationHelper(operation, includeRequest, false, false, isSupportedOnlyByUnityWebRequest);
	}
	
	public void FormatUnityOperationDocumentationAsync(Operation operation, bool includeRequest,bool isSupportedOnlyByUnityWebRequest = false)
	{
		FormatOperationDocumentationHelper(operation, includeRequest, true, true, isSupportedOnlyByUnityWebRequest);
	}

    // Documents the operation in a client or interface and optionally includes request param
    private void FormatOperationDocumentationHelper(Operation operation, bool includeRequest, bool isAsync, bool isUnity, bool isSupportedOnlyByUnityWebRequest = false)
    {
        var documentation = CleanupDocumentation(operation.Documentation);


        
        #line default
        #line hidden
        
        #line 224 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n        /// <summary>\r\n");

        
        #line default
        #line hidden
        
        #line 227 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("        ", documentation);
		if(isUnity && isSupportedOnlyByUnityWebRequest)
		{

        
        #line default
        #line hidden
        
        #line 231 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t/// This API is supported only when AWSConfigs.HttpClient is set to AWSConfigs." +
        "HttpClientOption.UnityWebRequest, the default value for this configuration optio" +
        "n is AWSConfigs.HttpClientOption.UnityWWW\r\n");

        
        #line default
        #line hidden
        
        #line 233 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		}

        
        #line default
        #line hidden
        
        #line 235 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 237 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    if (isAsync && !isUnity)
    {

	  // follows Async Pattern but is not unity

        
        #line default
        #line hidden
        
        #line 242 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"cancellationToken\">\r\n        ///     A cancellation toke" +
        "n that can be used by other objects or threads to receive notice of cancellation" +
        ".\r\n        /// </param>\r\n");

        
        #line default
        #line hidden
        
        #line 246 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }
	if(isUnity)
	{
		if(isAsync)
		{
			//is an Asynchronous call and is Unity

        
        #line default
        #line hidden
        
        #line 253 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t/// <param name=\"callback\">An Action delegate that is invoked when the operatio" +
        "n completes.</param>\r\n");

        
        #line default
        #line hidden
        
        #line 255 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		}

        
        #line default
        #line hidden
        
        #line 257 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t \r\n\t\t /// <param name=\"options\">\r\n\t\t ///     A user-defined state object that i" +
        "s passed to the callback procedure. Retrieve this object from within the callbac" +
        "k\r\n         ///     procedure using the AsyncState property.\r\n\t\t /// </param>\r\n");

        
        #line default
        #line hidden
        
        #line 263 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

	}
    if (includeRequest)
    {

        
        #line default
        #line hidden
        
        #line 267 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"request\">Container for the necessary parameters to execu" +
        "te the ");

        
        #line default
        #line hidden
        
        #line 268 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 268 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" service method.</param>\r\n");

        
        #line default
        #line hidden
        
        #line 269 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

        
        #line default
        #line hidden
        
        #line 271 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// \r\n        /// <returns>The response from the ");

        
        #line default
        #line hidden
        
        #line 273 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 273 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" service method, as returned by ");

        
        #line default
        #line hidden
        
        #line 273 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 273 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".</returns>\r\n");

        
        #line default
        #line hidden
        
        #line 274 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        // Skip adding exceptions in the ndoc because we are not generating exceptions from the service model.
        if(this.Config.Namespace != "Amazon.S3")
        {
            foreach(var exception in operation.Exceptions)
            {
                this.FormatExceptionDocumentation(exception);
            }
        }
		
		if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 286 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 287 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 287 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 287 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 287 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 288 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

        // Generates operation documentation with a param tag for each member in the list
        public void FormatUnityOperationDocumentation(Operation operation, List<Member> members, bool isSync, bool isSupportedOnlyByUnityWebRequest = false)
    {
        var documentation = CleanupDocumentation(operation.Documentation);


        
        #line default
        #line hidden
        
        #line 297 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n        /// <summary>\r\n");

        
        #line default
        #line hidden
        
        #line 300 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("        ", documentation);
		if(isSupportedOnlyByUnityWebRequest)
		{

        
        #line default
        #line hidden
        
        #line 304 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t/// This API is supported only when AWSConfigs.HttpClient is set to AWSConfigs." +
        "HttpClientOption.UnityWebRequest, the default value of this configuration option" +
        " is AWSConfigs.HttpClientOption.UnityWWW\r\n");

        
        #line default
        #line hidden
        
        #line 306 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		}

        
        #line default
        #line hidden
        
        #line 308 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 310 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
  foreach(var item in members)
    {

        
        #line default
        #line hidden
        
        #line 312 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"");

        
        #line default
        #line hidden
        
        #line 313 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(item.PropertyName)));

        
        #line default
        #line hidden
        
        #line 313 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">");

        
        #line default
        #line hidden
        
        #line 313 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(item.GetParamDocumentationForOperation(operation.Name)));

        
        #line default
        #line hidden
        
        #line 313 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("</param>\r\n");

        
        #line default
        #line hidden
        
        #line 314 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }
    if (!isSync)
    {

        
        #line default
        #line hidden
        
        #line 318 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(@"		/// <param name=""callback"">An Action delegate that is invoked when the operation completes.</param>
        /// <param name=""options"">
		///     A user-defined state object that is passed to the callback procedure. Retrieve this object from within the callback
        ///     procedure using the AsyncState property.
		/// </param>
");

        
        #line default
        #line hidden
        
        #line 324 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

        
        #line default
        #line hidden
        
        #line 326 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// \r\n        /// <returns>The response from the ");

        
        #line default
        #line hidden
        
        #line 328 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 328 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" service method, as returned by ");

        
        #line default
        #line hidden
        
        #line 328 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 328 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".</returns>\r\n");

        
        #line default
        #line hidden
        
        #line 329 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		if (!this.Config.ServiceModel.Customizations.SuppressSimpleMethodExceptionDocs)
		{
			foreach(var exception in operation.Exceptions)
			{
				this.FormatExceptionDocumentation(exception);
			}
		}

		if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 340 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 341 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 341 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 341 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 341 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 342 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

        // Generates operation documentation with a param tag for each member in the list
        public void FormatOperationDocumentation(Operation operation, List<Member> members, bool isSync)
    {
        var documentation = CleanupDocumentation(operation.Documentation);


        
        #line default
        #line hidden
        
        #line 351 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\r\n        /// <summary>\r\n");

        
        #line default
        #line hidden
        
        #line 354 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("        ", documentation);

        
        #line default
        #line hidden
        
        #line 356 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 358 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
  foreach(var item in members)
    {

        
        #line default
        #line hidden
        
        #line 360 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"");

        
        #line default
        #line hidden
        
        #line 361 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(item.PropertyName)));

        
        #line default
        #line hidden
        
        #line 361 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">");

        
        #line default
        #line hidden
        
        #line 361 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(item.GetParamDocumentationForOperation(operation.Name)));

        
        #line default
        #line hidden
        
        #line 361 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("</param>\r\n");

        
        #line default
        #line hidden
        
        #line 362 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }
    if (!isSync)
    {

        
        #line default
        #line hidden
        
        #line 366 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"cancellationToken\">\r\n        ///     A cancellation toke" +
        "n that can be used by other objects or threads to receive notice of cancellation" +
        ".\r\n        /// </param>\r\n");

        
        #line default
        #line hidden
        
        #line 370 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

        
        #line default
        #line hidden
        
        #line 372 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// \r\n        /// <returns>The response from the ");

        
        #line default
        #line hidden
        
        #line 374 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 374 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" service method, as returned by ");

        
        #line default
        #line hidden
        
        #line 374 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.BaseName));

        
        #line default
        #line hidden
        
        #line 374 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".</returns>\r\n");

        
        #line default
        #line hidden
        
        #line 375 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

		if (!this.Config.ServiceModel.Customizations.SuppressSimpleMethodExceptionDocs)
		{
			foreach(var exception in operation.Exceptions)
			{
				this.FormatExceptionDocumentation(exception);
			}
		}

		if(!string.IsNullOrEmpty(operation.RestAPIDocUrl))
        {

        
        #line default
        #line hidden
        
        #line 386 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <seealso href=\"");

        
        #line default
        #line hidden
        
        #line 387 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.RestAPIDocUrl));

        
        #line default
        #line hidden
        
        #line 387 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">REST API Reference for ");

        
        #line default
        #line hidden
        
        #line 387 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 387 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" Operation</seealso>\r\n");

        
        #line default
        #line hidden
        
        #line 388 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

	public void FormatOperationRequestDocumentation(Operation operation)
    {
		var documentation = CleanupDocumentation(operation.Documentation);

        
        #line default
        #line hidden
        
        #line 395 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t/// <summary>\r\n\t/// Container for the parameters to the ");

        
        #line default
        #line hidden
        
        #line 397 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 397 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation.\r\n");

        
        #line default
        #line hidden
        
        #line 398 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    WriteCommentBlock("	", documentation);

        
        #line default
        #line hidden
        
        #line 400 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t/// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 402 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

	}

    // Generates documentation for an exception, added to operation documentation
    public void FormatExceptionDocumentation(ExceptionModel exception)
    {
        var documentation = CleanupDocumentation(exception.Documentation);


        
        #line default
        #line hidden
        
        #line 410 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <exception cref=\"");

        
        #line default
        #line hidden
        
        #line 411 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(this.Config.Namespace));

        
        #line default
        #line hidden
        
        #line 411 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(".Model.");

        
        #line default
        #line hidden
        
        #line 411 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(exception.Name));

        
        #line default
        #line hidden
        
        #line 411 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">\r\n");

        
        #line default
        #line hidden
        
        #line 412 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        WriteCommentBlock("        ", documentation);

        
        #line default
        #line hidden
        
        #line 414 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// </exception>\r\n");

        
        #line default
        #line hidden
        
        #line 416 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    }

	// Generates documentation for a result that is empty
	public void FormatVoidResultDocumentation(string operationName)
	{

        
        #line default
        #line hidden
        
        #line 422 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t/// <summary>\r\n\t///\tReturns information about the ");

        
        #line default
        #line hidden
        
        #line 424 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operationName));

        
        #line default
        #line hidden
        
        #line 424 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" response metadata.\r\n\t///\tThe ");

        
        #line default
        #line hidden
        
        #line 425 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operationName));

        
        #line default
        #line hidden
        
        #line 425 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" operation has a void result type.\r\n\t/// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 427 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

	}

    // Writes a block for an xml comment with correct line endings
    // Every \n (new line) in the block is written on a new line of the block
    private void WriteCommentBlock(string spaceBlock, string block)
    {
        foreach(var line in block.Split('\n'))
        {
            this.Write("{0}/// {1}\r\n", spaceBlock, line);
        }
    }

    // Removes unneccesary tags from the documentation and formats paragraph tags correctly
    public string CleanupDocumentation(string documentation)
    {
        documentation = documentation
            .Replace("\r", "")
            .Replace("\n", "")
            .Replace("<br>", "")
            .Replace("<p>", "\n<para>\n")
            .Replace("</p>", "\n</para>\n")
            .Replace("<fullname>", "")
            .Replace("</fullname>", "")
            .Replace("<function>", "")
            .Replace("</function>","")
            .Replace("<p/>","")
            .Trim();

        
        // Remove examples because these will be wire protocol examples
        documentation = RemoveSnippets(documentation, "<examples>", "</examples>");

        // Remove commented out documentation
        documentation = RemoveSnippets(documentation, "<!--", "-->");

		documentation = RemoveSnippets(documentation, "<!--", "-->");

		documentation = RemoveSnippets(documentation, "<?oxy_delete",">");
		documentation = RemoveSnippets(documentation, "<?oxy_insert_start",">");
		documentation = RemoveSnippets(documentation, "<?oxy_insert_end",">");

        // Remove the first para tags since it just be the first paragraph in the summary.
        // This also helps clean up documentation that only contains one para block.
        if(documentation.StartsWith("<para>"))
        {
            int closePos= documentation.IndexOf("</para>");
            var firstParaContent= documentation.Substring("<para>".Length, closePos - "<para>".Length);
            documentation = firstParaContent + documentation.Substring(closePos + "</para>".Length);
        }

        // Insert line breaks around 80 character line length
        StringBuilder sb = new StringBuilder();
        int position = 0;
        int currentLineLength = 0;
        while(position < documentation.Length)
        {
            char c = documentation[position];
            if(c == '\n')
            {
                currentLineLength = 0;
                sb.Append(c);
            }
            else if(c == ' ' && currentLineLength > 80)
            {
                currentLineLength = 0;
                sb.Append("\n");
            }
            else
            {
                currentLineLength++;
                sb.Append(c);
            }

            position++;
        }

        return sb.ToString().Trim();
    }

	private string RemoveSnippets(string documentation, string startToken, string endToken)	
    {
        int startPos = documentation.IndexOf(startToken);
        while(startPos != -1)
        { 
            int closePos = documentation.IndexOf(endToken, startPos);
            documentation = documentation.Substring(0, startPos) + documentation.Substring(closePos + endToken.Length);

            startPos = documentation.IndexOf(startToken);
        }
		return documentation;
    }
 

    // Generates the comment block for simple constructors, each member is added as a param tag with the shape's documentation or
    // a generic comment if no documentation is found
    public void FormatSimpleConstructorDocumentation(string className, IList<Member> members)
    {

        
        #line default
        #line hidden
        
        #line 525 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Instantiates ");

        
        #line default
        #line hidden
        
        #line 527 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 527 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" with the parameterized properties\r\n        /// </summary>\r\n");

        
        #line default
        #line hidden
        
        #line 529 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        foreach (var member in members)
        {

        
        #line default
        #line hidden
        
        #line 532 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <param name=\"");

        
        #line default
        #line hidden
        
        #line 533 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(member.PropertyName)));

        
        #line default
        #line hidden
        
        #line 533 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\">");

        
        #line default
        #line hidden
        
        #line 533 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(member.GetParamDocumentationForConstructor(className)));

        
        #line default
        #line hidden
        
        #line 533 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("</param>\r\n");

        
        #line default
        #line hidden
        
        #line 534 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
    }

        
        #line default
        #line hidden
        
        #line 539 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    // Generates methods for the client that have request members as parameters for easy calls to the operation
    // Only generates them if they are specified in the customizations of the service
    public void AddSimpleClientMethods(Operation operation, bool isSync)
    {
        if (this.Config.ServiceModel.Customizations.SimpleMethodsModel.CreateSimpleMethods(operation.Name))
        {
            var forms = this.Config.ServiceModel.Customizations.SimpleMethodsModel.SimpleMethods[operation.Name].Forms;
            var members = this.Config.ServiceModel.FindShape(operation.RequestStructure.Name).Members;

            foreach (var form in forms)
            {
                string currentParams = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetSimpleParameters(form, members);
                var docMembers = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetFormMembers(form, members);

        this.FormatOperationDocumentation(operation, docMembers, isSync);
        if (isSync)
        {
			if(operation.IsDeprecated)
			{

        
        #line default
        #line hidden
        
        #line 559 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 560 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 560 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 561 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
			}

        
        #line default
        #line hidden
        
        #line 563 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        public ");

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response ");

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 564 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(")\r\n");

        
        #line default
        #line hidden
        
        #line 565 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {
            if (!string.IsNullOrEmpty(currentParams))
                currentParams += ", ";
			if(operation.IsDeprecated)
			{

        
        #line default
        #line hidden
        
        #line 573 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 574 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 574 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 575 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
			}

        
        #line default
        #line hidden
        
        #line 577 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        public Task<");

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response> ");

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(");

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 578 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("System.Threading.CancellationToken cancellationToken = default(CancellationToken)" +
        ")\r\n");

        
        #line default
        #line hidden
        
        #line 579 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }

        
        #line default
        #line hidden
        
        #line 581 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        {\r\n            var request = new ");

        
        #line default
        #line hidden
        
        #line 583 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 583 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Request();\r\n");

        
        #line default
        #line hidden
        
        #line 584 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

foreach (var member in docMembers)
{

        
        #line default
        #line hidden
        
        #line 587 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            request.");

        
        #line default
        #line hidden
        
        #line 588 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(member.PropertyName));

        
        #line default
        #line hidden
        
        #line 588 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 588 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(member.PropertyName)));

        
        #line default
        #line hidden
        
        #line 588 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 589 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        
}
        if (isSync)
        {

        
        #line default
        #line hidden
        
        #line 594 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            return ");

        
        #line default
        #line hidden
        
        #line 595 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 595 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(request);\r\n");

        
        #line default
        #line hidden
        
        #line 596 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {

        
        #line default
        #line hidden
        
        #line 600 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            return ");

        
        #line default
        #line hidden
        
        #line 601 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 601 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(request, cancellationToken);\r\n");

        
        #line default
        #line hidden
        
        #line 602 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }

        
        #line default
        #line hidden
        
        #line 604 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 607 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

          }
        }
      }

        
        #line default
        #line hidden
        
        #line 612 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    // Generates methods for the client that have request members as parameters for easy calls to the operation
    // Only generates them if they are specified in the customizations of the service
    public void AddSimpleClientMethodsForUnity(Operation operation, bool isSync)
    {
        if (this.Config.ServiceModel.Customizations.SimpleMethodsModel.CreateSimpleMethods(operation.Name))
        {
            var forms = this.Config.ServiceModel.Customizations.SimpleMethodsModel.SimpleMethods[operation.Name].Forms;
            var members = this.Config.ServiceModel.FindShape(operation.RequestStructure.Name).Members;

            foreach (var form in forms)
            {
                string currentParams = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetSimpleParameters(form, members);
                var docMembers = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetFormMembers(form, members);

        this.FormatUnityOperationDocumentation(operation, docMembers, isSync, !this.Config.ServiceModel.AvailableInWWW(operation));
        if (isSync)
        {
			if(operation.IsDeprecated)
			{

        
        #line default
        #line hidden
        
        #line 632 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 633 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 633 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 634 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
			}

        
        #line default
        #line hidden
        
        #line 636 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        internal ");

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response ");

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 637 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(")\r\n");

        
        #line default
        #line hidden
        
        #line 638 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {
            if (!string.IsNullOrEmpty(currentParams))
                currentParams += ", ";
			if(operation.IsDeprecated)
			{

        
        #line default
        #line hidden
        
        #line 646 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 647 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 647 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 648 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
			}

        
        #line default
        #line hidden
        
        #line 650 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        public void ");

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(");

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" AmazonServiceCallback<");

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Request, ");

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 651 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response> callback, AsyncOptions options = null)\r\n");

        
        #line default
        #line hidden
        
        #line 652 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }

        
        #line default
        #line hidden
        
        #line 654 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        {\r\n            var request = new ");

        
        #line default
        #line hidden
        
        #line 656 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 656 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Request();\r\n");

        
        #line default
        #line hidden
        
        #line 657 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

foreach (var member in docMembers)
{

        
        #line default
        #line hidden
        
        #line 660 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            request.");

        
        #line default
        #line hidden
        
        #line 661 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(member.PropertyName));

        
        #line default
        #line hidden
        
        #line 661 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 661 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(member.PropertyName)));

        
        #line default
        #line hidden
        
        #line 661 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 662 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        
}
        if (isSync)
        {

        
        #line default
        #line hidden
        
        #line 667 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            return ");

        
        #line default
        #line hidden
        
        #line 668 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 668 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(request);\r\n");

        
        #line default
        #line hidden
        
        #line 669 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {

        
        #line default
        #line hidden
        
        #line 673 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 674 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 674 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(request, callback, options);\r\n");

        
        #line default
        #line hidden
        
        #line 675 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }

        
        #line default
        #line hidden
        
        #line 677 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 680 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

          }
        }
      }

        
        #line default
        #line hidden
        
        #line 685 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    // Generates methods for the interface that have request members as parameters for easy calls to the operation
    // Only generates them if they are specified in the customizations of the service
    public void AddSimpleClientMethodInterfaces(Operation operation, bool isSync)
    {
        if (this.Config.ServiceModel.Customizations.SimpleMethodsModel.CreateSimpleMethods(operation.Name))
        {
            var forms = this.Config.ServiceModel.Customizations.SimpleMethodsModel.SimpleMethods[operation.Name].Forms;
            var members = this.Config.ServiceModel.FindShape(operation.RequestStructure.Name).Members;

            foreach (var form in forms)
            {
                string currentParams = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetSimpleParameters(form, members);
                var docMembers = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetFormMembers(form, members);

        this.FormatOperationDocumentation(operation, docMembers, isSync);
        if (isSync)
        {
					if(operation.IsDeprecated)
					{

        
        #line default
        #line hidden
        
        #line 705 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 706 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 706 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 707 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
					}

        
        #line default
        #line hidden
        
        #line 709 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        ");

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response ");

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 710 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(");\r\n");

        
        #line default
        #line hidden
        
        #line 711 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {
            if (!string.IsNullOrEmpty(currentParams))
                currentParams += ", ";
				if(operation.IsDeprecated)
				{

        
        #line default
        #line hidden
        
        #line 719 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 720 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 720 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 721 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
				}

        
        #line default
        #line hidden
        
        #line 723 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        Task<");

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response> ");

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(");

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 724 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("System.Threading.CancellationToken cancellationToken = default(CancellationToken)" +
        ");\r\n");

        
        #line default
        #line hidden
        
        #line 725 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

          }
                }
        }
      }

        
        #line default
        #line hidden
        
        #line 731 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    // Generates methods for the interface that have request members as parameters for easy calls to the operation
    // Only generates them if they are specified in the customizations of the service
    public void AddSimpleClientMethodInterfacesForUnity(Operation operation, bool isSync)
    {
        if (this.Config.ServiceModel.Customizations.SimpleMethodsModel.CreateSimpleMethods(operation.Name))
        {
            var forms = this.Config.ServiceModel.Customizations.SimpleMethodsModel.SimpleMethods[operation.Name].Forms;
            var members = this.Config.ServiceModel.FindShape(operation.RequestStructure.Name).Members;

            foreach (var form in forms)
            {
                string currentParams = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetSimpleParameters(form, members);
                var docMembers = this.Config.ServiceModel.Customizations.SimpleMethodsModel.GetFormMembers(form, members);

        this.FormatUnityOperationDocumentation(operation, docMembers, isSync, !this.Config.ServiceModel.AvailableInWWW(operation));
        if (isSync)
        {
					if(operation.IsDeprecated)
					{

        
        #line default
        #line hidden
        
        #line 751 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 752 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 752 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 753 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
					}

        
        #line default
        #line hidden
        
        #line 755 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        ");

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response ");

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 756 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(");\r\n");

        
        #line default
        #line hidden
        
        #line 757 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        }
        else
        {
            if (!string.IsNullOrEmpty(currentParams))
                currentParams += ", ";
				if(operation.IsDeprecated)
				{

        
        #line default
        #line hidden
        
        #line 765 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\t\t[Obsolete(\"");

        
        #line default
        #line hidden
        
        #line 766 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.DeprecationMessage));

        
        #line default
        #line hidden
        
        #line 766 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("\")]\r\n");

        
        #line default
        #line hidden
        
        #line 767 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
		
				}

        
        #line default
        #line hidden
        
        #line 769 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        void ");

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Async(");

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" AmazonServiceCallback<");

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Request, ");

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(operation.Name));

        
        #line default
        #line hidden
        
        #line 770 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("Response> callback, AsyncOptions options = null);\r\n");

        
        #line default
        #line hidden
        
        #line 771 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

          }
                }
        }
      }

        
        #line default
        #line hidden
        
        #line 778 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

    // Generates constructors for operation requests that have request members in the parameters for easy creation of requests
    // Only generates them if they are specified in the customizations of the service
    public void AddSimpleRequestConstructors(string className, Shape structure, string nameSpace)
    {
        if (this.Config.ServiceModel.Customizations.SimpleConstructorsModel.CreateSimpleConstructors(className))
        {
            var forms = this.Config.ServiceModel.Customizations.SimpleConstructorsModel.SimpleConstructors[className].Forms;
            var members = structure.Members;

        
        #line default
        #line hidden
        
        #line 787 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        /// <summary>\r\n        /// Empty constructor used to set  properties inde" +
        "pendently even when a simple constructor is available\r\n        /// </summary>\r\n " +
        "       public ");

        
        #line default
        #line hidden
        
        #line 790 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 790 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("() { }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 792 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

            foreach (var form in forms)
            {
                string currentParams = this.Config.ServiceModel.Customizations.SimpleConstructorsModel.GetSimpleParameters(form, members);
                var docMembers = this.Config.ServiceModel.Customizations.SimpleConstructorsModel.GetFormMembers(form, members);

        
        #line default
        #line hidden
        
        #line 798 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
 FormatSimpleConstructorDocumentation(className, docMembers); 
        
        #line default
        #line hidden
        
        #line 798 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        public ");

        
        #line default
        #line hidden
        
        #line 799 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 799 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 799 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentParams));

        
        #line default
        #line hidden
        
        #line 799 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(")\r\n        {\r\n");

        
        #line default
        #line hidden
        
        #line 801 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

foreach (var member in docMembers)
{

        
        #line default
        #line hidden
        
        #line 804 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 805 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(member.VariableName));

        
        #line default
        #line hidden
        
        #line 805 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 805 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GeneratorHelpers.CamelCaseParam(member.PropertyName)));

        
        #line default
        #line hidden
        
        #line 805 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 806 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

        
}

        
        #line default
        #line hidden
        
        #line 809 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"
this.Write("        }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 812 "D:\workspace\AWSDotNetPublic\generator\ServiceClientGeneratorLib\Generators\BaseGenerator.tt"

            }
        }
    }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class BaseGeneratorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
