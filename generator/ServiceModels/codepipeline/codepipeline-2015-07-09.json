{
  "version": "1.0",
  "service_full_name": "AWS CodePipeline",
  "service_abbreviation": "CodePipeline",
  "target_prefix": "CodePipeline_20150709",
  "type": "json",
  "json_version": 1.1,
  "signature_version": "v4",
  "service_id": "CodePipeline",
  "uid": "codepipeline-2015-07-09",
  "endpoint_prefix": "codepipeline",
  "api_version": "2015-07-09",
  "xmlnamespace": "http://codepipeline.amazonaws.com/doc/2015-07-09/",
  "documentation": "\n        <fullname>AWS CodePipeline</fullname>\n        <p>\n            <b>Overview</b>\n        </p>\n\n        <p>This is the AWS CodePipeline API Reference. This guide provides descriptions of the\n            actions and data types for AWS CodePipeline. Some functionality for your pipeline is\n            only configurable through the API. For additional information, see the <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/welcome.html\">AWS\n                CodePipeline User Guide</a>.</p>\n\n        <p>You can use the AWS CodePipeline API to work with pipelines, stages, actions, and\n            transitions, as described below.</p>\n        <p>\n            <i>Pipelines</i> are models of automated release processes. Each pipeline\n            is uniquely named, and consists of stages, actions, and transitions. </p>\n        <p>You can work with pipelines by calling:</p>\n        <ul>\n            <li>\n                <p>\n                    <a>CreatePipeline</a>, which creates a uniquely-named\n                    pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>DeletePipeline</a>, which deletes the specified\n                    pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>GetPipeline</a>, which returns information about the pipeline\n                    structure and pipeline metadata, including the pipeline Amazon Resource Name\n                    (ARN).</p>\n            </li>\n            <li>\n                <p>\n                    <a>GetPipelineExecution</a>, which returns information about a\n                    specific execution of a pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>GetPipelineState</a>, which returns information about the current\n                    state of the stages and actions of a pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>ListPipelines</a>, which gets a summary of all of the pipelines\n                    associated with your account.</p>\n            </li>\n            <li>\n                <p>\n                    <a>ListPipelineExecutions</a>, which gets a summary of the most\n                    recent executions for a pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>StartPipelineExecution</a>, which runs the the most recent\n                    revision of an artifact through the pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>UpdatePipeline</a>, which updates a pipeline with edits or changes\n                    to the structure of the pipeline.</p>\n            </li>\n         </ul>\n\n        <p>Pipelines include <i>stages</i>. Each stage contains one or more\n            actions that must complete before the next stage begins. A stage will result in success\n            or failure. If a stage fails, then the pipeline stops at that stage and will remain\n            stopped until either a new version of an artifact appears in the source location, or a\n            user takes action to re-run the most recent artifact through the pipeline. You can call\n                <a>GetPipelineState</a>, which displays the status of a pipeline,\n            including the status of stages in the pipeline, or <a>GetPipeline</a>, which\n            returns the entire structure of the pipeline, including the stages of that pipeline. For\n            more information about the structure of stages and actions, also refer to the <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/pipeline-structure.html\">AWS\n                CodePipeline Pipeline Structure Reference</a>.</p>\n        <p>Pipeline stages include <i>actions</i>, which are categorized into\n            categories such as source or build actions performed within a stage of a pipeline. For\n            example, you can use a source action to import artifacts into a pipeline from a source\n            such as Amazon S3. Like stages, you do not work with actions directly in most cases, but\n            you do define and interact with actions when working with pipeline operations such as\n                <a>CreatePipeline</a> and <a>GetPipelineState</a>. Valid\n            action categories are:</p>\n        <ul>\n            <li>\n                <p>Source</p>\n            </li>\n            <li>\n                <p>Build</p>\n            </li>\n            <li>\n                <p>Test</p>\n            </li>\n            <li>\n                <p>Deploy</p>\n            </li>\n            <li>\n                <p>Approval</p>\n            </li>\n            <li>\n                <p>Invoke</p>\n            </li>\n         </ul>\n        <p>Pipelines also include <i>transitions</i>, which allow the transition\n            of artifacts from one stage to the next in a pipeline after the actions in one stage\n            complete.</p>\n        <p>You can work with transitions by calling:</p>\n        <ul>\n            <li>\n                <p>\n                    <a>DisableStageTransition</a>, which prevents artifacts from\n                    transitioning to the next stage in a pipeline.</p>\n            </li>\n            <li>\n                <p>\n                    <a>EnableStageTransition</a>, which enables transition of artifacts\n                    between stages in a pipeline. </p>\n            </li>\n         </ul>\n\n\n        <p>\n            <b>Using the API to integrate with AWS CodePipeline</b>\n        </p>\n\n        <p>For third-party integrators or developers who want to create their own integrations\n            with AWS CodePipeline, the expected sequence varies from the standard API user. In order\n            to integrate with AWS CodePipeline, developers will need to work with the following\n            items:</p>\n        <p>\n            <b>Jobs</b>, which are instances of an action. For\n            example, a job for a source action might import a revision of an artifact from a source. </p>\n        <p>You can work with jobs by calling:</p>\n        <ul>\n            <li>\n                <p>\n                    <a>AcknowledgeJob</a>, which confirms whether a job worker has\n                    received the specified job,</p>\n            </li>\n            <li>\n                <p>\n                    <a>GetJobDetails</a>, which returns the details of a job,</p>\n            </li>\n            <li>\n                <p>\n                    <a>PollForJobs</a>, which determines whether there are any jobs to\n                    act upon, </p>\n            </li>\n            <li>\n                <p>\n                    <a>PutJobFailureResult</a>, which provides details of a job failure,\n                    and</p>\n            </li>\n            <li>\n                <p>\n                    <a>PutJobSuccessResult</a>, which provides details of a job\n                    success.</p>\n            </li>\n         </ul>\n\n        <p>\n            <b>Third party jobs</b>, which are instances of an action\n            created by a partner action and integrated into AWS CodePipeline. Partner actions are\n            created by members of the AWS Partner Network.</p>\n        <p>You can work with third party jobs by calling:</p>\n        <ul>\n            <li>\n                <p>\n                    <a>AcknowledgeThirdPartyJob</a>, which confirms whether a job worker\n                    has received the specified job,</p>\n            </li>\n            <li>\n                <p>\n                    <a>GetThirdPartyJobDetails</a>, which requests the details of a job\n                    for a partner action,</p>\n            </li>\n            <li>\n                <p>\n                    <a>PollForThirdPartyJobs</a>, which determines whether there are any\n                    jobs to act upon, </p>\n            </li>\n            <li>\n                <p>\n                    <a>PutThirdPartyJobFailureResult</a>, which provides details of a job\n                    failure, and</p>\n            </li>\n            <li>\n                <p>\n                    <a>PutThirdPartyJobSuccessResult</a>, which provides details of a job\n                    success.</p>\n            </li>\n         </ul>\n\n      ",
  "operations": {
    "CreatePipeline": {
      "name": "CreatePipeline",
      "input": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action to be performed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action to be performed.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "roleArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "max_length": 1024
              },
              "artifactStore": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "S3"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                    "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreType"
                  },
                  "location": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9\\-\\.]+",
                    "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreLocation",
                    "min_length": 3,
                    "max_length": 63
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </simpara>\n      ",
                "documentation": "\n        <p>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </p>\n      ",
                "shape_name": "ArtifactStore"
              },
              "artifactStores": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</simpara>\n        <simpara>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</simpara>\n      ",
                "documentation": "\n        <p>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</p>\n        <p>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</p>\n      ",
                "shape_name": "ArtifactStoreMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AWSRegionName",
                  "documentation": null,
                  "min_length": 4,
                  "max_length": 30
                },
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "S3"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreType"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9\\-\\.]+",
                      "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreLocation",
                      "min_length": 3,
                      "max_length": 63
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                      "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket where artifacts are stored for the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon S3 bucket where artifacts are stored for the pipeline.</p>\n      ",
                  "shape_name": "ArtifactStore"
                }
              },
              "stages": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The stage in which to perform the action.</simpara>\n      ",
                "documentation": "\n        <p>The stage in which to perform the action.</p>\n      ",
                "required": true,
                "shape_name": "PipelineStageDeclarationList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "blockers": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                      "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                      "shape_name": "StageBlockerDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Schedule"
                            ],
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerType"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                        "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                        "shape_name": "BlockerDeclaration"
                      }
                    },
                    "actions": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The actions included in a stage.</simpara>\n      ",
                      "documentation": "\n        <p>The actions included in a stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageActionDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's name.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's name.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "actionTypeId": {
                            "type": "structure",
                            "members": {
                              "category": {
                                "type": "string",
                                "enum": [
                                  "Source",
                                  "Build",
                                  "Deploy",
                                  "Test",
                                  "Invoke",
                                  "Approval"
                                ],
                                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionCategory"
                              },
                              "owner": {
                                "type": "string",
                                "enum": [
                                  "AWS",
                                  "ThirdParty",
                                  "Custom"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionOwner"
                              },
                              "provider": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionProvider",
                                "min_length": 1,
                                "max_length": 25
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                                "required": true,
                                "shape_name": "Version",
                                "min_length": 1,
                                "max_length": 9
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The configuration information for the action type.</simpara>\n      ",
                            "documentation": "\n        <p>The configuration information for the action type.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionTypeId"
                          },
                          "runOrder": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The order in which actions are run.</simpara>\n      ",
                            "documentation": "\n        <p>The order in which actions are run.</p>\n      ",
                            "shape_name": "ActionRunOrder",
                            "min_length": 1,
                            "max_length": 999
                          },
                          "configuration": {
                            "type": "map",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's configuration.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's configuration.</p>\n      ",
                            "shape_name": "ActionConfigurationMap",
                            "keys": {
                              "type": "string",
                              "shape_name": "ActionConfigurationKey",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 50
                            },
                            "members": {
                              "type": "string",
                              "shape_name": "ActionConfigurationValue",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "outputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "OutputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the output of an artifact, such as \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n        <simpara>Output artifact names must be unique within a pipeline.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the output of an artifact, such as \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n        <p>Output artifact names must be unique within a pipeline.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about the output of an action.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about the output of an action.</p>\n      ",
                              "shape_name": "OutputArtifact"
                            }
                          },
                          "inputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "InputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the artifact to be worked on, for example, \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the artifact to be worked on, for example, \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</p>\n      ",
                              "shape_name": "InputArtifact"
                            }
                          },
                          "roleArn": {
                            "type": "string",
                            "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</p>\n      ",
                            "shape_name": "RoleArn",
                            "max_length": 1024
                          },
                          "region": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's AWS Region, such as us-east-1.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's AWS Region, such as us-east-1.</p>\n      ",
                            "shape_name": "AWSRegionName",
                            "min_length": 4,
                            "max_length": 30
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an action declaration.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an action declaration.</p>\n      ",
                        "shape_name": "ActionDeclaration"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about a stage and its definition.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about a stage and its definition.</p>\n      ",
                  "shape_name": "StageDeclaration"
                }
              },
              "version": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the structure of actions and stages to be performed in the pipeline.\n        </simpara>\n      ",
            "documentation": "\n        <p>Represents the structure of actions and stages to be performed in the pipeline.\n        </p>\n      ",
            "required": true,
            "shape_name": "PipelineDeclaration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a CreatePipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a CreatePipeline action.</p>\n      ",
        "shape_name": "CreatePipelineInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action to be performed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action to be performed.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "roleArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "max_length": 1024
              },
              "artifactStore": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "S3"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                    "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreType"
                  },
                  "location": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9\\-\\.]+",
                    "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreLocation",
                    "min_length": 3,
                    "max_length": 63
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </simpara>\n      ",
                "documentation": "\n        <p>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </p>\n      ",
                "shape_name": "ArtifactStore"
              },
              "artifactStores": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</simpara>\n        <simpara>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</simpara>\n      ",
                "documentation": "\n        <p>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</p>\n        <p>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</p>\n      ",
                "shape_name": "ArtifactStoreMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AWSRegionName",
                  "documentation": null,
                  "min_length": 4,
                  "max_length": 30
                },
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "S3"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreType"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9\\-\\.]+",
                      "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreLocation",
                      "min_length": 3,
                      "max_length": 63
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                      "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket where artifacts are stored for the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon S3 bucket where artifacts are stored for the pipeline.</p>\n      ",
                  "shape_name": "ArtifactStore"
                }
              },
              "stages": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The stage in which to perform the action.</simpara>\n      ",
                "documentation": "\n        <p>The stage in which to perform the action.</p>\n      ",
                "required": true,
                "shape_name": "PipelineStageDeclarationList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "blockers": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                      "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                      "shape_name": "StageBlockerDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Schedule"
                            ],
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerType"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                        "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                        "shape_name": "BlockerDeclaration"
                      }
                    },
                    "actions": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The actions included in a stage.</simpara>\n      ",
                      "documentation": "\n        <p>The actions included in a stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageActionDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's name.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's name.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "actionTypeId": {
                            "type": "structure",
                            "members": {
                              "category": {
                                "type": "string",
                                "enum": [
                                  "Source",
                                  "Build",
                                  "Deploy",
                                  "Test",
                                  "Invoke",
                                  "Approval"
                                ],
                                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionCategory"
                              },
                              "owner": {
                                "type": "string",
                                "enum": [
                                  "AWS",
                                  "ThirdParty",
                                  "Custom"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionOwner"
                              },
                              "provider": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionProvider",
                                "min_length": 1,
                                "max_length": 25
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                                "required": true,
                                "shape_name": "Version",
                                "min_length": 1,
                                "max_length": 9
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The configuration information for the action type.</simpara>\n      ",
                            "documentation": "\n        <p>The configuration information for the action type.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionTypeId"
                          },
                          "runOrder": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The order in which actions are run.</simpara>\n      ",
                            "documentation": "\n        <p>The order in which actions are run.</p>\n      ",
                            "shape_name": "ActionRunOrder",
                            "min_length": 1,
                            "max_length": 999
                          },
                          "configuration": {
                            "type": "map",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's configuration.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's configuration.</p>\n      ",
                            "shape_name": "ActionConfigurationMap",
                            "keys": {
                              "type": "string",
                              "shape_name": "ActionConfigurationKey",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 50
                            },
                            "members": {
                              "type": "string",
                              "shape_name": "ActionConfigurationValue",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "outputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "OutputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the output of an artifact, such as \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n        <simpara>Output artifact names must be unique within a pipeline.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the output of an artifact, such as \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n        <p>Output artifact names must be unique within a pipeline.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about the output of an action.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about the output of an action.</p>\n      ",
                              "shape_name": "OutputArtifact"
                            }
                          },
                          "inputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "InputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the artifact to be worked on, for example, \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the artifact to be worked on, for example, \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</p>\n      ",
                              "shape_name": "InputArtifact"
                            }
                          },
                          "roleArn": {
                            "type": "string",
                            "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</p>\n      ",
                            "shape_name": "RoleArn",
                            "max_length": 1024
                          },
                          "region": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's AWS Region, such as us-east-1.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's AWS Region, such as us-east-1.</p>\n      ",
                            "shape_name": "AWSRegionName",
                            "min_length": 4,
                            "max_length": 30
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an action declaration.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an action declaration.</p>\n      ",
                        "shape_name": "ActionDeclaration"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about a stage and its definition.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about a stage and its definition.</p>\n      ",
                  "shape_name": "StageDeclaration"
                }
              },
              "version": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the structure of actions and stages to be performed in the pipeline.\n        </simpara>\n      ",
            "documentation": "\n        <p>Represents the structure of actions and stages to be performed in the pipeline.\n        </p>\n      ",
            "shape_name": "PipelineDeclaration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a CreatePipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a CreatePipeline action.</p>\n      ",
        "shape_name": "CreatePipelineOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline name is already in use.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline name is already in use.</p>\n      ",
          "shape_name": "PipelineNameInUseException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage declaration was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage declaration was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidStageDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action declaration was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified action declaration was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidActionDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
          "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
          "shape_name": "InvalidBlockerDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified structure was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified structure was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidStructureException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</simpara>\n      ",
          "documentation": "\n        <p>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n        <p>Creates a pipeline.</p>\n        \n      "
    },
    "GetPipeline": {
      "name": "GetPipeline",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline for which you want to get information. Pipeline names must\n            be unique under an Amazon Web Services (AWS) user account.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline for which you want to get information. Pipeline names must\n            be unique under an Amazon Web Services (AWS) user account.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "version": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. If you do not specify a version, defaults to\n            the most current version.</simpara>\n      ",
            "documentation": "\n        <p>The version number of the pipeline. If you do not specify a version, defaults to\n            the most current version.</p>\n      ",
            "shape_name": "PipelineVersion",
            "min_length": 1
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a GetPipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a GetPipeline action.</p>\n      ",
        "shape_name": "GetPipelineInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action to be performed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action to be performed.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "roleArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "max_length": 1024
              },
              "artifactStore": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "S3"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                    "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreType"
                  },
                  "location": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9\\-\\.]+",
                    "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreLocation",
                    "min_length": 3,
                    "max_length": 63
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </simpara>\n      ",
                "documentation": "\n        <p>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </p>\n      ",
                "shape_name": "ArtifactStore"
              },
              "artifactStores": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</simpara>\n        <simpara>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</simpara>\n      ",
                "documentation": "\n        <p>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</p>\n        <p>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</p>\n      ",
                "shape_name": "ArtifactStoreMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AWSRegionName",
                  "documentation": null,
                  "min_length": 4,
                  "max_length": 30
                },
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "S3"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreType"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9\\-\\.]+",
                      "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreLocation",
                      "min_length": 3,
                      "max_length": 63
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                      "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket where artifacts are stored for the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon S3 bucket where artifacts are stored for the pipeline.</p>\n      ",
                  "shape_name": "ArtifactStore"
                }
              },
              "stages": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The stage in which to perform the action.</simpara>\n      ",
                "documentation": "\n        <p>The stage in which to perform the action.</p>\n      ",
                "required": true,
                "shape_name": "PipelineStageDeclarationList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "blockers": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                      "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                      "shape_name": "StageBlockerDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Schedule"
                            ],
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerType"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                        "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                        "shape_name": "BlockerDeclaration"
                      }
                    },
                    "actions": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The actions included in a stage.</simpara>\n      ",
                      "documentation": "\n        <p>The actions included in a stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageActionDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's name.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's name.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "actionTypeId": {
                            "type": "structure",
                            "members": {
                              "category": {
                                "type": "string",
                                "enum": [
                                  "Source",
                                  "Build",
                                  "Deploy",
                                  "Test",
                                  "Invoke",
                                  "Approval"
                                ],
                                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionCategory"
                              },
                              "owner": {
                                "type": "string",
                                "enum": [
                                  "AWS",
                                  "ThirdParty",
                                  "Custom"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionOwner"
                              },
                              "provider": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionProvider",
                                "min_length": 1,
                                "max_length": 25
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                                "required": true,
                                "shape_name": "Version",
                                "min_length": 1,
                                "max_length": 9
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The configuration information for the action type.</simpara>\n      ",
                            "documentation": "\n        <p>The configuration information for the action type.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionTypeId"
                          },
                          "runOrder": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The order in which actions are run.</simpara>\n      ",
                            "documentation": "\n        <p>The order in which actions are run.</p>\n      ",
                            "shape_name": "ActionRunOrder",
                            "min_length": 1,
                            "max_length": 999
                          },
                          "configuration": {
                            "type": "map",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's configuration.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's configuration.</p>\n      ",
                            "shape_name": "ActionConfigurationMap",
                            "keys": {
                              "type": "string",
                              "shape_name": "ActionConfigurationKey",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 50
                            },
                            "members": {
                              "type": "string",
                              "shape_name": "ActionConfigurationValue",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "outputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "OutputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the output of an artifact, such as \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n        <simpara>Output artifact names must be unique within a pipeline.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the output of an artifact, such as \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n        <p>Output artifact names must be unique within a pipeline.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about the output of an action.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about the output of an action.</p>\n      ",
                              "shape_name": "OutputArtifact"
                            }
                          },
                          "inputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "InputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the artifact to be worked on, for example, \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the artifact to be worked on, for example, \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</p>\n      ",
                              "shape_name": "InputArtifact"
                            }
                          },
                          "roleArn": {
                            "type": "string",
                            "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</p>\n      ",
                            "shape_name": "RoleArn",
                            "max_length": 1024
                          },
                          "region": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's AWS Region, such as us-east-1.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's AWS Region, such as us-east-1.</p>\n      ",
                            "shape_name": "AWSRegionName",
                            "min_length": 4,
                            "max_length": 30
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an action declaration.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an action declaration.</p>\n      ",
                        "shape_name": "ActionDeclaration"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about a stage and its definition.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about a stage and its definition.</p>\n      ",
                  "shape_name": "StageDeclaration"
                }
              },
              "version": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the structure of actions and stages to be performed in the pipeline.\n        </simpara>\n      ",
            "documentation": "\n        <p>Represents the structure of actions and stages to be performed in the pipeline.\n        </p>\n      ",
            "shape_name": "PipelineDeclaration"
          },
          "metadata": {
            "type": "structure",
            "members": {
              "pipelineArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:codepipeline:.+:[0-9]{12}:.+",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the pipeline.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the pipeline.</p>\n      ",
                "shape_name": "PipelineArn"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the pipeline was created, in timestamp format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the pipeline was created, in timestamp format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "updated": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the pipeline was last updated, in timestamp format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the pipeline was last updated, in timestamp format.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the pipeline metadata information returned as part of the output of a\n            GetPipeline action.</simpara>\n      ",
            "documentation": "\n        <p>Represents the pipeline metadata information returned as part of the output of a\n            GetPipeline action.</p>\n      ",
            "shape_name": "PipelineMetadata"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a GetPipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a GetPipeline action.</p>\n      ",
        "shape_name": "GetPipelineOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline version was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline version was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineVersionNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns the metadata, structure, stages, and actions of a pipeline. Can be used to\n            return the entire structure of a pipeline in JSON format, which can then be modified and\n            used to update the pipeline structure with <a>UpdatePipeline</a>.</p>\n        \n      "
    },
    "DeletePipeline": {
      "name": "DeletePipeline",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline to be deleted.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline to be deleted.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a DeletePipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a DeletePipeline action.</p>\n      ",
        "shape_name": "DeletePipelineInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Deletes the specified pipeline.</p>\n        \n      "
    },
    "UpdatePipeline": {
      "name": "UpdatePipeline",
      "input": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action to be performed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action to be performed.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "roleArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "max_length": 1024
              },
              "artifactStore": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "S3"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                    "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreType"
                  },
                  "location": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9\\-\\.]+",
                    "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreLocation",
                    "min_length": 3,
                    "max_length": 63
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </simpara>\n      ",
                "documentation": "\n        <p>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </p>\n      ",
                "shape_name": "ArtifactStore"
              },
              "artifactStores": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</simpara>\n        <simpara>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</simpara>\n      ",
                "documentation": "\n        <p>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</p>\n        <p>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</p>\n      ",
                "shape_name": "ArtifactStoreMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AWSRegionName",
                  "documentation": null,
                  "min_length": 4,
                  "max_length": 30
                },
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "S3"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreType"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9\\-\\.]+",
                      "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreLocation",
                      "min_length": 3,
                      "max_length": 63
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                      "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket where artifacts are stored for the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon S3 bucket where artifacts are stored for the pipeline.</p>\n      ",
                  "shape_name": "ArtifactStore"
                }
              },
              "stages": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The stage in which to perform the action.</simpara>\n      ",
                "documentation": "\n        <p>The stage in which to perform the action.</p>\n      ",
                "required": true,
                "shape_name": "PipelineStageDeclarationList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "blockers": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                      "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                      "shape_name": "StageBlockerDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Schedule"
                            ],
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerType"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                        "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                        "shape_name": "BlockerDeclaration"
                      }
                    },
                    "actions": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The actions included in a stage.</simpara>\n      ",
                      "documentation": "\n        <p>The actions included in a stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageActionDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's name.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's name.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "actionTypeId": {
                            "type": "structure",
                            "members": {
                              "category": {
                                "type": "string",
                                "enum": [
                                  "Source",
                                  "Build",
                                  "Deploy",
                                  "Test",
                                  "Invoke",
                                  "Approval"
                                ],
                                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionCategory"
                              },
                              "owner": {
                                "type": "string",
                                "enum": [
                                  "AWS",
                                  "ThirdParty",
                                  "Custom"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionOwner"
                              },
                              "provider": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionProvider",
                                "min_length": 1,
                                "max_length": 25
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                                "required": true,
                                "shape_name": "Version",
                                "min_length": 1,
                                "max_length": 9
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The configuration information for the action type.</simpara>\n      ",
                            "documentation": "\n        <p>The configuration information for the action type.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionTypeId"
                          },
                          "runOrder": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The order in which actions are run.</simpara>\n      ",
                            "documentation": "\n        <p>The order in which actions are run.</p>\n      ",
                            "shape_name": "ActionRunOrder",
                            "min_length": 1,
                            "max_length": 999
                          },
                          "configuration": {
                            "type": "map",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's configuration.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's configuration.</p>\n      ",
                            "shape_name": "ActionConfigurationMap",
                            "keys": {
                              "type": "string",
                              "shape_name": "ActionConfigurationKey",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 50
                            },
                            "members": {
                              "type": "string",
                              "shape_name": "ActionConfigurationValue",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "outputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "OutputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the output of an artifact, such as \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n        <simpara>Output artifact names must be unique within a pipeline.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the output of an artifact, such as \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n        <p>Output artifact names must be unique within a pipeline.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about the output of an action.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about the output of an action.</p>\n      ",
                              "shape_name": "OutputArtifact"
                            }
                          },
                          "inputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "InputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the artifact to be worked on, for example, \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the artifact to be worked on, for example, \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</p>\n      ",
                              "shape_name": "InputArtifact"
                            }
                          },
                          "roleArn": {
                            "type": "string",
                            "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</p>\n      ",
                            "shape_name": "RoleArn",
                            "max_length": 1024
                          },
                          "region": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's AWS Region, such as us-east-1.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's AWS Region, such as us-east-1.</p>\n      ",
                            "shape_name": "AWSRegionName",
                            "min_length": 4,
                            "max_length": 30
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an action declaration.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an action declaration.</p>\n      ",
                        "shape_name": "ActionDeclaration"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about a stage and its definition.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about a stage and its definition.</p>\n      ",
                  "shape_name": "StageDeclaration"
                }
              },
              "version": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline to be updated.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline to be updated.</p>\n      ",
            "required": true,
            "shape_name": "PipelineDeclaration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of an UpdatePipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of an UpdatePipeline action.</p>\n      ",
        "shape_name": "UpdatePipelineInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action to be performed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action to be performed.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "roleArn": {
                "type": "string",
                "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for AWS CodePipeline to use to either perform\n            actions with no actionRoleArn, or to use to assume roles for actions with an\n            actionRoleArn.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "max_length": 1024
              },
              "artifactStore": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "S3"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                    "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreType"
                  },
                  "location": {
                    "type": "string",
                    "pattern": "[a-zA-Z0-9\\-\\.]+",
                    "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                    "required": true,
                    "shape_name": "ArtifactStoreLocation",
                    "min_length": 3,
                    "max_length": 63
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </simpara>\n      ",
                "documentation": "\n        <p>Represents information about the Amazon S3 bucket where artifacts are stored for\n            the pipeline. </p>\n      ",
                "shape_name": "ArtifactStore"
              },
              "artifactStores": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</simpara>\n        <simpara>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</simpara>\n      ",
                "documentation": "\n        <p>A mapping of artifactStore objects and their corresponding regions. There must be\n            an artifact store for the pipeline region and for each cross-region action within the\n            pipeline. You can only use either artifactStore or artifactStores, not both.</p>\n        <p>If you create a cross-region action in your pipeline, you must use\n            artifactStores.</p>\n      ",
                "shape_name": "ArtifactStoreMap",
                "keys": {
                  "type": "string",
                  "shape_name": "AWSRegionName",
                  "documentation": null,
                  "min_length": 4,
                  "max_length": 30
                },
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "S3"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the artifact store, such as S3.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the artifact store, such as S3.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreType"
                    },
                    "location": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9\\-\\.]+",
                      "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon S3 bucket used for storing the artifacts for a pipeline. You can specify\n            the name of an S3 bucket but not a folder within the bucket. A folder to contain the\n            pipeline artifacts is created for you based on the name of the pipeline. You can use any\n            Amazon S3 bucket in the same AWS Region as the pipeline to store your pipeline\n            artifacts.</p>\n      ",
                      "required": true,
                      "shape_name": "ArtifactStoreLocation",
                      "min_length": 3,
                      "max_length": 63
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</simpara>\n      ",
                      "documentation": "\n        <p>The encryption key used to encrypt the data in the artifact store, such as an AWS\n            Key Management Service (AWS KMS) key. If this is undefined, the default key for Amazon\n            S3 is used.</p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket where artifacts are stored for the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon S3 bucket where artifacts are stored for the pipeline.</p>\n      ",
                  "shape_name": "ArtifactStore"
                }
              },
              "stages": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The stage in which to perform the action.</simpara>\n      ",
                "documentation": "\n        <p>The stage in which to perform the action.</p>\n      ",
                "required": true,
                "shape_name": "PipelineStageDeclarationList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "blockers": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                      "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                      "shape_name": "StageBlockerDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Schedule"
                            ],
                            "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                            "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                            "required": true,
                            "shape_name": "BlockerType"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
                        "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
                        "shape_name": "BlockerDeclaration"
                      }
                    },
                    "actions": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The actions included in a stage.</simpara>\n      ",
                      "documentation": "\n        <p>The actions included in a stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageActionDeclarationList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's name.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's name.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "actionTypeId": {
                            "type": "structure",
                            "members": {
                              "category": {
                                "type": "string",
                                "enum": [
                                  "Source",
                                  "Build",
                                  "Deploy",
                                  "Test",
                                  "Invoke",
                                  "Approval"
                                ],
                                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionCategory"
                              },
                              "owner": {
                                "type": "string",
                                "enum": [
                                  "AWS",
                                  "ThirdParty",
                                  "Custom"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionOwner"
                              },
                              "provider": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                                "required": true,
                                "shape_name": "ActionProvider",
                                "min_length": 1,
                                "max_length": 25
                              },
                              "version": {
                                "type": "string",
                                "pattern": "[0-9A-Za-z_-]+",
                                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                                "required": true,
                                "shape_name": "Version",
                                "min_length": 1,
                                "max_length": 9
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The configuration information for the action type.</simpara>\n      ",
                            "documentation": "\n        <p>The configuration information for the action type.</p>\n      ",
                            "required": true,
                            "shape_name": "ActionTypeId"
                          },
                          "runOrder": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The order in which actions are run.</simpara>\n      ",
                            "documentation": "\n        <p>The order in which actions are run.</p>\n      ",
                            "shape_name": "ActionRunOrder",
                            "min_length": 1,
                            "max_length": 999
                          },
                          "configuration": {
                            "type": "map",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's configuration.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's configuration.</p>\n      ",
                            "shape_name": "ActionConfigurationMap",
                            "keys": {
                              "type": "string",
                              "shape_name": "ActionConfigurationKey",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 50
                            },
                            "members": {
                              "type": "string",
                              "shape_name": "ActionConfigurationValue",
                              "documentation": null,
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "outputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the result of the action declaration, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "OutputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the output of an artifact, such as \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n        <simpara>Output artifact names must be unique within a pipeline.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the output of an artifact, such as \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n        <p>Output artifact names must be unique within a pipeline.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about the output of an action.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about the output of an action.</p>\n      ",
                              "shape_name": "OutputArtifact"
                            }
                          },
                          "inputArtifacts": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <simpara>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The name or ID of the artifact consumed by the action, such as a test or build\n            artifact.</p>\n      ",
                            "shape_name": "InputArtifactList",
                            "members": {
                              "type": "structure",
                              "members": {
                                "name": {
                                  "type": "string",
                                  "pattern": "[a-zA-Z0-9_\\-]+",
                                  "zonbookDocumentation": "\n        <simpara>The name of the artifact to be worked on, for example, \"My App\".</simpara>\n        <simpara>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the artifact to be worked on, for example, \"My App\".</p>\n        <p>The input artifact of an action must exactly match the output artifact declared in\n            a preceding action, but the input artifact does not have to be the next action in strict\n            sequence from the action that provided the output artifact. Actions in parallel can\n            declare different output artifacts, which are in turn consumed by different following\n            actions.</p>\n      ",
                                  "required": true,
                                  "shape_name": "ArtifactName",
                                  "min_length": 1,
                                  "max_length": 100
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</simpara>\n      ",
                              "documentation": "\n        <p>Represents information about an artifact to be worked on, such as a test or build\n            artifact.</p>\n      ",
                              "shape_name": "InputArtifact"
                            }
                          },
                          "roleArn": {
                            "type": "string",
                            "pattern": "arn:aws(-[\\w]+)*:iam::[0-9]{12}:role/.*",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the IAM service role that will perform the declared action. This is\n            assumed through the roleArn for the pipeline.</p>\n      ",
                            "shape_name": "RoleArn",
                            "max_length": 1024
                          },
                          "region": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The action declaration's AWS Region, such as us-east-1.</simpara>\n      ",
                            "documentation": "\n        <p>The action declaration's AWS Region, such as us-east-1.</p>\n      ",
                            "shape_name": "AWSRegionName",
                            "min_length": 4,
                            "max_length": 30
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an action declaration.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an action declaration.</p>\n      ",
                        "shape_name": "ActionDeclaration"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about a stage and its definition.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about a stage and its definition.</p>\n      ",
                  "shape_name": "StageDeclaration"
                }
              },
              "version": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline. A new pipeline always has a version number of\n            1. This number is automatically incremented when a pipeline is updated.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n        <simpara>The structure of the updated pipeline.</simpara>\n      ",
            "documentation": "\n        <p>The structure of the updated pipeline.</p>\n      ",
            "shape_name": "PipelineDeclaration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of an UpdatePipeline action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of an UpdatePipeline action.</p>\n      ",
        "shape_name": "UpdatePipelineOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage declaration was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage declaration was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidStageDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action declaration was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified action declaration was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidActionDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>Reserved for future use.</simpara>\n        \n      ",
          "documentation": "\n        <p>Reserved for future use.</p>\n        \n      ",
          "shape_name": "InvalidBlockerDeclarationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified structure was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified structure was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidStructureException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</simpara>\n      ",
          "documentation": "\n        <p>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n        <p>Updates a specified pipeline with edits or changes to its structure. Use a JSON\n            file with the pipeline structure in conjunction with UpdatePipeline to provide the full\n            structure of the pipeline. Updating the pipeline increases the version number of the\n            pipeline by 1.</p>\n        \n      "
    },
    "ListPipelines": {
      "name": "ListPipelines",
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous list pipelines call, which can be\n            used to return the next set of pipelines in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous list pipelines call, which can be\n            used to return the next set of pipelines in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a ListPipelines action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a ListPipelines action.</p>\n      ",
        "shape_name": "ListPipelinesInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelines": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The list of pipelines.</simpara>\n      ",
            "documentation": "\n        <p>The list of pipelines.</p>\n      ",
            "shape_name": "PipelineList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9.@\\-_]+",
                  "zonbookDocumentation": "\n        <simpara>The name of the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the pipeline.</p>\n      ",
                  "shape_name": "PipelineName",
                  "min_length": 1,
                  "max_length": 100
                },
                "version": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The version number of the pipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The version number of the pipeline.</p>\n      ",
                  "shape_name": "PipelineVersion",
                  "min_length": 1
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time the pipeline was created, in timestamp format.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time the pipeline was created, in timestamp format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "updated": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time of the last update to the pipeline, in timestamp\n            format.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time of the last update to the pipeline, in timestamp\n            format.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Returns a summary of a pipeline.</simpara>\n      ",
              "documentation": "\n        <p>Returns a summary of a pipeline.</p>\n      ",
              "shape_name": "PipelineSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the amount of returned information is significantly large, an identifier is also\n            returned which can be used in a subsequent list pipelines call to return the next set of\n            pipelines in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the amount of returned information is significantly large, an identifier is also\n            returned which can be used in a subsequent list pipelines call to return the next set of\n            pipelines in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a ListPipelines action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a ListPipelines action.</p>\n      ",
        "shape_name": "ListPipelinesOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</simpara>\n      ",
          "documentation": "\n        <p>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        }
      ],
      "documentation": "\n        <p>Gets a summary of all of the pipelines associated with your account.</p>\n        \n      "
    },
    "StartPipelineExecution": {
      "name": "StartPipelineExecution",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline to start.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline to start.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "clientRequestToken": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]+$",
            "zonbookDocumentation": "\n        <simpara>The system-generated unique ID used to identify a unique execution\n            request.</simpara>\n      ",
            "documentation": "\n        <p>The system-generated unique ID used to identify a unique execution\n            request.</p>\n      ",
            "idempotencyToken": true,
            "shape_name": "ClientRequestToken",
            "min_length": 1,
            "max_length": 128
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a StartPipelineExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a StartPipelineExecution action.</p>\n      ",
        "shape_name": "StartPipelineExecutionInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineExecutionId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the pipeline execution that was\n            started.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID of the pipeline execution that was\n            started.</p>\n      ",
            "shape_name": "PipelineExecutionId"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a StartPipelineExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a StartPipelineExecution action.</p>\n      ",
        "shape_name": "StartPipelineExecutionOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        }
      ],
      "documentation": "\n        <p>Starts the specified pipeline. Specifically, it begins processing the latest commit\n            to the source location specified as part of the pipeline.</p>\n        \n      "
    },
    "RetryStageExecution": {
      "name": "RetryStageExecution",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline that contains the failed stage.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline that contains the failed stage.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "stageName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the failed stage to be retried.</simpara>\n      ",
            "documentation": "\n        <p>The name of the failed stage to be retried.</p>\n      ",
            "required": true,
            "shape_name": "StageName",
            "min_length": 1,
            "max_length": 100
          },
          "pipelineExecutionId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The ID of the pipeline execution in the failed stage to be retried. Use the <xref linkend=\"GetPipelineState\"/> action to retrieve the current pipelineExecutionId of\n            the failed stage</simpara>\n      ",
            "documentation": "\n        <p>The ID of the pipeline execution in the failed stage to be retried. Use the <a>GetPipelineState</a> action to retrieve the current pipelineExecutionId of\n            the failed stage</p>\n      ",
            "required": true,
            "shape_name": "PipelineExecutionId"
          },
          "retryMode": {
            "type": "string",
            "enum": [
              "FAILED_ACTIONS"
            ],
            "zonbookDocumentation": "\n        <simpara>The scope of the retry attempt. Currently, the only supported value is\n            FAILED_ACTIONS.</simpara>\n      ",
            "documentation": "\n        <p>The scope of the retry attempt. Currently, the only supported value is\n            FAILED_ACTIONS.</p>\n      ",
            "required": true,
            "shape_name": "StageRetryMode"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a RetryStageExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a RetryStageExecution action.</p>\n      ",
        "shape_name": "RetryStageExecutionInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineExecutionId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The ID of the current workflow execution in the failed stage.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the current workflow execution in the failed stage.</p>\n      ",
            "shape_name": "PipelineExecutionId"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a RetryStageExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a RetryStageExecution action.</p>\n      ",
        "shape_name": "RetryStageExecutionOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "StageNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage can't be retried because the pipeline structure or stage state\n            changed after the stage was not completed; the stage contains no failed actions; one or\n            more actions are still in progress; or another retry attempt is already in progress.\n            </simpara>\n      ",
          "documentation": "\n        <p>The specified stage can't be retried because the pipeline structure or stage state\n            changed after the stage was not completed; the stage contains no failed actions; one or\n            more actions are still in progress; or another retry attempt is already in progress.\n            </p>\n      ",
          "shape_name": "StageNotRetryableException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The stage has failed in a later run of the pipeline and the pipelineExecutionId\n            associated with the request is out of date.</simpara>\n      ",
          "documentation": "\n        <p>The stage has failed in a later run of the pipeline and the pipelineExecutionId\n            associated with the request is out of date.</p>\n      ",
          "shape_name": "NotLatestPipelineExecutionException"
        }
      ],
      "documentation": "\n        <p>Resumes the pipeline execution by retrying the last failed actions in a\n            stage.</p>\n        \n      "
    },
    "GetPipelineState": {
      "name": "GetPipelineState",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline about which you want to get information.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline about which you want to get information.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a GetPipelineState action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a GetPipelineState action.</p>\n      ",
        "shape_name": "GetPipelineStateInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline for which you want to get the state.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline for which you want to get the state.</p>\n      ",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "pipelineVersion": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The version number of the pipeline.</simpara>\n        <note>\n            <simpara>A newly-created pipeline is always assigned a version number of\n                <code>1</code>.</simpara>\n        </note>\n      ",
            "documentation": "\n        <p>The version number of the pipeline.</p>\n        <note>\n            <p>A newly-created pipeline is always assigned a version number of\n                <code>1</code>.</p>\n        </note>\n      ",
            "shape_name": "PipelineVersion",
            "min_length": 1
          },
          "stageStates": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of the pipeline stage output information, including stage name, state, most\n            recent run details, whether the stage is disabled, and other data.</simpara>\n      ",
            "documentation": "\n        <p>A list of the pipeline stage output information, including stage name, state, most\n            recent run details, whether the stage is disabled, and other data.</p>\n      ",
            "shape_name": "StageStateList",
            "members": {
              "type": "structure",
              "members": {
                "stageName": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9.@\\-_]+",
                  "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the stage.</p>\n      ",
                  "shape_name": "StageName",
                  "min_length": 1,
                  "max_length": 100
                },
                "inboundTransitionState": {
                  "type": "structure",
                  "members": {
                    "enabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Whether the transition between stages is enabled (true) or disabled\n            (false).</simpara>\n      ",
                      "documentation": "\n        <p>Whether the transition between stages is enabled (true) or disabled\n            (false).</p>\n      ",
                      "shape_name": "Enabled"
                    },
                    "lastChangedBy": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The ID of the user who last changed the transition state.</simpara>\n      ",
                      "documentation": "\n        <p>The ID of the user who last changed the transition state.</p>\n      ",
                      "shape_name": "LastChangedBy"
                    },
                    "lastChangedAt": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The timestamp when the transition state was last changed.</simpara>\n      ",
                      "documentation": "\n        <p>The timestamp when the transition state was last changed.</p>\n      ",
                      "shape_name": "LastChangedAt"
                    },
                    "disabledReason": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
                      "zonbookDocumentation": "\n        <simpara>The user-specified reason why the transition between two stages of a pipeline was\n            disabled.</simpara>\n      ",
                      "documentation": "\n        <p>The user-specified reason why the transition between two stages of a pipeline was\n            disabled.</p>\n      ",
                      "shape_name": "DisabledReason",
                      "min_length": 1,
                      "max_length": 300
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The state of the inbound transition, which is either enabled or disabled.</simpara>\n      ",
                  "documentation": "\n        <p>The state of the inbound transition, which is either enabled or disabled.</p>\n      ",
                  "shape_name": "TransitionState"
                },
                "actionStates": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>The state of the stage.</simpara>\n      ",
                  "documentation": "\n        <p>The state of the stage.</p>\n      ",
                  "shape_name": "ActionStateList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "actionName": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9.@\\-_]+",
                        "zonbookDocumentation": "\n        <simpara>The name of the action.</simpara>\n      ",
                        "documentation": "\n        <p>The name of the action.</p>\n      ",
                        "shape_name": "ActionName",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "currentRevision": {
                        "type": "structure",
                        "members": {
                          "revisionId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The system-generated unique ID that identifies the revision number of the\n            action.</simpara>\n      ",
                            "documentation": "\n        <p>The system-generated unique ID that identifies the revision number of the\n            action.</p>\n      ",
                            "required": true,
                            "shape_name": "Revision",
                            "min_length": 1,
                            "max_length": 1500
                          },
                          "revisionChangeId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The unique identifier of the change that set the state to this revision, for\n            example a deployment ID or timestamp.</simpara>\n      ",
                            "documentation": "\n        <p>The unique identifier of the change that set the state to this revision, for\n            example a deployment ID or timestamp.</p>\n      ",
                            "required": true,
                            "shape_name": "RevisionChangeIdentifier",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "created": {
                            "type": "timestamp",
                            "zonbookDocumentation": "\n        <simpara>The date and time when the most recent version of the action was created, in\n            timestamp format.</simpara>\n      ",
                            "documentation": "\n        <p>The date and time when the most recent version of the action was created, in\n            timestamp format.</p>\n      ",
                            "required": true,
                            "shape_name": "Timestamp"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about the version (or revision) of an action.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about the version (or revision) of an action.</p>\n      ",
                        "shape_name": "ActionRevision"
                      },
                      "latestExecution": {
                        "type": "structure",
                        "members": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed"
                            ],
                            "zonbookDocumentation": "\n        <simpara>The status of the action, or for a completed action, the last status of the\n            action.</simpara>\n      ",
                            "documentation": "\n        <p>The status of the action, or for a completed action, the last status of the\n            action.</p>\n      ",
                            "shape_name": "ActionExecutionStatus"
                          },
                          "summary": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>A summary of the run of the action.</simpara>\n      ",
                            "documentation": "\n        <p>A summary of the run of the action.</p>\n      ",
                            "shape_name": "ExecutionSummary",
                            "min_length": 1,
                            "max_length": 2048
                          },
                          "lastStatusChange": {
                            "type": "timestamp",
                            "zonbookDocumentation": "\n        <simpara>The last status change of the action.</simpara>\n      ",
                            "documentation": "\n        <p>The last status change of the action.</p>\n      ",
                            "shape_name": "Timestamp"
                          },
                          "token": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The system-generated token used to identify a unique approval request. The token\n            for each open approval request can be obtained using the GetPipelineState command and is\n            used to validate that the approval request corresponding to this token is still\n            valid.</simpara>\n      ",
                            "documentation": "\n        <p>The system-generated token used to identify a unique approval request. The token\n            for each open approval request can be obtained using the GetPipelineState command and is\n            used to validate that the approval request corresponding to this token is still\n            valid.</p>\n      ",
                            "shape_name": "ActionExecutionToken"
                          },
                          "lastUpdatedBy": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The ARN of the user who last changed the pipeline.</simpara>\n      ",
                            "documentation": "\n        <p>The ARN of the user who last changed the pipeline.</p>\n      ",
                            "shape_name": "LastUpdatedBy"
                          },
                          "externalExecutionId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The external ID of the run of the action.</simpara>\n      ",
                            "documentation": "\n        <p>The external ID of the run of the action.</p>\n      ",
                            "shape_name": "ExecutionId",
                            "min_length": 1,
                            "max_length": 1500
                          },
                          "externalExecutionUrl": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The URL of a resource external to AWS that will be used when running the action,\n            for example an external repository URL.</simpara>\n      ",
                            "documentation": "\n        <p>The URL of a resource external to AWS that will be used when running the action,\n            for example an external repository URL.</p>\n      ",
                            "shape_name": "Url",
                            "min_length": 1,
                            "max_length": 2048
                          },
                          "percentComplete": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>A percentage of completeness of the action as it runs.</simpara>\n      ",
                            "documentation": "\n        <p>A percentage of completeness of the action as it runs.</p>\n      ",
                            "shape_name": "Percentage",
                            "min_length": 0,
                            "max_length": 100
                          },
                          "errorDetails": {
                            "type": "structure",
                            "members": {
                              "code": {
                                "type": "string",
                                "zonbookDocumentation": "\n        <simpara>The system ID or error number code of the error.</simpara>\n      ",
                                "documentation": "\n        <p>The system ID or error number code of the error.</p>\n      ",
                                "shape_name": "Code"
                              },
                              "message": {
                                "type": "string",
                                "zonbookDocumentation": "\n        <simpara>The text of the error message.</simpara>\n      ",
                                "documentation": "\n        <p>The text of the error message.</p>\n      ",
                                "shape_name": "Message",
                                "min_length": 1,
                                "max_length": 5000
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The details of an error returned by a URL external to AWS.</simpara>\n      ",
                            "documentation": "\n        <p>The details of an error returned by a URL external to AWS.</p>\n      ",
                            "shape_name": "ErrorDetails"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about the run of an action.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about the run of an action.</p>\n      ",
                        "shape_name": "ActionExecution"
                      },
                      "entityUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A URL link for more information about the state of the action, such as a deployment\n            group details page.</simpara>\n      ",
                        "documentation": "\n        <p>A URL link for more information about the state of the action, such as a deployment\n            group details page.</p>\n      ",
                        "shape_name": "Url",
                        "min_length": 1,
                        "max_length": 2048
                      },
                      "revisionUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A URL link for more information about the revision, such as a commit details\n            page.</simpara>\n      ",
                        "documentation": "\n        <p>A URL link for more information about the revision, such as a commit details\n            page.</p>\n      ",
                        "shape_name": "Url",
                        "min_length": 1,
                        "max_length": 2048
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about the state of an action.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about the state of an action.</p>\n      ",
                    "shape_name": "ActionState"
                  }
                },
                "latestExecution": {
                  "type": "structure",
                  "members": {
                    "pipelineExecutionId": {
                      "type": "string",
                      "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                      "zonbookDocumentation": "\n        <simpara>The ID of the pipeline execution associated with the stage.</simpara>\n      ",
                      "documentation": "\n        <p>The ID of the pipeline execution associated with the stage.</p>\n      ",
                      "required": true,
                      "shape_name": "PipelineExecutionId"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "InProgress",
                        "Failed",
                        "Succeeded"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The status of the stage, or for a completed stage, the last status of the\n            stage.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the stage, or for a completed stage, the last status of the\n            stage.</p>\n      ",
                      "required": true,
                      "shape_name": "StageExecutionStatus"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Information about the latest execution in the stage, including its ID and\n            status.</simpara>\n      ",
                  "documentation": "\n        <p>Information about the latest execution in the stage, including its ID and\n            status.</p>\n      ",
                  "shape_name": "StageExecution"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents information about the state of the stage.</simpara>\n      ",
              "documentation": "\n        <p>Represents information about the state of the stage.</p>\n      ",
              "shape_name": "StageState"
            }
          },
          "created": {
            "type": "timestamp",
            "zonbookDocumentation": "\n        <simpara>The date and time the pipeline was created, in timestamp format.</simpara>\n      ",
            "documentation": "\n        <p>The date and time the pipeline was created, in timestamp format.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "updated": {
            "type": "timestamp",
            "zonbookDocumentation": "\n        <simpara>The date and time the pipeline was last updated, in timestamp format.</simpara>\n      ",
            "documentation": "\n        <p>The date and time the pipeline was last updated, in timestamp format.</p>\n      ",
            "shape_name": "Timestamp"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a GetPipelineState action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a GetPipelineState action.</p>\n      ",
        "shape_name": "GetPipelineStateOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns information about the state of a pipeline, including the stages and\n            actions.</p>\n        \n      "
    },
    "GetPipelineExecution": {
      "name": "GetPipelineExecution",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline about which you want to get execution details.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline about which you want to get execution details.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "pipelineExecutionId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The ID of the pipeline execution about which you want to get execution\n            details.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the pipeline execution about which you want to get execution\n            details.</p>\n      ",
            "required": true,
            "shape_name": "PipelineExecutionId"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a GetPipelineExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a GetPipelineExecution action.</p>\n      ",
        "shape_name": "GetPipelineExecutionInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineExecution": {
            "type": "structure",
            "members": {
              "pipelineName": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the pipeline that was executed.</simpara>\n      ",
                "documentation": "\n        <p>The name of the pipeline that was executed.</p>\n      ",
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "pipelineVersion": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The version number of the pipeline that was executed.</simpara>\n      ",
                "documentation": "\n        <p>The version number of the pipeline that was executed.</p>\n      ",
                "shape_name": "PipelineVersion",
                "min_length": 1
              },
              "pipelineExecutionId": {
                "type": "string",
                "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                "zonbookDocumentation": "\n        <simpara>The ID of the pipeline execution.</simpara>\n      ",
                "documentation": "\n        <p>The ID of the pipeline execution.</p>\n      ",
                "shape_name": "PipelineExecutionId"
              },
              "status": {
                "type": "string",
                "enum": [
                  "InProgress",
                  "Succeeded",
                  "Superseded",
                  "Failed"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the pipeline execution.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>InProgress: The pipeline execution is currently running.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>Succeeded: The pipeline execution was completed successfully. </simpara>\n            </listitem>\n            <listitem>\n                <simpara>Superseded: While this pipeline execution was waiting for the next stage to\n                    be completed, a newer pipeline execution advanced and continued through the\n                    pipeline instead. </simpara>\n            </listitem>\n            <listitem>\n                <simpara>Failed: The pipeline execution was not completed successfully.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The status of the pipeline execution.</p>\n        <ul>\n            <li>\n                <p>InProgress: The pipeline execution is currently running.</p>\n            </li>\n            <li>\n                <p>Succeeded: The pipeline execution was completed successfully. </p>\n            </li>\n            <li>\n                <p>Superseded: While this pipeline execution was waiting for the next stage to\n                    be completed, a newer pipeline execution advanced and continued through the\n                    pipeline instead. </p>\n            </li>\n            <li>\n                <p>Failed: The pipeline execution was not completed successfully.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "PipelineExecutionStatus"
              },
              "artifactRevisions": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of ArtifactRevision objects included in a pipeline execution.</simpara>\n      ",
                "documentation": "\n        <p>A list of ArtifactRevision objects included in a pipeline execution.</p>\n      ",
                "shape_name": "ArtifactRevisionList",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[a-zA-Z0-9_\\-]+",
                      "zonbookDocumentation": "\n        <simpara>The name of an artifact. This name might be system-generated, such as \"MyApp\", or\n            might be defined by the user when an action is created.</simpara>\n      ",
                      "documentation": "\n        <p>The name of an artifact. This name might be system-generated, such as \"MyApp\", or\n            might be defined by the user when an action is created.</p>\n      ",
                      "shape_name": "ArtifactName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "revisionId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The revision ID of the artifact.</simpara>\n      ",
                      "documentation": "\n        <p>The revision ID of the artifact.</p>\n      ",
                      "shape_name": "Revision",
                      "min_length": 1,
                      "max_length": 1500
                    },
                    "revisionChangeIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>An additional identifier for a revision, such as a commit date or, for artifacts\n            stored in Amazon S3 buckets, the ETag value.</simpara>\n      ",
                      "documentation": "\n        <p>An additional identifier for a revision, such as a commit date or, for artifacts\n            stored in Amazon S3 buckets, the ETag value.</p>\n      ",
                      "shape_name": "RevisionChangeIdentifier",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "revisionSummary": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>Summary information about the most recent revision of the artifact. For GitHub and\n            AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the\n            user-provided content of a <code>codepipeline-artifact-revision-summary</code> key\n            specified in the object metadata.</simpara>\n      ",
                      "documentation": "\n        <p>Summary information about the most recent revision of the artifact. For GitHub and\n            AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the\n            user-provided content of a <code>codepipeline-artifact-revision-summary</code> key\n            specified in the object metadata.</p>\n      ",
                      "shape_name": "RevisionSummary",
                      "min_length": 1,
                      "max_length": 2048
                    },
                    "created": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</p>\n      ",
                      "shape_name": "Timestamp"
                    },
                    "revisionUrl": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The commit ID for the artifact revision. For artifacts stored in GitHub or AWS\n            CodeCommit repositories, the commit ID is linked to a commit details page.</simpara>\n      ",
                      "documentation": "\n        <p>The commit ID for the artifact revision. For artifacts stored in GitHub or AWS\n            CodeCommit repositories, the commit ID is linked to a commit details page.</p>\n      ",
                      "shape_name": "Url",
                      "min_length": 1,
                      "max_length": 2048
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents revision details of an artifact. </simpara>\n      ",
                  "documentation": "\n        <p>Represents revision details of an artifact. </p>\n      ",
                  "shape_name": "ArtifactRevision"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about the execution of a pipeline.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about the execution of a pipeline.</p>\n      ",
            "shape_name": "PipelineExecution"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a GetPipelineExecution action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a GetPipelineExecution action.</p>\n      ",
        "shape_name": "GetPipelineExecutionOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The pipeline execution was specified in an invalid format or cannot be found, or an\n            execution ID does not belong to the specified pipeline. </simpara>\n      ",
          "documentation": "\n        <p>The pipeline execution was specified in an invalid format or cannot be found, or an\n            execution ID does not belong to the specified pipeline. </p>\n      ",
          "shape_name": "PipelineExecutionNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns information about an execution of a pipeline, including details about\n            artifacts, the pipeline execution ID, and the name, version, and status of the\n            pipeline.</p>\n        \n      "
    },
    "ListPipelineExecutions": {
      "name": "ListPipelineExecutions",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline for which you want to get execution summary\n            information.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline for which you want to get execution summary\n            information.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to return in a single call. To retrieve the remaining\n            results, make another call with the returned nextToken value. The available pipeline\n            execution history is limited to the most recent 12 months, based on pipeline execution\n            start times. Default value is 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to return in a single call. To retrieve the remaining\n            results, make another call with the returned nextToken value. The available pipeline\n            execution history is limited to the most recent 12 months, based on pipeline execution\n            start times. Default value is 100.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token that was returned from the previous ListPipelineExecutions call, which\n            can be used to return the next set of pipeline executions in the list.</simpara>\n      ",
            "documentation": "\n        <p>The token that was returned from the previous ListPipelineExecutions call, which\n            can be used to return the next set of pipeline executions in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a ListPipelineExecutions action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a ListPipelineExecutions action.</p>\n      ",
        "shape_name": "ListPipelineExecutionsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineExecutionSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of executions in the history of a pipeline.</simpara>\n      ",
            "documentation": "\n        <p>A list of executions in the history of a pipeline.</p>\n      ",
            "shape_name": "PipelineExecutionSummaryList",
            "members": {
              "type": "structure",
              "members": {
                "pipelineExecutionId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                  "zonbookDocumentation": "\n        <simpara>The ID of the pipeline execution.</simpara>\n      ",
                  "documentation": "\n        <p>The ID of the pipeline execution.</p>\n      ",
                  "shape_name": "PipelineExecutionId"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Succeeded",
                    "Superseded",
                    "Failed"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The status of the pipeline execution.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>InProgress: The pipeline execution is currently running.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>Succeeded: The pipeline execution was completed successfully. </simpara>\n            </listitem>\n            <listitem>\n                <simpara>Superseded: While this pipeline execution was waiting for the next stage to\n                    be completed, a newer pipeline execution advanced and continued through the\n                    pipeline instead. </simpara>\n            </listitem>\n            <listitem>\n                <simpara>Failed: The pipeline execution was not completed successfully.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The status of the pipeline execution.</p>\n        <ul>\n            <li>\n                <p>InProgress: The pipeline execution is currently running.</p>\n            </li>\n            <li>\n                <p>Succeeded: The pipeline execution was completed successfully. </p>\n            </li>\n            <li>\n                <p>Superseded: While this pipeline execution was waiting for the next stage to\n                    be completed, a newer pipeline execution advanced and continued through the\n                    pipeline instead. </p>\n            </li>\n            <li>\n                <p>Failed: The pipeline execution was not completed successfully.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "PipelineExecutionStatus"
                },
                "startTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time when the pipeline execution began, in timestamp format.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time when the pipeline execution began, in timestamp format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastUpdateTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time of the last change to the pipeline execution, in timestamp\n            format.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time of the last change to the pipeline execution, in timestamp\n            format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "sourceRevisions": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of the source artifact revisions that initiated a pipeline\n            execution.</simpara>\n      ",
                  "documentation": "\n        <p>A list of the source artifact revisions that initiated a pipeline\n            execution.</p>\n      ",
                  "shape_name": "SourceRevisionList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "actionName": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9.@\\-_]+",
                        "zonbookDocumentation": "\n        <simpara>The name of the action that processed the revision to the source\n            artifact.</simpara>\n      ",
                        "documentation": "\n        <p>The name of the action that processed the revision to the source\n            artifact.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionName",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "revisionId": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The system-generated unique ID that identifies the revision number of the\n            artifact.</simpara>\n      ",
                        "documentation": "\n        <p>The system-generated unique ID that identifies the revision number of the\n            artifact.</p>\n      ",
                        "shape_name": "Revision",
                        "min_length": 1,
                        "max_length": 1500
                      },
                      "revisionSummary": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>Summary information about the most recent revision of the artifact. For GitHub and\n            AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the\n            user-provided content of a <code>codepipeline-artifact-revision-summary</code> key\n            specified in the object metadata.</simpara>\n      ",
                        "documentation": "\n        <p>Summary information about the most recent revision of the artifact. For GitHub and\n            AWS CodeCommit repositories, the commit message. For Amazon S3 buckets or actions, the\n            user-provided content of a <code>codepipeline-artifact-revision-summary</code> key\n            specified in the object metadata.</p>\n      ",
                        "shape_name": "RevisionSummary",
                        "min_length": 1,
                        "max_length": 2048
                      },
                      "revisionUrl": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The commit ID for the artifact revision. For artifacts stored in GitHub or AWS\n            CodeCommit repositories, the commit ID is linked to a commit details page.</simpara>\n      ",
                        "documentation": "\n        <p>The commit ID for the artifact revision. For artifacts stored in GitHub or AWS\n            CodeCommit repositories, the commit ID is linked to a commit details page.</p>\n      ",
                        "shape_name": "Url",
                        "min_length": 1,
                        "max_length": 2048
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the version (or revision) of a source artifact that initiated a\n            pipeline execution.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the version (or revision) of a source artifact that initiated a\n            pipeline execution.</p>\n      ",
                    "shape_name": "SourceRevision"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Summary information about a pipeline execution.</simpara>\n      ",
              "documentation": "\n        <p>Summary information about a pipeline execution.</p>\n      ",
              "shape_name": "PipelineExecutionSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A token that can be used in the next ListPipelineExecutions call. To view all items\n            in the list, continue to call this operation with each subsequent token until no more\n            nextToken values are returned.</simpara>\n      ",
            "documentation": "\n        <p>A token that can be used in the next ListPipelineExecutions call. To view all items\n            in the list, continue to call this operation with each subsequent token until no more\n            nextToken values are returned.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a ListPipelineExecutions action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a ListPipelineExecutions action.</p>\n      ",
        "shape_name": "ListPipelineExecutionsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</simpara>\n      ",
          "documentation": "\n        <p>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        }
      ],
      "documentation": "\n        <p>Gets a summary of the most recent executions for a pipeline.</p>\n      "
    },
    "EnableStageTransition": {
      "name": "EnableStageTransition",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline in which you want to enable the flow of artifacts from one\n            stage to another.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline in which you want to enable the flow of artifacts from one\n            stage to another.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "stageName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the stage where you want to enable the transition of artifacts, either\n            into the stage (inbound) or from that stage to the next stage (outbound).</simpara>\n      ",
            "documentation": "\n        <p>The name of the stage where you want to enable the transition of artifacts, either\n            into the stage (inbound) or from that stage to the next stage (outbound).</p>\n      ",
            "required": true,
            "shape_name": "StageName",
            "min_length": 1,
            "max_length": 100
          },
          "transitionType": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "zonbookDocumentation": "\n        <simpara>Specifies whether artifacts will be allowed to enter the stage and be processed by\n            the actions in that stage (inbound) or whether already-processed artifacts will be\n            allowed to transition to the next stage (outbound).</simpara>\n      ",
            "documentation": "\n        <p>Specifies whether artifacts will be allowed to enter the stage and be processed by\n            the actions in that stage (inbound) or whether already-processed artifacts will be\n            allowed to transition to the next stage (outbound).</p>\n      ",
            "required": true,
            "shape_name": "StageTransitionType"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of an EnableStageTransition action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of an EnableStageTransition action.</p>\n      ",
        "shape_name": "EnableStageTransitionInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "StageNotFoundException"
        }
      ],
      "documentation": "\n        <p>Enables artifacts in a pipeline to transition to a stage in a pipeline.</p>\n        \n      "
    },
    "DisableStageTransition": {
      "name": "DisableStageTransition",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline in which you want to disable the flow of artifacts from\n            one stage to another.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline in which you want to disable the flow of artifacts from\n            one stage to another.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "stageName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the stage where you want to disable the inbound or outbound transition\n            of artifacts.</simpara>\n      ",
            "documentation": "\n        <p>The name of the stage where you want to disable the inbound or outbound transition\n            of artifacts.</p>\n      ",
            "required": true,
            "shape_name": "StageName",
            "min_length": 1,
            "max_length": 100
          },
          "transitionType": {
            "type": "string",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "zonbookDocumentation": "\n        <simpara>Specifies whether artifacts will be prevented from transitioning into the stage and\n            being processed by the actions in that stage (inbound), or prevented from transitioning\n            from the stage after they have been processed by the actions in that stage\n            (outbound).</simpara>\n      ",
            "documentation": "\n        <p>Specifies whether artifacts will be prevented from transitioning into the stage and\n            being processed by the actions in that stage (inbound), or prevented from transitioning\n            from the stage after they have been processed by the actions in that stage\n            (outbound).</p>\n      ",
            "required": true,
            "shape_name": "StageTransitionType"
          },
          "reason": {
            "type": "string",
            "pattern": "[a-zA-Z0-9!@ \\(\\)\\.\\*\\?\\-]+",
            "zonbookDocumentation": "\n        <simpara>The reason given to the user why a stage is disabled, such as waiting for manual\n            approval or manual tests. This message is displayed in the pipeline console\n            UI.</simpara>\n      ",
            "documentation": "\n        <p>The reason given to the user why a stage is disabled, such as waiting for manual\n            approval or manual tests. This message is displayed in the pipeline console\n            UI.</p>\n      ",
            "required": true,
            "shape_name": "DisabledReason",
            "min_length": 1,
            "max_length": 300
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a DisableStageTransition action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a DisableStageTransition action.</p>\n      ",
        "shape_name": "DisableStageTransitionInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "StageNotFoundException"
        }
      ],
      "documentation": "\n        <p>Prevents artifacts in a pipeline from transitioning to the next stage in the\n            pipeline.</p>\n        \n      "
    },
    "PollForThirdPartyJobs": {
      "name": "PollForThirdPartyJobs",
      "input": {
        "type": "structure",
        "members": {
          "actionTypeId": {
            "type": "structure",
            "members": {
              "category": {
                "type": "string",
                "enum": [
                  "Source",
                  "Build",
                  "Deploy",
                  "Test",
                  "Invoke",
                  "Approval"
                ],
                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                "required": true,
                "shape_name": "ActionCategory"
              },
              "owner": {
                "type": "string",
                "enum": [
                  "AWS",
                  "ThirdParty",
                  "Custom"
                ],
                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                "required": true,
                "shape_name": "ActionOwner"
              },
              "provider": {
                "type": "string",
                "pattern": "[0-9A-Za-z_-]+",
                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                "required": true,
                "shape_name": "ActionProvider",
                "min_length": 1,
                "max_length": 25
              },
              "version": {
                "type": "string",
                "pattern": "[0-9A-Za-z_-]+",
                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                "required": true,
                "shape_name": "Version",
                "min_length": 1,
                "max_length": 9
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
            "required": true,
            "shape_name": "ActionTypeId"
          },
          "maxBatchSize": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of jobs to return in a poll for jobs call.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of jobs to return in a poll for jobs call.</p>\n      ",
            "shape_name": "MaxBatchSize",
            "min_length": 1
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PollForThirdPartyJobs action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PollForThirdPartyJobs action.</p>\n      ",
        "shape_name": "PollForThirdPartyJobsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "jobs": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the jobs to take action on.</simpara>\n      ",
            "documentation": "\n        <p>Information about the jobs to take action on.</p>\n      ",
            "shape_name": "ThirdPartyJobList",
            "members": {
              "type": "structure",
              "members": {
                "clientId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                  "zonbookDocumentation": "\n        <simpara>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</simpara>\n      ",
                  "documentation": "\n        <p>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</p>\n      ",
                  "shape_name": "ClientId"
                },
                "jobId": {
                  "type": "string",
                  "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                  "zonbookDocumentation": "\n        <simpara>The identifier used to identify the job in AWS CodePipeline.</simpara>\n      ",
                  "documentation": "\n        <p>The identifier used to identify the job in AWS CodePipeline.</p>\n      ",
                  "shape_name": "JobId"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A response to a PollForThirdPartyJobs request returned by AWS CodePipeline when\n            there is a job to be worked upon by a partner action.</simpara>\n      ",
              "documentation": "\n        <p>A response to a PollForThirdPartyJobs request returned by AWS CodePipeline when\n            there is a job to be worked upon by a partner action.</p>\n      ",
              "shape_name": "ThirdPartyJob"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a PollForThirdPartyJobs action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a PollForThirdPartyJobs action.</p>\n      ",
        "shape_name": "PollForThirdPartyJobsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action type cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified action type cannot be found.</p>\n      ",
          "shape_name": "ActionTypeNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Determines whether there are any third party jobs for a job worker to act on. Only\n            used for partner actions.</p>\n        <important>\n            <p>When this API is called, AWS CodePipeline returns temporary credentials for the\n                Amazon S3 bucket used to store artifacts for the pipeline, if the action requires\n                access to that Amazon S3 bucket for input or output artifacts.</p>\n        </important>\n      "
    },
    "AcknowledgeThirdPartyJob": {
      "name": "AcknowledgeThirdPartyJob",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID of the job.</p>\n      ",
            "required": true,
            "shape_name": "ThirdPartyJobId",
            "min_length": 1,
            "max_length": 512
          },
          "nonce": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Get this number from the response to a <xref linkend=\"GetThirdPartyJobDetails\"/> request.</simpara>\n      ",
            "documentation": "\n        <p>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Get this number from the response to a <a>GetThirdPartyJobDetails</a> request.</p>\n      ",
            "required": true,
            "shape_name": "Nonce",
            "min_length": 1,
            "max_length": 50
          },
          "clientToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</simpara>\n      ",
            "documentation": "\n        <p>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</p>\n      ",
            "required": true,
            "shape_name": "ClientToken",
            "min_length": 1,
            "max_length": 256
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of an AcknowledgeThirdPartyJob action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of an AcknowledgeThirdPartyJob action.</p>\n      ",
        "shape_name": "AcknowledgeThirdPartyJobInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "Created",
              "Queued",
              "Dispatched",
              "InProgress",
              "TimedOut",
              "Succeeded",
              "Failed"
            ],
            "zonbookDocumentation": "\n        <simpara>The status information for the third party job, if any.</simpara>\n      ",
            "documentation": "\n        <p>The status information for the third party job, if any.</p>\n      ",
            "shape_name": "JobStatus"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of an AcknowledgeThirdPartyJob action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of an AcknowledgeThirdPartyJob action.</p>\n      ",
        "shape_name": "AcknowledgeThirdPartyJobOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified nonce was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified nonce was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidNonceException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The client token was specified in an invalid format</simpara>\n      ",
          "documentation": "\n        <p>The client token was specified in an invalid format</p>\n      ",
          "shape_name": "InvalidClientTokenException"
        }
      ],
      "documentation": "\n        <p>Confirms a job worker has received the specified job. Only used for partner\n            actions.</p>\n      "
    },
    "GetThirdPartyJobDetails": {
      "name": "GetThirdPartyJobDetails",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID used for identifying the job.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID used for identifying the job.</p>\n      ",
            "required": true,
            "shape_name": "ThirdPartyJobId",
            "min_length": 1,
            "max_length": 512
          },
          "clientToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</simpara>\n      ",
            "documentation": "\n        <p>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</p>\n      ",
            "required": true,
            "shape_name": "ClientToken",
            "min_length": 1,
            "max_length": 256
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a GetThirdPartyJobDetails action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a GetThirdPartyJobDetails action.</p>\n      ",
        "shape_name": "GetThirdPartyJobDetailsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "jobDetails": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The identifier used to identify the job details in AWS CodePipeline.</simpara>\n      ",
                "documentation": "\n        <p>The identifier used to identify the job details in AWS CodePipeline.</p>\n      ",
                "shape_name": "ThirdPartyJobId",
                "min_length": 1,
                "max_length": 512
              },
              "data": {
                "type": "structure",
                "members": {
                  "actionTypeId": {
                    "type": "structure",
                    "members": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "Source",
                          "Build",
                          "Deploy",
                          "Test",
                          "Invoke",
                          "Approval"
                        ],
                        "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                        "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionCategory"
                      },
                      "owner": {
                        "type": "string",
                        "enum": [
                          "AWS",
                          "ThirdParty",
                          "Custom"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                        "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionOwner"
                      },
                      "provider": {
                        "type": "string",
                        "pattern": "[0-9A-Za-z_-]+",
                        "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                        "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionProvider",
                        "min_length": 1,
                        "max_length": 25
                      },
                      "version": {
                        "type": "string",
                        "pattern": "[0-9A-Za-z_-]+",
                        "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                        "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                        "required": true,
                        "shape_name": "Version",
                        "min_length": 1,
                        "max_length": 9
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
                    "shape_name": "ActionTypeId"
                  },
                  "actionConfiguration": {
                    "type": "structure",
                    "members": {
                      "configuration": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <simpara>The configuration data for the action.</simpara>\n      ",
                        "documentation": "\n        <p>The configuration data for the action.</p>\n      ",
                        "shape_name": "ActionConfigurationMap",
                        "keys": {
                          "type": "string",
                          "shape_name": "ActionConfigurationKey",
                          "documentation": null,
                          "min_length": 1,
                          "max_length": 50
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "ActionConfigurationValue",
                          "documentation": null,
                          "min_length": 1,
                          "max_length": 1000
                        }
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about an action configuration.</p>\n      ",
                    "shape_name": "ActionConfiguration"
                  },
                  "pipelineContext": {
                    "type": "structure",
                    "members": {
                      "pipelineName": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9.@\\-_]+",
                        "zonbookDocumentation": "\n        <simpara>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</simpara>\n      ",
                        "documentation": "\n        <p>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</p>\n      ",
                        "shape_name": "PipelineName",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "stage": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                            "documentation": "\n        <p>The name of the stage.</p>\n      ",
                            "shape_name": "StageName",
                            "min_length": 1,
                            "max_length": 100
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The stage of the pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>The stage of the pipeline.</p>\n      ",
                        "shape_name": "StageContext"
                      },
                      "action": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The name of the action within the context of a job.</simpara>\n      ",
                            "documentation": "\n        <p>The name of the action within the context of a job.</p>\n      ",
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The context of an action to a job worker within the stage of a pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>The context of an action to a job worker within the stage of a pipeline.</p>\n      ",
                        "shape_name": "ActionContext"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about a pipeline to a job worker.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about a pipeline to a job worker.</p>\n      ",
                    "shape_name": "PipelineContext"
                  },
                  "inputArtifacts": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The name of the artifact that will be worked upon by the action, if any. This name\n            might be system-generated, such as \"MyApp\", or might be defined by the user when the\n            action is created. The input artifact name must match the name of an output artifact\n            generated by an action in an earlier action or stage of the pipeline.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the artifact that will be worked upon by the action, if any. This name\n            might be system-generated, such as \"MyApp\", or might be defined by the user when the\n            action is created. The input artifact name must match the name of an output artifact\n            generated by an action in an earlier action or stage of the pipeline.</p>\n      ",
                    "shape_name": "ArtifactList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z0-9_\\-]+",
                          "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's name.</p>\n      ",
                          "shape_name": "ArtifactName",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "revision": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                          "shape_name": "Revision",
                          "min_length": 1,
                          "max_length": 1500
                        },
                        "location": {
                          "type": "structure",
                          "members": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "S3"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                              "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                              "shape_name": "ArtifactLocationType"
                            },
                            "s3Location": {
                              "type": "structure",
                              "members": {
                                "bucketName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3BucketName"
                                },
                                "objectKey": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3ObjectKey"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                              "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                              "shape_name": "S3ArtifactLocation"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                          "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                          "shape_name": "ArtifactLocation"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                      "shape_name": "Artifact"
                    }
                  },
                  "outputArtifacts": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The name of the artifact that will be the result of the action, if any. This name\n            might be system-generated, such as \"MyBuiltApp\", or might be defined by the user when\n            the action is created.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the artifact that will be the result of the action, if any. This name\n            might be system-generated, such as \"MyBuiltApp\", or might be defined by the user when\n            the action is created.</p>\n      ",
                    "shape_name": "ArtifactList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z0-9_\\-]+",
                          "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's name.</p>\n      ",
                          "shape_name": "ArtifactName",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "revision": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                          "shape_name": "Revision",
                          "min_length": 1,
                          "max_length": 1500
                        },
                        "location": {
                          "type": "structure",
                          "members": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "S3"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                              "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                              "shape_name": "ArtifactLocationType"
                            },
                            "s3Location": {
                              "type": "structure",
                              "members": {
                                "bucketName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3BucketName"
                                },
                                "objectKey": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3ObjectKey"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                              "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                              "shape_name": "S3ArtifactLocation"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                          "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                          "shape_name": "ArtifactLocation"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                      "shape_name": "Artifact"
                    }
                  },
                  "artifactCredentials": {
                    "type": "structure",
                    "members": {
                      "accessKeyId": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The access key for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The access key for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "AccessKeyId"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The secret access key for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The secret access key for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "SecretAccessKey"
                      },
                      "sessionToken": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The token for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The token for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "SessionToken"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline. </simpara>\n      ",
                    "documentation": "\n        <p>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline. </p>\n      ",
                    "sensitive": true,
                    "shape_name": "AWSSessionCredentials"
                  },
                  "continuationToken": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</simpara>\n      ",
                    "documentation": "\n        <p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</p>\n      ",
                    "shape_name": "ContinuationToken",
                    "min_length": 1,
                    "max_length": 2048
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The encryption key used to encrypt and decrypt data in the artifact store for the\n            pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and\n            might not be present.</simpara>\n      ",
                    "documentation": "\n        <p>The encryption key used to encrypt and decrypt data in the artifact store for the\n            pipeline, such as an AWS Key Management Service (AWS KMS) key. This is optional and\n            might not be present.</p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The data to be returned by the third party job worker.</simpara>\n      ",
                "documentation": "\n        <p>The data to be returned by the third party job worker.</p>\n      ",
                "shape_name": "ThirdPartyJobData"
              },
              "nonce": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Use this number in an <xref linkend=\"AcknowledgeThirdPartyJob\"/> request.</simpara>\n      ",
                "documentation": "\n        <p>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Use this number in an <a>AcknowledgeThirdPartyJob</a> request.</p>\n      ",
                "shape_name": "Nonce",
                "min_length": 1,
                "max_length": 50
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details of the job, including any protected values defined for the\n            job.</simpara>\n      ",
            "documentation": "\n        <p>The details of the job, including any protected values defined for the\n            job.</p>\n      ",
            "shape_name": "ThirdPartyJobDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a GetThirdPartyJobDetails action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a GetThirdPartyJobDetails action.</p>\n      ",
        "shape_name": "GetThirdPartyJobDetailsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The client token was specified in an invalid format</simpara>\n      ",
          "documentation": "\n        <p>The client token was specified in an invalid format</p>\n      ",
          "shape_name": "InvalidClientTokenException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "InvalidJobException"
        }
      ],
      "documentation": "\n        <p>Requests the details of a job for a third party action. Only used for partner\n            actions.</p>\n        <important>\n            <p>When this API is called, AWS CodePipeline returns temporary credentials for the\n                Amazon S3 bucket used to store artifacts for the pipeline, if the action requires\n                access to that Amazon S3 bucket for input or output artifacts. Additionally, this\n                API returns any secret values defined for the action.</p>\n        </important>\n      "
    },
    "PutThirdPartyJobSuccessResult": {
      "name": "PutThirdPartyJobSuccessResult",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ID of the job that successfully completed. This is the same ID returned from\n            PollForThirdPartyJobs.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the job that successfully completed. This is the same ID returned from\n            PollForThirdPartyJobs.</p>\n      ",
            "required": true,
            "shape_name": "ThirdPartyJobId",
            "min_length": 1,
            "max_length": 512
          },
          "clientToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</simpara>\n      ",
            "documentation": "\n        <p>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</p>\n      ",
            "required": true,
            "shape_name": "ClientToken",
            "min_length": 1,
            "max_length": 256
          },
          "currentRevision": {
            "type": "structure",
            "members": {
              "revision": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The revision ID of the current version of an artifact.</simpara>\n      ",
                "documentation": "\n        <p>The revision ID of the current version of an artifact.</p>\n      ",
                "required": true,
                "shape_name": "Revision",
                "min_length": 1,
                "max_length": 1500
              },
              "changeIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The change identifier for the current revision.</simpara>\n      ",
                "documentation": "\n        <p>The change identifier for the current revision.</p>\n      ",
                "required": true,
                "shape_name": "RevisionChangeIdentifier",
                "min_length": 1,
                "max_length": 100
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</p>\n      ",
                "shape_name": "Time"
              },
              "revisionSummary": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The summary of the most recent revision of the artifact.</simpara>\n      ",
                "documentation": "\n        <p>The summary of the most recent revision of the artifact.</p>\n      ",
                "shape_name": "RevisionSummary",
                "min_length": 1,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about a current revision.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about a current revision.</p>\n      ",
            "shape_name": "CurrentRevision"
          },
          "continuationToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a\n            successful job provides to identify a partner action in progress. Future jobs will use\n            this token in order to identify the running instance of the action. It can be reused to\n            return additional information about the progress of the partner action. When the action\n            is complete, no continuation token should be supplied.</simpara>\n      ",
            "documentation": "\n        <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a\n            successful job provides to identify a partner action in progress. Future jobs will use\n            this token in order to identify the running instance of the action. It can be reused to\n            return additional information about the progress of the partner action. When the action\n            is complete, no continuation token should be supplied.</p>\n      ",
            "shape_name": "ContinuationToken",
            "min_length": 1,
            "max_length": 2048
          },
          "executionDetails": {
            "type": "structure",
            "members": {
              "summary": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The summary of the current status of the actions.</simpara>\n      ",
                "documentation": "\n        <p>The summary of the current status of the actions.</p>\n      ",
                "shape_name": "ExecutionSummary",
                "min_length": 1,
                "max_length": 2048
              },
              "externalExecutionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The system-generated unique ID of this action used to identify this job worker in\n            any external systems, such as AWS CodeDeploy.</simpara>\n      ",
                "documentation": "\n        <p>The system-generated unique ID of this action used to identify this job worker in\n            any external systems, such as AWS CodeDeploy.</p>\n      ",
                "shape_name": "ExecutionId",
                "min_length": 1,
                "max_length": 1500
              },
              "percentComplete": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The percentage of work completed on the action, represented on a scale of zero to\n            one hundred percent.</simpara>\n      ",
                "documentation": "\n        <p>The percentage of work completed on the action, represented on a scale of zero to\n            one hundred percent.</p>\n      ",
                "shape_name": "Percentage",
                "min_length": 0,
                "max_length": 100
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details of the actions taken and results produced on an artifact as it passes\n            through stages in the pipeline. </simpara>\n      ",
            "documentation": "\n        <p>The details of the actions taken and results produced on an artifact as it passes\n            through stages in the pipeline. </p>\n      ",
            "shape_name": "ExecutionDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutThirdPartyJobSuccessResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutThirdPartyJobSuccessResult action.</p>\n      ",
        "shape_name": "PutThirdPartyJobSuccessResultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job state was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified job state was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidJobStateException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The client token was specified in an invalid format</simpara>\n      ",
          "documentation": "\n        <p>The client token was specified in an invalid format</p>\n      ",
          "shape_name": "InvalidClientTokenException"
        }
      ],
      "documentation": "\n        <p>Represents the success of a third party job as returned to the pipeline by a job\n            worker. Only used for partner actions.</p>\n      "
    },
    "PutThirdPartyJobFailureResult": {
      "name": "PutThirdPartyJobFailureResult",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ID of the job that failed. This is the same ID returned from\n            PollForThirdPartyJobs.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the job that failed. This is the same ID returned from\n            PollForThirdPartyJobs.</p>\n      ",
            "required": true,
            "shape_name": "ThirdPartyJobId",
            "min_length": 1,
            "max_length": 512
          },
          "clientToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</simpara>\n      ",
            "documentation": "\n        <p>The clientToken portion of the clientId and clientToken pair used to verify that\n            the calling entity is allowed access to the job and its details.</p>\n      ",
            "required": true,
            "shape_name": "ClientToken",
            "min_length": 1,
            "max_length": 256
          },
          "failureDetails": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "JobFailed",
                  "ConfigurationError",
                  "PermissionError",
                  "RevisionOutOfSync",
                  "RevisionUnavailable",
                  "SystemUnavailable"
                ],
                "zonbookDocumentation": "\n        <simpara>The type of the failure.</simpara>\n      ",
                "documentation": "\n        <p>The type of the failure.</p>\n      ",
                "required": true,
                "shape_name": "FailureType"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The message about the failure.</simpara>\n      ",
                "documentation": "\n        <p>The message about the failure.</p>\n      ",
                "required": true,
                "shape_name": "Message",
                "min_length": 1,
                "max_length": 5000
              },
              "externalExecutionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The external ID of the run of the action that failed.</simpara>\n      ",
                "documentation": "\n        <p>The external ID of the run of the action that failed.</p>\n      ",
                "shape_name": "ExecutionId",
                "min_length": 1,
                "max_length": 1500
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about failure details.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about failure details.</p>\n      ",
            "required": true,
            "shape_name": "FailureDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutThirdPartyJobFailureResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutThirdPartyJobFailureResult action.</p>\n      ",
        "shape_name": "PutThirdPartyJobFailureResultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job state was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified job state was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidJobStateException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The client token was specified in an invalid format</simpara>\n      ",
          "documentation": "\n        <p>The client token was specified in an invalid format</p>\n      ",
          "shape_name": "InvalidClientTokenException"
        }
      ],
      "documentation": "\n        <p>Represents the failure of a third party job as returned to the pipeline by a job\n            worker. Only used for partner actions.</p>\n      "
    },
    "PollForJobs": {
      "name": "PollForJobs",
      "input": {
        "type": "structure",
        "members": {
          "actionTypeId": {
            "type": "structure",
            "members": {
              "category": {
                "type": "string",
                "enum": [
                  "Source",
                  "Build",
                  "Deploy",
                  "Test",
                  "Invoke",
                  "Approval"
                ],
                "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                "required": true,
                "shape_name": "ActionCategory"
              },
              "owner": {
                "type": "string",
                "enum": [
                  "AWS",
                  "ThirdParty",
                  "Custom"
                ],
                "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                "required": true,
                "shape_name": "ActionOwner"
              },
              "provider": {
                "type": "string",
                "pattern": "[0-9A-Za-z_-]+",
                "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                "required": true,
                "shape_name": "ActionProvider",
                "min_length": 1,
                "max_length": 25
              },
              "version": {
                "type": "string",
                "pattern": "[0-9A-Za-z_-]+",
                "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                "required": true,
                "shape_name": "Version",
                "min_length": 1,
                "max_length": 9
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
            "required": true,
            "shape_name": "ActionTypeId"
          },
          "maxBatchSize": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of jobs to return in a poll for jobs call.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of jobs to return in a poll for jobs call.</p>\n      ",
            "shape_name": "MaxBatchSize",
            "min_length": 1
          },
          "queryParam": {
            "type": "map",
            "zonbookDocumentation": "\n        <simpara>A map of property names and values. For an action type with no queryable\n            properties, this value must be null or an empty map. For an action type with a queryable\n            property, you must supply that property as a key in the map. Only jobs whose action\n            configuration matches the mapped value will be returned.</simpara>\n      ",
            "documentation": "\n        <p>A map of property names and values. For an action type with no queryable\n            properties, this value must be null or an empty map. For an action type with a queryable\n            property, you must supply that property as a key in the map. Only jobs whose action\n            configuration matches the mapped value will be returned.</p>\n      ",
            "shape_name": "QueryParamMap",
            "min_length": 0,
            "max_length": 1,
            "keys": {
              "type": "string",
              "shape_name": "ActionConfigurationKey",
              "documentation": null,
              "min_length": 1,
              "max_length": 50
            },
            "members": {
              "type": "string",
              "pattern": "[a-zA-Z0-9_-]+",
              "shape_name": "ActionConfigurationQueryableValue",
              "documentation": null,
              "min_length": 1,
              "max_length": 50
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PollForJobs action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PollForJobs action.</p>\n      ",
        "shape_name": "PollForJobsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "jobs": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the jobs to take action on.</simpara>\n      ",
            "documentation": "\n        <p>Information about the jobs to take action on.</p>\n      ",
            "shape_name": "JobList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                  "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job.</simpara>\n      ",
                  "documentation": "\n        <p>The unique system-generated ID of the job.</p>\n      ",
                  "shape_name": "JobId"
                },
                "data": {
                  "type": "structure",
                  "members": {
                    "actionTypeId": {
                      "type": "structure",
                      "members": {
                        "category": {
                          "type": "string",
                          "enum": [
                            "Source",
                            "Build",
                            "Deploy",
                            "Test",
                            "Invoke",
                            "Approval"
                          ],
                          "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                          "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                          "required": true,
                          "shape_name": "ActionCategory"
                        },
                        "owner": {
                          "type": "string",
                          "enum": [
                            "AWS",
                            "ThirdParty",
                            "Custom"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                          "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                          "required": true,
                          "shape_name": "ActionOwner"
                        },
                        "provider": {
                          "type": "string",
                          "pattern": "[0-9A-Za-z_-]+",
                          "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                          "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                          "required": true,
                          "shape_name": "ActionProvider",
                          "min_length": 1,
                          "max_length": 25
                        },
                        "version": {
                          "type": "string",
                          "pattern": "[0-9A-Za-z_-]+",
                          "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                          "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                          "required": true,
                          "shape_name": "Version",
                          "min_length": 1,
                          "max_length": 9
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
                      "shape_name": "ActionTypeId"
                    },
                    "actionConfiguration": {
                      "type": "structure",
                      "members": {
                        "configuration": {
                          "type": "map",
                          "zonbookDocumentation": "\n        <simpara>The configuration data for the action.</simpara>\n      ",
                          "documentation": "\n        <p>The configuration data for the action.</p>\n      ",
                          "shape_name": "ActionConfigurationMap",
                          "keys": {
                            "type": "string",
                            "shape_name": "ActionConfigurationKey",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 50
                          },
                          "members": {
                            "type": "string",
                            "shape_name": "ActionConfigurationValue",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 1000
                          }
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an action configuration.</p>\n      ",
                      "shape_name": "ActionConfiguration"
                    },
                    "pipelineContext": {
                      "type": "structure",
                      "members": {
                        "pipelineName": {
                          "type": "string",
                          "pattern": "[A-Za-z0-9.@\\-_]+",
                          "zonbookDocumentation": "\n        <simpara>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</simpara>\n      ",
                          "documentation": "\n        <p>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</p>\n      ",
                          "shape_name": "PipelineName",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "stage": {
                          "type": "structure",
                          "members": {
                            "name": {
                              "type": "string",
                              "pattern": "[A-Za-z0-9.@\\-_]+",
                              "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                              "documentation": "\n        <p>The name of the stage.</p>\n      ",
                              "shape_name": "StageName",
                              "min_length": 1,
                              "max_length": 100
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The stage of the pipeline.</simpara>\n      ",
                          "documentation": "\n        <p>The stage of the pipeline.</p>\n      ",
                          "shape_name": "StageContext"
                        },
                        "action": {
                          "type": "structure",
                          "members": {
                            "name": {
                              "type": "string",
                              "pattern": "[A-Za-z0-9.@\\-_]+",
                              "zonbookDocumentation": "\n        <simpara>The name of the action within the context of a job.</simpara>\n      ",
                              "documentation": "\n        <p>The name of the action within the context of a job.</p>\n      ",
                              "shape_name": "ActionName",
                              "min_length": 1,
                              "max_length": 100
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The context of an action to a job worker within the stage of a pipeline.</simpara>\n      ",
                          "documentation": "\n        <p>The context of an action to a job worker within the stage of a pipeline.</p>\n      ",
                          "shape_name": "ActionContext"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about a pipeline to a job worker.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about a pipeline to a job worker.</p>\n      ",
                      "shape_name": "PipelineContext"
                    },
                    "inputArtifacts": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The artifact supplied to the job.</simpara>\n      ",
                      "documentation": "\n        <p>The artifact supplied to the job.</p>\n      ",
                      "shape_name": "ArtifactList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9_\\-]+",
                            "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                            "documentation": "\n        <p>The artifact's name.</p>\n      ",
                            "shape_name": "ArtifactName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "revision": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                            "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                            "shape_name": "Revision",
                            "min_length": 1,
                            "max_length": 1500
                          },
                          "location": {
                            "type": "structure",
                            "members": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "S3"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                                "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                                "shape_name": "ArtifactLocationType"
                              },
                              "s3Location": {
                                "type": "structure",
                                "members": {
                                  "bucketName": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                    "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                    "required": true,
                                    "shape_name": "S3BucketName"
                                  },
                                  "objectKey": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                    "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                    "required": true,
                                    "shape_name": "S3ObjectKey"
                                  }
                                },
                                "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                                "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                                "shape_name": "S3ArtifactLocation"
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                            "shape_name": "ArtifactLocation"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                        "shape_name": "Artifact"
                      }
                    },
                    "outputArtifacts": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The output of the job.</simpara>\n      ",
                      "documentation": "\n        <p>The output of the job.</p>\n      ",
                      "shape_name": "ArtifactList",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[a-zA-Z0-9_\\-]+",
                            "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                            "documentation": "\n        <p>The artifact's name.</p>\n      ",
                            "shape_name": "ArtifactName",
                            "min_length": 1,
                            "max_length": 100
                          },
                          "revision": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                            "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                            "shape_name": "Revision",
                            "min_length": 1,
                            "max_length": 1500
                          },
                          "location": {
                            "type": "structure",
                            "members": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "S3"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                                "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                                "shape_name": "ArtifactLocationType"
                              },
                              "s3Location": {
                                "type": "structure",
                                "members": {
                                  "bucketName": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                    "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                    "required": true,
                                    "shape_name": "S3BucketName"
                                  },
                                  "objectKey": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                    "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                    "required": true,
                                    "shape_name": "S3ObjectKey"
                                  }
                                },
                                "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                                "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                                "shape_name": "S3ArtifactLocation"
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                            "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                            "shape_name": "ArtifactLocation"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                        "shape_name": "Artifact"
                      }
                    },
                    "artifactCredentials": {
                      "type": "structure",
                      "members": {
                        "accessKeyId": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The access key for the session.</simpara>\n      ",
                          "documentation": "\n        <p>The access key for the session.</p>\n      ",
                          "required": true,
                          "shape_name": "AccessKeyId"
                        },
                        "secretAccessKey": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The secret access key for the session.</simpara>\n      ",
                          "documentation": "\n        <p>The secret access key for the session.</p>\n      ",
                          "required": true,
                          "shape_name": "SecretAccessKey"
                        },
                        "sessionToken": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The token for the session.</simpara>\n      ",
                          "documentation": "\n        <p>The token for the session.</p>\n      ",
                          "required": true,
                          "shape_name": "SessionToken"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline.</simpara>\n      ",
                      "documentation": "\n        <p>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline.</p>\n      ",
                      "sensitive": true,
                      "shape_name": "AWSSessionCredentials"
                    },
                    "continuationToken": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</p>\n      ",
                      "shape_name": "ContinuationToken",
                      "min_length": 1,
                      "max_length": 2048
                    },
                    "encryptionKey": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                          "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyId",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "KMS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                          "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                          "required": true,
                          "shape_name": "EncryptionKeyType"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about the key used to encrypt data in the artifact store,\n            such as an AWS Key Management Service (AWS KMS) key. </simpara>\n      ",
                      "documentation": "\n        <p>Represents information about the key used to encrypt data in the artifact store,\n            such as an AWS Key Management Service (AWS KMS) key. </p>\n      ",
                      "shape_name": "EncryptionKey"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Additional data about a job.</simpara>\n      ",
                  "documentation": "\n        <p>Additional data about a job.</p>\n      ",
                  "shape_name": "JobData"
                },
                "nonce": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Use this number in an <xref linkend=\"AcknowledgeJob\"/> request.</simpara>\n      ",
                  "documentation": "\n        <p>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Use this number in an <a>AcknowledgeJob</a> request.</p>\n      ",
                  "shape_name": "Nonce",
                  "min_length": 1,
                  "max_length": 50
                },
                "accountId": {
                  "type": "string",
                  "pattern": "[0-9]{12}",
                  "zonbookDocumentation": "\n        <simpara>The ID of the AWS account to use when performing the job.</simpara>\n      ",
                  "documentation": "\n        <p>The ID of the AWS account to use when performing the job.</p>\n      ",
                  "shape_name": "AccountId"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents information about a job.</simpara>\n      ",
              "documentation": "\n        <p>Represents information about a job.</p>\n      ",
              "shape_name": "Job"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a PollForJobs action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a PollForJobs action.</p>\n      ",
        "shape_name": "PollForJobsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action type cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified action type cannot be found.</p>\n      ",
          "shape_name": "ActionTypeNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns information about any jobs for AWS CodePipeline to act upon. PollForJobs is\n            only valid for action types with \"Custom\" in the owner field. If the action type\n            contains \"AWS\" or \"ThirdParty\" in the owner field, the PollForJobs action returns an\n            error.</p>\n        <important>\n            <p>When this API is called, AWS CodePipeline returns temporary credentials for the\n                Amazon S3 bucket used to store artifacts for the pipeline, if the action requires\n                access to that Amazon S3 bucket for input or output artifacts. Additionally, this\n                API returns any secret values defined for the action.</p>\n        </important>\n        \n      "
    },
    "AcknowledgeJob": {
      "name": "AcknowledgeJob",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job for which you want to confirm\n            receipt.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID of the job for which you want to confirm\n            receipt.</p>\n      ",
            "required": true,
            "shape_name": "JobId"
          },
          "nonce": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Get this number from the response of the\n                <xref linkend=\"PollForJobs\"/> request that returned this job.</simpara>\n      ",
            "documentation": "\n        <p>A system-generated random number that AWS CodePipeline uses to ensure that the job\n            is being worked on by only one job worker. Get this number from the response of the\n                <a>PollForJobs</a> request that returned this job.</p>\n      ",
            "required": true,
            "shape_name": "Nonce",
            "min_length": 1,
            "max_length": 50
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of an AcknowledgeJob action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of an AcknowledgeJob action.</p>\n      ",
        "shape_name": "AcknowledgeJobInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "Created",
              "Queued",
              "Dispatched",
              "InProgress",
              "TimedOut",
              "Succeeded",
              "Failed"
            ],
            "zonbookDocumentation": "\n        <simpara>Whether the job worker has received the specified job.</simpara>\n      ",
            "documentation": "\n        <p>Whether the job worker has received the specified job.</p>\n      ",
            "shape_name": "JobStatus"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of an AcknowledgeJob action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of an AcknowledgeJob action.</p>\n      ",
        "shape_name": "AcknowledgeJobOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified nonce was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified nonce was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidNonceException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns information about a specified job and whether that job has been received by\n            the job worker. Only used for custom actions.</p>\n        \n      "
    },
    "GetJobDetails": {
      "name": "GetJobDetails",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID for the job.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID for the job.</p>\n      ",
            "required": true,
            "shape_name": "JobId"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a GetJobDetails action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a GetJobDetails action.</p>\n      ",
        "shape_name": "GetJobDetailsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "jobDetails": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
                "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job.</simpara>\n      ",
                "documentation": "\n        <p>The unique system-generated ID of the job.</p>\n      ",
                "shape_name": "JobId"
              },
              "data": {
                "type": "structure",
                "members": {
                  "actionTypeId": {
                    "type": "structure",
                    "members": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "Source",
                          "Build",
                          "Deploy",
                          "Test",
                          "Invoke",
                          "Approval"
                        ],
                        "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                        "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionCategory"
                      },
                      "owner": {
                        "type": "string",
                        "enum": [
                          "AWS",
                          "ThirdParty",
                          "Custom"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                        "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionOwner"
                      },
                      "provider": {
                        "type": "string",
                        "pattern": "[0-9A-Za-z_-]+",
                        "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                        "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionProvider",
                        "min_length": 1,
                        "max_length": 25
                      },
                      "version": {
                        "type": "string",
                        "pattern": "[0-9A-Za-z_-]+",
                        "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                        "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                        "required": true,
                        "shape_name": "Version",
                        "min_length": 1,
                        "max_length": 9
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
                    "shape_name": "ActionTypeId"
                  },
                  "actionConfiguration": {
                    "type": "structure",
                    "members": {
                      "configuration": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <simpara>The configuration data for the action.</simpara>\n      ",
                        "documentation": "\n        <p>The configuration data for the action.</p>\n      ",
                        "shape_name": "ActionConfigurationMap",
                        "keys": {
                          "type": "string",
                          "shape_name": "ActionConfigurationKey",
                          "documentation": null,
                          "min_length": 1,
                          "max_length": 50
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "ActionConfigurationValue",
                          "documentation": null,
                          "min_length": 1,
                          "max_length": 1000
                        }
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about an action configuration.</p>\n      ",
                    "shape_name": "ActionConfiguration"
                  },
                  "pipelineContext": {
                    "type": "structure",
                    "members": {
                      "pipelineName": {
                        "type": "string",
                        "pattern": "[A-Za-z0-9.@\\-_]+",
                        "zonbookDocumentation": "\n        <simpara>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</simpara>\n      ",
                        "documentation": "\n        <p>The name of the pipeline. This is a user-specified value. Pipeline names must be\n            unique across all pipeline names under an Amazon Web Services account.</p>\n      ",
                        "shape_name": "PipelineName",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "stage": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The name of the stage.</simpara>\n      ",
                            "documentation": "\n        <p>The name of the stage.</p>\n      ",
                            "shape_name": "StageName",
                            "min_length": 1,
                            "max_length": 100
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The stage of the pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>The stage of the pipeline.</p>\n      ",
                        "shape_name": "StageContext"
                      },
                      "action": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "[A-Za-z0-9.@\\-_]+",
                            "zonbookDocumentation": "\n        <simpara>The name of the action within the context of a job.</simpara>\n      ",
                            "documentation": "\n        <p>The name of the action within the context of a job.</p>\n      ",
                            "shape_name": "ActionName",
                            "min_length": 1,
                            "max_length": 100
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The context of an action to a job worker within the stage of a pipeline.</simpara>\n      ",
                        "documentation": "\n        <p>The context of an action to a job worker within the stage of a pipeline.</p>\n      ",
                        "shape_name": "ActionContext"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about a pipeline to a job worker.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about a pipeline to a job worker.</p>\n      ",
                    "shape_name": "PipelineContext"
                  },
                  "inputArtifacts": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The artifact supplied to the job.</simpara>\n      ",
                    "documentation": "\n        <p>The artifact supplied to the job.</p>\n      ",
                    "shape_name": "ArtifactList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z0-9_\\-]+",
                          "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's name.</p>\n      ",
                          "shape_name": "ArtifactName",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "revision": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                          "shape_name": "Revision",
                          "min_length": 1,
                          "max_length": 1500
                        },
                        "location": {
                          "type": "structure",
                          "members": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "S3"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                              "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                              "shape_name": "ArtifactLocationType"
                            },
                            "s3Location": {
                              "type": "structure",
                              "members": {
                                "bucketName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3BucketName"
                                },
                                "objectKey": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3ObjectKey"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                              "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                              "shape_name": "S3ArtifactLocation"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                          "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                          "shape_name": "ArtifactLocation"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                      "shape_name": "Artifact"
                    }
                  },
                  "outputArtifacts": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The output of the job.</simpara>\n      ",
                    "documentation": "\n        <p>The output of the job.</p>\n      ",
                    "shape_name": "ArtifactList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "[a-zA-Z0-9_\\-]+",
                          "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's name.</p>\n      ",
                          "shape_name": "ArtifactName",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "revision": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</simpara>\n      ",
                          "documentation": "\n        <p>The artifact's revision ID. Depending on the type of object, this could be a commit\n            ID (GitHub) or a revision ID (Amazon S3).</p>\n      ",
                          "shape_name": "Revision",
                          "min_length": 1,
                          "max_length": 1500
                        },
                        "location": {
                          "type": "structure",
                          "members": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "S3"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The type of artifact in the location.</simpara>\n      ",
                              "documentation": "\n        <p>The type of artifact in the location.</p>\n      ",
                              "shape_name": "ArtifactLocationType"
                            },
                            "s3Location": {
                              "type": "structure",
                              "members": {
                                "bucketName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The name of the Amazon S3 bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The name of the Amazon S3 bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3BucketName"
                                },
                                "objectKey": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</simpara>\n      ",
                                  "documentation": "\n        <p>The key of the object in the Amazon S3 bucket, which uniquely identifies the object\n            in the bucket.</p>\n      ",
                                  "required": true,
                                  "shape_name": "S3ObjectKey"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The Amazon S3 bucket that contains the artifact.</simpara>\n      ",
                              "documentation": "\n        <p>The Amazon S3 bucket that contains the artifact.</p>\n      ",
                              "shape_name": "S3ArtifactLocation"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>The location of an artifact.</simpara>\n      ",
                          "documentation": "\n        <p>The location of an artifact.</p>\n      ",
                          "shape_name": "ArtifactLocation"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>Represents information about an artifact that will be worked upon by actions in the\n            pipeline.</p>\n      ",
                      "shape_name": "Artifact"
                    }
                  },
                  "artifactCredentials": {
                    "type": "structure",
                    "members": {
                      "accessKeyId": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The access key for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The access key for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "AccessKeyId"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The secret access key for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The secret access key for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "SecretAccessKey"
                      },
                      "sessionToken": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The token for the session.</simpara>\n      ",
                        "documentation": "\n        <p>The token for the session.</p>\n      ",
                        "required": true,
                        "shape_name": "SessionToken"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline.</simpara>\n      ",
                    "documentation": "\n        <p>Represents an AWS session credentials object. These credentials are temporary\n            credentials that are issued by AWS Secure Token Service (STS). They can be used to\n            access input and output artifacts in the Amazon S3 bucket used to store artifact for the\n            pipeline in AWS CodePipeline.</p>\n      ",
                    "sensitive": true,
                    "shape_name": "AWSSessionCredentials"
                  },
                  "continuationToken": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</simpara>\n      ",
                    "documentation": "\n        <p>A system-generated token, such as a AWS CodeDeploy deployment ID, that a job\n            requires in order to continue the job asynchronously.</p>\n      ",
                    "shape_name": "ContinuationToken",
                    "min_length": 1,
                    "max_length": 2048
                  },
                  "encryptionKey": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</simpara>\n      ",
                        "documentation": "\n        <p>The ID used to identify the key. For an AWS KMS key, this is the key ID or key\n            ARN.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyId",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "KMS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</simpara>\n      ",
                        "documentation": "\n        <p>The type of encryption key, such as an AWS Key Management Service (AWS KMS) key.\n            When creating or updating a pipeline, the value must be set to 'KMS'.</p>\n      ",
                        "required": true,
                        "shape_name": "EncryptionKeyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about the key used to encrypt data in the artifact store,\n            such as an AWS Key Management Service (AWS KMS) key. </simpara>\n      ",
                    "documentation": "\n        <p>Represents information about the key used to encrypt data in the artifact store,\n            such as an AWS Key Management Service (AWS KMS) key. </p>\n      ",
                    "shape_name": "EncryptionKey"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents additional information about a job required for a job worker to complete\n            the job. </simpara>\n      ",
                "documentation": "\n        <p>Represents additional information about a job required for a job worker to complete\n            the job. </p>\n      ",
                "shape_name": "JobData"
              },
              "accountId": {
                "type": "string",
                "pattern": "[0-9]{12}",
                "zonbookDocumentation": "\n        <simpara>The AWS account ID associated with the job.</simpara>\n      ",
                "documentation": "\n        <p>The AWS account ID associated with the job.</p>\n      ",
                "shape_name": "AccountId"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details of the job.</simpara>\n        <note>\n            <simpara>If AWSSessionCredentials is used, a long-running job can call GetJobDetails\n                again to obtain new credentials.</simpara>\n        </note>\n      ",
            "documentation": "\n        <p>The details of the job.</p>\n        <note>\n            <p>If AWSSessionCredentials is used, a long-running job can call GetJobDetails\n                again to obtain new credentials.</p>\n        </note>\n      ",
            "shape_name": "JobDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a GetJobDetails action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a GetJobDetails action.</p>\n      ",
        "shape_name": "GetJobDetailsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        }
      ],
      "documentation": "\n        <p>Returns information about a job. Only used for custom actions.</p>\n        <important>\n            <p>When this API is called, AWS CodePipeline returns temporary credentials for the\n                Amazon S3 bucket used to store artifacts for the pipeline, if the action requires\n                access to that Amazon S3 bucket for input or output artifacts. Additionally, this\n                API returns any secret values defined for the action.</p>\n        </important>\n        \n      "
    },
    "PutJobSuccessResult": {
      "name": "PutJobSuccessResult",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job that succeeded. This is the same ID\n            returned from PollForJobs.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID of the job that succeeded. This is the same ID\n            returned from PollForJobs.</p>\n      ",
            "required": true,
            "shape_name": "JobId"
          },
          "currentRevision": {
            "type": "structure",
            "members": {
              "revision": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The revision ID of the current version of an artifact.</simpara>\n      ",
                "documentation": "\n        <p>The revision ID of the current version of an artifact.</p>\n      ",
                "required": true,
                "shape_name": "Revision",
                "min_length": 1,
                "max_length": 1500
              },
              "changeIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The change identifier for the current revision.</simpara>\n      ",
                "documentation": "\n        <p>The change identifier for the current revision.</p>\n      ",
                "required": true,
                "shape_name": "RevisionChangeIdentifier",
                "min_length": 1,
                "max_length": 100
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time when the most recent revision of the artifact was created, in\n            timestamp format.</p>\n      ",
                "shape_name": "Time"
              },
              "revisionSummary": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The summary of the most recent revision of the artifact.</simpara>\n      ",
                "documentation": "\n        <p>The summary of the most recent revision of the artifact.</p>\n      ",
                "shape_name": "RevisionSummary",
                "min_length": 1,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n        <simpara>The ID of the current revision of the artifact successfully worked upon by the\n            job.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the current revision of the artifact successfully worked upon by the\n            job.</p>\n      ",
            "shape_name": "CurrentRevision"
          },
          "continuationToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a\n            successful job provides to identify a custom action in progress. Future jobs will use\n            this token in order to identify the running instance of the action. It can be reused to\n            return additional information about the progress of the custom action. When the action\n            is complete, no continuation token should be supplied.</simpara>\n      ",
            "documentation": "\n        <p>A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a\n            successful job provides to identify a custom action in progress. Future jobs will use\n            this token in order to identify the running instance of the action. It can be reused to\n            return additional information about the progress of the custom action. When the action\n            is complete, no continuation token should be supplied.</p>\n      ",
            "shape_name": "ContinuationToken",
            "min_length": 1,
            "max_length": 2048
          },
          "executionDetails": {
            "type": "structure",
            "members": {
              "summary": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The summary of the current status of the actions.</simpara>\n      ",
                "documentation": "\n        <p>The summary of the current status of the actions.</p>\n      ",
                "shape_name": "ExecutionSummary",
                "min_length": 1,
                "max_length": 2048
              },
              "externalExecutionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The system-generated unique ID of this action used to identify this job worker in\n            any external systems, such as AWS CodeDeploy.</simpara>\n      ",
                "documentation": "\n        <p>The system-generated unique ID of this action used to identify this job worker in\n            any external systems, such as AWS CodeDeploy.</p>\n      ",
                "shape_name": "ExecutionId",
                "min_length": 1,
                "max_length": 1500
              },
              "percentComplete": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The percentage of work completed on the action, represented on a scale of zero to\n            one hundred percent.</simpara>\n      ",
                "documentation": "\n        <p>The percentage of work completed on the action, represented on a scale of zero to\n            one hundred percent.</p>\n      ",
                "shape_name": "Percentage",
                "min_length": 0,
                "max_length": 100
              }
            },
            "zonbookDocumentation": "\n        <simpara>The execution details of the successful job, such as the actions taken by the job\n            worker.</simpara>\n      ",
            "documentation": "\n        <p>The execution details of the successful job, such as the actions taken by the job\n            worker.</p>\n      ",
            "shape_name": "ExecutionDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutJobSuccessResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutJobSuccessResult action.</p>\n      ",
        "shape_name": "PutJobSuccessResultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job state was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified job state was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidJobStateException"
        }
      ],
      "documentation": "\n        <p>Represents the success of a job as returned to the pipeline by a job worker. Only\n            used for custom actions.</p>\n      "
    },
    "PutJobFailureResult": {
      "name": "PutJobFailureResult",
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The unique system-generated ID of the job that failed. This is the same ID returned\n            from PollForJobs.</simpara>\n      ",
            "documentation": "\n        <p>The unique system-generated ID of the job that failed. This is the same ID returned\n            from PollForJobs.</p>\n      ",
            "required": true,
            "shape_name": "JobId"
          },
          "failureDetails": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "JobFailed",
                  "ConfigurationError",
                  "PermissionError",
                  "RevisionOutOfSync",
                  "RevisionUnavailable",
                  "SystemUnavailable"
                ],
                "zonbookDocumentation": "\n        <simpara>The type of the failure.</simpara>\n      ",
                "documentation": "\n        <p>The type of the failure.</p>\n      ",
                "required": true,
                "shape_name": "FailureType"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The message about the failure.</simpara>\n      ",
                "documentation": "\n        <p>The message about the failure.</p>\n      ",
                "required": true,
                "shape_name": "Message",
                "min_length": 1,
                "max_length": 5000
              },
              "externalExecutionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The external ID of the run of the action that failed.</simpara>\n      ",
                "documentation": "\n        <p>The external ID of the run of the action that failed.</p>\n      ",
                "shape_name": "ExecutionId",
                "min_length": 1,
                "max_length": 1500
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details about the failure of a job.</simpara>\n      ",
            "documentation": "\n        <p>The details about the failure of a job.</p>\n      ",
            "required": true,
            "shape_name": "FailureDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutJobFailureResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutJobFailureResult action.</p>\n      ",
        "shape_name": "PutJobFailureResultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job was specified in an invalid format or cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified job was specified in an invalid format or cannot be found.</p>\n      ",
          "shape_name": "JobNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified job state was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified job state was specified in an invalid format.</p>\n      ",
          "shape_name": "InvalidJobStateException"
        }
      ],
      "documentation": "\n        <p>Represents the failure of a job as returned to the pipeline by a job worker. Only\n            used for custom actions.</p>\n      "
    },
    "PutActionRevision": {
      "name": "PutActionRevision",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline that will start processing the revision to the\n            source.</simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline that will start processing the revision to the\n            source.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "stageName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the stage that contains the action that will act upon the\n            revision.</simpara>\n      ",
            "documentation": "\n        <p>The name of the stage that contains the action that will act upon the\n            revision.</p>\n      ",
            "required": true,
            "shape_name": "StageName",
            "min_length": 1,
            "max_length": 100
          },
          "actionName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the action that will process the revision.</simpara>\n      ",
            "documentation": "\n        <p>The name of the action that will process the revision.</p>\n      ",
            "required": true,
            "shape_name": "ActionName",
            "min_length": 1,
            "max_length": 100
          },
          "actionRevision": {
            "type": "structure",
            "members": {
              "revisionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The system-generated unique ID that identifies the revision number of the\n            action.</simpara>\n      ",
                "documentation": "\n        <p>The system-generated unique ID that identifies the revision number of the\n            action.</p>\n      ",
                "required": true,
                "shape_name": "Revision",
                "min_length": 1,
                "max_length": 1500
              },
              "revisionChangeId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The unique identifier of the change that set the state to this revision, for\n            example a deployment ID or timestamp.</simpara>\n      ",
                "documentation": "\n        <p>The unique identifier of the change that set the state to this revision, for\n            example a deployment ID or timestamp.</p>\n      ",
                "required": true,
                "shape_name": "RevisionChangeIdentifier",
                "min_length": 1,
                "max_length": 100
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time when the most recent version of the action was created, in\n            timestamp format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time when the most recent version of the action was created, in\n            timestamp format.</p>\n      ",
                "required": true,
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about the version (or revision) of an action.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about the version (or revision) of an action.</p>\n      ",
            "required": true,
            "shape_name": "ActionRevision"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutActionRevision action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutActionRevision action.</p>\n      ",
        "shape_name": "PutActionRevisionInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "newRevision": {
            "type": "boolean",
            "zonbookDocumentation": "\n        <simpara>Indicates whether the artifact revision was previously used in an execution of the\n            specified pipeline.</simpara>\n      ",
            "documentation": "\n        <p>Indicates whether the artifact revision was previously used in an execution of the\n            specified pipeline.</p>\n      ",
            "shape_name": "Boolean"
          },
          "pipelineExecutionId": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The ID of the current workflow state of the pipeline.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the current workflow state of the pipeline.</p>\n      ",
            "shape_name": "PipelineExecutionId"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a PutActionRevision action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a PutActionRevision action.</p>\n      ",
        "shape_name": "PutActionRevisionOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "StageNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified action cannot be found.</p>\n      ",
          "shape_name": "ActionNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Provides information to AWS CodePipeline about new revisions to a source.</p>\n        \n      "
    },
    "PutApprovalResult": {
      "name": "PutApprovalResult",
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the pipeline that contains the action. </simpara>\n      ",
            "documentation": "\n        <p>The name of the pipeline that contains the action. </p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 100
          },
          "stageName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the stage that contains the action.</simpara>\n      ",
            "documentation": "\n        <p>The name of the stage that contains the action.</p>\n      ",
            "required": true,
            "shape_name": "StageName",
            "min_length": 1,
            "max_length": 100
          },
          "actionName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the action for which approval is requested.</simpara>\n      ",
            "documentation": "\n        <p>The name of the action for which approval is requested.</p>\n      ",
            "required": true,
            "shape_name": "ActionName",
            "min_length": 1,
            "max_length": 100
          },
          "result": {
            "type": "structure",
            "members": {
              "summary": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The summary of the current status of the approval request.</simpara>\n      ",
                "documentation": "\n        <p>The summary of the current status of the approval request.</p>\n      ",
                "required": true,
                "shape_name": "ApprovalSummary",
                "min_length": 0,
                "max_length": 512
              },
              "status": {
                "type": "string",
                "enum": [
                  "Approved",
                  "Rejected"
                ],
                "zonbookDocumentation": "\n        <simpara>The response submitted by a reviewer assigned to an approval action\n            request.</simpara>\n      ",
                "documentation": "\n        <p>The response submitted by a reviewer assigned to an approval action\n            request.</p>\n      ",
                "required": true,
                "shape_name": "ApprovalStatus"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents information about the result of the approval request.</simpara>\n      ",
            "documentation": "\n        <p>Represents information about the result of the approval request.</p>\n      ",
            "required": true,
            "shape_name": "ApprovalResult"
          },
          "token": {
            "type": "string",
            "pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
            "zonbookDocumentation": "\n        <simpara>The system-generated token used to identify a unique approval request. The token\n            for each open approval request can be obtained using the <xref linkend=\"GetPipelineState\"/> action and is used to validate that the approval\n            request corresponding to this token is still valid.</simpara>\n      ",
            "documentation": "\n        <p>The system-generated token used to identify a unique approval request. The token\n            for each open approval request can be obtained using the <a>GetPipelineState</a> action and is used to validate that the approval\n            request corresponding to this token is still valid.</p>\n      ",
            "required": true,
            "shape_name": "ApprovalToken"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a PutApprovalResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a PutApprovalResult action.</p>\n      ",
        "shape_name": "PutApprovalResultInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "approvedAt": {
            "type": "timestamp",
            "zonbookDocumentation": "\n        <simpara>The timestamp showing when the approval or rejection was submitted.</simpara>\n      ",
            "documentation": "\n        <p>The timestamp showing when the approval or rejection was submitted.</p>\n      ",
            "shape_name": "Timestamp"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a PutApprovalResult action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a PutApprovalResult action.</p>\n      ",
        "shape_name": "PutApprovalResultOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The approval request already received a response or has expired.</simpara>\n      ",
          "documentation": "\n        <p>The approval request already received a response or has expired.</p>\n      ",
          "shape_name": "InvalidApprovalTokenException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The approval action has already been approved or rejected.</simpara>\n      ",
          "documentation": "\n        <p>The approval action has already been approved or rejected.</p>\n      ",
          "shape_name": "ApprovalAlreadyCompletedException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified stage was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified stage was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "StageNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified action cannot be found.</simpara>\n      ",
          "documentation": "\n        <p>The specified action cannot be found.</p>\n      ",
          "shape_name": "ActionNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Provides the response to a manual approval request to AWS CodePipeline. Valid\n            responses include Approved and Rejected.</p>\n        \n      "
    },
    "ListActionTypes": {
      "name": "ListActionTypes",
      "input": {
        "type": "structure",
        "members": {
          "actionOwnerFilter": {
            "type": "string",
            "enum": [
              "AWS",
              "ThirdParty",
              "Custom"
            ],
            "zonbookDocumentation": "\n        <simpara>Filters the list of action types to those created by a specified entity.</simpara>\n      ",
            "documentation": "\n        <p>Filters the list of action types to those created by a specified entity.</p>\n      ",
            "shape_name": "ActionOwner"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous list action types call, which can\n            be used to return the next set of action types in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous list action types call, which can\n            be used to return the next set of action types in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a ListActionTypes action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a ListActionTypes action.</p>\n      ",
        "shape_name": "ListActionTypesInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "actionTypes": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Provides details of the action types.</simpara>\n      ",
            "documentation": "\n        <p>Provides details of the action types.</p>\n      ",
            "required": true,
            "shape_name": "ActionTypeList",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "structure",
                  "members": {
                    "category": {
                      "type": "string",
                      "enum": [
                        "Source",
                        "Build",
                        "Deploy",
                        "Test",
                        "Invoke",
                        "Approval"
                      ],
                      "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                      "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                      "required": true,
                      "shape_name": "ActionCategory"
                    },
                    "owner": {
                      "type": "string",
                      "enum": [
                        "AWS",
                        "ThirdParty",
                        "Custom"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                      "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                      "required": true,
                      "shape_name": "ActionOwner"
                    },
                    "provider": {
                      "type": "string",
                      "pattern": "[0-9A-Za-z_-]+",
                      "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                      "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                      "required": true,
                      "shape_name": "ActionProvider",
                      "min_length": 1,
                      "max_length": 25
                    },
                    "version": {
                      "type": "string",
                      "pattern": "[0-9A-Za-z_-]+",
                      "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                      "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                      "required": true,
                      "shape_name": "Version",
                      "min_length": 1,
                      "max_length": 9
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
                  "required": true,
                  "shape_name": "ActionTypeId"
                },
                "settings": {
                  "type": "structure",
                  "members": {
                    "thirdPartyConfigurationUrl": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</simpara>\n      ",
                      "documentation": "\n        <p>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</p>\n      ",
                      "shape_name": "Url",
                      "min_length": 1,
                      "max_length": 2048
                    },
                    "entityUrlTemplate": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</p>\n      ",
                      "shape_name": "UrlTemplate",
                      "min_length": 1,
                      "max_length": 2048
                    },
                    "executionUrlTemplate": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</simpara>\n      ",
                      "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</p>\n      ",
                      "shape_name": "UrlTemplate",
                      "min_length": 1,
                      "max_length": 2048
                    },
                    "revisionUrlTemplate": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</simpara>\n      ",
                      "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</p>\n      ",
                      "shape_name": "UrlTemplate",
                      "min_length": 1,
                      "max_length": 2048
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The settings for the action type.</simpara>\n      ",
                  "documentation": "\n        <p>The settings for the action type.</p>\n      ",
                  "shape_name": "ActionTypeSettings"
                },
                "actionConfigurationProperties": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>The configuration properties for the action type.</simpara>\n      ",
                  "documentation": "\n        <p>The configuration properties for the action type.</p>\n      ",
                  "shape_name": "ActionConfigurationPropertyList",
                  "max_length": 10,
                  "members": {
                    "type": "structure",
                    "members": {
                      "name": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The name of the action configuration property.</simpara>\n      ",
                        "documentation": "\n        <p>The name of the action configuration property.</p>\n      ",
                        "required": true,
                        "shape_name": "ActionConfigurationKey",
                        "min_length": 1,
                        "max_length": 50
                      },
                      "required": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a required value.</simpara>\n      ",
                        "documentation": "\n        <p>Whether the configuration property is a required value.</p>\n      ",
                        "required": true,
                        "shape_name": "Boolean"
                      },
                      "key": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a key.</simpara>\n      ",
                        "documentation": "\n        <p>Whether the configuration property is a key.</p>\n      ",
                        "required": true,
                        "shape_name": "Boolean"
                      },
                      "secret": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n        <simpara>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</simpara>\n        <simpara>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</simpara>\n      ",
                        "documentation": "\n        <p>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</p>\n        <p>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</p>\n      ",
                        "required": true,
                        "shape_name": "Boolean"
                      },
                      "queryable": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n        <simpara>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</simpara>\n        <simpara>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</simpara>\n      ",
                        "documentation": "\n        <p>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</p>\n        <p>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</p>\n      ",
                        "shape_name": "Boolean"
                      },
                      "description": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The description of the action configuration property that will be displayed to\n            users.</simpara>\n      ",
                        "documentation": "\n        <p>The description of the action configuration property that will be displayed to\n            users.</p>\n      ",
                        "shape_name": "Description",
                        "min_length": 1,
                        "max_length": 160
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "String",
                          "Number",
                          "Boolean"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of the configuration property.</simpara>\n      ",
                        "documentation": "\n        <p>The type of the configuration property.</p>\n      ",
                        "shape_name": "ActionConfigurationPropertyType"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration property.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about an action configuration property.</p>\n      ",
                    "shape_name": "ActionConfigurationProperty"
                  }
                },
                "inputArtifactDetails": {
                  "type": "structure",
                  "members": {
                    "minimumCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                      "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                      "required": true,
                      "shape_name": "MinimumArtifactCount",
                      "min_length": 0,
                      "max_length": 5
                    },
                    "maximumCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                      "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                      "required": true,
                      "shape_name": "MaximumArtifactCount",
                      "min_length": 0,
                      "max_length": 5
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The details of the input artifact for the action, such as its commit ID.</simpara>\n      ",
                  "documentation": "\n        <p>The details of the input artifact for the action, such as its commit ID.</p>\n      ",
                  "required": true,
                  "shape_name": "ArtifactDetails"
                },
                "outputArtifactDetails": {
                  "type": "structure",
                  "members": {
                    "minimumCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                      "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                      "required": true,
                      "shape_name": "MinimumArtifactCount",
                      "min_length": 0,
                      "max_length": 5
                    },
                    "maximumCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                      "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                      "required": true,
                      "shape_name": "MaximumArtifactCount",
                      "min_length": 0,
                      "max_length": 5
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The details of the output artifact of the action, such as its commit ID.</simpara>\n      ",
                  "documentation": "\n        <p>The details of the output artifact of the action, such as its commit ID.</p>\n      ",
                  "required": true,
                  "shape_name": "ArtifactDetails"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Returns information about the details of an action type.</simpara>\n      ",
              "documentation": "\n        <p>Returns information about the details of an action type.</p>\n      ",
              "shape_name": "ActionType"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the amount of returned information is significantly large, an identifier is also\n            returned which can be used in a subsequent list action types call to return the next set\n            of action types in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the amount of returned information is significantly large, an identifier is also\n            returned which can be used in a subsequent list action types call to return the next set\n            of action types in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a ListActionTypes action.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a ListActionTypes action.</p>\n      ",
        "shape_name": "ListActionTypesOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</simpara>\n      ",
          "documentation": "\n        <p>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        }
      ],
      "documentation": "\n        <p>Gets a summary of all AWS CodePipeline action types associated with your\n            account.</p>\n        \n      "
    },
    "CreateCustomActionType": {
      "name": "CreateCustomActionType",
      "input": {
        "type": "structure",
        "members": {
          "category": {
            "type": "string",
            "enum": [
              "Source",
              "Build",
              "Deploy",
              "Test",
              "Invoke",
              "Approval"
            ],
            "zonbookDocumentation": "\n        <simpara>The category of the custom action, such as a build action or a test\n            action.</simpara>\n        <note>\n            <simpara>Although Source and Approval are listed as valid values, they are not currently\n                functional. These values are reserved for future use.</simpara>\n        </note>\n      ",
            "documentation": "\n        <p>The category of the custom action, such as a build action or a test\n            action.</p>\n        <note>\n            <p>Although Source and Approval are listed as valid values, they are not currently\n                functional. These values are reserved for future use.</p>\n        </note>\n      ",
            "required": true,
            "shape_name": "ActionCategory"
          },
          "provider": {
            "type": "string",
            "pattern": "[0-9A-Za-z_-]+",
            "zonbookDocumentation": "\n        <simpara>The provider of the service used in the custom action, such as AWS\n            CodeDeploy.</simpara>\n      ",
            "documentation": "\n        <p>The provider of the service used in the custom action, such as AWS\n            CodeDeploy.</p>\n      ",
            "required": true,
            "shape_name": "ActionProvider",
            "min_length": 1,
            "max_length": 25
          },
          "version": {
            "type": "string",
            "pattern": "[0-9A-Za-z_-]+",
            "zonbookDocumentation": "\n        <simpara>The version identifier of the custom action.</simpara>\n      ",
            "documentation": "\n        <p>The version identifier of the custom action.</p>\n      ",
            "required": true,
            "shape_name": "Version",
            "min_length": 1,
            "max_length": 9
          },
          "settings": {
            "type": "structure",
            "members": {
              "thirdPartyConfigurationUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</simpara>\n      ",
                "documentation": "\n        <p>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</p>\n      ",
                "shape_name": "Url",
                "min_length": 1,
                "max_length": 2048
              },
              "entityUrlTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</simpara>\n      ",
                "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</p>\n      ",
                "shape_name": "UrlTemplate",
                "min_length": 1,
                "max_length": 2048
              },
              "executionUrlTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</simpara>\n      ",
                "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</p>\n      ",
                "shape_name": "UrlTemplate",
                "min_length": 1,
                "max_length": 2048
              },
              "revisionUrlTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</simpara>\n      ",
                "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</p>\n      ",
                "shape_name": "UrlTemplate",
                "min_length": 1,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n        <simpara>Returns information about the settings for an action type.</simpara>\n      ",
            "documentation": "\n        <p>Returns information about the settings for an action type.</p>\n      ",
            "shape_name": "ActionTypeSettings"
          },
          "configurationProperties": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The configuration properties for the custom action.</simpara>\n        <note>\n            <simpara>You can refer to a name in the configuration properties of the custom action\n                within the URL templates by following the format of {Config:name}, as long as the\n                configuration property is both required and not secret. For more information, see\n                    <ulink type=\"documentation\" url=\"codepipeline/latest/userguide/how-to-create-custom-action.html\">Create a\n                    Custom Action for a Pipeline</ulink>.</simpara>\n        </note>\n      ",
            "documentation": "\n        <p>The configuration properties for the custom action.</p>\n        <note>\n            <p>You can refer to a name in the configuration properties of the custom action\n                within the URL templates by following the format of {Config:name}, as long as the\n                configuration property is both required and not secret. For more information, see\n                    <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-create-custom-action.html\">Create a\n                    Custom Action for a Pipeline</a>.</p>\n        </note>\n      ",
            "shape_name": "ActionConfigurationPropertyList",
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the action configuration property.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the action configuration property.</p>\n      ",
                  "required": true,
                  "shape_name": "ActionConfigurationKey",
                  "min_length": 1,
                  "max_length": 50
                },
                "required": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a required value.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the configuration property is a required value.</p>\n      ",
                  "required": true,
                  "shape_name": "Boolean"
                },
                "key": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a key.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the configuration property is a key.</p>\n      ",
                  "required": true,
                  "shape_name": "Boolean"
                },
                "secret": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</simpara>\n        <simpara>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</p>\n        <p>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</p>\n      ",
                  "required": true,
                  "shape_name": "Boolean"
                },
                "queryable": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</simpara>\n        <simpara>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</simpara>\n      ",
                  "documentation": "\n        <p>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</p>\n        <p>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The description of the action configuration property that will be displayed to\n            users.</simpara>\n      ",
                  "documentation": "\n        <p>The description of the action configuration property that will be displayed to\n            users.</p>\n      ",
                  "shape_name": "Description",
                  "min_length": 1,
                  "max_length": 160
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "String",
                    "Number",
                    "Boolean"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The type of the configuration property.</simpara>\n      ",
                  "documentation": "\n        <p>The type of the configuration property.</p>\n      ",
                  "shape_name": "ActionConfigurationPropertyType"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration property.</simpara>\n      ",
              "documentation": "\n        <p>Represents information about an action configuration property.</p>\n      ",
              "shape_name": "ActionConfigurationProperty"
            }
          },
          "inputArtifactDetails": {
            "type": "structure",
            "members": {
              "minimumCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                "required": true,
                "shape_name": "MinimumArtifactCount",
                "min_length": 0,
                "max_length": 5
              },
              "maximumCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                "required": true,
                "shape_name": "MaximumArtifactCount",
                "min_length": 0,
                "max_length": 5
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details of the input artifact for the action, such as its commit ID.</simpara>\n      ",
            "documentation": "\n        <p>The details of the input artifact for the action, such as its commit ID.</p>\n      ",
            "required": true,
            "shape_name": "ArtifactDetails"
          },
          "outputArtifactDetails": {
            "type": "structure",
            "members": {
              "minimumCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                "required": true,
                "shape_name": "MinimumArtifactCount",
                "min_length": 0,
                "max_length": 5
              },
              "maximumCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                "required": true,
                "shape_name": "MaximumArtifactCount",
                "min_length": 0,
                "max_length": 5
              }
            },
            "zonbookDocumentation": "\n        <simpara>The details of the output artifact of the action, such as its commit ID.</simpara>\n      ",
            "documentation": "\n        <p>The details of the output artifact of the action, such as its commit ID.</p>\n      ",
            "required": true,
            "shape_name": "ArtifactDetails"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a CreateCustomActionType operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a CreateCustomActionType operation.</p>\n      ",
        "shape_name": "CreateCustomActionTypeInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "actionType": {
            "type": "structure",
            "members": {
              "id": {
                "type": "structure",
                "members": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "Source",
                      "Build",
                      "Deploy",
                      "Test",
                      "Invoke",
                      "Approval"
                    ],
                    "zonbookDocumentation": "\n        <simpara>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</simpara>\n      ",
                    "documentation": "\n        <p>A category defines what kind of action can be taken in the stage, and constrains\n            the provider type for the action. Valid categories are limited to one of the values\n            below.</p>\n      ",
                    "required": true,
                    "shape_name": "ActionCategory"
                  },
                  "owner": {
                    "type": "string",
                    "enum": [
                      "AWS",
                      "ThirdParty",
                      "Custom"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The creator of the action being called.</simpara>\n      ",
                    "documentation": "\n        <p>The creator of the action being called.</p>\n      ",
                    "required": true,
                    "shape_name": "ActionOwner"
                  },
                  "provider": {
                    "type": "string",
                    "pattern": "[0-9A-Za-z_-]+",
                    "zonbookDocumentation": "\n        <simpara>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</simpara>\n      ",
                    "documentation": "\n        <p>The provider of the service being called by the action. Valid providers are\n            determined by the action category. For example, an action in the Deploy category type\n            might have a provider of AWS CodeDeploy, which would be specified as\n            CodeDeploy.</p>\n      ",
                    "required": true,
                    "shape_name": "ActionProvider",
                    "min_length": 1,
                    "max_length": 25
                  },
                  "version": {
                    "type": "string",
                    "pattern": "[0-9A-Za-z_-]+",
                    "zonbookDocumentation": "\n        <simpara>A string that describes the action version.</simpara>\n      ",
                    "documentation": "\n        <p>A string that describes the action version.</p>\n      ",
                    "required": true,
                    "shape_name": "Version",
                    "min_length": 1,
                    "max_length": 9
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents information about an action type.</simpara>\n      ",
                "documentation": "\n        <p>Represents information about an action type.</p>\n      ",
                "required": true,
                "shape_name": "ActionTypeId"
              },
              "settings": {
                "type": "structure",
                "members": {
                  "thirdPartyConfigurationUrl": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</simpara>\n      ",
                    "documentation": "\n        <p>The URL of a sign-up page where users can sign up for an external service and\n            perform initial configuration of the action provided by that service.</p>\n      ",
                    "shape_name": "Url",
                    "min_length": 1,
                    "max_length": 2048
                  },
                  "entityUrlTemplate": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</simpara>\n      ",
                    "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that provides a deep link to the\n            resources of the external system, such as the configuration page for an AWS CodeDeploy\n            deployment group. This link is provided as part of the action display within the\n            pipeline.</p>\n      ",
                    "shape_name": "UrlTemplate",
                    "min_length": 1,
                    "max_length": 2048
                  },
                  "executionUrlTemplate": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</simpara>\n      ",
                    "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the\n            top-level landing page for the external system, such as console page for AWS CodeDeploy.\n            This link is shown on the pipeline view page in the AWS CodePipeline console and\n            provides a link to the execution entity of the external action.</p>\n      ",
                    "shape_name": "UrlTemplate",
                    "min_length": 1,
                    "max_length": 2048
                  },
                  "revisionUrlTemplate": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</simpara>\n      ",
                    "documentation": "\n        <p>The URL returned to the AWS CodePipeline console that contains a link to the page\n            where customers can update or change the configuration of the external action.</p>\n      ",
                    "shape_name": "UrlTemplate",
                    "min_length": 1,
                    "max_length": 2048
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The settings for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The settings for the action type.</p>\n      ",
                "shape_name": "ActionTypeSettings"
              },
              "actionConfigurationProperties": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>The configuration properties for the action type.</simpara>\n      ",
                "documentation": "\n        <p>The configuration properties for the action type.</p>\n      ",
                "shape_name": "ActionConfigurationPropertyList",
                "max_length": 10,
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the action configuration property.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the action configuration property.</p>\n      ",
                      "required": true,
                      "shape_name": "ActionConfigurationKey",
                      "min_length": 1,
                      "max_length": 50
                    },
                    "required": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a required value.</simpara>\n      ",
                      "documentation": "\n        <p>Whether the configuration property is a required value.</p>\n      ",
                      "required": true,
                      "shape_name": "Boolean"
                    },
                    "key": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Whether the configuration property is a key.</simpara>\n      ",
                      "documentation": "\n        <p>Whether the configuration property is a key.</p>\n      ",
                      "required": true,
                      "shape_name": "Boolean"
                    },
                    "secret": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</simpara>\n        <simpara>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</simpara>\n      ",
                      "documentation": "\n        <p>Whether the configuration property is secret. Secrets are hidden from all calls\n            except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and\n            PollForThirdPartyJobs.</p>\n        <p>When updating a pipeline, passing * * * * * without changing any other values of\n            the action will preserve the prior value of the secret.</p>\n      ",
                      "required": true,
                      "shape_name": "Boolean"
                    },
                    "queryable": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</simpara>\n        <simpara>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</simpara>\n      ",
                      "documentation": "\n        <p>Indicates that the property will be used in conjunction with PollForJobs. When\n            creating a custom action, an action can have up to one queryable property. If it has\n            one, that property must be both required and not secret.</p>\n        <p>If you create a pipeline with a custom action type, and that custom action contains\n            a queryable property, the value for that configuration property is subject to additional\n            restrictions. The value must be less than or equal to twenty (20) characters. The value\n            can contain only alphanumeric characters, underscores, and hyphens.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "description": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The description of the action configuration property that will be displayed to\n            users.</simpara>\n      ",
                      "documentation": "\n        <p>The description of the action configuration property that will be displayed to\n            users.</p>\n      ",
                      "shape_name": "Description",
                      "min_length": 1,
                      "max_length": 160
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "String",
                        "Number",
                        "Boolean"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of the configuration property.</simpara>\n      ",
                      "documentation": "\n        <p>The type of the configuration property.</p>\n      ",
                      "shape_name": "ActionConfigurationPropertyType"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents information about an action configuration property.</simpara>\n      ",
                  "documentation": "\n        <p>Represents information about an action configuration property.</p>\n      ",
                  "shape_name": "ActionConfigurationProperty"
                }
              },
              "inputArtifactDetails": {
                "type": "structure",
                "members": {
                  "minimumCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                    "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                    "required": true,
                    "shape_name": "MinimumArtifactCount",
                    "min_length": 0,
                    "max_length": 5
                  },
                  "maximumCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                    "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                    "required": true,
                    "shape_name": "MaximumArtifactCount",
                    "min_length": 0,
                    "max_length": 5
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The details of the input artifact for the action, such as its commit ID.</simpara>\n      ",
                "documentation": "\n        <p>The details of the input artifact for the action, such as its commit ID.</p>\n      ",
                "required": true,
                "shape_name": "ArtifactDetails"
              },
              "outputArtifactDetails": {
                "type": "structure",
                "members": {
                  "minimumCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The minimum number of artifacts allowed for the action type.</simpara>\n      ",
                    "documentation": "\n        <p>The minimum number of artifacts allowed for the action type.</p>\n      ",
                    "required": true,
                    "shape_name": "MinimumArtifactCount",
                    "min_length": 0,
                    "max_length": 5
                  },
                  "maximumCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The maximum number of artifacts allowed for the action type.</simpara>\n      ",
                    "documentation": "\n        <p>The maximum number of artifacts allowed for the action type.</p>\n      ",
                    "required": true,
                    "shape_name": "MaximumArtifactCount",
                    "min_length": 0,
                    "max_length": 5
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The details of the output artifact of the action, such as its commit ID.</simpara>\n      ",
                "documentation": "\n        <p>The details of the output artifact of the action, such as its commit ID.</p>\n      ",
                "required": true,
                "shape_name": "ArtifactDetails"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Returns information about the details of an action type.</simpara>\n      ",
            "documentation": "\n        <p>Returns information about the details of an action type.</p>\n      ",
            "required": true,
            "shape_name": "ActionType"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the output of a CreateCustomActionType operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents the output of a CreateCustomActionType operation.</p>\n      ",
        "shape_name": "CreateCustomActionTypeOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</simpara>\n      ",
          "documentation": "\n        <p>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n        <p>Creates a new custom action that can be used in all pipelines associated with the\n            AWS account. Only used for custom actions.</p>\n        \n      "
    },
    "DeleteCustomActionType": {
      "name": "DeleteCustomActionType",
      "input": {
        "type": "structure",
        "members": {
          "category": {
            "type": "string",
            "enum": [
              "Source",
              "Build",
              "Deploy",
              "Test",
              "Invoke",
              "Approval"
            ],
            "zonbookDocumentation": "\n        <simpara>The category of the custom action that you want to delete, such as source or\n            deploy.</simpara>\n      ",
            "documentation": "\n        <p>The category of the custom action that you want to delete, such as source or\n            deploy.</p>\n      ",
            "required": true,
            "shape_name": "ActionCategory"
          },
          "provider": {
            "type": "string",
            "pattern": "[0-9A-Za-z_-]+",
            "zonbookDocumentation": "\n        <simpara>The provider of the service used in the custom action, such as AWS\n            CodeDeploy.</simpara>\n      ",
            "documentation": "\n        <p>The provider of the service used in the custom action, such as AWS\n            CodeDeploy.</p>\n      ",
            "required": true,
            "shape_name": "ActionProvider",
            "min_length": 1,
            "max_length": 25
          },
          "version": {
            "type": "string",
            "pattern": "[0-9A-Za-z_-]+",
            "zonbookDocumentation": "\n        <simpara>The version of the custom action to delete.</simpara>\n      ",
            "documentation": "\n        <p>The version of the custom action to delete.</p>\n      ",
            "required": true,
            "shape_name": "Version",
            "min_length": 1,
            "max_length": 9
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the input of a DeleteCustomActionType operation. The custom action will\n            be marked as deleted.</simpara>\n      ",
        "documentation": "\n        <p>Represents the input of a DeleteCustomActionType operation. The custom action will\n            be marked as deleted.</p>\n      ",
        "shape_name": "DeleteCustomActionTypeInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Marks a custom action as deleted. PollForJobs for the custom action will fail after\n            the action is marked for deletion. Only used for custom actions.</p>\n        <important>\n            <p>To re-create a custom action after it has been deleted you must use a string in\n                the version field that has never been used before. This string can be an incremented\n                version number, for example. To restore a deleted custom action, use a JSON file\n                that is identical to the deleted action, including the original string in the\n                version field.</p>\n        </important>\n        \n      "
    },
    "PutWebhook": {
      "name": "PutWebhook",
      "input": {
        "type": "structure",
        "members": {
          "webhook": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the webhook.</simpara>\n      ",
                "documentation": "\n        <p>The name of the webhook.</p>\n      ",
                "required": true,
                "shape_name": "WebhookName",
                "min_length": 1,
                "max_length": 100
              },
              "targetPipeline": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the pipeline you want to connect to the webhook.</simpara>\n      ",
                "documentation": "\n        <p>The name of the pipeline you want to connect to the webhook.</p>\n      ",
                "required": true,
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 100
              },
              "targetAction": {
                "type": "string",
                "pattern": "[A-Za-z0-9.@\\-_]+",
                "zonbookDocumentation": "\n        <simpara>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</simpara>\n      ",
                "documentation": "\n        <p>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</p>\n      ",
                "required": true,
                "shape_name": "ActionName",
                "min_length": 1,
                "max_length": 100
              },
              "filters": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</simpara>\n      ",
                "documentation": "\n        <p>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</p>\n      ",
                "required": true,
                "shape_name": "WebhookFilters",
                "max_length": 5,
                "members": {
                  "type": "structure",
                  "members": {
                    "jsonPath": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</simpara>\n      ",
                      "documentation": "\n        <p>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</p>\n      ",
                      "required": true,
                      "shape_name": "JsonPath",
                      "min_length": 1,
                      "max_length": 150
                    },
                    "matchEquals": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <ulink type=\"documentation\" url=\"codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</ulink>.</simpara>\n      ",
                      "documentation": "\n        <p>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</a>.</p>\n      ",
                      "shape_name": "MatchEquals",
                      "min_length": 1,
                      "max_length": 150
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The event criteria that specify when a webhook notification is sent to your\n            URL.</simpara>\n      ",
                  "documentation": "\n        <p>The event criteria that specify when a webhook notification is sent to your\n            URL.</p>\n      ",
                  "shape_name": "WebhookFilterRule"
                }
              },
              "authentication": {
                "type": "string",
                "enum": [
                  "GITHUB_HMAC",
                  "IP",
                  "UNAUTHENTICATED"
                ],
                "zonbookDocumentation": "\n        <simpara>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</simpara>\n            </listitem>\n            <listitem>\n                <simpara> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</simpara>\n            </listitem>\n            <listitem>\n                <simpara> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</p>\n        <ul>\n            <li>\n                <p> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</p>\n            </li>\n            <li>\n                <p> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</p>\n            </li>\n            <li>\n                <p> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "WebhookAuthenticationType"
              },
              "authenticationConfiguration": {
                "type": "structure",
                "members": {
                  "AllowedIPRange": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</simpara>\n      ",
                    "documentation": "\n        <p>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</p>\n      ",
                    "shape_name": "WebhookAuthConfigurationAllowedIPRange",
                    "min_length": 1,
                    "max_length": 100
                  },
                  "SecretToken": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</simpara>\n      ",
                    "documentation": "\n        <p>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</p>\n      ",
                    "shape_name": "WebhookAuthConfigurationSecretToken",
                    "min_length": 1,
                    "max_length": 100
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</simpara>\n      ",
                "documentation": "\n        <p>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</p>\n      ",
                "required": true,
                "shape_name": "WebhookAuthConfiguration"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The detail provided in an input file to create the webhook, such as the webhook\n            name, the pipeline name, and the action name. Give the webhook a unique name which\n            identifies the webhook being defined. You may choose to name the webhook after the\n            pipeline and action it targets so that you can easily recognize what it's used for\n            later.</simpara>\n      ",
            "documentation": "\n        <p>The detail provided in an input file to create the webhook, such as the webhook\n            name, the pipeline name, and the action name. Give the webhook a unique name which\n            identifies the webhook being defined. You may choose to name the webhook after the\n            pipeline and action it targets so that you can easily recognize what it's used for\n            later.</p>\n      ",
            "required": true,
            "shape_name": "WebhookDefinition"
          }
        },
        "shape_name": "PutWebhookInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "webhook": {
            "type": "structure",
            "members": {
              "definition": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9.@\\-_]+",
                    "zonbookDocumentation": "\n        <simpara>The name of the webhook.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the webhook.</p>\n      ",
                    "required": true,
                    "shape_name": "WebhookName",
                    "min_length": 1,
                    "max_length": 100
                  },
                  "targetPipeline": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9.@\\-_]+",
                    "zonbookDocumentation": "\n        <simpara>The name of the pipeline you want to connect to the webhook.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the pipeline you want to connect to the webhook.</p>\n      ",
                    "required": true,
                    "shape_name": "PipelineName",
                    "min_length": 1,
                    "max_length": 100
                  },
                  "targetAction": {
                    "type": "string",
                    "pattern": "[A-Za-z0-9.@\\-_]+",
                    "zonbookDocumentation": "\n        <simpara>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</p>\n      ",
                    "required": true,
                    "shape_name": "ActionName",
                    "min_length": 1,
                    "max_length": 100
                  },
                  "filters": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</simpara>\n      ",
                    "documentation": "\n        <p>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</p>\n      ",
                    "required": true,
                    "shape_name": "WebhookFilters",
                    "max_length": 5,
                    "members": {
                      "type": "structure",
                      "members": {
                        "jsonPath": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</simpara>\n      ",
                          "documentation": "\n        <p>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</p>\n      ",
                          "required": true,
                          "shape_name": "JsonPath",
                          "min_length": 1,
                          "max_length": 150
                        },
                        "matchEquals": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <ulink type=\"documentation\" url=\"codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</ulink>.</simpara>\n      ",
                          "documentation": "\n        <p>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</a>.</p>\n      ",
                          "shape_name": "MatchEquals",
                          "min_length": 1,
                          "max_length": 150
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The event criteria that specify when a webhook notification is sent to your\n            URL.</simpara>\n      ",
                      "documentation": "\n        <p>The event criteria that specify when a webhook notification is sent to your\n            URL.</p>\n      ",
                      "shape_name": "WebhookFilterRule"
                    }
                  },
                  "authentication": {
                    "type": "string",
                    "enum": [
                      "GITHUB_HMAC",
                      "IP",
                      "UNAUTHENTICATED"
                    ],
                    "zonbookDocumentation": "\n        <simpara>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</simpara>\n            </listitem>\n            <listitem>\n                <simpara> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</simpara>\n            </listitem>\n            <listitem>\n                <simpara> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</p>\n        <ul>\n            <li>\n                <p> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</p>\n            </li>\n            <li>\n                <p> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</p>\n            </li>\n            <li>\n                <p> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "WebhookAuthenticationType"
                  },
                  "authenticationConfiguration": {
                    "type": "structure",
                    "members": {
                      "AllowedIPRange": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</simpara>\n      ",
                        "documentation": "\n        <p>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</p>\n      ",
                        "shape_name": "WebhookAuthConfigurationAllowedIPRange",
                        "min_length": 1,
                        "max_length": 100
                      },
                      "SecretToken": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</simpara>\n      ",
                        "documentation": "\n        <p>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</p>\n      ",
                        "shape_name": "WebhookAuthConfigurationSecretToken",
                        "min_length": 1,
                        "max_length": 100
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</simpara>\n      ",
                    "documentation": "\n        <p>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</p>\n      ",
                    "required": true,
                    "shape_name": "WebhookAuthConfiguration"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The detail returned for each webhook, such as the webhook authentication type and\n            filter rules.</simpara>\n      ",
                "documentation": "\n        <p>The detail returned for each webhook, such as the webhook authentication type and\n            filter rules.</p>\n      ",
                "required": true,
                "shape_name": "WebhookDefinition"
              },
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A unique URL generated by CodePipeline. When a POST request is made to this URL,\n            the defined pipeline is started as long as the body of the post request satisfies the\n            defined authentication and filtering conditions. Deleting and re-creating a webhook will\n            make the old URL invalid and generate a new URL.</simpara>\n      ",
                "documentation": "\n        <p>A unique URL generated by CodePipeline. When a POST request is made to this URL,\n            the defined pipeline is started as long as the body of the post request satisfies the\n            defined authentication and filtering conditions. Deleting and re-creating a webhook will\n            make the old URL invalid and generate a new URL.</p>\n      ",
                "required": true,
                "shape_name": "WebhookUrl",
                "min_length": 1,
                "max_length": 1000
              },
              "errorMessage": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The text of the error message about the webhook.</simpara>\n      ",
                "documentation": "\n        <p>The text of the error message about the webhook.</p>\n      ",
                "shape_name": "WebhookErrorMessage"
              },
              "errorCode": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The number code of the error.</simpara>\n      ",
                "documentation": "\n        <p>The number code of the error.</p>\n      ",
                "shape_name": "WebhookErrorCode"
              },
              "lastTriggered": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time a webhook was last successfully triggered, in timestamp\n            format.</simpara>\n      ",
                "documentation": "\n        <p>The date and time a webhook was last successfully triggered, in timestamp\n            format.</p>\n      ",
                "shape_name": "WebhookLastTriggered"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the webhook.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the webhook.</p>\n      ",
                "shape_name": "WebhookArn"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The detail returned from creating the webhook, such as the webhook name, webhook\n            URL, and webhook ARN.</simpara>\n      ",
            "documentation": "\n        <p>The detail returned from creating the webhook, such as the webhook name, webhook\n            URL, and webhook ARN.</p>\n      ",
            "shape_name": "ListWebhookItem"
          }
        },
        "shape_name": "PutWebhookOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</simpara>\n      ",
          "documentation": "\n        <p>The number of pipelines associated with the AWS account has exceeded the limit\n            allowed for the account.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified event filter rule is in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified event filter rule is in an invalid format.</p>\n      ",
          "shape_name": "InvalidWebhookFilterPatternException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified authentication type is in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The specified authentication type is in an invalid format.</p>\n      ",
          "shape_name": "InvalidWebhookAuthenticationParametersException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified pipeline was specified in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified pipeline was specified in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "PipelineNotFoundException"
        }
      ],
      "documentation": "\n        <p>Defines a webhook and returns a unique webhook URL generated by CodePipeline. This\n            URL can be supplied to third party source hosting providers to call every time there's a\n            code change. When CodePipeline receives a POST request on this URL, the pipeline defined\n            in the webhook is started as long as the POST request satisfied the authentication and\n            filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty\n            and DeregisterWebhookWithThirdParty APIs can be used to automatically configure\n            supported third parties to call the generated webhook URL.</p>\n      "
    },
    "ListWebhooks": {
      "name": "ListWebhooks",
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The token that was returned from the previous ListWebhooks call, which can be used\n            to return the next set of webhooks in the list.</simpara>\n      ",
            "documentation": "\n        <p>The token that was returned from the previous ListWebhooks call, which can be used\n            to return the next set of webhooks in the list.</p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to return in a single call. To retrieve the remaining\n            results, make another call with the returned nextToken value.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to return in a single call. To retrieve the remaining\n            results, make another call with the returned nextToken value.</p>\n      ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "ListWebhooksInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "webhooks": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The JSON detail returned for each webhook in the list output for the ListWebhooks\n            call.</simpara>\n      ",
            "documentation": "\n        <p>The JSON detail returned for each webhook in the list output for the ListWebhooks\n            call.</p>\n      ",
            "shape_name": "WebhookList",
            "members": {
              "type": "structure",
              "members": {
                "definition": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the webhook.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the webhook.</p>\n      ",
                      "required": true,
                      "shape_name": "WebhookName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "targetPipeline": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the pipeline you want to connect to the webhook.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the pipeline you want to connect to the webhook.</p>\n      ",
                      "required": true,
                      "shape_name": "PipelineName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "targetAction": {
                      "type": "string",
                      "pattern": "[A-Za-z0-9.@\\-_]+",
                      "zonbookDocumentation": "\n        <simpara>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the action in a pipeline you want to connect to the webhook. The action\n            must be from the source (first) stage of the pipeline.</p>\n      ",
                      "required": true,
                      "shape_name": "ActionName",
                      "min_length": 1,
                      "max_length": 100
                    },
                    "filters": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</simpara>\n      ",
                      "documentation": "\n        <p>A list of rules applied to the body/payload sent in the POST request to a webhook\n            URL. All defined rules must pass for the request to be accepted and the pipeline\n            started.</p>\n      ",
                      "required": true,
                      "shape_name": "WebhookFilters",
                      "max_length": 5,
                      "members": {
                        "type": "structure",
                        "members": {
                          "jsonPath": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</simpara>\n      ",
                            "documentation": "\n        <p>A JsonPath expression that will be applied to the body/payload of the webhook. The\n            value selected by JsonPath expression must match the value specified in the matchEquals\n            field, otherwise the request will be ignored. More information on JsonPath expressions\n            can be found here: https://github.com/json-path/JsonPath.</p>\n      ",
                            "required": true,
                            "shape_name": "JsonPath",
                            "min_length": 1,
                            "max_length": 150
                          },
                          "matchEquals": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <ulink type=\"documentation\" url=\"codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</ulink>.</simpara>\n      ",
                            "documentation": "\n        <p>The value selected by the JsonPath expression must match what is supplied in the\n            MatchEquals field, otherwise the request will be ignored. Properties from the target\n            action configuration can be included as placeholders in this value by surrounding the\n            action configuration key with curly braces. For example, if the value supplied here is\n            \"refs/heads/{Branch}\" and the target action has an action configuration property called\n            \"Branch\" with a value of \"master\", the MatchEquals value will be evaluated as\n            \"refs/heads/master\". A list of action configuration properties for built-in action types\n            can be found here: <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements\">Pipeline Structure Reference Action Requirements</a>.</p>\n      ",
                            "shape_name": "MatchEquals",
                            "min_length": 1,
                            "max_length": 150
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The event criteria that specify when a webhook notification is sent to your\n            URL.</simpara>\n      ",
                        "documentation": "\n        <p>The event criteria that specify when a webhook notification is sent to your\n            URL.</p>\n      ",
                        "shape_name": "WebhookFilterRule"
                      }
                    },
                    "authentication": {
                      "type": "string",
                      "enum": [
                        "GITHUB_HMAC",
                        "IP",
                        "UNAUTHENTICATED"
                      ],
                      "zonbookDocumentation": "\n        <simpara>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</simpara>\n            </listitem>\n            <listitem>\n                <simpara> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</simpara>\n            </listitem>\n            <listitem>\n                <simpara> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>Supported options are GITHUB_HMAC, IP and UNAUTHENTICATED.</p>\n        <ul>\n            <li>\n                <p> GITHUB_HMAC implements the authentication scheme described here:\n                    https://developer.github.com/webhooks/securing/</p>\n            </li>\n            <li>\n                <p> IP will reject webhooks trigger requests unless they originate from an IP\n                    within the IP range whitelisted in the authentication configuration.</p>\n            </li>\n            <li>\n                <p> UNAUTHENTICATED will accept all webhook trigger requests regardless of\n                    origin.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "WebhookAuthenticationType"
                    },
                    "authenticationConfiguration": {
                      "type": "structure",
                      "members": {
                        "AllowedIPRange": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</simpara>\n      ",
                          "documentation": "\n        <p>The property used to configure acceptance of webhooks within a specific IP range.\n            For IP, only the AllowedIPRange property must be set, and this property must be set to a\n            valid CIDR range.</p>\n      ",
                          "shape_name": "WebhookAuthConfigurationAllowedIPRange",
                          "min_length": 1,
                          "max_length": 100
                        },
                        "SecretToken": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</simpara>\n      ",
                          "documentation": "\n        <p>The property used to configure GitHub authentication. For GITHUB_HMAC, only the\n            SecretToken property must be set.</p>\n      ",
                          "shape_name": "WebhookAuthConfigurationSecretToken",
                          "min_length": 1,
                          "max_length": 100
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</simpara>\n      ",
                      "documentation": "\n        <p>Properties that configure the authentication applied to incoming webhook trigger\n            requests. The required properties depend on the authentication type. For GITHUB_HMAC,\n            only the SecretToken property must be set. For IP, only the AllowedIPRange property must\n            be set to a valid CIDR range. For UNAUTHENTICATED, no properties can be set.</p>\n      ",
                      "required": true,
                      "shape_name": "WebhookAuthConfiguration"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The detail returned for each webhook, such as the webhook authentication type and\n            filter rules.</simpara>\n      ",
                  "documentation": "\n        <p>The detail returned for each webhook, such as the webhook authentication type and\n            filter rules.</p>\n      ",
                  "required": true,
                  "shape_name": "WebhookDefinition"
                },
                "url": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A unique URL generated by CodePipeline. When a POST request is made to this URL,\n            the defined pipeline is started as long as the body of the post request satisfies the\n            defined authentication and filtering conditions. Deleting and re-creating a webhook will\n            make the old URL invalid and generate a new URL.</simpara>\n      ",
                  "documentation": "\n        <p>A unique URL generated by CodePipeline. When a POST request is made to this URL,\n            the defined pipeline is started as long as the body of the post request satisfies the\n            defined authentication and filtering conditions. Deleting and re-creating a webhook will\n            make the old URL invalid and generate a new URL.</p>\n      ",
                  "required": true,
                  "shape_name": "WebhookUrl",
                  "min_length": 1,
                  "max_length": 1000
                },
                "errorMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The text of the error message about the webhook.</simpara>\n      ",
                  "documentation": "\n        <p>The text of the error message about the webhook.</p>\n      ",
                  "shape_name": "WebhookErrorMessage"
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The number code of the error.</simpara>\n      ",
                  "documentation": "\n        <p>The number code of the error.</p>\n      ",
                  "shape_name": "WebhookErrorCode"
                },
                "lastTriggered": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time a webhook was last successfully triggered, in timestamp\n            format.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time a webhook was last successfully triggered, in timestamp\n            format.</p>\n      ",
                  "shape_name": "WebhookLastTriggered"
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the webhook.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) of the webhook.</p>\n      ",
                  "shape_name": "WebhookArn"
                }
              },
              "zonbookDocumentation": "\n        <simpara>The detail returned for each webhook after listing webhooks, such as the webhook\n            URL, the webhook name, and the webhook ARN.</simpara>\n      ",
              "documentation": "\n        <p>The detail returned for each webhook after listing webhooks, such as the webhook\n            URL, the webhook name, and the webhook ARN.</p>\n      ",
              "shape_name": "ListWebhookItem"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the amount of returned information is significantly large, an identifier is also\n            returned and can be used in a subsequent ListWebhooks call to return the next set of\n            webhooks in the list. </simpara>\n      ",
            "documentation": "\n        <p>If the amount of returned information is significantly large, an identifier is also\n            returned and can be used in a subsequent ListWebhooks call to return the next set of\n            webhooks in the list. </p>\n      ",
            "shape_name": "NextToken",
            "min_length": 1,
            "max_length": 2048
          }
        },
        "shape_name": "ListWebhooksOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</simpara>\n      ",
          "documentation": "\n        <p>The next token was specified in an invalid format. Make sure that the next token\n            you provided is the token returned by a previous call.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        }
      ],
      "documentation": "\n        <p>Gets a listing of all the webhooks in this region for this account. The output\n            lists all webhooks and includes the webhook URL and ARN, as well the configuration for\n            each webhook.</p>\n      "
    },
    "DeleteWebhook": {
      "name": "DeleteWebhook",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the webhook you want to delete.</simpara>\n      ",
            "documentation": "\n        <p>The name of the webhook you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "WebhookName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "DeleteWebhookInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteWebhookOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        }
      ],
      "documentation": "\n        <p>Deletes a previously created webhook by name. Deleting the webhook stops AWS\n            CodePipeline from starting a pipeline every time an external event occurs. The API will\n            return successfully when trying to delete a webhook that is already deleted. If a\n            deleted webhook is re-created by calling PutWebhook with the same name, it will have a\n            different URL.</p>\n      "
    },
    "RegisterWebhookWithThirdParty": {
      "name": "RegisterWebhookWithThirdParty",
      "input": {
        "type": "structure",
        "members": {
          "webhookName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of an existing webhook created with PutWebhook to register with a\n            supported third party. </simpara>\n      ",
            "documentation": "\n        <p>The name of an existing webhook created with PutWebhook to register with a\n            supported third party. </p>\n      ",
            "shape_name": "WebhookName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "RegisterWebhookWithThirdPartyInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "RegisterWebhookWithThirdPartyOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified webhook was entered in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified webhook was entered in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "WebhookNotFoundException"
        }
      ],
      "documentation": "\n        <p>Configures a connection between the webhook that was created and the external tool\n            with events to be detected.</p>\n      "
    },
    "DeregisterWebhookWithThirdParty": {
      "name": "DeregisterWebhookWithThirdParty",
      "input": {
        "type": "structure",
        "members": {
          "webhookName": {
            "type": "string",
            "pattern": "[A-Za-z0-9.@\\-_]+",
            "zonbookDocumentation": "\n        <simpara>The name of the webhook you want to deregister.</simpara>\n      ",
            "documentation": "\n        <p>The name of the webhook you want to deregister.</p>\n      ",
            "shape_name": "WebhookName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "shape_name": "DeregisterWebhookWithThirdPartyInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeregisterWebhookWithThirdPartyOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The validation was specified in an invalid format.</simpara>\n      ",
          "documentation": "\n        <p>The validation was specified in an invalid format.</p>\n      ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified webhook was entered in an invalid format or cannot be\n            found.</simpara>\n      ",
          "documentation": "\n        <p>The specified webhook was entered in an invalid format or cannot be\n            found.</p>\n      ",
          "shape_name": "WebhookNotFoundException"
        }
      ],
      "documentation": "\n        <p>Removes the connection between the webhook that was created by CodePipeline and the\n            external tool with events to be detected. Currently only supported for webhooks that\n            target an action type of GitHub.</p>\n      "
    }
  }
}
