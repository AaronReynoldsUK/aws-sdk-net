{
  "version": "1.0",
  "type": "rest-json",
  "signature_version": "v4",
  "json_version": "1.1",
  "endpoint_prefix": "runtime.sagemaker",
  "api_version": "2017-05-13",
  "signing_name": "sagemaker",
  "service_full_name": "Amazon SageMaker Runtime",
  "service_id": "SageMaker Runtime",
  "uid": "runtime.sagemaker-2017-05-13",
  "documentation": "\n        <p> The Amazon SageMaker runtime API. </p>\n      ",
  "operations": {
    "InvokeEndpoint": {
      "name": "InvokeEndpoint",
      "http": {
        "method": "POST",
        "uri": "/endpoints/{EndpointName}/invocations"
      },
      "input": {
        "type": "structure",
        "members": {
          "EndpointName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
            "zonbookDocumentation": "\n        <simpara>The name of the endpoint that you specified when you created the endpoint using the\n                <ulink type=\"documentation\" url=\"sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</ulink> API. </simpara>\n      ",
            "documentation": "\n        <p>The name of the endpoint that you specified when you created the endpoint using the\n                <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> API. </p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "EndpointName",
            "max_length": 63
          },
          "Body": {
            "type": "blob",
            "sensitive": true,
            "zonbookDocumentation": "\n        <simpara>Provides input data, in the format specified in the <code>ContentType</code>\n            request header. Amazon SageMaker passes all of the data in the body to the model. </simpara>\n        <simpara>For information about the format of the request body, see <ulink type=\"documentation\" url=\"sagemaker/latest/dg/cdf-inference.html\">Common\n            Data Formats—Inference</ulink>.</simpara>\n      ",
            "documentation": "\n        <p>Provides input data, in the format specified in the <code>ContentType</code>\n            request header. Amazon SageMaker passes all of the data in the body to the model. </p>\n        <p>For information about the format of the request body, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/cdf-inference.html\">Common\n            Data Formats—Inference</a>.</p>\n      ",
            "payload": true,
            "required": true,
            "shape_name": "BodyBlob",
            "max_length": 5242880
          },
          "ContentType": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The MIME type of the input data in the request body.</simpara>\n      ",
            "documentation": "\n        <p>The MIME type of the input data in the request body.</p>\n      ",
            "location": "header",
            "shape_name": "Header",
            "max_length": 1024,
            "location_name": "Content-Type"
          },
          "Accept": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The desired MIME type of the inference in the response.</simpara>\n      ",
            "documentation": "\n        <p>The desired MIME type of the inference in the response.</p>\n      ",
            "location": "header",
            "shape_name": "Header",
            "max_length": 1024,
            "location_name": "Accept"
          },
          "TraceId": {
            "type": "string",
            "location": "header",
            "internalonly": true,
            "shape_name": "Header",
            "documentation": null,
            "max_length": 1024,
            "location_name": "X-Amzn-Trace-Id"
          },
          "QueryStrings": {
            "type": "map",
            "location": "querystring",
            "internalonly": true,
            "shape_name": "QueryStringMap",
            "documentation": null,
            "keys": {
              "type": "string",
              "shape_name": "QueryStringKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "QueryStringValue",
              "documentation": null
            }
          },
          "CustomAttributes": {
            "type": "string",
            "sensitive": true,
            "zonbookDocumentation": "\n        <para/>\n      ",
            "documentation": "\n        <p/>\n      ",
            "location": "header",
            "shape_name": "CustomAttributesHeader",
            "max_length": 1024,
            "location_name": "X-Amzn-SageMaker-Custom-Attributes"
          }
        },
        "shape_name": "InvokeEndpointInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Body": {
            "type": "blob",
            "sensitive": true,
            "zonbookDocumentation": "\n        <simpara>Includes the inference provided by the model.</simpara>\n        <simpara>For information about the format of the response body, see <ulink type=\"documentation\" url=\"sagemaker/latest/dg/cdf-inference.html\">Common\n            Data Formats—Inference</ulink>.</simpara>\n      ",
            "documentation": "\n        <p>Includes the inference provided by the model.</p>\n        <p>For information about the format of the response body, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/cdf-inference.html\">Common\n            Data Formats—Inference</a>.</p>\n      ",
            "payload": true,
            "required": true,
            "shape_name": "BodyBlob",
            "max_length": 5242880
          },
          "ContentType": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The MIME type of the inference returned in the response body.</simpara>\n      ",
            "documentation": "\n        <p>The MIME type of the inference returned in the response body.</p>\n      ",
            "location": "header",
            "shape_name": "Header",
            "max_length": 1024,
            "location_name": "Content-Type"
          },
          "InvokedProductionVariant": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Identifies the production variant that was invoked.</simpara>\n      ",
            "documentation": "\n        <p>Identifies the production variant that was invoked.</p>\n      ",
            "location": "header",
            "shape_name": "Header",
            "max_length": 1024,
            "location_name": "x-Amzn-Invoked-Production-Variant"
          },
          "CustomAttributes": {
            "type": "string",
            "sensitive": true,
            "zonbookDocumentation": "\n        <para/>\n      ",
            "documentation": "\n        <p/>\n      ",
            "location": "header",
            "shape_name": "CustomAttributesHeader",
            "max_length": 1024,
            "location_name": "X-Amzn-SageMaker-Custom-Attributes"
          }
        },
        "shape_name": "InvokeEndpointOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "max_length": 2048
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "INTERNAL_ROUTING",
                "RESPONSE_MARSHALLING",
                "REQUEST_PROXY",
                "INTERNAL_LOOKUP",
                "INTERNAL_VARIANT_CONSTRAINT_VIOLATION",
                "INTERNAL_INSTANCE_CONSTRAINT_VIOLATION",
                "VARIANT_WEIGHTS_ALL_ZERO"
              ],
              "internalonly": true,
              "shape_name": "InternalFailureErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara> An internal failure occurred. </simpara>\n      ",
          "documentation": "\n        <p> An internal failure occurred. </p>\n      ",
          "shape_name": "InternalFailure"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "max_length": 2048
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "EMPTY_SAMPLE_SIZE",
                "NO_SIDECAR_URLS"
              ],
              "internalonly": true,
              "shape_name": "ServiceUnavailableErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara> The service is unavailable. Try your call again. </simpara>\n      ",
          "documentation": "\n        <p> The service is unavailable. Try your call again. </p>\n      ",
          "shape_name": "ServiceUnavailable"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "max_length": 2048
            },
            "ErrorCode": {
              "type": "string",
              "enum": [
                "NO_SUCH_ENDPOINT",
                "INVALID_CUSTOM_HEADER"
              ],
              "internalonly": true,
              "shape_name": "ValidationErrorErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>\n            Inspect your request and try again.\n        \n        </simpara>\n      ",
          "documentation": "\n        <p>\n            Inspect your request and try again.\n        \n        </p>\n      ",
          "shape_name": "ValidationError"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "max_length": 2048
            },
            "OriginalStatusCode": {
              "type": "integer",
              "zonbookDocumentation": "\n        <simpara>\n            Original status code. \n        </simpara>\n      ",
              "documentation": "\n        <p>\n            Original status code. \n        </p>\n      ",
              "shape_name": "StatusCode"
            },
            "OriginalMessage": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>\n            Original message. \n        </simpara>\n      ",
              "documentation": "\n        <p>\n            Original message. \n        </p>\n      ",
              "shape_name": "Message",
              "max_length": 2048
            },
            "LogStreamArn": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara> The Amazon Resource Name (ARN) of the log stream. </simpara>\n      ",
              "documentation": "\n        <p> The Amazon Resource Name (ARN) of the log stream. </p>\n      ",
              "shape_name": "LogStreamArn"
            },
            "ErrorCode": {
              "type": "string",
              "internalonly": true,
              "shape_name": "ModelErrorErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>\n            Model (owned by the customer in the container) returned an error 500.  \n        </simpara>\n      ",
          "documentation": "\n        <p>\n            Model (owned by the customer in the container) returned an error 500.  \n        </p>\n      ",
          "shape_name": "ModelError"
        }
      ],
      "documentation": "\n        <p>After you deploy a model into production using Amazon SageMaker hosting services, your\n            client applications use this API to get inferences from the model hosted at the\n            specified endpoint. </p>\n        <p>For an overview of Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html\">How It Works</a>. </p>\n        <p>Amazon SageMaker strips all POST headers except those supported by the API. Amazon SageMaker might add\n            additional headers. You should not rely on the behavior of headers outside those\n            enumerated in the request syntax. </p>\n        <p>Cals to <code>InvokeEndpoint</code> are authenticated by using AWS Signature Version\n            4. For information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\">Authenticating\n                Requests (AWS Signature Version 4)</a> in the <i>Amazon S3 API\n                    Reference</i>.</p>\n        <note>\n            <p>Endpoints are scoped to an individual account, and are not public. The URL does\n                not contain the account ID, but Amazon SageMaker determines the account ID from the\n                authentication token that is supplied by the caller.</p>\n        </note>\n      "
    }
  }
}
