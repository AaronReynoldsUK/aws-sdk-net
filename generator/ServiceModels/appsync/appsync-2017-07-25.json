{
  "version": "1.0",
  "api_version": "2017-07-25",
  "endpoint_prefix": "appsync",
  "json_version": 1.1,
  "service_abbreviation": "AWSAppSync",
  "service_full_name": "AWS AppSync",
  "signature_version": "v4",
  "signing_name": "appsync",
  "type": "rest-json",
  "service_id": "AppSync",
  "uid": "appsync-2017-07-25",
  "xmlnamespace": "http://appsync.amazonaws.com",
  "documentation": "\n         <p>AWS AppSync provides API actions for creating and interacting with data sources using\n         GraphQL from your application.</p>\n      ",
  "operations": {
    "CreateGraphqlApi": {
      "name": "CreateGraphqlApi",
      "http": {
        "method": "POST",
        "uri": "/v1/apis"
      },
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A user-supplied name for the <code>GraphqlApi</code>.</para>\n      ",
            "documentation": "\n         <p>A user-supplied name for the <code>GraphqlApi</code>.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "logConfig": {
            "type": "structure",
            "members": {
              "fieldLogLevel": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ERROR",
                  "ALL"
                ],
                "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "FieldLogLevel"
              },
              "cloudWatchLogsRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration.</para>\n      ",
            "documentation": "\n        <p>The Amazon CloudWatch Logs configuration.</p>\n      ",
            "shape_name": "LogConfig"
          },
          "authenticationType": {
            "type": "string",
            "enum": [
              "API_KEY",
              "AWS_IAM",
              "AMAZON_COGNITO_USER_POOLS",
              "OPENID_CONNECT"
            ],
            "zonbookDocumentation": "\n         <para>The authentication type: API key, AWS IAM, or Amazon Cognito user pools.</para>\n      ",
            "documentation": "\n         <p>The authentication type: API key, AWS IAM, or Amazon Cognito user pools.</p>\n      ",
            "required": true,
            "shape_name": "AuthenticationType"
          },
          "userPoolConfig": {
            "type": "structure",
            "members": {
              "userPoolId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                "documentation": "\n         <p>The user pool ID.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "defaultAction": {
                "type": "string",
                "enum": [
                  "ALLOW",
                  "DENY"
                ],
                "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                "required": true,
                "shape_name": "DefaultAction"
              },
              "appIdClientRegex": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The Amazon Cognito user pool configuration.</para>\n      ",
            "documentation": "\n         <p>The Amazon Cognito user pool configuration.</p>\n      ",
            "shape_name": "UserPoolConfig"
          },
          "openIDConnectConfig": {
            "type": "structure",
            "members": {
              "issuer": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                "shape_name": "String"
              },
              "iatTTL": {
                "type": "long",
                "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                "shape_name": "Long"
              },
              "authTTL": {
                "type": "long",
                "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                "shape_name": "Long"
              }
            },
            "zonbookDocumentation": "\n         <para>The OpenID Connect configuration.</para>\n      ",
            "documentation": "\n         <p>The OpenID Connect configuration.</p>\n      ",
            "shape_name": "OpenIDConnectConfig"
          },
          "tags": {
            "type": "list",
            "internalonly": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "Value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "graphqlApi": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The API name.</para>\n      ",
                "documentation": "\n         <p>The API name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "apiId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
                "documentation": "\n         <p>The API ID.</p>\n      ",
                "shape_name": "String"
              },
              "authenticationType": {
                "type": "string",
                "enum": [
                  "API_KEY",
                  "AWS_IAM",
                  "AMAZON_COGNITO_USER_POOLS",
                  "OPENID_CONNECT"
                ],
                "zonbookDocumentation": "\n         <para>The authentication type.</para>\n      ",
                "documentation": "\n         <p>The authentication type.</p>\n      ",
                "shape_name": "AuthenticationType"
              },
              "logConfig": {
                "type": "structure",
                "members": {
                  "fieldLogLevel": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "ERROR",
                      "ALL"
                    ],
                    "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "FieldLogLevel"
                  },
                  "cloudWatchLogsRoleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                    "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration.</para>\n      ",
                "documentation": "\n        <p>The Amazon CloudWatch Logs configuration.</p>\n      ",
                "shape_name": "LogConfig"
              },
              "userPoolConfig": {
                "type": "structure",
                "members": {
                  "userPoolId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                    "documentation": "\n         <p>The user pool ID.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "defaultAction": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "DENY"
                    ],
                    "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                    "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                    "required": true,
                    "shape_name": "DefaultAction"
                  },
                  "appIdClientRegex": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                    "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>The Amazon Cognito user pool configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Cognito user pool configuration.</p>\n      ",
                "shape_name": "UserPoolConfig"
              },
              "openIDConnectConfig": {
                "type": "structure",
                "members": {
                  "issuer": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                    "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "clientId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                    "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                    "shape_name": "String"
                  },
                  "iatTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "authTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                    "shape_name": "Long"
                  }
                },
                "zonbookDocumentation": "\n        <para>The OpenID Connect configuration.</para>\n      ",
                "documentation": "\n        <p>The OpenID Connect configuration.</p>\n      ",
                "shape_name": "OpenIDConnectConfig"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN.</para>\n      ",
                "documentation": "\n         <p>The ARN.</p>\n      ",
                "shape_name": "String"
              },
              "uris": {
                "type": "map",
                "zonbookDocumentation": "\n         <para>The URIs.</para>\n      ",
                "documentation": "\n         <p>The URIs.</p>\n      ",
                "shape_name": "MapOfStringToString",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>GraphqlApi</code>.</para>\n      ",
            "documentation": "\n         <p>The <code>GraphqlApi</code>.</p>\n      ",
            "shape_name": "GraphqlApi"
          }
        },
        "shape_name": "CreateGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The GraphQL API exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The GraphQL API exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "ApiLimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a <code>GraphqlApi</code> object.</p>\n      "
    },
    "GetGraphqlApi": {
      "name": "GetGraphqlApi",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID for the GraphQL API.</para>\n      ",
            "documentation": "\n         <p>The API ID for the GraphQL API.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "GetGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "graphqlApi": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The API name.</para>\n      ",
                "documentation": "\n         <p>The API name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "apiId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
                "documentation": "\n         <p>The API ID.</p>\n      ",
                "shape_name": "String"
              },
              "authenticationType": {
                "type": "string",
                "enum": [
                  "API_KEY",
                  "AWS_IAM",
                  "AMAZON_COGNITO_USER_POOLS",
                  "OPENID_CONNECT"
                ],
                "zonbookDocumentation": "\n         <para>The authentication type.</para>\n      ",
                "documentation": "\n         <p>The authentication type.</p>\n      ",
                "shape_name": "AuthenticationType"
              },
              "logConfig": {
                "type": "structure",
                "members": {
                  "fieldLogLevel": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "ERROR",
                      "ALL"
                    ],
                    "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "FieldLogLevel"
                  },
                  "cloudWatchLogsRoleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                    "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration.</para>\n      ",
                "documentation": "\n        <p>The Amazon CloudWatch Logs configuration.</p>\n      ",
                "shape_name": "LogConfig"
              },
              "userPoolConfig": {
                "type": "structure",
                "members": {
                  "userPoolId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                    "documentation": "\n         <p>The user pool ID.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "defaultAction": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "DENY"
                    ],
                    "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                    "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                    "required": true,
                    "shape_name": "DefaultAction"
                  },
                  "appIdClientRegex": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                    "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>The Amazon Cognito user pool configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Cognito user pool configuration.</p>\n      ",
                "shape_name": "UserPoolConfig"
              },
              "openIDConnectConfig": {
                "type": "structure",
                "members": {
                  "issuer": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                    "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "clientId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                    "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                    "shape_name": "String"
                  },
                  "iatTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "authTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                    "shape_name": "Long"
                  }
                },
                "zonbookDocumentation": "\n        <para>The OpenID Connect configuration.</para>\n      ",
                "documentation": "\n        <p>The OpenID Connect configuration.</p>\n      ",
                "shape_name": "OpenIDConnectConfig"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN.</para>\n      ",
                "documentation": "\n         <p>The ARN.</p>\n      ",
                "shape_name": "String"
              },
              "uris": {
                "type": "map",
                "zonbookDocumentation": "\n         <para>The URIs.</para>\n      ",
                "documentation": "\n         <p>The URIs.</p>\n      ",
                "shape_name": "MapOfStringToString",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>GraphqlApi</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>GraphqlApi</code> object.</p>\n      ",
            "shape_name": "GraphqlApi"
          }
        },
        "shape_name": "GetGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Retrieves a <code>GraphqlApi</code> object.</p>\n      "
    },
    "UpdateGraphqlApi": {
      "name": "UpdateGraphqlApi",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new name for the <code>GraphqlApi</code> object.</para>\n      ",
            "documentation": "\n         <p>The new name for the <code>GraphqlApi</code> object.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "logConfig": {
            "type": "structure",
            "members": {
              "fieldLogLevel": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ERROR",
                  "ALL"
                ],
                "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "FieldLogLevel"
              },
              "cloudWatchLogsRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration for the <code>GraphqlApi</code>\n            object.</para>\n      ",
            "documentation": "\n        <p>The Amazon CloudWatch Logs configuration for the <code>GraphqlApi</code>\n            object.</p>\n      ",
            "shape_name": "LogConfig"
          },
          "authenticationType": {
            "type": "string",
            "enum": [
              "API_KEY",
              "AWS_IAM",
              "AMAZON_COGNITO_USER_POOLS",
              "OPENID_CONNECT"
            ],
            "zonbookDocumentation": "\n         <para>The new authentication type for the <code>GraphqlApi</code> object.</para>\n      ",
            "documentation": "\n         <p>The new authentication type for the <code>GraphqlApi</code> object.</p>\n      ",
            "shape_name": "AuthenticationType"
          },
          "userPoolConfig": {
            "type": "structure",
            "members": {
              "userPoolId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                "documentation": "\n         <p>The user pool ID.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "defaultAction": {
                "type": "string",
                "enum": [
                  "ALLOW",
                  "DENY"
                ],
                "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                "required": true,
                "shape_name": "DefaultAction"
              },
              "appIdClientRegex": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The new Amazon Cognito user pool configuration for the <code>GraphqlApi</code>\n         object.</para>\n      ",
            "documentation": "\n         <p>The new Amazon Cognito user pool configuration for the <code>GraphqlApi</code>\n         object.</p>\n      ",
            "shape_name": "UserPoolConfig"
          },
          "openIDConnectConfig": {
            "type": "structure",
            "members": {
              "issuer": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                "shape_name": "String"
              },
              "iatTTL": {
                "type": "long",
                "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                "shape_name": "Long"
              },
              "authTTL": {
                "type": "long",
                "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                "shape_name": "Long"
              }
            },
            "zonbookDocumentation": "\n        <para>The OpenID Connect configuration for the <code>GraphqlApi</code>\n            object.</para>\n      ",
            "documentation": "\n        <p>The OpenID Connect configuration for the <code>GraphqlApi</code>\n            object.</p>\n      ",
            "shape_name": "OpenIDConnectConfig"
          }
        },
        "shape_name": "UpdateGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "graphqlApi": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The API name.</para>\n      ",
                "documentation": "\n         <p>The API name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "apiId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
                "documentation": "\n         <p>The API ID.</p>\n      ",
                "shape_name": "String"
              },
              "authenticationType": {
                "type": "string",
                "enum": [
                  "API_KEY",
                  "AWS_IAM",
                  "AMAZON_COGNITO_USER_POOLS",
                  "OPENID_CONNECT"
                ],
                "zonbookDocumentation": "\n         <para>The authentication type.</para>\n      ",
                "documentation": "\n         <p>The authentication type.</p>\n      ",
                "shape_name": "AuthenticationType"
              },
              "logConfig": {
                "type": "structure",
                "members": {
                  "fieldLogLevel": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "ERROR",
                      "ALL"
                    ],
                    "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "FieldLogLevel"
                  },
                  "cloudWatchLogsRoleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                    "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration.</para>\n      ",
                "documentation": "\n        <p>The Amazon CloudWatch Logs configuration.</p>\n      ",
                "shape_name": "LogConfig"
              },
              "userPoolConfig": {
                "type": "structure",
                "members": {
                  "userPoolId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                    "documentation": "\n         <p>The user pool ID.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "defaultAction": {
                    "type": "string",
                    "enum": [
                      "ALLOW",
                      "DENY"
                    ],
                    "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                    "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                    "required": true,
                    "shape_name": "DefaultAction"
                  },
                  "appIdClientRegex": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                    "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>The Amazon Cognito user pool configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Cognito user pool configuration.</p>\n      ",
                "shape_name": "UserPoolConfig"
              },
              "openIDConnectConfig": {
                "type": "structure",
                "members": {
                  "issuer": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                    "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "clientId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                    "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                    "shape_name": "String"
                  },
                  "iatTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "authTTL": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                    "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                    "shape_name": "Long"
                  }
                },
                "zonbookDocumentation": "\n        <para>The OpenID Connect configuration.</para>\n      ",
                "documentation": "\n        <p>The OpenID Connect configuration.</p>\n      ",
                "shape_name": "OpenIDConnectConfig"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN.</para>\n      ",
                "documentation": "\n         <p>The ARN.</p>\n      ",
                "shape_name": "String"
              },
              "uris": {
                "type": "map",
                "zonbookDocumentation": "\n         <para>The URIs.</para>\n      ",
                "documentation": "\n         <p>The URIs.</p>\n      ",
                "shape_name": "MapOfStringToString",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The updated <code>GraphqlApi</code> object.</para>\n      ",
            "documentation": "\n         <p>The updated <code>GraphqlApi</code> object.</p>\n      ",
            "shape_name": "GraphqlApi"
          }
        },
        "shape_name": "UpdateGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a <code>GraphqlApi</code> object.</p>\n      "
    },
    "DeleteGraphqlApi": {
      "name": "DeleteGraphqlApi",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a <code>GraphqlApi</code> object.</p>\n      "
    },
    "ListGraphqlApis": {
      "name": "ListGraphqlApis",
      "http": {
        "method": "GET",
        "uri": "/v1/apis?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListGraphqlApisRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "graphqlApis": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The <code>GraphqlApi</code> objects.</para>\n      ",
            "documentation": "\n         <p>The <code>GraphqlApi</code> objects.</p>\n      ",
            "shape_name": "GraphqlApis",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The API name.</para>\n      ",
                  "documentation": "\n         <p>The API name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "apiId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
                  "documentation": "\n         <p>The API ID.</p>\n      ",
                  "shape_name": "String"
                },
                "authenticationType": {
                  "type": "string",
                  "enum": [
                    "API_KEY",
                    "AWS_IAM",
                    "AMAZON_COGNITO_USER_POOLS",
                    "OPENID_CONNECT"
                  ],
                  "zonbookDocumentation": "\n         <para>The authentication type.</para>\n      ",
                  "documentation": "\n         <p>The authentication type.</p>\n      ",
                  "shape_name": "AuthenticationType"
                },
                "logConfig": {
                  "type": "structure",
                  "members": {
                    "fieldLogLevel": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "ERROR",
                        "ALL"
                      ],
                      "zonbookDocumentation": "\n        <para>The field logging level. Values can be NONE, ERROR, or ALL. </para>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: No field-level logs are captured.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ERROR</emphasis>: Logs the following information only for the fields that are in error:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>The error section in the server response.</simpara>\n                    </listitem>\n                    <listitem>\n                          <simpara>Field-level errors.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>The generated request/response functions that got resolved for error fields.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <simpara>\n                  <emphasis role=\"bold\">ALL</emphasis>: The following information is logged for all fields in the query:</simpara>\n                <itemizedlist>\n                      <listitem>\n                          <simpara>Field-level tracing information.</simpara>\n                      </listitem>\n                      <listitem>\n                          <simpara>The generated request/response functions that got resolved for each field.</simpara>\n                      </listitem>\n                  </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The field logging level. Values can be NONE, ERROR, or ALL. </p>\n        <ul>\n            <li>\n                <p>\n                  <b>NONE</b>: No field-level logs are captured.</p>\n            </li>\n            <li>\n                <p>\n                  <b>ERROR</b>: Logs the following information only for the fields that are in error:</p>\n                <ul>\n                  <li>\n                        <p>The error section in the server response.</p>\n                    </li>\n                  <li>\n                          <p>Field-level errors.</p>\n                    </li>\n                  <li>\n                        <p>The generated request/response functions that got resolved for error fields.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>\n                  <b>ALL</b>: The following information is logged for all fields in the query:</p>\n                <ul>\n                  <li>\n                          <p>Field-level tracing information.</p>\n                      </li>\n                  <li>\n                          <p>The generated request/response functions that got resolved for each field.</p>\n                      </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "FieldLogLevel"
                    },
                    "cloudWatchLogsRoleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </para>\n      ",
                      "documentation": "\n        <p>The service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account. </p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>The Amazon CloudWatch Logs configuration.</para>\n      ",
                  "documentation": "\n        <p>The Amazon CloudWatch Logs configuration.</p>\n      ",
                  "shape_name": "LogConfig"
                },
                "userPoolConfig": {
                  "type": "structure",
                  "members": {
                    "userPoolId": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The user pool ID.</para>\n      ",
                      "documentation": "\n         <p>The user pool ID.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "awsRegion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The AWS Region in which the user pool was created.</para>\n      ",
                      "documentation": "\n         <p>The AWS Region in which the user pool was created.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "defaultAction": {
                      "type": "string",
                      "enum": [
                        "ALLOW",
                        "DENY"
                      ],
                      "zonbookDocumentation": "\n         <para>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</para>\n      ",
                      "documentation": "\n         <p>The action that you want your GraphQL API to take when a request that uses Amazon\n         Cognito user pool authentication doesn't match the Amazon Cognito user pool\n         configuration.</p>\n      ",
                      "required": true,
                      "shape_name": "DefaultAction"
                    },
                    "appIdClientRegex": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</para>\n      ",
                      "documentation": "\n         <p>A regular expression for validating the incoming Amazon Cognito user pool app client\n         ID.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The Amazon Cognito user pool configuration.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Cognito user pool configuration.</p>\n      ",
                  "shape_name": "UserPoolConfig"
                },
                "openIDConnectConfig": {
                  "type": "structure",
                  "members": {
                    "issuer": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</para>\n      ",
                      "documentation": "\n         <p>The issuer for the OpenID Connect configuration. The issuer returned by discovery must exactly match the value of <code>iss</code> in the ID token.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "clientId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</para>\n      ",
                      "documentation": "\n        <p>The client identifier of the Relying party at the OpenID identity provider.\n            This identifier is typically obtained when the Relying party is registered with the OpenID identity provider.\n            You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers\n            at a time.</p>\n      ",
                      "shape_name": "String"
                    },
                    "iatTTL": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being issued to a user.</para>\n      ",
                      "documentation": "\n        <p>The number of milliseconds a token is valid after being issued to a user.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "authTTL": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <para>The number of milliseconds a token is valid after being authenticated.</para>\n      ",
                      "documentation": "\n        <p>The number of milliseconds a token is valid after being authenticated.</p>\n      ",
                      "shape_name": "Long"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>The OpenID Connect configuration.</para>\n      ",
                  "documentation": "\n        <p>The OpenID Connect configuration.</p>\n      ",
                  "shape_name": "OpenIDConnectConfig"
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN.</para>\n      ",
                  "documentation": "\n         <p>The ARN.</p>\n      ",
                  "shape_name": "String"
                },
                "uris": {
                  "type": "map",
                  "zonbookDocumentation": "\n         <para>The URIs.</para>\n      ",
                  "documentation": "\n         <p>The URIs.</p>\n      ",
                  "shape_name": "MapOfStringToString",
                  "keys": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  },
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n         <para>Describes a GraphQL API.</para>\n      ",
              "documentation": "\n         <p>Describes a GraphQL API.</p>\n      ",
              "shape_name": "GraphqlApi"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListGraphqlApisResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists your GraphQL APIs.</p>\n      "
    },
    "CreateType": {
      "name": "CreateType",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/types"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "definition": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The type definition, in GraphQL Schema Definition Language (SDL) format.</para>\n         <para>For more information, see the <ulink url=\"http://graphql.org/learn/schema/\">GraphQL SDL\n            documentation</ulink>.</para>\n      ",
            "documentation": "\n         <p>The type definition, in GraphQL Schema Definition Language (SDL) format.</p>\n         <p>For more information, see the <a href=\"http://graphql.org/learn/schema/\">GraphQL SDL\n            documentation</a>.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "format": {
            "type": "string",
            "enum": [
              "SDL",
              "JSON"
            ],
            "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
            "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
            "required": true,
            "shape_name": "TypeDefinitionFormat"
          }
        },
        "shape_name": "CreateTypeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "type": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
                "documentation": "\n         <p>The type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type description.</para>\n      ",
                "documentation": "\n         <p>The type description.</p>\n      ",
                "shape_name": "String"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type ARN.</para>\n      ",
                "documentation": "\n         <p>The type ARN.</p>\n      ",
                "shape_name": "String"
              },
              "definition": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type definition.</para>\n      ",
                "documentation": "\n         <p>The type definition.</p>\n      ",
                "shape_name": "String"
              },
              "format": {
                "type": "string",
                "enum": [
                  "SDL",
                  "JSON"
                ],
                "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
                "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
                "shape_name": "TypeDefinitionFormat"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Type</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Type</code> object.</p>\n      ",
            "shape_name": "Type"
          }
        },
        "shape_name": "CreateTypeResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a <code>Type</code> object.</p>\n      "
    },
    "GetType": {
      "name": "GetType",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/types/{typeName}?format={format}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
            "documentation": "\n         <p>The type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "format": {
            "type": "string",
            "enum": [
              "SDL",
              "JSON"
            ],
            "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
            "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "TypeDefinitionFormat"
          }
        },
        "shape_name": "GetTypeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "type": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
                "documentation": "\n         <p>The type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type description.</para>\n      ",
                "documentation": "\n         <p>The type description.</p>\n      ",
                "shape_name": "String"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type ARN.</para>\n      ",
                "documentation": "\n         <p>The type ARN.</p>\n      ",
                "shape_name": "String"
              },
              "definition": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type definition.</para>\n      ",
                "documentation": "\n         <p>The type definition.</p>\n      ",
                "shape_name": "String"
              },
              "format": {
                "type": "string",
                "enum": [
                  "SDL",
                  "JSON"
                ],
                "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
                "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
                "shape_name": "TypeDefinitionFormat"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Type</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Type</code> object.</p>\n      ",
            "shape_name": "Type"
          }
        },
        "shape_name": "GetTypeResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Retrieves a <code>Type</code> object.</p>\n      "
    },
    "UpdateType": {
      "name": "UpdateType",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/types/{typeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The new type name.</para>\n      ",
            "documentation": "\n         <p>The new type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "definition": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new definition.</para>\n      ",
            "documentation": "\n         <p>The new definition.</p>\n      ",
            "shape_name": "String"
          },
          "format": {
            "type": "string",
            "enum": [
              "SDL",
              "JSON"
            ],
            "zonbookDocumentation": "\n         <para>The new type format: SDL or JSON.</para>\n      ",
            "documentation": "\n         <p>The new type format: SDL or JSON.</p>\n      ",
            "required": true,
            "shape_name": "TypeDefinitionFormat"
          }
        },
        "shape_name": "UpdateTypeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "type": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
                "documentation": "\n         <p>The type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type description.</para>\n      ",
                "documentation": "\n         <p>The type description.</p>\n      ",
                "shape_name": "String"
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type ARN.</para>\n      ",
                "documentation": "\n         <p>The type ARN.</p>\n      ",
                "shape_name": "String"
              },
              "definition": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The type definition.</para>\n      ",
                "documentation": "\n         <p>The type definition.</p>\n      ",
                "shape_name": "String"
              },
              "format": {
                "type": "string",
                "enum": [
                  "SDL",
                  "JSON"
                ],
                "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
                "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
                "shape_name": "TypeDefinitionFormat"
              }
            },
            "zonbookDocumentation": "\n         <para>The updated <code>Type</code> object.</para>\n      ",
            "documentation": "\n         <p>The updated <code>Type</code> object.</p>\n      ",
            "shape_name": "Type"
          }
        },
        "shape_name": "UpdateTypeResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a <code>Type</code> object.</p>\n      "
    },
    "DeleteType": {
      "name": "DeleteType",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/types/{typeName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
            "documentation": "\n         <p>The type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteTypeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteTypeResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a <code>Type</code> object.</p>\n      "
    },
    "ListTypes": {
      "name": "ListTypes",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/types?nextToken={nextToken}&maxResults={maxResults}&format={format}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "format": {
            "type": "string",
            "enum": [
              "SDL",
              "JSON"
            ],
            "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
            "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "TypeDefinitionFormat"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListTypesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "types": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The <code>Type</code> objects.</para>\n      ",
            "documentation": "\n         <p>The <code>Type</code> objects.</p>\n      ",
            "shape_name": "TypeList",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
                  "documentation": "\n         <p>The type name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The type description.</para>\n      ",
                  "documentation": "\n         <p>The type description.</p>\n      ",
                  "shape_name": "String"
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The type ARN.</para>\n      ",
                  "documentation": "\n         <p>The type ARN.</p>\n      ",
                  "shape_name": "String"
                },
                "definition": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The type definition.</para>\n      ",
                  "documentation": "\n         <p>The type definition.</p>\n      ",
                  "shape_name": "String"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "SDL",
                    "JSON"
                  ],
                  "zonbookDocumentation": "\n         <para>The type format: SDL or JSON.</para>\n      ",
                  "documentation": "\n         <p>The type format: SDL or JSON.</p>\n      ",
                  "shape_name": "TypeDefinitionFormat"
                }
              },
              "zonbookDocumentation": "\n         <para>Describes a type.</para>\n      ",
              "documentation": "\n         <p>Describes a type.</p>\n      ",
              "shape_name": "Type"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListTypesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the types for a given API.</p>\n      "
    },
    "CreateDataSource": {
      "name": "CreateDataSource",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/datasources"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID for the GraphQL API for the <code>DataSource</code>.</para>\n      ",
            "documentation": "\n         <p>The API ID for the GraphQL API for the <code>DataSource</code>.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>A user-supplied name for the <code>DataSource</code>.</para>\n      ",
            "documentation": "\n         <p>A user-supplied name for the <code>DataSource</code>.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description of the <code>DataSource</code>.</para>\n      ",
            "documentation": "\n         <p>A description of the <code>DataSource</code>.</p>\n      ",
            "shape_name": "String"
          },
          "type": {
            "type": "string",
            "enum": [
              "AWS_LAMBDA",
              "AMAZON_DYNAMODB",
              "AMAZON_ELASTICSEARCH",
              "NONE",
              "HTTP",
              "RELATIONAL_DATABASE"
            ],
            "zonbookDocumentation": "\n         <para>The type of the <code>DataSource</code>.</para>\n      ",
            "documentation": "\n         <p>The type of the <code>DataSource</code>.</p>\n      ",
            "required": true,
            "shape_name": "DataSourceType"
          },
          "serviceRoleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</para>\n      ",
            "documentation": "\n         <p>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</p>\n      ",
            "shape_name": "String"
          },
          "dynamodbConfig": {
            "type": "structure",
            "members": {
              "tableName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                "documentation": "\n         <p>The table name.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                "documentation": "\n         <p>The AWS Region.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "useCallerCredentials": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                "shape_name": "Boolean"
              }
            },
            "zonbookDocumentation": "\n         <para>Amazon DynamoDB settings.</para>\n      ",
            "documentation": "\n         <p>Amazon DynamoDB settings.</p>\n      ",
            "shape_name": "DynamodbDataSourceConfig"
          },
          "lambdaConfig": {
            "type": "structure",
            "members": {
              "lambdaFunctionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>AWS Lambda settings.</para>\n      ",
            "documentation": "\n         <p>AWS Lambda settings.</p>\n      ",
            "shape_name": "LambdaDataSourceConfig"
          },
          "elasticsearchConfig": {
            "type": "structure",
            "members": {
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                "documentation": "\n         <p>The endpoint.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                "documentation": "\n         <p>The AWS Region.</p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Amazon Elasticsearch Service settings.</para>\n      ",
            "documentation": "\n         <p>Amazon Elasticsearch Service settings.</p>\n      ",
            "shape_name": "ElasticsearchDataSourceConfig"
          },
          "httpConfig": {
            "type": "structure",
            "members": {
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                "shape_name": "String"
              },
              "authorizationConfig": {
                "type": "structure",
                "members": {
                  "authorizationType": {
                    "type": "string",
                    "enum": [
                      "AWS_IAM"
                    ],
                    "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "AuthorizationType"
                  },
                  "awsIamConfig": {
                    "type": "structure",
                    "members": {
                      "signingRegion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                        "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                        "shape_name": "String"
                      },
                      "signingServiceName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                        "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                    "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                    "shape_name": "AwsIamConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                "shape_name": "AuthorizationConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>HTTP endpoint settings.</para>\n      ",
            "documentation": "\n         <p>HTTP endpoint settings.</p>\n      ",
            "shape_name": "HttpDataSourceConfig"
          },
          "relationalDatabaseConfig": {
            "type": "structure",
            "members": {
              "relationalDatabaseSourceType": {
                "type": "string",
                "enum": [
                  "RDS_HTTP_ENDPOINT"
                ],
                "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "RelationalDatabaseSourceType"
              },
              "rdsHttpEndpointConfig": {
                "type": "structure",
                "members": {
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                    "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "dbClusterIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                    "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "databaseName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                    "documentation": "\n         <p>Logical database name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "schema": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                    "documentation": "\n         <p>Logical schema name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "awsSecretStoreArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                    "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                "shape_name": "RdsHttpEndpointConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>Relational database settings.</para>\n      ",
            "documentation": "\n         <p>Relational database settings.</p>\n      ",
            "shape_name": "RelationalDatabaseDataSourceConfig"
          }
        },
        "shape_name": "CreateDataSourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "dataSource": {
            "type": "structure",
            "members": {
              "dataSourceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The data source ARN.</para>\n      ",
                "documentation": "\n         <p>The data source ARN.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
                "documentation": "\n         <p>The name of the data source.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the data source.</para>\n      ",
                "documentation": "\n         <p>The description of the data source.</p>\n      ",
                "shape_name": "String"
              },
              "type": {
                "type": "string",
                "enum": [
                  "AWS_LAMBDA",
                  "AMAZON_DYNAMODB",
                  "AMAZON_ELASTICSEARCH",
                  "NONE",
                  "HTTP",
                  "RELATIONAL_DATABASE"
                ],
                "zonbookDocumentation": "\n         <para>The type of the data source.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_DYNAMODB</emphasis>: The data source is an Amazon\n               DynamoDB table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_ELASTICSEARCH</emphasis>: The data source is an\n               Amazon Elasticsearch Service domain.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_LAMBDA</emphasis>: The data source is an AWS Lambda\n               function.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">HTTP</emphasis>: The data source is an HTTP endpoint.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RELATIONAL_DATABASE</emphasis>: The data source is a relational\n               database.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of the data source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AMAZON_DYNAMODB</b>: The data source is an Amazon\n               DynamoDB table.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AMAZON_ELASTICSEARCH</b>: The data source is an\n               Amazon Elasticsearch Service domain.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AWS_LAMBDA</b>: The data source is an AWS Lambda\n               function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>NONE</b>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>HTTP</b>: The data source is an HTTP endpoint.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RELATIONAL_DATABASE</b>: The data source is a relational\n               database.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DataSourceType"
              },
              "serviceRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</para>\n      ",
                "documentation": "\n         <p>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</p>\n      ",
                "shape_name": "String"
              },
              "dynamodbConfig": {
                "type": "structure",
                "members": {
                  "tableName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                    "documentation": "\n         <p>The table name.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "useCallerCredentials": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                    "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon DynamoDB settings.</para>\n      ",
                "documentation": "\n         <p>Amazon DynamoDB settings.</p>\n      ",
                "shape_name": "DynamodbDataSourceConfig"
              },
              "lambdaConfig": {
                "type": "structure",
                "members": {
                  "lambdaFunctionArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                    "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>AWS Lambda settings.</para>\n      ",
                "documentation": "\n         <p>AWS Lambda settings.</p>\n      ",
                "shape_name": "LambdaDataSourceConfig"
              },
              "elasticsearchConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                    "documentation": "\n         <p>The endpoint.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon Elasticsearch Service settings.</para>\n      ",
                "documentation": "\n         <p>Amazon Elasticsearch Service settings.</p>\n      ",
                "shape_name": "ElasticsearchDataSourceConfig"
              },
              "httpConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                    "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                    "shape_name": "String"
                  },
                  "authorizationConfig": {
                    "type": "structure",
                    "members": {
                      "authorizationType": {
                        "type": "string",
                        "enum": [
                          "AWS_IAM"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "AuthorizationType"
                      },
                      "awsIamConfig": {
                        "type": "structure",
                        "members": {
                          "signingRegion": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          },
                          "signingServiceName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                        "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                        "shape_name": "AwsIamConfig"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                    "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                    "shape_name": "AuthorizationConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>HTTP endpoint settings.</para>\n      ",
                "documentation": "\n         <p>HTTP endpoint settings.</p>\n      ",
                "shape_name": "HttpDataSourceConfig"
              },
              "relationalDatabaseConfig": {
                "type": "structure",
                "members": {
                  "relationalDatabaseSourceType": {
                    "type": "string",
                    "enum": [
                      "RDS_HTTP_ENDPOINT"
                    ],
                    "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "RelationalDatabaseSourceType"
                  },
                  "rdsHttpEndpointConfig": {
                    "type": "structure",
                    "members": {
                      "awsRegion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                        "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                        "shape_name": "String"
                      },
                      "dbClusterIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                        "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                        "shape_name": "String"
                      },
                      "databaseName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                        "documentation": "\n         <p>Logical database name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "schema": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                        "documentation": "\n         <p>Logical schema name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "awsSecretStoreArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                        "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                    "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                    "shape_name": "RdsHttpEndpointConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>Relational database settings.</para>\n      ",
                "documentation": "\n         <p>Relational database settings.</p>\n      ",
                "shape_name": "RelationalDatabaseDataSourceConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>DataSource</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>DataSource</code> object.</p>\n      ",
            "shape_name": "DataSource"
          }
        },
        "shape_name": "CreateDataSourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a <code>DataSource</code> object.</p>\n      "
    },
    "GetDataSource": {
      "name": "GetDataSource",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/datasources/{name}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
            "documentation": "\n         <p>The name of the data source.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetDataSourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "dataSource": {
            "type": "structure",
            "members": {
              "dataSourceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The data source ARN.</para>\n      ",
                "documentation": "\n         <p>The data source ARN.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
                "documentation": "\n         <p>The name of the data source.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the data source.</para>\n      ",
                "documentation": "\n         <p>The description of the data source.</p>\n      ",
                "shape_name": "String"
              },
              "type": {
                "type": "string",
                "enum": [
                  "AWS_LAMBDA",
                  "AMAZON_DYNAMODB",
                  "AMAZON_ELASTICSEARCH",
                  "NONE",
                  "HTTP",
                  "RELATIONAL_DATABASE"
                ],
                "zonbookDocumentation": "\n         <para>The type of the data source.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_DYNAMODB</emphasis>: The data source is an Amazon\n               DynamoDB table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_ELASTICSEARCH</emphasis>: The data source is an\n               Amazon Elasticsearch Service domain.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_LAMBDA</emphasis>: The data source is an AWS Lambda\n               function.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">HTTP</emphasis>: The data source is an HTTP endpoint.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RELATIONAL_DATABASE</emphasis>: The data source is a relational\n               database.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of the data source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AMAZON_DYNAMODB</b>: The data source is an Amazon\n               DynamoDB table.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AMAZON_ELASTICSEARCH</b>: The data source is an\n               Amazon Elasticsearch Service domain.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AWS_LAMBDA</b>: The data source is an AWS Lambda\n               function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>NONE</b>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>HTTP</b>: The data source is an HTTP endpoint.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RELATIONAL_DATABASE</b>: The data source is a relational\n               database.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DataSourceType"
              },
              "serviceRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</para>\n      ",
                "documentation": "\n         <p>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</p>\n      ",
                "shape_name": "String"
              },
              "dynamodbConfig": {
                "type": "structure",
                "members": {
                  "tableName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                    "documentation": "\n         <p>The table name.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "useCallerCredentials": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                    "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon DynamoDB settings.</para>\n      ",
                "documentation": "\n         <p>Amazon DynamoDB settings.</p>\n      ",
                "shape_name": "DynamodbDataSourceConfig"
              },
              "lambdaConfig": {
                "type": "structure",
                "members": {
                  "lambdaFunctionArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                    "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>AWS Lambda settings.</para>\n      ",
                "documentation": "\n         <p>AWS Lambda settings.</p>\n      ",
                "shape_name": "LambdaDataSourceConfig"
              },
              "elasticsearchConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                    "documentation": "\n         <p>The endpoint.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon Elasticsearch Service settings.</para>\n      ",
                "documentation": "\n         <p>Amazon Elasticsearch Service settings.</p>\n      ",
                "shape_name": "ElasticsearchDataSourceConfig"
              },
              "httpConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                    "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                    "shape_name": "String"
                  },
                  "authorizationConfig": {
                    "type": "structure",
                    "members": {
                      "authorizationType": {
                        "type": "string",
                        "enum": [
                          "AWS_IAM"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "AuthorizationType"
                      },
                      "awsIamConfig": {
                        "type": "structure",
                        "members": {
                          "signingRegion": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          },
                          "signingServiceName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                        "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                        "shape_name": "AwsIamConfig"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                    "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                    "shape_name": "AuthorizationConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>HTTP endpoint settings.</para>\n      ",
                "documentation": "\n         <p>HTTP endpoint settings.</p>\n      ",
                "shape_name": "HttpDataSourceConfig"
              },
              "relationalDatabaseConfig": {
                "type": "structure",
                "members": {
                  "relationalDatabaseSourceType": {
                    "type": "string",
                    "enum": [
                      "RDS_HTTP_ENDPOINT"
                    ],
                    "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "RelationalDatabaseSourceType"
                  },
                  "rdsHttpEndpointConfig": {
                    "type": "structure",
                    "members": {
                      "awsRegion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                        "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                        "shape_name": "String"
                      },
                      "dbClusterIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                        "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                        "shape_name": "String"
                      },
                      "databaseName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                        "documentation": "\n         <p>Logical database name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "schema": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                        "documentation": "\n         <p>Logical schema name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "awsSecretStoreArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                        "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                    "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                    "shape_name": "RdsHttpEndpointConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>Relational database settings.</para>\n      ",
                "documentation": "\n         <p>Relational database settings.</p>\n      ",
                "shape_name": "RelationalDatabaseDataSourceConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>DataSource</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>DataSource</code> object.</p>\n      ",
            "shape_name": "DataSource"
          }
        },
        "shape_name": "GetDataSourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Retrieves a <code>DataSource</code> object.</p>\n      "
    },
    "UpdateDataSource": {
      "name": "UpdateDataSource",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/datasources/{name}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The new name for the data source.</para>\n      ",
            "documentation": "\n         <p>The new name for the data source.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new description for the data source.</para>\n      ",
            "documentation": "\n         <p>The new description for the data source.</p>\n      ",
            "shape_name": "String"
          },
          "type": {
            "type": "string",
            "enum": [
              "AWS_LAMBDA",
              "AMAZON_DYNAMODB",
              "AMAZON_ELASTICSEARCH",
              "NONE",
              "HTTP",
              "RELATIONAL_DATABASE"
            ],
            "zonbookDocumentation": "\n         <para>The new data source type.</para>\n      ",
            "documentation": "\n         <p>The new data source type.</p>\n      ",
            "required": true,
            "shape_name": "DataSourceType"
          },
          "serviceRoleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new service role ARN for the data source.</para>\n      ",
            "documentation": "\n         <p>The new service role ARN for the data source.</p>\n      ",
            "shape_name": "String"
          },
          "dynamodbConfig": {
            "type": "structure",
            "members": {
              "tableName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                "documentation": "\n         <p>The table name.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                "documentation": "\n         <p>The AWS Region.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "useCallerCredentials": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                "shape_name": "Boolean"
              }
            },
            "zonbookDocumentation": "\n         <para>The new Amazon DynamoDB configuration.</para>\n      ",
            "documentation": "\n         <p>The new Amazon DynamoDB configuration.</p>\n      ",
            "shape_name": "DynamodbDataSourceConfig"
          },
          "lambdaConfig": {
            "type": "structure",
            "members": {
              "lambdaFunctionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The new AWS Lambda configuration.</para>\n      ",
            "documentation": "\n         <p>The new AWS Lambda configuration.</p>\n      ",
            "shape_name": "LambdaDataSourceConfig"
          },
          "elasticsearchConfig": {
            "type": "structure",
            "members": {
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                "documentation": "\n         <p>The endpoint.</p>\n      ",
                "required": true,
                "shape_name": "String"
              },
              "awsRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                "documentation": "\n         <p>The AWS Region.</p>\n      ",
                "required": true,
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The new Elasticsearch Service configuration.</para>\n      ",
            "documentation": "\n         <p>The new Elasticsearch Service configuration.</p>\n      ",
            "shape_name": "ElasticsearchDataSourceConfig"
          },
          "httpConfig": {
            "type": "structure",
            "members": {
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                "shape_name": "String"
              },
              "authorizationConfig": {
                "type": "structure",
                "members": {
                  "authorizationType": {
                    "type": "string",
                    "enum": [
                      "AWS_IAM"
                    ],
                    "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "AuthorizationType"
                  },
                  "awsIamConfig": {
                    "type": "structure",
                    "members": {
                      "signingRegion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                        "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                        "shape_name": "String"
                      },
                      "signingServiceName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                        "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                    "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                    "shape_name": "AwsIamConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                "shape_name": "AuthorizationConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The new HTTP endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>The new HTTP endpoint configuration.</p>\n      ",
            "shape_name": "HttpDataSourceConfig"
          },
          "relationalDatabaseConfig": {
            "type": "structure",
            "members": {
              "relationalDatabaseSourceType": {
                "type": "string",
                "enum": [
                  "RDS_HTTP_ENDPOINT"
                ],
                "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "RelationalDatabaseSourceType"
              },
              "rdsHttpEndpointConfig": {
                "type": "structure",
                "members": {
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                    "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "dbClusterIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                    "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "databaseName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                    "documentation": "\n         <p>Logical database name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "schema": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                    "documentation": "\n         <p>Logical schema name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "awsSecretStoreArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                    "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                "shape_name": "RdsHttpEndpointConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The new relational database configuration.</para>\n      ",
            "documentation": "\n         <p>The new relational database configuration.</p>\n      ",
            "shape_name": "RelationalDatabaseDataSourceConfig"
          }
        },
        "shape_name": "UpdateDataSourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "dataSource": {
            "type": "structure",
            "members": {
              "dataSourceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The data source ARN.</para>\n      ",
                "documentation": "\n         <p>The data source ARN.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
                "documentation": "\n         <p>The name of the data source.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the data source.</para>\n      ",
                "documentation": "\n         <p>The description of the data source.</p>\n      ",
                "shape_name": "String"
              },
              "type": {
                "type": "string",
                "enum": [
                  "AWS_LAMBDA",
                  "AMAZON_DYNAMODB",
                  "AMAZON_ELASTICSEARCH",
                  "NONE",
                  "HTTP",
                  "RELATIONAL_DATABASE"
                ],
                "zonbookDocumentation": "\n         <para>The type of the data source.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_DYNAMODB</emphasis>: The data source is an Amazon\n               DynamoDB table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_ELASTICSEARCH</emphasis>: The data source is an\n               Amazon Elasticsearch Service domain.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_LAMBDA</emphasis>: The data source is an AWS Lambda\n               function.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">HTTP</emphasis>: The data source is an HTTP endpoint.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RELATIONAL_DATABASE</emphasis>: The data source is a relational\n               database.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of the data source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AMAZON_DYNAMODB</b>: The data source is an Amazon\n               DynamoDB table.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AMAZON_ELASTICSEARCH</b>: The data source is an\n               Amazon Elasticsearch Service domain.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AWS_LAMBDA</b>: The data source is an AWS Lambda\n               function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>NONE</b>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>HTTP</b>: The data source is an HTTP endpoint.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RELATIONAL_DATABASE</b>: The data source is a relational\n               database.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DataSourceType"
              },
              "serviceRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</para>\n      ",
                "documentation": "\n         <p>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</p>\n      ",
                "shape_name": "String"
              },
              "dynamodbConfig": {
                "type": "structure",
                "members": {
                  "tableName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                    "documentation": "\n         <p>The table name.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "useCallerCredentials": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                    "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon DynamoDB settings.</para>\n      ",
                "documentation": "\n         <p>Amazon DynamoDB settings.</p>\n      ",
                "shape_name": "DynamodbDataSourceConfig"
              },
              "lambdaConfig": {
                "type": "structure",
                "members": {
                  "lambdaFunctionArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                    "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>AWS Lambda settings.</para>\n      ",
                "documentation": "\n         <p>AWS Lambda settings.</p>\n      ",
                "shape_name": "LambdaDataSourceConfig"
              },
              "elasticsearchConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                    "documentation": "\n         <p>The endpoint.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  },
                  "awsRegion": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                    "documentation": "\n         <p>The AWS Region.</p>\n      ",
                    "required": true,
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Amazon Elasticsearch Service settings.</para>\n      ",
                "documentation": "\n         <p>Amazon Elasticsearch Service settings.</p>\n      ",
                "shape_name": "ElasticsearchDataSourceConfig"
              },
              "httpConfig": {
                "type": "structure",
                "members": {
                  "endpoint": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                    "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                    "shape_name": "String"
                  },
                  "authorizationConfig": {
                    "type": "structure",
                    "members": {
                      "authorizationType": {
                        "type": "string",
                        "enum": [
                          "AWS_IAM"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "AuthorizationType"
                      },
                      "awsIamConfig": {
                        "type": "structure",
                        "members": {
                          "signingRegion": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          },
                          "signingServiceName": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                            "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                        "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                        "shape_name": "AwsIamConfig"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                    "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                    "shape_name": "AuthorizationConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>HTTP endpoint settings.</para>\n      ",
                "documentation": "\n         <p>HTTP endpoint settings.</p>\n      ",
                "shape_name": "HttpDataSourceConfig"
              },
              "relationalDatabaseConfig": {
                "type": "structure",
                "members": {
                  "relationalDatabaseSourceType": {
                    "type": "string",
                    "enum": [
                      "RDS_HTTP_ENDPOINT"
                    ],
                    "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "RelationalDatabaseSourceType"
                  },
                  "rdsHttpEndpointConfig": {
                    "type": "structure",
                    "members": {
                      "awsRegion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                        "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                        "shape_name": "String"
                      },
                      "dbClusterIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                        "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                        "shape_name": "String"
                      },
                      "databaseName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                        "documentation": "\n         <p>Logical database name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "schema": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                        "documentation": "\n         <p>Logical schema name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "awsSecretStoreArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                        "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                    "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                    "shape_name": "RdsHttpEndpointConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>Relational database settings.</para>\n      ",
                "documentation": "\n         <p>Relational database settings.</p>\n      ",
                "shape_name": "RelationalDatabaseDataSourceConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The updated <code>DataSource</code> object.</para>\n      ",
            "documentation": "\n         <p>The updated <code>DataSource</code> object.</p>\n      ",
            "shape_name": "DataSource"
          }
        },
        "shape_name": "UpdateDataSourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a <code>DataSource</code> object.</p>\n      "
    },
    "DeleteDataSource": {
      "name": "DeleteDataSource",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/datasources/{name}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
            "documentation": "\n         <p>The name of the data source.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteDataSourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteDataSourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a <code>DataSource</code> object.</p>\n      "
    },
    "ListDataSources": {
      "name": "ListDataSources",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/datasources?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListDataSourcesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "dataSources": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The <code>DataSource</code> objects.</para>\n      ",
            "documentation": "\n         <p>The <code>DataSource</code> objects.</p>\n      ",
            "shape_name": "DataSources",
            "members": {
              "type": "structure",
              "members": {
                "dataSourceArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The data source ARN.</para>\n      ",
                  "documentation": "\n         <p>The data source ARN.</p>\n      ",
                  "shape_name": "String"
                },
                "name": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The name of the data source.</para>\n      ",
                  "documentation": "\n         <p>The name of the data source.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The description of the data source.</para>\n      ",
                  "documentation": "\n         <p>The description of the data source.</p>\n      ",
                  "shape_name": "String"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "AWS_LAMBDA",
                    "AMAZON_DYNAMODB",
                    "AMAZON_ELASTICSEARCH",
                    "NONE",
                    "HTTP",
                    "RELATIONAL_DATABASE"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of the data source.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_DYNAMODB</emphasis>: The data source is an Amazon\n               DynamoDB table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AMAZON_ELASTICSEARCH</emphasis>: The data source is an\n               Amazon Elasticsearch Service domain.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_LAMBDA</emphasis>: The data source is an AWS Lambda\n               function.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">NONE</emphasis>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">HTTP</emphasis>: The data source is an HTTP endpoint.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RELATIONAL_DATABASE</emphasis>: The data source is a relational\n               database.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of the data source.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AMAZON_DYNAMODB</b>: The data source is an Amazon\n               DynamoDB table.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AMAZON_ELASTICSEARCH</b>: The data source is an\n               Amazon Elasticsearch Service domain.</p>\n            </li>\n            <li>\n               <p>\n                  <b>AWS_LAMBDA</b>: The data source is an AWS Lambda\n               function.</p>\n            </li>\n            <li>\n               <p>\n                  <b>NONE</b>: There is no data source. This type is\n               used when you wish to invoke a GraphQL operation without connecting to a data\n               source, such as performing data transformation with resolvers or triggering a\n               subscription to be invoked from a mutation.</p>\n            </li>\n            <li>\n               <p>\n                  <b>HTTP</b>: The data source is an HTTP endpoint.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RELATIONAL_DATABASE</b>: The data source is a relational\n               database.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DataSourceType"
                },
                "serviceRoleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</para>\n      ",
                  "documentation": "\n         <p>The AWS IAM service role ARN for the data source. The system assumes this role when\n         accessing the data source.</p>\n      ",
                  "shape_name": "String"
                },
                "dynamodbConfig": {
                  "type": "structure",
                  "members": {
                    "tableName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The table name.</para>\n      ",
                      "documentation": "\n         <p>The table name.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "awsRegion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                      "documentation": "\n         <p>The AWS Region.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "useCallerCredentials": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Set to TRUE to use Amazon Cognito credentials with this data source.</para>\n      ",
                      "documentation": "\n         <p>Set to TRUE to use Amazon Cognito credentials with this data source.</p>\n      ",
                      "shape_name": "Boolean"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Amazon DynamoDB settings.</para>\n      ",
                  "documentation": "\n         <p>Amazon DynamoDB settings.</p>\n      ",
                  "shape_name": "DynamodbDataSourceConfig"
                },
                "lambdaConfig": {
                  "type": "structure",
                  "members": {
                    "lambdaFunctionArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN for the Lambda function.</para>\n      ",
                      "documentation": "\n         <p>The ARN for the Lambda function.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>AWS Lambda settings.</para>\n      ",
                  "documentation": "\n         <p>AWS Lambda settings.</p>\n      ",
                  "shape_name": "LambdaDataSourceConfig"
                },
                "elasticsearchConfig": {
                  "type": "structure",
                  "members": {
                    "endpoint": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The endpoint.</para>\n      ",
                      "documentation": "\n         <p>The endpoint.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "awsRegion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The AWS Region.</para>\n      ",
                      "documentation": "\n         <p>The AWS Region.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Amazon Elasticsearch Service settings.</para>\n      ",
                  "documentation": "\n         <p>Amazon Elasticsearch Service settings.</p>\n      ",
                  "shape_name": "ElasticsearchDataSourceConfig"
                },
                "httpConfig": {
                  "type": "structure",
                  "members": {
                    "endpoint": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</para>\n      ",
                      "documentation": "\n         <p>The HTTP URL endpoint. You can either specify the domain name or IP, and port combination, and the URL scheme must be HTTP or HTTPS. If the port is not specified, AWS AppSync uses the default port 80 for the HTTP endpoint and port 443 for HTTPS endpoints.</p>\n      ",
                      "shape_name": "String"
                    },
                    "authorizationConfig": {
                      "type": "structure",
                      "members": {
                        "authorizationType": {
                          "type": "string",
                          "enum": [
                            "AWS_IAM"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type required by the HTTP endpoint.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">AWS_IAM</emphasis>: The authorization type is\n               Sigv4.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The authorization type required by the HTTP endpoint.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>AWS_IAM</b>: The authorization type is\n               Sigv4.</p>\n            </li>\n         </ul>\n      ",
                          "required": true,
                          "shape_name": "AuthorizationType"
                        },
                        "awsIamConfig": {
                          "type": "structure",
                          "members": {
                            "signingRegion": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The signing region for AWS IAM authorization.</para>\n      ",
                              "documentation": "\n         <p>The signing region for AWS IAM authorization.</p>\n      ",
                              "shape_name": "String"
                            },
                            "signingServiceName": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The signing service name for AWS IAM authorization.</para>\n      ",
                              "documentation": "\n         <p>The signing service name for AWS IAM authorization.</p>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <para>The AWS IAM settings.</para>\n      ",
                          "documentation": "\n         <p>The AWS IAM settings.</p>\n      ",
                          "shape_name": "AwsIamConfig"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The authorization config in case the HTTP endpoint requires authorization.</para>\n      ",
                      "documentation": "\n         <p>The authorization config in case the HTTP endpoint requires authorization.</p>\n      ",
                      "shape_name": "AuthorizationConfig"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>HTTP endpoint settings.</para>\n      ",
                  "documentation": "\n         <p>HTTP endpoint settings.</p>\n      ",
                  "shape_name": "HttpDataSourceConfig"
                },
                "relationalDatabaseConfig": {
                  "type": "structure",
                  "members": {
                    "relationalDatabaseSourceType": {
                      "type": "string",
                      "enum": [
                        "RDS_HTTP_ENDPOINT"
                      ],
                      "zonbookDocumentation": "\n         <para>Source type for the relational database.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">RDS_HTTP_ENDPOINT</emphasis>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Source type for the relational database.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>RDS_HTTP_ENDPOINT</b>: The relational database source type\n               is an Amazon RDS HTTP endpoint.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "RelationalDatabaseSourceType"
                    },
                    "rdsHttpEndpointConfig": {
                      "type": "structure",
                      "members": {
                        "awsRegion": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>AWS Region for RDS HTTP endpoint.</para>\n      ",
                          "documentation": "\n         <p>AWS Region for RDS HTTP endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "dbClusterIdentifier": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Amazon RDS cluster identifier.</para>\n      ",
                          "documentation": "\n         <p>Amazon RDS cluster identifier.</p>\n      ",
                          "shape_name": "String"
                        },
                        "databaseName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Logical database name.</para>\n      ",
                          "documentation": "\n         <p>Logical database name.</p>\n      ",
                          "shape_name": "String"
                        },
                        "schema": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Logical schema name.</para>\n      ",
                          "documentation": "\n         <p>Logical schema name.</p>\n      ",
                          "shape_name": "String"
                        },
                        "awsSecretStoreArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>AWS secret store ARN for database credentials.</para>\n      ",
                          "documentation": "\n         <p>AWS secret store ARN for database credentials.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Amazon RDS HTTP endpoint settings.</para>\n      ",
                      "documentation": "\n         <p>Amazon RDS HTTP endpoint settings.</p>\n      ",
                      "shape_name": "RdsHttpEndpointConfig"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Relational database settings.</para>\n      ",
                  "documentation": "\n         <p>Relational database settings.</p>\n      ",
                  "shape_name": "RelationalDatabaseDataSourceConfig"
                }
              },
              "zonbookDocumentation": "\n         <para>Describes a data source.</para>\n      ",
              "documentation": "\n         <p>Describes a data source.</p>\n      ",
              "shape_name": "DataSource"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListDataSourcesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the data sources for a given API.</p>\n      "
    },
    "GetIntrospectionSchema": {
      "name": "GetIntrospectionSchema",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/schema?format={format}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "format": {
            "type": "string",
            "enum": [
              "SDL",
              "JSON"
            ],
            "zonbookDocumentation": "\n         <para>The schema format: SDL or JSON.</para>\n      ",
            "documentation": "\n         <p>The schema format: SDL or JSON.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "OutputType"
          }
        },
        "shape_name": "GetIntrospectionSchemaRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "schema": {
            "type": "blob",
            "zonbookDocumentation": "\n         <para>The schema, in GraphQL Schema Definition Language (SDL) format.</para>\n         <para>For more information, see the <ulink url=\"http://graphql.org/learn/schema/\">GraphQL SDL\n            documentation</ulink>.</para>\n      ",
            "documentation": "\n         <p>The schema, in GraphQL Schema Definition Language (SDL) format.</p>\n         <p>For more information, see the <a href=\"http://graphql.org/learn/schema/\">GraphQL SDL\n            documentation</a>.</p>\n      ",
            "payload": true,
            "shape_name": "Blob"
          }
        },
        "shape_name": "GetIntrospectionSchemaResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The GraphQL schema is not valid.</para>\n      ",
          "documentation": "\n         <p>The GraphQL schema is not valid.</p>\n      ",
          "shape_name": "GraphQLSchemaException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Retrieves the introspection schema for a GraphQL API.</p>\n      "
    },
    "StartSchemaCreation": {
      "name": "StartSchemaCreation",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/schemacreation"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "definition": {
            "type": "blob",
            "zonbookDocumentation": "\n         <para>The schema definition, in GraphQL schema language format.</para>\n      ",
            "documentation": "\n         <p>The schema definition, in GraphQL schema language format.</p>\n      ",
            "required": true,
            "shape_name": "Blob"
          }
        },
        "shape_name": "StartSchemaCreationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "ACTIVE",
              "DELETING"
            ],
            "zonbookDocumentation": "\n         <para>The current state of the schema (PROCESSING, ACTIVE, or DELETING). When the schema is in\n         the ACTIVE state, you can add data.</para>\n      ",
            "documentation": "\n         <p>The current state of the schema (PROCESSING, ACTIVE, or DELETING). When the schema is in\n         the ACTIVE state, you can add data.</p>\n      ",
            "shape_name": "SchemaStatus"
          }
        },
        "shape_name": "StartSchemaCreationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Adds a new schema to your GraphQL API.</p>\n         <p>This operation is asynchronous. Use  to\n         determine when it has completed.</p>\n      "
    },
    "GetSchemaCreationStatus": {
      "name": "GetSchemaCreationStatus",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/schemacreation"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "GetSchemaCreationStatusRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "ACTIVE",
              "DELETING"
            ],
            "zonbookDocumentation": "\n         <para>The current state of the schema (PROCESSING, ACTIVE, or DELETING). Once the schema is in\n         the ACTIVE state, you can add data.</para>\n      ",
            "documentation": "\n         <p>The current state of the schema (PROCESSING, ACTIVE, or DELETING). Once the schema is in\n         the ACTIVE state, you can add data.</p>\n      ",
            "shape_name": "SchemaStatus"
          },
          "details": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>Detailed information about the status of the schema creation operation.</para>\n      ",
            "documentation": "\n         <p>Detailed information about the status of the schema creation operation.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetSchemaCreationStatusResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Retrieves the current status of a schema creation operation.</p>\n      "
    },
    "CreateResolver": {
      "name": "CreateResolver",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/types/{typeName}/resolvers"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID for the GraphQL API for which the resolver is being created.</para>\n      ",
            "documentation": "\n         <p>The ID for the GraphQL API for which the resolver is being created.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the <code>Type</code>.</para>\n      ",
            "documentation": "\n         <p>The name of the <code>Type</code>.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "fieldName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the field to attach the resolver to.</para>\n      ",
            "documentation": "\n         <p>The name of the field to attach the resolver to.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "dataSourceName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the data source for which the resolver is being created.</para>\n      ",
            "documentation": "\n         <p>The name of the data source for which the resolver is being created.</p>\n      ",
            "shape_name": "ResourceName"
          },
          "requestMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The mapping template to be used for requests.</para>\n         <para>A resolver uses a request mapping template to convert a GraphQL expression into a format\n         that a data source can understand. Mapping templates are written in Apache Velocity\n         Template Language (VTL).</para>\n      ",
            "documentation": "\n         <p>The mapping template to be used for requests.</p>\n         <p>A resolver uses a request mapping template to convert a GraphQL expression into a format\n         that a data source can understand. Mapping templates are written in Apache Velocity\n         Template Language (VTL).</p>\n      ",
            "required": true,
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "responseMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The mapping template to be used for responses from the data source.</para>\n      ",
            "documentation": "\n         <p>The mapping template to be used for responses from the data source.</p>\n      ",
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "kind": {
            "type": "string",
            "enum": [
              "UNIT",
              "PIPELINE"
            ],
            "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n                   A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n                   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n           </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n               <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n                   A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n                   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n           </li>\n         </ul>\n      ",
            "shape_name": "ResolverKind"
          },
          "pipelineConfig": {
            "type": "structure",
            "members": {
              "functions": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                "shape_name": "FunctionsIds",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
            "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
            "shape_name": "PipelineConfig"
          }
        },
        "shape_name": "CreateResolverRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resolver": {
            "type": "structure",
            "members": {
              "typeName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
                "documentation": "\n         <p>The resolver type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "fieldName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
                "documentation": "\n         <p>The resolver field name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver data source name.</para>\n      ",
                "documentation": "\n         <p>The resolver data source name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resolverArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The resolver ARN.</para>\n      ",
                "documentation": "\n         <p>The resolver ARN.</p>\n      ",
                "shape_name": "String"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The request mapping template.</para>\n      ",
                "documentation": "\n         <p>The request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The response mapping template.</para>\n      ",
                "documentation": "\n         <p>The response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "kind": {
                "type": "string",
                "enum": [
                  "UNIT",
                  "PIPELINE"
                ],
                "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
                "shape_name": "ResolverKind"
              },
              "pipelineConfig": {
                "type": "structure",
                "members": {
                  "functions": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                    "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                    "shape_name": "FunctionsIds",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
                "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
                "shape_name": "PipelineConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Resolver</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Resolver</code> object.</p>\n      ",
            "shape_name": "Resolver"
          }
        },
        "shape_name": "CreateResolverResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Creates a <code>Resolver</code> object.</p>\n         <p>A resolver converts incoming requests into a format that a data source can understand\n         and converts the data source's responses into GraphQL.</p>\n      "
    },
    "UpdateResolver": {
      "name": "UpdateResolver",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The new type name.</para>\n      ",
            "documentation": "\n         <p>The new type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "fieldName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The new field name.</para>\n      ",
            "documentation": "\n         <p>The new field name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "dataSourceName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The new data source name.</para>\n      ",
            "documentation": "\n         <p>The new data source name.</p>\n      ",
            "shape_name": "ResourceName"
          },
          "requestMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new request mapping template.</para>\n      ",
            "documentation": "\n         <p>The new request mapping template.</p>\n      ",
            "required": true,
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "responseMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The new response mapping template.</para>\n      ",
            "documentation": "\n         <p>The new response mapping template.</p>\n      ",
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "kind": {
            "type": "string",
            "enum": [
              "UNIT",
              "PIPELINE"
            ],
            "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n  \t           A UNIT resolver is the default resolver type.\n  \t           A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n  \t         </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t           You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n  \t            <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n  \t           A UNIT resolver is the default resolver type.\n  \t           A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n  \t         </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t           You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
            "shape_name": "ResolverKind"
          },
          "pipelineConfig": {
            "type": "structure",
            "members": {
              "functions": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                "shape_name": "FunctionsIds",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
            "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
            "shape_name": "PipelineConfig"
          }
        },
        "shape_name": "UpdateResolverRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resolver": {
            "type": "structure",
            "members": {
              "typeName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
                "documentation": "\n         <p>The resolver type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "fieldName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
                "documentation": "\n         <p>The resolver field name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver data source name.</para>\n      ",
                "documentation": "\n         <p>The resolver data source name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resolverArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The resolver ARN.</para>\n      ",
                "documentation": "\n         <p>The resolver ARN.</p>\n      ",
                "shape_name": "String"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The request mapping template.</para>\n      ",
                "documentation": "\n         <p>The request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The response mapping template.</para>\n      ",
                "documentation": "\n         <p>The response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "kind": {
                "type": "string",
                "enum": [
                  "UNIT",
                  "PIPELINE"
                ],
                "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
                "shape_name": "ResolverKind"
              },
              "pipelineConfig": {
                "type": "structure",
                "members": {
                  "functions": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                    "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                    "shape_name": "FunctionsIds",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
                "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
                "shape_name": "PipelineConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The updated <code>Resolver</code> object.</para>\n      ",
            "documentation": "\n         <p>The updated <code>Resolver</code> object.</p>\n      ",
            "shape_name": "Resolver"
          }
        },
        "shape_name": "UpdateResolverResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Updates a <code>Resolver</code> object.</p>\n      "
    },
    "GetResolver": {
      "name": "GetResolver",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
            "documentation": "\n         <p>The resolver type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "fieldName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
            "documentation": "\n         <p>The resolver field name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetResolverRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resolver": {
            "type": "structure",
            "members": {
              "typeName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
                "documentation": "\n         <p>The resolver type name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "fieldName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
                "documentation": "\n         <p>The resolver field name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The resolver data source name.</para>\n      ",
                "documentation": "\n         <p>The resolver data source name.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "resolverArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The resolver ARN.</para>\n      ",
                "documentation": "\n         <p>The resolver ARN.</p>\n      ",
                "shape_name": "String"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The request mapping template.</para>\n      ",
                "documentation": "\n         <p>The request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The response mapping template.</para>\n      ",
                "documentation": "\n         <p>The response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "kind": {
                "type": "string",
                "enum": [
                  "UNIT",
                  "PIPELINE"
                ],
                "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
                "shape_name": "ResolverKind"
              },
              "pipelineConfig": {
                "type": "structure",
                "members": {
                  "functions": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                    "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                    "shape_name": "FunctionsIds",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
                "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
                "shape_name": "PipelineConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Resolver</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Resolver</code> object.</p>\n      ",
            "shape_name": "Resolver"
          }
        },
        "shape_name": "GetResolverResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Retrieves a <code>Resolver</code> object.</p>\n      "
    },
    "DeleteResolver": {
      "name": "DeleteResolver",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The name of the resolver type.</para>\n      ",
            "documentation": "\n         <p>The name of the resolver type.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "fieldName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
            "documentation": "\n         <p>The resolver field name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteResolverRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteResolverResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a <code>Resolver</code> object.</p>\n      "
    },
    "ListResolvers": {
      "name": "ListResolvers",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/types/{typeName}/resolvers?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "typeName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The type name.</para>\n      ",
            "documentation": "\n         <p>The type name.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list. </p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListResolversRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resolvers": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The <code>Resolver</code> objects.</para>\n      ",
            "documentation": "\n         <p>The <code>Resolver</code> objects.</p>\n      ",
            "shape_name": "Resolvers",
            "members": {
              "type": "structure",
              "members": {
                "typeName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
                  "documentation": "\n         <p>The resolver type name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "fieldName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
                  "documentation": "\n         <p>The resolver field name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "dataSourceName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver data source name.</para>\n      ",
                  "documentation": "\n         <p>The resolver data source name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resolverArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The resolver ARN.</para>\n      ",
                  "documentation": "\n         <p>The resolver ARN.</p>\n      ",
                  "shape_name": "String"
                },
                "requestMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The request mapping template.</para>\n      ",
                  "documentation": "\n         <p>The request mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "responseMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The response mapping template.</para>\n      ",
                  "documentation": "\n         <p>The response mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "UNIT",
                    "PIPELINE"
                  ],
                  "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
                  "shape_name": "ResolverKind"
                },
                "pipelineConfig": {
                  "type": "structure",
                  "members": {
                    "functions": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                      "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                      "shape_name": "FunctionsIds",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
                  "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
                  "shape_name": "PipelineConfig"
                }
              },
              "zonbookDocumentation": "\n         <para>Describes a resolver.</para>\n      ",
              "documentation": "\n         <p>Describes a resolver.</p>\n      ",
              "shape_name": "Resolver"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListResolversResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the resolvers for a given API and type.</p>\n      "
    },
    "CreateApiKey": {
      "name": "CreateApiKey",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/apikeys"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID for your GraphQL API.</para>\n      ",
            "documentation": "\n         <p>The ID for your GraphQL API.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description of the purpose of the API key.</para>\n      ",
            "documentation": "\n         <p>A description of the purpose of the API key.</p>\n      ",
            "shape_name": "String"
          },
          "expires": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The time from creation time after which the API key expires. The date is represented as\n         seconds since the epoch, rounded down to the nearest hour. The default value for this\n         parameter is 7 days from creation time. For more information, see <xref linkend=\"API_ApiKey\"/>.</para>\n      ",
            "documentation": "\n         <p>The time from creation time after which the API key expires. The date is represented as\n         seconds since the epoch, rounded down to the nearest hour. The default value for this\n         parameter is 7 days from creation time. For more information, see .</p>\n      ",
            "shape_name": "Long"
          }
        },
        "shape_name": "CreateApiKeyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "apiKey": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The API key ID.</para>\n      ",
                "documentation": "\n         <p>The API key ID.</p>\n      ",
                "shape_name": "String"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A description of the purpose of the API key.</para>\n      ",
                "documentation": "\n         <p>A description of the purpose of the API key.</p>\n      ",
                "shape_name": "String"
              },
              "expires": {
                "type": "long",
                "zonbookDocumentation": "\n         <para>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</para>\n      ",
                "documentation": "\n         <p>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</p>\n      ",
                "shape_name": "Long"
              }
            },
            "zonbookDocumentation": "\n         <para>The API key.</para>\n      ",
            "documentation": "\n         <p>The API key.</p>\n      ",
            "shape_name": "ApiKey"
          }
        },
        "shape_name": "CreateApiKeyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The API key exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The API key exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "ApiKeyLimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The API key expiration must be set to a value between 1 and 365 days from creation (for\n            <code>CreateApiKey</code>) or from update (for <code>UpdateApiKey</code>).</para>\n      ",
          "documentation": "\n         <p>The API key expiration must be set to a value between 1 and 365 days from creation (for\n            <code>CreateApiKey</code>) or from update (for <code>UpdateApiKey</code>).</p>\n      ",
          "shape_name": "ApiKeyValidityOutOfBoundsException"
        }
      ],
      "documentation": "\n         <p>Creates a unique key that you can distribute to clients who are executing your\n         API.</p>\n      "
    },
    "UpdateApiKey": {
      "name": "UpdateApiKey",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/apikeys/{id}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID for the GraphQL API.</para>\n      ",
            "documentation": "\n         <p>The ID for the GraphQL API.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "id": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API key ID.</para>\n      ",
            "documentation": "\n         <p>The API key ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description of the purpose of the API key.</para>\n      ",
            "documentation": "\n         <p>A description of the purpose of the API key.</p>\n      ",
            "shape_name": "String"
          },
          "expires": {
            "type": "long",
            "zonbookDocumentation": "\n         <para>The time from update time after which the API key expires. The date is represented as\n         seconds since the epoch. For more information, see <xref linkend=\"API_ApiKey\"/>.</para>\n      ",
            "documentation": "\n         <p>The time from update time after which the API key expires. The date is represented as\n         seconds since the epoch. For more information, see .</p>\n      ",
            "shape_name": "Long"
          }
        },
        "shape_name": "UpdateApiKeyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "apiKey": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The API key ID.</para>\n      ",
                "documentation": "\n         <p>The API key ID.</p>\n      ",
                "shape_name": "String"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A description of the purpose of the API key.</para>\n      ",
                "documentation": "\n         <p>A description of the purpose of the API key.</p>\n      ",
                "shape_name": "String"
              },
              "expires": {
                "type": "long",
                "zonbookDocumentation": "\n         <para>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</para>\n      ",
                "documentation": "\n         <p>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</p>\n      ",
                "shape_name": "Long"
              }
            },
            "zonbookDocumentation": "\n         <para>The API key.</para>\n      ",
            "documentation": "\n         <p>The API key.</p>\n      ",
            "shape_name": "ApiKey"
          }
        },
        "shape_name": "UpdateApiKeyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The API key expiration must be set to a value between 1 and 365 days from creation (for\n            <code>CreateApiKey</code>) or from update (for <code>UpdateApiKey</code>).</para>\n      ",
          "documentation": "\n         <p>The API key expiration must be set to a value between 1 and 365 days from creation (for\n            <code>CreateApiKey</code>) or from update (for <code>UpdateApiKey</code>).</p>\n      ",
          "shape_name": "ApiKeyValidityOutOfBoundsException"
        }
      ],
      "documentation": "\n         <p>Updates an API key.</p>\n      "
    },
    "DeleteApiKey": {
      "name": "DeleteApiKey",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/apikeys/{id}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "id": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID for the API key.</para>\n      ",
            "documentation": "\n         <p>The ID for the API key.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteApiKeyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteApiKeyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes an API key.</p>\n      "
    },
    "ListApiKeys": {
      "name": "ListApiKeys",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/apikeys?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n         used to return the next set of items in the list.</p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListApiKeysRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "apiKeys": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The <code>ApiKey</code> objects.</para>\n      ",
            "documentation": "\n         <p>The <code>ApiKey</code> objects.</p>\n      ",
            "shape_name": "ApiKeys",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The API key ID.</para>\n      ",
                  "documentation": "\n         <p>The API key ID.</p>\n      ",
                  "shape_name": "String"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>A description of the purpose of the API key.</para>\n      ",
                  "documentation": "\n         <p>A description of the purpose of the API key.</p>\n      ",
                  "shape_name": "String"
                },
                "expires": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <para>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</para>\n      ",
                  "documentation": "\n         <p>The time after which the API key expires. The date is represented as seconds since the\n         epoch, rounded down to the nearest hour.</p>\n      ",
                  "shape_name": "Long"
                }
              },
              "zonbookDocumentation": "\n         <para>Describes an API key.</para>\n         <para>Customers invoke AWS AppSync GraphQL API operations with API keys as an identity mechanism. There\n         are two key versions:</para>\n         <para>\n            <emphasis role=\"bold\">da1</emphasis>:  This version was introduced at launch in November\n         2017. These keys always expire after 7 days. Key expiration is managed by Amazon DynamoDB TTL. The\n         keys ceased to be valid after February 21, 2018 and should not be used after that\n         date.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ListApiKeys</code> returns the expiration time in milliseconds.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>CreateApiKey</code> returns the expiration time in\n               milliseconds.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>UpdateApiKey</code> is not available for this key version.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DeleteApiKey</code> deletes the item from the table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Expiration is stored in Amazon DynamoDB as milliseconds. This results in a bug where\n               keys are not automatically deleted because DynamoDB expects the TTL to be stored in\n               seconds. As a one-time action, we will delete these keys from the table after February 21,\n               2018.</simpara>\n            </listitem>\n         </itemizedlist>\n         <para>\n            <emphasis role=\"bold\">da2</emphasis>: This version was introduced in February 2018 when\n         AppSync added support to extend key expiration.</para>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ListApiKeys</code> returns the expiration time in seconds.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>CreateApiKey</code> returns the expiration time in seconds and accepts a\n               user-provided expiration time in seconds.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>UpdateApiKey</code> returns the expiration time in seconds and accepts a\n               user-provided expiration time in seconds. Key expiration can only be updated while\n               the key has not expired.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DeleteApiKey</code> deletes the item from the table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Expiration is stored in Amazon DynamoDB as seconds.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
              "documentation": "\n         <p>Describes an API key.</p>\n         <p>Customers invoke AWS AppSync GraphQL API operations with API keys as an identity mechanism. There\n         are two key versions:</p>\n         <p>\n            <b>da1</b>:  This version was introduced at launch in November\n         2017. These keys always expire after 7 days. Key expiration is managed by Amazon DynamoDB TTL. The\n         keys ceased to be valid after February 21, 2018 and should not be used after that\n         date.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ListApiKeys</code> returns the expiration time in milliseconds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CreateApiKey</code> returns the expiration time in\n               milliseconds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UpdateApiKey</code> is not available for this key version.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DeleteApiKey</code> deletes the item from the table.</p>\n            </li>\n            <li>\n               <p>Expiration is stored in Amazon DynamoDB as milliseconds. This results in a bug where\n               keys are not automatically deleted because DynamoDB expects the TTL to be stored in\n               seconds. As a one-time action, we will delete these keys from the table after February 21,\n               2018.</p>\n            </li>\n         </ul>\n         <p>\n            <b>da2</b>: This version was introduced in February 2018 when\n         AppSync added support to extend key expiration.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ListApiKeys</code> returns the expiration time in seconds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CreateApiKey</code> returns the expiration time in seconds and accepts a\n               user-provided expiration time in seconds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UpdateApiKey</code> returns the expiration time in seconds and accepts a\n               user-provided expiration time in seconds. Key expiration can only be updated while\n               the key has not expired.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DeleteApiKey</code> deletes the item from the table.</p>\n            </li>\n            <li>\n               <p>Expiration is stored in Amazon DynamoDB as seconds.</p>\n            </li>\n         </ul>\n      ",
              "shape_name": "ApiKey"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier to be passed in the next request to this operation to return the next set\n         of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListApiKeysResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Lists the API keys for a given API.</p>\n         <note>\n            <p>API keys are deleted automatically sometime after they expire. However, they may\n            still be included in the response until they have actually been deleted. You can safely\n            call <code>DeleteApiKey</code> to manually delete a key before it's automatically\n            deleted.</p>\n         </note>\n      "
    },
    "TagGraphqlApi": {
      "name": "TagGraphqlApi",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/tags"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "location": "uri",
            "required": true,
            "shape_name": "String",
            "documentation": null
          },
          "tags": {
            "type": "list",
            "location": "uri",
            "required": true,
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "Value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          }
        },
        "shape_name": "TagGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "TagGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "shape_name": "TaggingException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "UntagGraphqlApi": {
      "name": "UntagGraphqlApi",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/tags/{tagKeys}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "location": "uri",
            "required": true,
            "shape_name": "String",
            "documentation": null
          },
          "tagKeys": {
            "type": "list",
            "location": "uri",
            "required": true,
            "shape_name": "TagKeyList",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            }
          }
        },
        "shape_name": "UntagGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UntagGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "shape_name": "TaggingException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "ListTagsForGraphqlApi": {
      "name": "ListTagsForGraphqlApi",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/tags?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "location": "uri",
            "required": true,
            "shape_name": "String",
            "documentation": null
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "location": "uri",
            "shape_name": "PaginationToken",
            "documentation": null
          },
          "maxResults": {
            "type": "integer",
            "location": "uri",
            "shape_name": "MaxResults",
            "documentation": null,
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListTagsForGraphqlApiRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tags": {
            "type": "list",
            "shape_name": "TagList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "shape_name": "TagKey",
                  "documentation": null
                },
                "Value": {
                  "type": "string",
                  "shape_name": "TagValue",
                  "documentation": null
                }
              },
              "shape_name": "Tag",
              "documentation": null
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "shape_name": "PaginationToken",
            "documentation": null
          }
        },
        "shape_name": "ListTagsForGraphqlApiResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request exceeded a limit. Try your request again.</para>\n      ",
          "documentation": "\n         <p>The request exceeded a limit. Try your request again.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "shape_name": "TaggingException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "CreateFunction": {
      "name": "CreateFunction",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/functions"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The GraphQL API ID.</para>\n      ",
            "documentation": "\n        <p>The GraphQL API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> name. The function name does not have to be unique.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> name. The function name does not have to be unique.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> description.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> description.</p>\n      ",
            "shape_name": "String"
          },
          "dataSourceName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> \n            <code>DataSource</code> name.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> \n            <code>DataSource</code> name.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "requestMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
            "required": true,
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "responseMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> response mapping template. </para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> response mapping template. </p>\n      ",
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "functionVersion": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. </para>\n      ",
            "documentation": "\n        <p>The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. </p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "CreateFunctionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "functionConfiguration": {
            "type": "structure",
            "members": {
              "functionId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A unique ID representing the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>A unique ID representing the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "functionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The ARN of the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>Function</code> object.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> description.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> description.</p>\n      ",
                "shape_name": "String"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>DataSource</code>.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>DataSource</code>.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> response mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "functionVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</para>\n      ",
                "documentation": "\n         <p>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n        <para>The <code>Function</code> object.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> object.</p>\n      ",
            "shape_name": "FunctionConfiguration"
          }
        },
        "shape_name": "CreateFunctionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n        <p>Creates a <code>Function</code> object.</p>\n        <p>A function is a reusable entity. Multiple functions can be used to compose the resolver logic.</p>\n      "
    },
    "UpdateFunction": {
      "name": "UpdateFunction",
      "http": {
        "method": "POST",
        "uri": "/v1/apis/{apiId}/functions/{functionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The GraphQL API ID.</para>\n      ",
            "documentation": "\n        <p>The GraphQL API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "name": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> name.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> name.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> description.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> description.</p>\n      ",
            "shape_name": "String"
          },
          "functionId": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n        <para>The function ID.</para>\n      ",
            "documentation": "\n        <p>The function ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          },
          "dataSourceName": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> \n            <code>DataSource</code> name.</para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> \n            <code>DataSource</code> name.</p>\n      ",
            "required": true,
            "shape_name": "ResourceName"
          },
          "requestMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n  \t      <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
            "documentation": "\n  \t      <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
            "required": true,
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "responseMappingTemplate": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The <code>Function</code> request mapping template. </para>\n      ",
            "documentation": "\n        <p>The <code>Function</code> request mapping template. </p>\n      ",
            "shape_name": "MappingTemplate",
            "min_length": 1,
            "max_length": 65536
          },
          "functionVersion": {
            "type": "string",
            "zonbookDocumentation": "\n  \t      <para>The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. </para>\n      ",
            "documentation": "\n  \t      <p>The <code>version</code> of the request mapping template. Currently the supported value is 2018-05-29. </p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "UpdateFunctionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "functionConfiguration": {
            "type": "structure",
            "members": {
              "functionId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A unique ID representing the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>A unique ID representing the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "functionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The ARN of the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>Function</code> object.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> description.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> description.</p>\n      ",
                "shape_name": "String"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>DataSource</code>.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>DataSource</code>.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> response mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "functionVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</para>\n      ",
                "documentation": "\n         <p>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Function</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Function</code> object.</p>\n      ",
            "shape_name": "FunctionConfiguration"
          }
        },
        "shape_name": "UpdateFunctionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n        <p>Updates a <code>Function</code> object.</p>\n      "
    },
    "GetFunction": {
      "name": "GetFunction",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/functions/{functionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The GraphQL API ID.</para>\n      ",
            "documentation": "\n         <p>The GraphQL API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "functionId": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The <code>Function</code> ID.</para>\n      ",
            "documentation": "\n         <p>The <code>Function</code> ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "GetFunctionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "functionConfiguration": {
            "type": "structure",
            "members": {
              "functionId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A unique ID representing the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>A unique ID representing the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "functionArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The ARN of the <code>Function</code> object.</p>\n      ",
                "shape_name": "String"
              },
              "name": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>Function</code> object.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>Function</code> object.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> description.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> description.</p>\n      ",
                "shape_name": "String"
              },
              "dataSourceName": {
                "type": "string",
                "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                "zonbookDocumentation": "\n         <para>The name of the <code>DataSource</code>.</para>\n      ",
                "documentation": "\n         <p>The name of the <code>DataSource</code>.</p>\n      ",
                "shape_name": "ResourceName"
              },
              "requestMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "responseMappingTemplate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The <code>Function</code> response mapping template.</para>\n      ",
                "documentation": "\n         <p>The <code>Function</code> response mapping template.</p>\n      ",
                "shape_name": "MappingTemplate",
                "min_length": 1,
                "max_length": 65536
              },
              "functionVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</para>\n      ",
                "documentation": "\n         <p>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>The <code>Function</code> object.</para>\n      ",
            "documentation": "\n         <p>The <code>Function</code> object.</p>\n      ",
            "shape_name": "FunctionConfiguration"
          }
        },
        "shape_name": "GetFunctionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        }
      ],
      "documentation": "\n         <p>Get a <code>Function</code>.</p>\n      "
    },
    "DeleteFunction": {
      "name": "DeleteFunction",
      "http": {
        "method": "DELETE",
        "uri": "/v1/apis/{apiId}/functions/{functionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The GraphQL API ID.</para>\n      ",
            "documentation": "\n         <p>The GraphQL API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "functionId": {
            "type": "string",
            "pattern": "[_A-Za-z][_0-9A-Za-z]*",
            "zonbookDocumentation": "\n         <para>The <code>Function</code> ID.</para>\n      ",
            "documentation": "\n         <p>The <code>Function</code> ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "ResourceName"
          }
        },
        "shape_name": "DeleteFunctionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteFunctionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>Another modification is in progress at this time and it must complete before you can make\n         your change. </para>\n      ",
          "documentation": "\n         <p>Another modification is in progress at this time and it must complete before you can make\n         your change. </p>\n      ",
          "shape_name": "ConcurrentModificationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>Deletes a <code>Function</code>.</p>\n      "
    },
    "ListFunctions": {
      "name": "ListFunctions",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/functions?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The GraphQL API ID.</para>\n      ",
            "documentation": "\n         <p>The GraphQL API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n           used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n           used to return the next set of items in the list.</p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListFunctionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "functions": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
            "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
            "shape_name": "Functions",
            "members": {
              "type": "structure",
              "members": {
                "functionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>A unique ID representing the <code>Function</code> object.</para>\n      ",
                  "documentation": "\n         <p>A unique ID representing the <code>Function</code> object.</p>\n      ",
                  "shape_name": "String"
                },
                "functionArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the <code>Function</code> object.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the <code>Function</code> object.</p>\n      ",
                  "shape_name": "String"
                },
                "name": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The name of the <code>Function</code> object.</para>\n      ",
                  "documentation": "\n         <p>The name of the <code>Function</code> object.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The <code>Function</code> description.</para>\n      ",
                  "documentation": "\n         <p>The <code>Function</code> description.</p>\n      ",
                  "shape_name": "String"
                },
                "dataSourceName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The name of the <code>DataSource</code>.</para>\n      ",
                  "documentation": "\n         <p>The name of the <code>DataSource</code>.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "requestMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</para>\n      ",
                  "documentation": "\n         <p>The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "responseMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The <code>Function</code> response mapping template.</para>\n      ",
                  "documentation": "\n         <p>The <code>Function</code> response mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "functionVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</para>\n      ",
                  "documentation": "\n         <p>The version of the request mapping template. Currently only the 2018-05-29 version of the template is supported.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>A function is a reusable entity. Multiple functions can be used to compose the resolver logic.</para>\n      ",
              "documentation": "\n         <p>A function is a reusable entity. Multiple functions can be used to compose the resolver logic.</p>\n      ",
              "shape_name": "FunctionConfiguration"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be\n           used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be\n           used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListFunctionsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>List multiple functions.</p>\n      "
    },
    "ListResolversByFunction": {
      "name": "ListResolversByFunction",
      "http": {
        "method": "GET",
        "uri": "/v1/apis/{apiId}/functions/{functionId}/resolvers?nextToken={nextToken}&maxResults={maxResults}&"
      },
      "input": {
        "type": "structure",
        "members": {
          "apiId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The API ID.</para>\n      ",
            "documentation": "\n         <p>The API ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "functionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Function ID.</para>\n      ",
            "documentation": "\n         <p>The Function ID.</p>\n      ",
            "location": "uri",
            "required": true,
            "shape_name": "String"
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which you can use to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which you can use to return the next set of items in the list.</p>\n      ",
            "location": "uri",
            "shape_name": "PaginationToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results you want the request to return.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results you want the request to return.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 0,
            "max_length": 25
          }
        },
        "shape_name": "ListResolversByFunctionRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "resolvers": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The list of resolvers.</para>\n      ",
            "documentation": "\n         <p>The list of resolvers.</p>\n      ",
            "shape_name": "Resolvers",
            "members": {
              "type": "structure",
              "members": {
                "typeName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver type name.</para>\n      ",
                  "documentation": "\n         <p>The resolver type name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "fieldName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver field name.</para>\n      ",
                  "documentation": "\n         <p>The resolver field name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "dataSourceName": {
                  "type": "string",
                  "pattern": "[_A-Za-z][_0-9A-Za-z]*",
                  "zonbookDocumentation": "\n         <para>The resolver data source name.</para>\n      ",
                  "documentation": "\n         <p>The resolver data source name.</p>\n      ",
                  "shape_name": "ResourceName"
                },
                "resolverArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The resolver ARN.</para>\n      ",
                  "documentation": "\n         <p>The resolver ARN.</p>\n      ",
                  "shape_name": "String"
                },
                "requestMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The request mapping template.</para>\n      ",
                  "documentation": "\n         <p>The request mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "responseMappingTemplate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The response mapping template.</para>\n      ",
                  "documentation": "\n         <p>The response mapping template.</p>\n      ",
                  "shape_name": "MappingTemplate",
                  "min_length": 1,
                  "max_length": 65536
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "UNIT",
                    "PIPELINE"
                  ],
                  "zonbookDocumentation": "\n         <para>The resolver type.</para>\n         <itemizedlist>\n           <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">UNIT</emphasis>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</simpara>\n           </listitem>\n  \t         <listitem>\n  \t            <simpara>\n                  <emphasis role=\"bold\">PIPELINE</emphasis>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</simpara>\n  \t         </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The resolver type.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>UNIT</b>: A UNIT resolver type.\n                   A UNIT resolver is the default resolver type.\n                   A UNIT resolver enables you to execute a GraphQL query against a single data source.</p>\n           </li>\n            <li>\n  \t            <p>\n                  <b>PIPELINE</b>: A PIPELINE resolver type.\n  \t           A PIPELINE resolver enables you to execute a series of <code>Function</code> in a serial manner.\n  \t\t   You can use a pipeline resolver to execute a GraphQL query against multiple data sources.</p>\n  \t         </li>\n         </ul>\n      ",
                  "shape_name": "ResolverKind"
                },
                "pipelineConfig": {
                  "type": "structure",
                  "members": {
                    "functions": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of <code>Function</code> objects.</para>\n      ",
                      "documentation": "\n         <p>A list of <code>Function</code> objects.</p>\n      ",
                      "shape_name": "FunctionsIds",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The <code>PipelineConfig</code>.</para>\n      ",
                  "documentation": "\n         <p>The <code>PipelineConfig</code>.</p>\n      ",
                  "shape_name": "PipelineConfig"
                }
              },
              "zonbookDocumentation": "\n         <para>Describes a resolver.</para>\n      ",
              "documentation": "\n         <p>Describes a resolver.</p>\n      ",
              "shape_name": "Resolver"
            }
          },
          "nextToken": {
            "type": "string",
            "pattern": "[\\\\S]+",
            "zonbookDocumentation": "\n         <para>An identifier that can be used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that can be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "shape_name": "ListResolversByFunctionResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </para>\n      ",
          "documentation": "\n         <p>The request is not well formed. For example, a value is invalid or a required field is\n         missing. Check the field values, and then try again. </p>\n      ",
          "shape_name": "BadRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The resource specified in the request was not found. Check the resource, and then try\n         again.</para>\n      ",
          "documentation": "\n         <p>The resource specified in the request was not found. Check the resource, and then try\n         again.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>You are not authorized to perform this operation.</para>\n      ",
          "documentation": "\n         <p>You are not authorized to perform this operation.</p>\n      ",
          "shape_name": "UnauthorizedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>An internal AWS AppSync error occurred. Try your request again.</para>\n      ",
          "documentation": "\n         <p>An internal AWS AppSync error occurred. Try your request again.</p>\n      ",
          "shape_name": "InternalFailureException"
        }
      ],
      "documentation": "\n         <p>List the resolvers that are associated with a specific function.</p>\n      "
    }
  }
}
