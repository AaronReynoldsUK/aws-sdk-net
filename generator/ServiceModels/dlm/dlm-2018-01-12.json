{
  "version": "1.0",
  "api_version": "2018-01-12",
  "endpoint_prefix": "dlm",
  "json_version": 1.1,
  "service_abbreviation": "Amazon DLM",
  "service_full_name": "Amazon Data Lifecycle Manager",
  "service_id": "DLM",
  "signature_version": "v4",
  "signing_name": "dlm",
  "type": "rest-json",
  "uid": "dlm-2018-01-12",
  "documentation": "\n         <fullname>Amazon Data Lifecycle Manager</fullname>\n         <p>With Amazon Data Lifecycle Manager, you can manage the lifecycle of your AWS resources. You create lifecycle policies, \n        which are used to automate operations on the specified resources.</p> \n         <p>Amazon DLM supports Amazon EBS volumes and snapshots. For information about using Amazon DLM with Amazon EBS, see \n      <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html\">Automating the Amazon EBS Snapshot Lifecycle</a>\n      in the <i>Amazon EC2 User Guide</i>.</p>\n      ",
  "operations": {
    "CreateLifecyclePolicy": {
      "name": "CreateLifecyclePolicy",
      "http": {
        "method": "POST",
        "uri": "/policies"
      },
      "input": {
        "type": "structure",
        "members": {
          "ExecutionRoleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</p>\n      ",
            "required": true,
            "shape_name": "ExecutionRoleArn"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.</para>\n      ",
            "documentation": "\n         <p>A description of the lifecycle policy. The characters ^[0-9A-Za-z _-]+$ are supported.</p>\n      ",
            "required": true,
            "shape_name": "PolicyDescription",
            "min_length": 0,
            "max_length": 500
          },
          "State": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <para>The desired activation state of the lifecycle policy after creation.</para>\n      ",
            "documentation": "\n         <p>The desired activation state of the lifecycle policy after creation.</p>\n      ",
            "required": true,
            "shape_name": "SettablePolicyStateValues"
          },
          "PolicyDetails": {
            "type": "structure",
            "members": {
              "ResourceTypes": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The resource type.</para>\n      ",
                "documentation": "\n         <p>The resource type.</p>\n      ",
                "shape_name": "ResourceTypeValuesList",
                "min_length": 1,
                "max_length": 1,
                "members": {
                  "type": "string",
                  "enum": [
                    "VOLUME"
                  ],
                  "shape_name": "ResourceTypeValues",
                  "documentation": null
                }
              },
              "TargetTags": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The single tag that identifies targeted resources for this policy.</para>\n      ",
                "documentation": "\n         <p>The single tag that identifies targeted resources for this policy.</p>\n      ",
                "shape_name": "TargetTagList",
                "min_length": 1,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "Key": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                      "documentation": "\n         <p>The tag key.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "Value": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                      "documentation": "\n         <p>The tag value.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                  "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                  "shape_name": "Tag"
                }
              },
              "Schedules": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The schedule of policy-defined actions.</para>\n      ",
                "documentation": "\n         <p>The schedule of policy-defined actions.</p>\n      ",
                "shape_name": "ScheduleList",
                "min_length": 1,
                "max_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the schedule.</para>\n      ",
                      "documentation": "\n         <p>The name of the schedule.</p>\n      ",
                      "shape_name": "ScheduleName",
                      "min_length": 0,
                      "max_length": 500
                    },
                    "CopyTags": {
                      "type": "boolean",
                      "shape_name": "CopyTags",
                      "documentation": null
                    },
                    "TagsToAdd": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</para>\n      ",
                      "documentation": "\n         <p>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</p>\n      ",
                      "shape_name": "TagsToAddList",
                      "min_length": 0,
                      "max_length": 50,
                      "members": {
                        "type": "structure",
                        "members": {
                          "Key": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                            "documentation": "\n         <p>The tag key.</p>\n      ",
                            "required": true,
                            "shape_name": "String"
                          },
                          "Value": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                            "documentation": "\n         <p>The tag value.</p>\n      ",
                            "required": true,
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                        "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                        "shape_name": "Tag"
                      }
                    },
                    "CreateRule": {
                      "type": "structure",
                      "members": {
                        "Interval": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The interval. The supported values are 12 and 24.</para>\n      ",
                          "documentation": "\n         <p>The interval. The supported values are 12 and 24.</p>\n      ",
                          "required": true,
                          "shape_name": "Interval",
                          "min_length": 1
                        },
                        "IntervalUnit": {
                          "type": "string",
                          "enum": [
                            "HOURS"
                          ],
                          "zonbookDocumentation": "\n         <para>The interval unit.</para>\n      ",
                          "documentation": "\n         <p>The interval unit.</p>\n      ",
                          "required": true,
                          "shape_name": "IntervalUnitValues"
                        },
                        "Times": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>The time, in UTC, to start the operation.</para>\n         <para>The operation occurs within a one-hour window following the specified time.</para>\n      ",
                          "documentation": "\n         <p>The time, in UTC, to start the operation.</p>\n         <p>The operation occurs within a one-hour window following the specified time.</p>\n      ",
                          "shape_name": "TimesList",
                          "max_length": 1,
                          "members": {
                            "type": "string",
                            "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                            "shape_name": "Time",
                            "documentation": null
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The create rule.</para>\n      ",
                      "documentation": "\n         <p>The create rule.</p>\n      ",
                      "shape_name": "CreateRule"
                    },
                    "RetainRule": {
                      "type": "structure",
                      "members": {
                        "Count": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The number of snapshots to keep for each volume, up to a maximum of 1000.</para>\n      ",
                          "documentation": "\n         <p>The number of snapshots to keep for each volume, up to a maximum of 1000.</p>\n      ",
                          "required": true,
                          "shape_name": "Count",
                          "min_length": 1,
                          "max_length": 1000
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The retain rule.</para>\n      ",
                      "documentation": "\n         <p>The retain rule.</p>\n      ",
                      "shape_name": "RetainRule"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies a schedule.</para>\n      ",
                  "documentation": "\n         <p>Specifies a schedule.</p>\n      ",
                  "shape_name": "Schedule"
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The configuration details of the lifecycle policy.</para>\n         <para>Target tags cannot be re-used across lifecycle policies.</para>\n      ",
            "documentation": "\n         <p>The configuration details of the lifecycle policy.</p>\n         <p>Target tags cannot be re-used across lifecycle policies.</p>\n      ",
            "required": true,
            "shape_name": "PolicyDetails"
          }
        },
        "shape_name": "CreateLifecyclePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "PolicyId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
            "shape_name": "PolicyId"
          }
        },
        "shape_name": "CreateLifecyclePolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "RequiredParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request omitted one or more required parameters.</para>\n      ",
              "documentation": "\n         <p>The request omitted one or more required parameters.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            },
            "MutuallyExclusiveParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request included parameters that cannot be provided together.</para>\n      ",
              "documentation": "\n         <p>The request included parameters that cannot be provided together.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>Bad request. The request is missing required parameters or has invalid parameters.</para>\n     ",
          "documentation": "\n         <p>Bad request. The request is missing required parameters or has invalid parameters.</p>\n     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource for which a limit was exceeded.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource for which a limit was exceeded.</p>\n      ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n         <para>The request failed because a limit was exceeded.</para>\n     ",
          "documentation": "\n         <p>The request failed because a limit was exceeded.</p>\n     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service failed in an unexpected way.</para>\n      ",
          "documentation": "\n         <p>The service failed in an unexpected way.</p>\n      ",
          "shape_name": "InternalServerException"
        }
      ],
      "documentation": "\n         <p>Creates a policy to manage the lifecycle of the specified AWS resources.\n          You can create up to 100 lifecycle policies.</p>\n      "
    },
    "UpdateLifecyclePolicy": {
      "name": "UpdateLifecyclePolicy",
      "http": {
        "method": "PATCH",
        "uri": "/policies/{PolicyId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "PolicyId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyId"
          },
          "ExecutionRoleArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</p>\n      ",
            "shape_name": "ExecutionRoleArn"
          },
          "State": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ],
            "zonbookDocumentation": "\n         <para>The desired activation state of the lifecycle policy after creation.</para>\n      ",
            "documentation": "\n         <p>The desired activation state of the lifecycle policy after creation.</p>\n      ",
            "shape_name": "SettablePolicyStateValues"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description of the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>A description of the lifecycle policy.</p>\n      ",
            "shape_name": "PolicyDescription",
            "min_length": 0,
            "max_length": 500
          },
          "PolicyDetails": {
            "type": "structure",
            "members": {
              "ResourceTypes": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The resource type.</para>\n      ",
                "documentation": "\n         <p>The resource type.</p>\n      ",
                "shape_name": "ResourceTypeValuesList",
                "min_length": 1,
                "max_length": 1,
                "members": {
                  "type": "string",
                  "enum": [
                    "VOLUME"
                  ],
                  "shape_name": "ResourceTypeValues",
                  "documentation": null
                }
              },
              "TargetTags": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The single tag that identifies targeted resources for this policy.</para>\n      ",
                "documentation": "\n         <p>The single tag that identifies targeted resources for this policy.</p>\n      ",
                "shape_name": "TargetTagList",
                "min_length": 1,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "Key": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                      "documentation": "\n         <p>The tag key.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "Value": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                      "documentation": "\n         <p>The tag value.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                  "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                  "shape_name": "Tag"
                }
              },
              "Schedules": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The schedule of policy-defined actions.</para>\n      ",
                "documentation": "\n         <p>The schedule of policy-defined actions.</p>\n      ",
                "shape_name": "ScheduleList",
                "min_length": 1,
                "max_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the schedule.</para>\n      ",
                      "documentation": "\n         <p>The name of the schedule.</p>\n      ",
                      "shape_name": "ScheduleName",
                      "min_length": 0,
                      "max_length": 500
                    },
                    "CopyTags": {
                      "type": "boolean",
                      "shape_name": "CopyTags",
                      "documentation": null
                    },
                    "TagsToAdd": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</para>\n      ",
                      "documentation": "\n         <p>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</p>\n      ",
                      "shape_name": "TagsToAddList",
                      "min_length": 0,
                      "max_length": 50,
                      "members": {
                        "type": "structure",
                        "members": {
                          "Key": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                            "documentation": "\n         <p>The tag key.</p>\n      ",
                            "required": true,
                            "shape_name": "String"
                          },
                          "Value": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                            "documentation": "\n         <p>The tag value.</p>\n      ",
                            "required": true,
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                        "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                        "shape_name": "Tag"
                      }
                    },
                    "CreateRule": {
                      "type": "structure",
                      "members": {
                        "Interval": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The interval. The supported values are 12 and 24.</para>\n      ",
                          "documentation": "\n         <p>The interval. The supported values are 12 and 24.</p>\n      ",
                          "required": true,
                          "shape_name": "Interval",
                          "min_length": 1
                        },
                        "IntervalUnit": {
                          "type": "string",
                          "enum": [
                            "HOURS"
                          ],
                          "zonbookDocumentation": "\n         <para>The interval unit.</para>\n      ",
                          "documentation": "\n         <p>The interval unit.</p>\n      ",
                          "required": true,
                          "shape_name": "IntervalUnitValues"
                        },
                        "Times": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>The time, in UTC, to start the operation.</para>\n         <para>The operation occurs within a one-hour window following the specified time.</para>\n      ",
                          "documentation": "\n         <p>The time, in UTC, to start the operation.</p>\n         <p>The operation occurs within a one-hour window following the specified time.</p>\n      ",
                          "shape_name": "TimesList",
                          "max_length": 1,
                          "members": {
                            "type": "string",
                            "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                            "shape_name": "Time",
                            "documentation": null
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The create rule.</para>\n      ",
                      "documentation": "\n         <p>The create rule.</p>\n      ",
                      "shape_name": "CreateRule"
                    },
                    "RetainRule": {
                      "type": "structure",
                      "members": {
                        "Count": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The number of snapshots to keep for each volume, up to a maximum of 1000.</para>\n      ",
                          "documentation": "\n         <p>The number of snapshots to keep for each volume, up to a maximum of 1000.</p>\n      ",
                          "required": true,
                          "shape_name": "Count",
                          "min_length": 1,
                          "max_length": 1000
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The retain rule.</para>\n      ",
                      "documentation": "\n         <p>The retain rule.</p>\n      ",
                      "shape_name": "RetainRule"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies a schedule.</para>\n      ",
                  "documentation": "\n         <p>Specifies a schedule.</p>\n      ",
                  "shape_name": "Schedule"
                }
              }
            },
            "zonbookDocumentation": "\n         <para>The configuration of the lifecycle policy.</para>\n         <para>Target tags cannot be re-used across policies.</para>\n      ",
            "documentation": "\n         <p>The configuration of the lifecycle policy.</p>\n         <p>Target tags cannot be re-used across policies.</p>\n      ",
            "shape_name": "PolicyDetails"
          }
        },
        "shape_name": "UpdateLifecyclePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UpdateLifecyclePolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource that was not found.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource that was not found.</p>\n      ",
              "shape_name": "String"
            },
            "ResourceIds": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>Value is a list of resource IDs that were not found.</para>\n      ",
              "documentation": "\n         <p>Value is a list of resource IDs that were not found.</p>\n      ",
              "shape_name": "PolicyIdList",
              "members": {
                "type": "string",
                "shape_name": "PolicyId",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>A requested resource was not found.</para>\n     ",
          "documentation": "\n         <p>A requested resource was not found.</p>\n     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "RequiredParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request omitted one or more required parameters.</para>\n      ",
              "documentation": "\n         <p>The request omitted one or more required parameters.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            },
            "MutuallyExclusiveParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request included parameters that cannot be provided together.</para>\n      ",
              "documentation": "\n         <p>The request included parameters that cannot be provided together.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>Bad request. The request is missing required parameters or has invalid parameters.</para>\n     ",
          "documentation": "\n         <p>Bad request. The request is missing required parameters or has invalid parameters.</p>\n     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service failed in an unexpected way.</para>\n      ",
          "documentation": "\n         <p>The service failed in an unexpected way.</p>\n      ",
          "shape_name": "InternalServerException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource for which a limit was exceeded.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource for which a limit was exceeded.</p>\n      ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n         <para>The request failed because a limit was exceeded.</para>\n     ",
          "documentation": "\n         <p>The request failed because a limit was exceeded.</p>\n     ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Updates the specified lifecycle policy.</p>\n      "
    },
    "DeleteLifecyclePolicy": {
      "name": "DeleteLifecyclePolicy",
      "http": {
        "method": "DELETE",
        "uri": "/policies/{PolicyId}/"
      },
      "input": {
        "type": "structure",
        "members": {
          "PolicyId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PolicyId"
          }
        },
        "shape_name": "DeleteLifecyclePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteLifecyclePolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource that was not found.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource that was not found.</p>\n      ",
              "shape_name": "String"
            },
            "ResourceIds": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>Value is a list of resource IDs that were not found.</para>\n      ",
              "documentation": "\n         <p>Value is a list of resource IDs that were not found.</p>\n      ",
              "shape_name": "PolicyIdList",
              "members": {
                "type": "string",
                "shape_name": "PolicyId",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>A requested resource was not found.</para>\n     ",
          "documentation": "\n         <p>A requested resource was not found.</p>\n     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service failed in an unexpected way.</para>\n      ",
          "documentation": "\n         <p>The service failed in an unexpected way.</p>\n      ",
          "shape_name": "InternalServerException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource for which a limit was exceeded.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource for which a limit was exceeded.</p>\n      ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n         <para>The request failed because a limit was exceeded.</para>\n     ",
          "documentation": "\n         <p>The request failed because a limit was exceeded.</p>\n     ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified lifecycle policy and halts the automated operations that the policy specified.</p>\n      "
    },
    "GetLifecyclePolicy": {
      "name": "GetLifecyclePolicy",
      "http": {
        "method": "GET",
        "uri": "/policies/{PolicyId}/"
      },
      "input": {
        "type": "structure",
        "members": {
          "PolicyId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
            "location": "uri",
            "shape_name": "PolicyId"
          }
        },
        "shape_name": "GetLifecyclePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Policy": {
            "type": "structure",
            "members": {
              "PolicyId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
                "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
                "shape_name": "PolicyId"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the lifecycle policy.</para>\n      ",
                "documentation": "\n         <p>The description of the lifecycle policy.</p>\n      ",
                "shape_name": "PolicyDescription",
                "min_length": 0,
                "max_length": 500
              },
              "State": {
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED",
                  "ERROR"
                ],
                "zonbookDocumentation": "\n         <para>The activation state of the lifecycle policy.</para>\n      ",
                "documentation": "\n         <p>The activation state of the lifecycle policy.</p>\n      ",
                "shape_name": "GettablePolicyStateValues"
              },
              "ExecutionRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the IAM role used to run the operations specified by the lifecycle policy.</p>\n      ",
                "shape_name": "ExecutionRoleArn"
              },
              "DateCreated": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The local date and time when the lifecycle policy was created.</para>\n      ",
                "documentation": "\n         <p>The local date and time when the lifecycle policy was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "DateModified": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The local date and time when the lifecycle policy was last modified.</para>\n      ",
                "documentation": "\n         <p>The local date and time when the lifecycle policy was last modified.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "PolicyDetails": {
                "type": "structure",
                "members": {
                  "ResourceTypes": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The resource type.</para>\n      ",
                    "documentation": "\n         <p>The resource type.</p>\n      ",
                    "shape_name": "ResourceTypeValuesList",
                    "min_length": 1,
                    "max_length": 1,
                    "members": {
                      "type": "string",
                      "enum": [
                        "VOLUME"
                      ],
                      "shape_name": "ResourceTypeValues",
                      "documentation": null
                    }
                  },
                  "TargetTags": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The single tag that identifies targeted resources for this policy.</para>\n      ",
                    "documentation": "\n         <p>The single tag that identifies targeted resources for this policy.</p>\n      ",
                    "shape_name": "TargetTagList",
                    "min_length": 1,
                    "max_length": 50,
                    "members": {
                      "type": "structure",
                      "members": {
                        "Key": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                          "documentation": "\n         <p>The tag key.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "Value": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                          "documentation": "\n         <p>The tag value.</p>\n      ",
                          "required": true,
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                      "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                      "shape_name": "Tag"
                    }
                  },
                  "Schedules": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The schedule of policy-defined actions.</para>\n      ",
                    "documentation": "\n         <p>The schedule of policy-defined actions.</p>\n      ",
                    "shape_name": "ScheduleList",
                    "min_length": 1,
                    "max_length": 1,
                    "members": {
                      "type": "structure",
                      "members": {
                        "Name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the schedule.</para>\n      ",
                          "documentation": "\n         <p>The name of the schedule.</p>\n      ",
                          "shape_name": "ScheduleName",
                          "min_length": 0,
                          "max_length": 500
                        },
                        "CopyTags": {
                          "type": "boolean",
                          "shape_name": "CopyTags",
                          "documentation": null
                        },
                        "TagsToAdd": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</para>\n      ",
                          "documentation": "\n         <p>The tags to apply to policy-created resources. These user-defined tags are in addition\n      to the AWS-added lifecycle tags.</p>\n      ",
                          "shape_name": "TagsToAddList",
                          "min_length": 0,
                          "max_length": 50,
                          "members": {
                            "type": "structure",
                            "members": {
                              "Key": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The tag key.</para>\n      ",
                                "documentation": "\n         <p>The tag key.</p>\n      ",
                                "required": true,
                                "shape_name": "String"
                              },
                              "Value": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The tag value.</para>\n      ",
                                "documentation": "\n         <p>The tag value.</p>\n      ",
                                "required": true,
                                "shape_name": "String"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>Specifies a tag for a resource.</para>\n      ",
                            "documentation": "\n         <p>Specifies a tag for a resource.</p>\n      ",
                            "shape_name": "Tag"
                          }
                        },
                        "CreateRule": {
                          "type": "structure",
                          "members": {
                            "Interval": {
                              "type": "integer",
                              "zonbookDocumentation": "\n         <para>The interval. The supported values are 12 and 24.</para>\n      ",
                              "documentation": "\n         <p>The interval. The supported values are 12 and 24.</p>\n      ",
                              "required": true,
                              "shape_name": "Interval",
                              "min_length": 1
                            },
                            "IntervalUnit": {
                              "type": "string",
                              "enum": [
                                "HOURS"
                              ],
                              "zonbookDocumentation": "\n         <para>The interval unit.</para>\n      ",
                              "documentation": "\n         <p>The interval unit.</p>\n      ",
                              "required": true,
                              "shape_name": "IntervalUnitValues"
                            },
                            "Times": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>The time, in UTC, to start the operation.</para>\n         <para>The operation occurs within a one-hour window following the specified time.</para>\n      ",
                              "documentation": "\n         <p>The time, in UTC, to start the operation.</p>\n         <p>The operation occurs within a one-hour window following the specified time.</p>\n      ",
                              "shape_name": "TimesList",
                              "max_length": 1,
                              "members": {
                                "type": "string",
                                "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
                                "shape_name": "Time",
                                "documentation": null
                              }
                            }
                          },
                          "zonbookDocumentation": "\n         <para>The create rule.</para>\n      ",
                          "documentation": "\n         <p>The create rule.</p>\n      ",
                          "shape_name": "CreateRule"
                        },
                        "RetainRule": {
                          "type": "structure",
                          "members": {
                            "Count": {
                              "type": "integer",
                              "zonbookDocumentation": "\n         <para>The number of snapshots to keep for each volume, up to a maximum of 1000.</para>\n      ",
                              "documentation": "\n         <p>The number of snapshots to keep for each volume, up to a maximum of 1000.</p>\n      ",
                              "required": true,
                              "shape_name": "Count",
                              "min_length": 1,
                              "max_length": 1000
                            }
                          },
                          "zonbookDocumentation": "\n         <para>The retain rule.</para>\n      ",
                          "documentation": "\n         <p>The retain rule.</p>\n      ",
                          "shape_name": "RetainRule"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Specifies a schedule.</para>\n      ",
                      "documentation": "\n         <p>Specifies a schedule.</p>\n      ",
                      "shape_name": "Schedule"
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>The configuration of the lifecycle policy</para>\n      ",
                "documentation": "\n         <p>The configuration of the lifecycle policy</p>\n      ",
                "shape_name": "PolicyDetails"
              }
            },
            "zonbookDocumentation": "\n         <para>Detailed information about the lifecycle policy.</para>\n      ",
            "documentation": "\n         <p>Detailed information about the lifecycle policy.</p>\n      ",
            "shape_name": "LifecyclePolicy"
          }
        },
        "shape_name": "GetLifecyclePolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource that was not found.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource that was not found.</p>\n      ",
              "shape_name": "String"
            },
            "ResourceIds": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>Value is a list of resource IDs that were not found.</para>\n      ",
              "documentation": "\n         <p>Value is a list of resource IDs that were not found.</p>\n      ",
              "shape_name": "PolicyIdList",
              "members": {
                "type": "string",
                "shape_name": "PolicyId",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>A requested resource was not found.</para>\n     ",
          "documentation": "\n         <p>A requested resource was not found.</p>\n     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service failed in an unexpected way.</para>\n      ",
          "documentation": "\n         <p>The service failed in an unexpected way.</p>\n      ",
          "shape_name": "InternalServerException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource for which a limit was exceeded.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource for which a limit was exceeded.</p>\n      ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n         <para>The request failed because a limit was exceeded.</para>\n     ",
          "documentation": "\n         <p>The request failed because a limit was exceeded.</p>\n     ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Gets detailed information about the specified lifecycle policy.</p>\n      "
    },
    "GetLifecyclePolicies": {
      "name": "GetLifecyclePolicies",
      "http": {
        "method": "GET",
        "uri": "/policies?policyIds={PolicyIds}&state={State}&resourceTypes={ResourceTypes}&targetTags={TargetTags}&tagsToAdd={TagsToAdd}"
      },
      "input": {
        "type": "structure",
        "members": {
          "PolicyIds": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The identifiers of the data lifecycle policies.</para>\n      ",
            "documentation": "\n         <p>The identifiers of the data lifecycle policies.</p>\n      ",
            "location": "uri",
            "shape_name": "PolicyIdList",
            "members": {
              "type": "string",
              "shape_name": "PolicyId",
              "documentation": null
            }
          },
          "State": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED",
              "ERROR"
            ],
            "zonbookDocumentation": "\n         <para>The activation state.</para>\n      ",
            "documentation": "\n         <p>The activation state.</p>\n      ",
            "location": "uri",
            "shape_name": "GettablePolicyStateValues"
          },
          "ResourceTypes": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The resource type.</para>\n      ",
            "documentation": "\n         <p>The resource type.</p>\n      ",
            "location": "uri",
            "shape_name": "ResourceTypeValuesList",
            "min_length": 1,
            "max_length": 1,
            "members": {
              "type": "string",
              "enum": [
                "VOLUME"
              ],
              "shape_name": "ResourceTypeValues",
              "documentation": null
            }
          },
          "TargetTags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The target tag for a policy.</para>\n         <para>Tags are strings in the format <code>key=value</code>.</para>\n      ",
            "documentation": "\n         <p>The target tag for a policy.</p>\n         <p>Tags are strings in the format <code>key=value</code>.</p>\n      ",
            "location": "uri",
            "shape_name": "TargetTagsFilterList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "string",
              "shape_name": "TagFilter",
              "documentation": null
            }
          },
          "TagsToAdd": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The tags to add to objects created by the policy.</para>\n         <para>Tags are strings in the format <code>key=value</code>.</para>\n         <para>These user-defined tags are added in addition to the AWS-added lifecycle tags.</para>\n      ",
            "documentation": "\n         <p>The tags to add to objects created by the policy.</p>\n         <p>Tags are strings in the format <code>key=value</code>.</p>\n         <p>These user-defined tags are added in addition to the AWS-added lifecycle tags.</p>\n      ",
            "location": "uri",
            "shape_name": "TagsToAddFilterList",
            "min_length": 0,
            "max_length": 50,
            "members": {
              "type": "string",
              "shape_name": "TagFilter",
              "documentation": null
            }
          }
        },
        "shape_name": "GetLifecyclePoliciesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Policies": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Summary information about the lifecycle policies.</para>\n      ",
            "documentation": "\n         <p>Summary information about the lifecycle policies.</p>\n      ",
            "shape_name": "LifecyclePolicySummaryList",
            "members": {
              "type": "structure",
              "members": {
                "PolicyId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The identifier of the lifecycle policy.</para>\n      ",
                  "documentation": "\n         <p>The identifier of the lifecycle policy.</p>\n      ",
                  "shape_name": "PolicyId"
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The description of the lifecycle policy.</para>\n      ",
                  "documentation": "\n         <p>The description of the lifecycle policy.</p>\n      ",
                  "shape_name": "PolicyDescription",
                  "min_length": 0,
                  "max_length": 500
                },
                "State": {
                  "type": "string",
                  "enum": [
                    "ENABLED",
                    "DISABLED",
                    "ERROR"
                  ],
                  "zonbookDocumentation": "\n         <para>The activation state of the lifecycle policy.</para>\n      ",
                  "documentation": "\n         <p>The activation state of the lifecycle policy.</p>\n      ",
                  "shape_name": "GettablePolicyStateValues"
                }
              },
              "zonbookDocumentation": "\n         <para>Summary information about a lifecycle policy.</para>\n      ",
              "documentation": "\n         <p>Summary information about a lifecycle policy.</p>\n      ",
              "shape_name": "LifecyclePolicySummary"
            }
          }
        },
        "shape_name": "GetLifecyclePoliciesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource that was not found.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource that was not found.</p>\n      ",
              "shape_name": "String"
            },
            "ResourceIds": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>Value is a list of resource IDs that were not found.</para>\n      ",
              "documentation": "\n         <p>Value is a list of resource IDs that were not found.</p>\n      ",
              "shape_name": "PolicyIdList",
              "members": {
                "type": "string",
                "shape_name": "PolicyId",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>A requested resource was not found.</para>\n     ",
          "documentation": "\n         <p>A requested resource was not found.</p>\n     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "RequiredParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request omitted one or more required parameters.</para>\n      ",
              "documentation": "\n         <p>The request omitted one or more required parameters.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            },
            "MutuallyExclusiveParameters": {
              "type": "list",
              "zonbookDocumentation": "\n         <para>The request included parameters that cannot be provided together.</para>\n      ",
              "documentation": "\n         <p>The request included parameters that cannot be provided together.</p>\n      ",
              "shape_name": "ParameterList",
              "members": {
                "type": "string",
                "shape_name": "Parameter",
                "documentation": null
              }
            }
          },
          "zonbookDocumentation": "\n         <para>Bad request. The request is missing required parameters or has invalid parameters.</para>\n     ",
          "documentation": "\n         <p>Bad request. The request is missing required parameters or has invalid parameters.</p>\n     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service failed in an unexpected way.</para>\n      ",
          "documentation": "\n         <p>The service failed in an unexpected way.</p>\n      ",
          "shape_name": "InternalServerException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            },
            "Code": {
              "type": "string",
              "shape_name": "ErrorCode",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>Value is the type of resource for which a limit was exceeded.</para>\n      ",
              "documentation": "\n         <p>Value is the type of resource for which a limit was exceeded.</p>\n      ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n         <para>The request failed because a limit was exceeded.</para>\n     ",
          "documentation": "\n         <p>The request failed because a limit was exceeded.</p>\n     ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Gets summary information about all or the specified data lifecycle policies.</p>\n         <p>To get complete information about a policy, use <a>GetLifecyclePolicy</a>.</p>\n      "
    }
  }
}
