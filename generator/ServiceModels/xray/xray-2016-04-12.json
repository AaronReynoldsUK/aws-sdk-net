{
  "version": "1.0",
  "type": "rest-json",
  "signature_version": "v4",
  "service_full_name": "AWS X-Ray",
  "endpoint_prefix": "xray",
  "service_id": "XRay",
  "uid": "xray-2016-04-12",
  "api_version": "2016-04-12",
  "documentation": "\n         <p>AWS X-Ray provides APIs for managing debug traces and retrieving service maps\n      and other data created by processing those traces.</p>\n      ",
  "operations": {
    "PutTraceSegments": {
      "name": "PutTraceSegments",
      "http": {
        "method": "POST",
        "uri": "/TraceSegments"
      },
      "input": {
        "type": "structure",
        "members": {
          "TraceSegmentDocuments": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A string containing a JSON document defining one or more segments or\n      subsegments.</simpara>\n      ",
            "documentation": "\n         <p>A string containing a JSON document defining one or more segments or\n      subsegments.</p>\n      ",
            "required": true,
            "shape_name": "TraceSegmentDocumentList",
            "members": {
              "type": "string",
              "shape_name": "TraceSegmentDocument",
              "documentation": null
            }
          }
        },
        "shape_name": "PutTraceSegmentsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "UnprocessedTraceSegments": {
            "type": "list",
            "zonbookDocumentation": "\n    \n         <simpara>Segments that failed processing.</simpara>\n      ",
            "documentation": "\n    \n         <p>Segments that failed processing.</p>\n      ",
            "shape_name": "UnprocessedTraceSegmentList",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The segment's ID.</simpara>\n      ",
                  "documentation": "\n         <p>The segment's ID.</p>\n      ",
                  "shape_name": "String"
                },
                "ErrorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error that caused processing to fail.</simpara>\n      ",
                  "documentation": "\n         <p>The error that caused processing to fail.</p>\n      ",
                  "shape_name": "String"
                },
                "Message": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error message.</simpara>\n      ",
                  "documentation": "\n         <p>The error message.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a segment that failed processing.</simpara>\n      ",
              "documentation": "\n         <p>Information about a segment that failed processing.</p>\n      ",
              "shape_name": "UnprocessedTraceSegment"
            }
          }
        },
        "shape_name": "PutTraceSegmentsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Uploads segment documents to AWS X-Ray. The X-Ray SDK generates segment documents and\n      sends them to the X-Ray daemon, which uploads them in batches. A segment document can be a\n      completed segment, an in-progress segment, or an array of subsegments.</p>\n         <p>Segments must include the following fields. For the full segment document schema, see\n        <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\">AWS X-Ray\n        Segment Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p>\n         <p class=\"title\">\n            <b>Required Segment Document Fields</b>\n         </p>\n         <ul>\n            <li>\n               <p>\n                  <code>name</code> - The name of the service that handled the request.</p>\n            </li>\n            <li>\n               <p>\n                  <code>id</code> - A 64-bit identifier for the segment, unique among segments in the\n          same trace, in 16 hexadecimal digits.</p>\n            </li>\n            <li>\n               <p>\n                  <code>trace_id</code> - A unique identifier that connects all segments and\n          subsegments originating from a single client request.</p>\n            </li>\n            <li>\n               <p>\n                  <code>start_time</code> - Time the segment or subsegment was created, in floating\n          point seconds in epoch time, accurate to milliseconds. For example,\n            <code>1480615200.010</code> or <code>1.480615200010E9</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <code>end_time</code> - Time the segment or subsegment was closed. For example,\n            <code>1480615200.090</code> or <code>1.480615200090E9</code>. Specify either an\n            <code>end_time</code> or <code>in_progress</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <code>in_progress</code> - Set to <code>true</code> instead of specifying an\n            <code>end_time</code> to record that a segment has been started, but is not complete.\n          Send an in progress segment when your application receives a request that will take a long\n          time to serve, to trace the fact that the request was received. When the response is sent,\n          send the complete segment to overwrite the in-progress segment.</p>\n            </li>\n         </ul>\n         <p>A <code>trace_id</code> consists of three numbers separated by hyphens. For example,\n      1-58406520-a006649127e371903a2de979. This includes:</p>\n         <p class=\"title\">\n            <b>Trace ID Format</b>\n         </p>\n         <ul>\n            <li>\n               <p>The version number, i.e. <code>1</code>.</p>\n            </li>\n            <li>\n               <p>The time of the original request, in Unix epoch time, in 8 hexadecimal digits. For\n          example, 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code> seconds,\n          or <code>58406520</code> in hexadecimal.</p>\n            </li>\n            <li>\n               <p>A 96-bit identifier for the trace, globally unique, in 24 hexadecimal\n          digits.</p>\n            </li>\n         </ul>\n      "
    },
    "PutTelemetryRecords": {
      "name": "PutTelemetryRecords",
      "http": {
        "method": "POST",
        "uri": "/TelemetryRecords"
      },
      "input": {
        "type": "structure",
        "members": {
          "TelemetryRecords": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara/>\n      ",
            "documentation": "\n         <p/>\n      ",
            "required": true,
            "shape_name": "TelemetryRecordList",
            "members": {
              "type": "structure",
              "members": {
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "required": true,
                  "shape_name": "Timestamp"
                },
                "SegmentsReceivedCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "shape_name": "NullableInteger"
                },
                "SegmentsSentCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "shape_name": "NullableInteger"
                },
                "SegmentsSpilloverCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "shape_name": "NullableInteger"
                },
                "SegmentsRejectedCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "shape_name": "NullableInteger"
                },
                "BackendConnectionErrors": {
                  "type": "structure",
                  "members": {
                    "TimeoutCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "ConnectionRefusedCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "HTTPCode4XXCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "HTTPCode5XXCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "UnknownHostCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "OtherCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara/>\n      ",
                      "documentation": "\n         <p/>\n      ",
                      "shape_name": "NullableInteger"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara/>\n      ",
                  "documentation": "\n         <p/>\n      ",
                  "shape_name": "BackendConnectionErrors"
                }
              },
              "zonbookDocumentation": "\n         <simpara/>\n      ",
              "documentation": "\n         <p/>\n      ",
              "shape_name": "TelemetryRecord"
            }
          },
          "EC2InstanceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara/>\n      ",
            "documentation": "\n         <p/>\n      ",
            "shape_name": "EC2InstanceId",
            "max_length": 20
          },
          "Hostname": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara/>\n      ",
            "documentation": "\n         <p/>\n      ",
            "shape_name": "Hostname",
            "max_length": 255
          },
          "ResourceARN": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara/>\n      ",
            "documentation": "\n         <p/>\n      ",
            "shape_name": "ResourceARN",
            "max_length": 500
          }
        },
        "shape_name": "PutTelemetryRecordsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "PutTelemetryRecordsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Used by the AWS X-Ray daemon to upload telemetry.</p>\n      "
    },
    "GetTraceSummaries": {
      "name": "GetTraceSummaries",
      "http": {
        "method": "POST",
        "uri": "/TraceSummaries"
      },
      "input": {
        "type": "structure",
        "members": {
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start of the time frame for which to retrieve traces.</simpara>\n      ",
            "documentation": "\n         <p>The start of the time frame for which to retrieve traces.</p>\n      ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end of the time frame for which to retrieve traces.</simpara>\n      ",
            "documentation": "\n         <p>The end of the time frame for which to retrieve traces.</p>\n      ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "Sampling": {
            "type": "boolean",
            "zonbookDocumentation": "\n    \n         <simpara>Set to <code>true</code> to get summaries for only a subset of available\n      traces.</simpara>\n      ",
            "documentation": "\n    \n         <p>Set to <code>true</code> to get summaries for only a subset of available\n      traces.</p>\n      ",
            "shape_name": "NullableBoolean"
          },
          "FilterExpression": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Specify a filter expression to retrieve trace summaries for services or requests that\n      meet certain requirements.</simpara>\n      ",
            "documentation": "\n         <p>Specify a filter expression to retrieve trace summaries for services or requests that\n      meet certain requirements.</p>\n      ",
            "shape_name": "FilterExpression",
            "min_length": 1,
            "max_length": 2000
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Specify the pagination token returned by a previous request to retrieve the next page\n      of results.</simpara>\n      ",
            "documentation": "\n         <p>Specify the pagination token returned by a previous request to retrieve the next page\n      of results.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetTraceSummariesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "TraceSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Trace IDs and metadata for traces that were found in the specified time\n      frame.</simpara>\n      ",
            "documentation": "\n         <p>Trace IDs and metadata for traces that were found in the specified time\n      frame.</p>\n      ",
            "shape_name": "TraceSummaryList",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The unique identifier for the request that generated the trace's segments and\n      subsegments.</simpara>\n      ",
                  "documentation": "\n         <p>The unique identifier for the request that generated the trace's segments and\n      subsegments.</p>\n      ",
                  "shape_name": "TraceId",
                  "min_length": 1,
                  "max_length": 35
                },
                "Duration": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The length of time in seconds between the start time of the root segment and the end\n      time of the last segment that completed.</simpara>\n      ",
                  "documentation": "\n         <p>The length of time in seconds between the start time of the root segment and the end\n      time of the last segment that completed.</p>\n      ",
                  "shape_name": "NullableDouble"
                },
                "ResponseTime": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The length of time in seconds between the start and end times of the root segment. If\n      the service performs work asynchronously, the response time measures the time before the\n      response is sent to the user, while the duration measures the amount of time before the last\n      traced activity completes.</simpara>\n      ",
                  "documentation": "\n         <p>The length of time in seconds between the start and end times of the root segment. If\n      the service performs work asynchronously, the response time measures the time before the\n      response is sent to the user, while the duration measures the amount of time before the last\n      traced activity completes.</p>\n      ",
                  "shape_name": "NullableDouble"
                },
                "HasFault": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>One or more of the segment documents has a 500 series error.</simpara>\n      ",
                  "documentation": "\n         <p>One or more of the segment documents has a 500 series error.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "HasError": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>One or more of the segment documents has a 400 series error.</simpara>\n      ",
                  "documentation": "\n         <p>One or more of the segment documents has a 400 series error.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "HasThrottle": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>One or more of the segment documents has a 429 throttling error.</simpara>\n      ",
                  "documentation": "\n         <p>One or more of the segment documents has a 429 throttling error.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "IsPartial": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>One or more of the segment documents is in progress.</simpara>\n      ",
                  "documentation": "\n         <p>One or more of the segment documents is in progress.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "Http": {
                  "type": "structure",
                  "members": {
                    "HttpURL": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The request URL.</simpara>\n      ",
                      "documentation": "\n         <p>The request URL.</p>\n      ",
                      "shape_name": "String"
                    },
                    "HttpStatus": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The response status.</simpara>\n      ",
                      "documentation": "\n         <p>The response status.</p>\n      ",
                      "shape_name": "NullableInteger"
                    },
                    "HttpMethod": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The request method.</simpara>\n      ",
                      "documentation": "\n         <p>The request method.</p>\n      ",
                      "shape_name": "String"
                    },
                    "UserAgent": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The request's user agent string.</simpara>\n      ",
                      "documentation": "\n         <p>The request's user agent string.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ClientIp": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The IP address of the requestor.</simpara>\n      ",
                      "documentation": "\n         <p>The IP address of the requestor.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Information about the HTTP request served by the trace.</simpara>\n      ",
                  "documentation": "\n         <p>Information about the HTTP request served by the trace.</p>\n      ",
                  "shape_name": "Http"
                },
                "Annotations": {
                  "type": "map",
                  "zonbookDocumentation": "\n         <simpara>Annotations from the trace's segment documents.</simpara>\n      ",
                  "documentation": "\n         <p>Annotations from the trace's segment documents.</p>\n      ",
                  "shape_name": "Annotations",
                  "keys": {
                    "type": "string",
                    "shape_name": "AnnotationKey",
                    "documentation": null
                  },
                  "members": {
                    "type": "list",
                    "shape_name": "ValuesWithServiceIds",
                    "documentation": null,
                    "members": {
                      "type": "structure",
                      "members": {
                        "AnnotationValue": {
                          "type": "structure",
                          "members": {
                            "NumberValue": {
                              "type": "double",
                              "zonbookDocumentation": "\n         <simpara>Value for a Number annotation.</simpara>\n      ",
                              "documentation": "\n         <p>Value for a Number annotation.</p>\n      ",
                              "shape_name": "NullableDouble"
                            },
                            "BooleanValue": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n    \n         <simpara>Value for a Boolean annotation.</simpara>\n      ",
                              "documentation": "\n    \n         <p>Value for a Boolean annotation.</p>\n      ",
                              "shape_name": "NullableBoolean"
                            },
                            "StringValue": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>Value for a String annotation.</simpara>\n      ",
                              "documentation": "\n         <p>Value for a String annotation.</p>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>Values of the annotation.</simpara>\n      ",
                          "documentation": "\n         <p>Values of the annotation.</p>\n      ",
                          "shape_name": "AnnotationValue"
                        },
                        "ServiceIds": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <simpara>Services to which the annotation applies.</simpara>\n      ",
                          "documentation": "\n         <p>Services to which the annotation applies.</p>\n      ",
                          "shape_name": "ServiceIds",
                          "members": {
                            "type": "structure",
                            "members": {
                              "Name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara/>\n      ",
                                "documentation": "\n         <p/>\n      ",
                                "shape_name": "String"
                              },
                              "Names": {
                                "type": "list",
                                "zonbookDocumentation": "\n         <simpara/>\n      ",
                                "documentation": "\n         <p/>\n      ",
                                "shape_name": "ServiceNames",
                                "members": {
                                  "type": "string",
                                  "shape_name": "String",
                                  "documentation": null
                                }
                              },
                              "AccountId": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara/>\n      ",
                                "documentation": "\n         <p/>\n      ",
                                "shape_name": "String"
                              },
                              "Type": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <simpara/>\n      ",
                                "documentation": "\n         <p/>\n      ",
                                "shape_name": "String"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara/>\n      ",
                            "documentation": "\n         <p/>\n      ",
                            "shape_name": "ServiceId"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information about a segment annotation.</simpara>\n      ",
                      "documentation": "\n         <p>Information about a segment annotation.</p>\n      ",
                      "shape_name": "ValueWithServiceIds"
                    }
                  }
                },
                "Users": {
                  "type": "list",
                  "zonbookDocumentation": "\n    \n         <simpara>Users from the trace's segment documents.</simpara>\n      ",
                  "documentation": "\n    \n         <p>Users from the trace's segment documents.</p>\n      ",
                  "shape_name": "TraceUsers",
                  "members": {
                    "type": "structure",
                    "members": {
                      "UserName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The user's name.</simpara>\n      ",
                        "documentation": "\n         <p>The user's name.</p>\n      ",
                        "shape_name": "String"
                      },
                      "ServiceIds": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <simpara>Services that the user's request hit.</simpara>\n      ",
                        "documentation": "\n         <p>Services that the user's request hit.</p>\n      ",
                        "shape_name": "ServiceIds",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara/>\n      ",
                              "documentation": "\n         <p/>\n      ",
                              "shape_name": "String"
                            },
                            "Names": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara/>\n      ",
                              "documentation": "\n         <p/>\n      ",
                              "shape_name": "ServiceNames",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "AccountId": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara/>\n      ",
                              "documentation": "\n         <p/>\n      ",
                              "shape_name": "String"
                            },
                            "Type": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara/>\n      ",
                              "documentation": "\n         <p/>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara/>\n      ",
                          "documentation": "\n         <p/>\n      ",
                          "shape_name": "ServiceId"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Information about a user recorded in segment documents.</simpara>\n      ",
                    "documentation": "\n         <p>Information about a user recorded in segment documents.</p>\n      ",
                    "shape_name": "TraceUser"
                  }
                },
                "ServiceIds": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Service IDs from the trace's segment documents.</simpara>\n      ",
                  "documentation": "\n         <p>Service IDs from the trace's segment documents.</p>\n      ",
                  "shape_name": "ServiceIds",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Name": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara/>\n      ",
                        "documentation": "\n         <p/>\n      ",
                        "shape_name": "String"
                      },
                      "Names": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <simpara/>\n      ",
                        "documentation": "\n         <p/>\n      ",
                        "shape_name": "ServiceNames",
                        "members": {
                          "type": "string",
                          "shape_name": "String",
                          "documentation": null
                        }
                      },
                      "AccountId": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara/>\n      ",
                        "documentation": "\n         <p/>\n      ",
                        "shape_name": "String"
                      },
                      "Type": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara/>\n      ",
                        "documentation": "\n         <p/>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara/>\n      ",
                    "documentation": "\n         <p/>\n      ",
                    "shape_name": "ServiceId"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Metadata generated from the segment documents in a trace.</simpara>\n      ",
              "documentation": "\n         <p>Metadata generated from the segment documents in a trace.</p>\n      ",
              "shape_name": "TraceSummary"
            }
          },
          "ApproximateTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start time of this page of results.</simpara>\n      ",
            "documentation": "\n         <p>The start time of this page of results.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "TracesProcessedCount": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The total number of traces processed, including traces that did not match the specified\n      filter expression.</simpara>\n      ",
            "documentation": "\n         <p>The total number of traces processed, including traces that did not match the specified\n      filter expression.</p>\n      ",
            "shape_name": "NullableLong"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>If the requested time frame contained more than one page of results, you can use this\n      token to retrieve the next page. The first page contains the most most recent results, closest\n      to the end of the time frame.</simpara>\n      ",
            "documentation": "\n         <p>If the requested time frame contained more than one page of results, you can use this\n      token to retrieve the next page. The first page contains the most most recent results, closest\n      to the end of the time frame.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetTraceSummariesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves IDs and metadata for traces available for a specified time frame using an\n      optional filter. To get the full traces, pass the trace IDs to\n      <code>BatchGetTraces</code>.</p>\n         <p>A filter expression can target traced requests that hit specific service nodes or\n      edges, have errors, or come from a known user. For example, the following filter expression\n      targets traces that pass through <code>api.example.com</code>:</p>\n         <p>\n            <code>service(\"api.example.com\")</code>\n         </p>\n         <p>This filter expression finds traces that have an annotation named <code>account</code>\n      with the value <code>12345</code>:</p>\n         <p>\n            <code>annotation.account = \"12345\"</code>\n         </p>\n         <p>For a full list of indexed fields and keywords that you can use in filter expressions,\n      see <a href=\"http://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\">Using Filter\n        Expressions</a> in the <i>AWS X-Ray Developer Guide</i>.</p>\n      "
    },
    "BatchGetTraces": {
      "name": "BatchGetTraces",
      "http": {
        "method": "POST",
        "uri": "/Traces"
      },
      "input": {
        "type": "structure",
        "members": {
          "TraceIds": {
            "type": "list",
            "zonbookDocumentation": "\n    \n         <simpara>Specify the trace IDs of requests for which to retrieve segments.</simpara>\n      ",
            "documentation": "\n    \n         <p>Specify the trace IDs of requests for which to retrieve segments.</p>\n      ",
            "required": true,
            "shape_name": "TraceIdList",
            "members": {
              "type": "string",
              "shape_name": "TraceId",
              "documentation": null,
              "min_length": 1,
              "max_length": 35
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "BatchGetTracesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Traces": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Full traces for the specified requests.</simpara>\n      ",
            "documentation": "\n         <p>Full traces for the specified requests.</p>\n      ",
            "shape_name": "TraceList",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The unique identifier for the request that generated the trace's segments and\n      subsegments.</simpara>\n      ",
                  "documentation": "\n         <p>The unique identifier for the request that generated the trace's segments and\n      subsegments.</p>\n      ",
                  "shape_name": "TraceId",
                  "min_length": 1,
                  "max_length": 35
                },
                "Duration": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The length of time in seconds between the start time of the root segment and the end\n      time of the last segment that completed.</simpara>\n      ",
                  "documentation": "\n         <p>The length of time in seconds between the start time of the root segment and the end\n      time of the last segment that completed.</p>\n      ",
                  "shape_name": "NullableDouble"
                },
                "Segments": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Segment documents for the segments and subsegments that comprise the trace.</simpara>\n      ",
                  "documentation": "\n         <p>Segment documents for the segments and subsegments that comprise the trace.</p>\n      ",
                  "shape_name": "SegmentList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Id": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The segment's ID.</simpara>\n      ",
                        "documentation": "\n         <p>The segment's ID.</p>\n      ",
                        "shape_name": "SegmentId"
                      },
                      "Document": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The segment document.</simpara>\n      ",
                        "documentation": "\n         <p>The segment document.</p>\n      ",
                        "shape_name": "SegmentDocument",
                        "min_length": 1
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>A segment from a trace that has been ingested by the X-Ray service. The segment can be\n      compiled from documents uploaded with <xref linkend=\"PutTraceSegments\"/>, or an\n        <code>inferred</code> segment for a downstream service, generated from a subsegment sent by\n      the service that called it.</simpara>\n         <simpara>For the full segment document schema, see <ulink url=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\">AWS X-Ray Segment\n        Documents</ulink> in the <emphasis>AWS X-Ray Developer Guide</emphasis>.</simpara>\n      ",
                    "documentation": "\n         <p>A segment from a trace that has been ingested by the X-Ray service. The segment can be\n      compiled from documents uploaded with <a>PutTraceSegments</a>, or an\n        <code>inferred</code> segment for a downstream service, generated from a subsegment sent by\n      the service that called it.</p>\n         <p>For the full segment document schema, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\">AWS X-Ray Segment\n        Documents</a> in the <i>AWS X-Ray Developer Guide</i>.</p>\n      ",
                    "shape_name": "Segment"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A collection of segment documents with matching trace IDs.</simpara>\n      ",
              "documentation": "\n         <p>A collection of segment documents with matching trace IDs.</p>\n      ",
              "shape_name": "Trace"
            }
          },
          "UnprocessedTraceIds": {
            "type": "list",
            "zonbookDocumentation": "\n    \n         <simpara>Trace IDs of requests that haven't been processed.</simpara>\n      ",
            "documentation": "\n    \n         <p>Trace IDs of requests that haven't been processed.</p>\n      ",
            "shape_name": "UnprocessedTraceIdList",
            "members": {
              "type": "string",
              "shape_name": "TraceId",
              "documentation": null,
              "min_length": 1,
              "max_length": 35
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "BatchGetTracesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves a list of traces specified by ID. Each trace is a collection of segment\n      documents that originates from a single request. Use <code>GetTraceSummaries</code> to get a\n      list of trace IDs.</p>\n      "
    },
    "GetEncryptionConfig": {
      "name": "GetEncryptionConfig",
      "http": {
        "method": "POST",
        "uri": "/EncryptionConfig"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "GetEncryptionConfigRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "EncryptionConfig": {
            "type": "structure",
            "members": {
              "KeyId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the customer master key (CMK) used for encryption, if applicable.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the customer master key (CMK) used for encryption, if applicable.</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "enum": [
                  "UPDATING",
                  "ACTIVE"
                ],
                "zonbookDocumentation": "\n         <simpara>The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.</simpara>\n      ",
                "documentation": "\n         <p>The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.</p>\n      ",
                "shape_name": "EncryptionStatus"
              },
              "Type": {
                "type": "string",
                "enum": [
                  "NONE",
                  "KMS"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for\n      default encryption.</simpara>\n      ",
                "documentation": "\n         <p>The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for\n      default encryption.</p>\n      ",
                "shape_name": "EncryptionType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The encryption configuration document.</simpara>\n      ",
            "documentation": "\n         <p>The encryption configuration document.</p>\n      ",
            "shape_name": "EncryptionConfig"
          }
        },
        "shape_name": "GetEncryptionConfigResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves the current encryption configuration for X-Ray data.</p>\n      "
    },
    "PutEncryptionConfig": {
      "name": "PutEncryptionConfig",
      "http": {
        "method": "POST",
        "uri": "/PutEncryptionConfig"
      },
      "input": {
        "type": "structure",
        "members": {
          "KeyId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An AWS KMS customer master key (CMK) in one of the following formats:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Alias</emphasis> - The name of the key. For example,\n            <code>alias/MyKey</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Key ID</emphasis> - The KMS key ID of the key. For example,\n            <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ARN</emphasis> - The full Amazon Resource Name of the key ID or alias.\n          For example,\n            <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\n          Use this format to specify a key in a different account.</simpara>\n            </listitem>\n         </itemizedlist>\n         <simpara>Omit this key if you set <code>Type</code> to <code>NONE</code>.</simpara>\n      ",
            "documentation": "\n         <p>An AWS KMS customer master key (CMK) in one of the following formats:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Alias</b> - The name of the key. For example,\n            <code>alias/MyKey</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Key ID</b> - The KMS key ID of the key. For example,\n            <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>ARN</b> - The full Amazon Resource Name of the key ID or alias.\n          For example,\n            <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\n          Use this format to specify a key in a different account.</p>\n            </li>\n         </ul>\n         <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>\n      ",
            "shape_name": "EncryptionKeyId",
            "min_length": 1,
            "max_length": 3000
          },
          "Type": {
            "type": "string",
            "enum": [
              "NONE",
              "KMS"
            ],
            "zonbookDocumentation": "\n         <simpara>The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set\n      to <code>NONE</code> for default encryption.</simpara>\n      ",
            "documentation": "\n         <p>The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set\n      to <code>NONE</code> for default encryption.</p>\n      ",
            "required": true,
            "shape_name": "EncryptionType"
          }
        },
        "shape_name": "PutEncryptionConfigRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "EncryptionConfig": {
            "type": "structure",
            "members": {
              "KeyId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the customer master key (CMK) used for encryption, if applicable.</simpara>\n      ",
                "documentation": "\n         <p>The ID of the customer master key (CMK) used for encryption, if applicable.</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "enum": [
                  "UPDATING",
                  "ACTIVE"
                ],
                "zonbookDocumentation": "\n         <simpara>The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.</simpara>\n      ",
                "documentation": "\n         <p>The encryption status. While the status is <code>UPDATING</code>, X-Ray may encrypt data with a combination of the new and old settings.</p>\n      ",
                "shape_name": "EncryptionStatus"
              },
              "Type": {
                "type": "string",
                "enum": [
                  "NONE",
                  "KMS"
                ],
                "zonbookDocumentation": "\n         <simpara>The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for\n      default encryption.</simpara>\n      ",
                "documentation": "\n         <p>The type of encryption. Set to <code>KMS</code> for encryption with CMKs. Set to <code>NONE</code> for\n      default encryption.</p>\n      ",
                "shape_name": "EncryptionType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The new encryption configuration.</simpara>\n      ",
            "documentation": "\n         <p>The new encryption configuration.</p>\n      ",
            "shape_name": "EncryptionConfig"
          }
        },
        "shape_name": "PutEncryptionConfigResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Updates the encryption configuration for X-Ray data.</p>\n      "
    },
    "GetServiceGraph": {
      "name": "GetServiceGraph",
      "http": {
        "method": "POST",
        "uri": "/ServiceGraph"
      },
      "input": {
        "type": "structure",
        "members": {
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start of the time frame for which to generate a graph.</simpara>\n      ",
            "documentation": "\n         <p>The start of the time frame for which to generate a graph.</p>\n      ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end of the time frame for which to generate a graph.</simpara>\n      ",
            "documentation": "\n         <p>The end of the time frame for which to generate a graph.</p>\n      ",
            "required": true,
            "shape_name": "Timestamp"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetServiceGraphRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The start of the time frame for which the graph was generated.</simpara>\n      ",
            "documentation": "\n         <p>The start of the time frame for which the graph was generated.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The end of the time frame for which the graph was generated.</simpara>\n      ",
            "documentation": "\n         <p>The end of the time frame for which the graph was generated.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "Services": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The services that have processed a traced request during the specified time\n      frame.</simpara>\n      ",
            "documentation": "\n         <p>The services that have processed a traced request during the specified time\n      frame.</p>\n      ",
            "shape_name": "ServiceList",
            "members": {
              "type": "structure",
              "members": {
                "ReferenceId": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>Identifier for the service. Unique within the service map.</simpara>\n      ",
                  "documentation": "\n         <p>Identifier for the service. Unique within the service map.</p>\n      ",
                  "shape_name": "NullableInteger"
                },
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The canonical name of the service.</simpara>\n      ",
                  "documentation": "\n         <p>The canonical name of the service.</p>\n      ",
                  "shape_name": "String"
                },
                "Names": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of names for the service, including the canonical name.</simpara>\n      ",
                  "documentation": "\n         <p>A list of names for the service, including the canonical name.</p>\n      ",
                  "shape_name": "ServiceNames",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                },
                "Root": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n    \n         <simpara>Indicates that the service was the first service to process a request.</simpara>\n      ",
                  "documentation": "\n    \n         <p>Indicates that the service was the first service to process a request.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "AccountId": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>Identifier of the AWS account in which the service runs.</simpara>\n      ",
                  "documentation": "\n    \n         <p>Identifier of the AWS account in which the service runs.</p>\n      ",
                  "shape_name": "String"
                },
                "Type": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>The type of service.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>AWS Resource - The type of an AWS resource. For example,\n            <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or\n            <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application\n          used.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code>\n          for downstream calls to Amazon DynamoDB that didn't target a specific table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>client</code> - Represents the clients that sent requests to a root\n          service.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>remote</code> - A downstream service of indeterminate type.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n    \n         <p>The type of service.</p>\n         <ul>\n            <li>\n               <p>AWS Resource - The type of an AWS resource. For example,\n            <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or\n            <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application\n          used.</p>\n            </li>\n            <li>\n               <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code>\n          for downstream calls to Amazon DynamoDB that didn't target a specific table.</p>\n            </li>\n            <li>\n               <p>\n                  <code>client</code> - Represents the clients that sent requests to a root\n          service.</p>\n            </li>\n            <li>\n               <p>\n                  <code>remote</code> - A downstream service of indeterminate type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "State": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>The service's state.</simpara>\n      ",
                  "documentation": "\n    \n         <p>The service's state.</p>\n      ",
                  "shape_name": "String"
                },
                "StartTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The start time of the first segment that the service generated.</simpara>\n      ",
                  "documentation": "\n         <p>The start time of the first segment that the service generated.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "EndTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The end time of the last segment that the service generated.</simpara>\n      ",
                  "documentation": "\n         <p>The end time of the last segment that the service generated.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "Edges": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Connections to downstream services.</simpara>\n      ",
                  "documentation": "\n         <p>Connections to downstream services.</p>\n      ",
                  "shape_name": "EdgeList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "ReferenceId": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>Identifier of the edge. Unique within a service map.</simpara>\n      ",
                        "documentation": "\n         <p>Identifier of the edge. Unique within a service map.</p>\n      ",
                        "shape_name": "NullableInteger"
                      },
                      "StartTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The start time of the first segment on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>The start time of the first segment on the edge.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "EndTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The end time of the last segment on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>The end time of the last segment on the edge.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "SummaryStatistics": {
                        "type": "structure",
                        "members": {
                          "OkCount": {
                            "type": "long",
                            "zonbookDocumentation": "\n         <simpara>The number of requests that completed with a 2xx Success status code.</simpara>\n      ",
                            "documentation": "\n         <p>The number of requests that completed with a 2xx Success status code.</p>\n      ",
                            "shape_name": "NullableLong"
                          },
                          "ErrorStatistics": {
                            "type": "structure",
                            "members": {
                              "ThrottleCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with a 419 throttling status code.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with a 419 throttling status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "OtherCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 4xx Client Error status\n      codes.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with untracked 4xx Client Error status\n      codes.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "TotalCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                                "documentation": "\n         <p>The total number of requests that failed with a 4xx Client Error status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                            "documentation": "\n         <p>Information about requests that failed with a 4xx Client Error status code.</p>\n      ",
                            "shape_name": "ErrorStatistics"
                          },
                          "FaultStatistics": {
                            "type": "structure",
                            "members": {
                              "OtherCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 5xx Server Error status\n      codes.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with untracked 5xx Server Error status\n      codes.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "TotalCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                                "documentation": "\n         <p>The total number of requests that failed with a 5xx Server Error status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                            "documentation": "\n         <p>Information about requests that failed with a 5xx Server Error status code.</p>\n      ",
                            "shape_name": "FaultStatistics"
                          },
                          "TotalCount": {
                            "type": "long",
                            "zonbookDocumentation": "\n         <simpara>The total number of completed requests.</simpara>\n      ",
                            "documentation": "\n         <p>The total number of completed requests.</p>\n      ",
                            "shape_name": "NullableLong"
                          },
                          "TotalResponseTime": {
                            "type": "double",
                            "zonbookDocumentation": "\n         <simpara>The aggregate response time of completed requests.</simpara>\n      ",
                            "documentation": "\n         <p>The aggregate response time of completed requests.</p>\n      ",
                            "shape_name": "NullableDouble"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Response statistics for segments on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>Response statistics for segments on the edge.</p>\n      ",
                        "shape_name": "EdgeStatistics"
                      },
                      "ResponseTimeHistogram": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of client response times on an edge.</simpara>\n      ",
                        "documentation": "\n         <p>A histogram that maps the spread of client response times on an edge.</p>\n      ",
                        "shape_name": "Histogram",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Value": {
                              "type": "double",
                              "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                              "documentation": "\n         <p>The value of the entry.</p>\n      ",
                              "shape_name": "Double"
                            },
                            "Count": {
                              "type": "integer",
                              "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                              "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                              "shape_name": "Integer"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                          "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                          "shape_name": "HistogramEntry"
                        }
                      },
                      "Aliases": {
                        "type": "list",
                        "zonbookDocumentation": "\n    \n         <simpara>Aliases for the edge.</simpara>\n      ",
                        "documentation": "\n    \n         <p>Aliases for the edge.</p>\n      ",
                        "shape_name": "AliasList",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The canonical name of the alias.</simpara>\n      ",
                              "documentation": "\n         <p>The canonical name of the alias.</p>\n      ",
                              "shape_name": "String"
                            },
                            "Names": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>A list of names for the alias, including the canonical name.</simpara>\n      ",
                              "documentation": "\n         <p>A list of names for the alias, including the canonical name.</p>\n      ",
                              "shape_name": "AliasNames",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "Type": {
                              "type": "string",
                              "zonbookDocumentation": "\n    \n         <simpara>The type of the alias.</simpara>\n      ",
                              "documentation": "\n    \n         <p>The type of the alias.</p>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>An alias for an edge.</simpara>\n      ",
                          "documentation": "\n         <p>An alias for an edge.</p>\n      ",
                          "shape_name": "Alias"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Information about a connection between two services.</simpara>\n      ",
                    "documentation": "\n         <p>Information about a connection between two services.</p>\n      ",
                    "shape_name": "Edge"
                  }
                },
                "SummaryStatistics": {
                  "type": "structure",
                  "members": {
                    "OkCount": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The number of requests that completed with a 2xx Success status code.</simpara>\n      ",
                      "documentation": "\n         <p>The number of requests that completed with a 2xx Success status code.</p>\n      ",
                      "shape_name": "NullableLong"
                    },
                    "ErrorStatistics": {
                      "type": "structure",
                      "members": {
                        "ThrottleCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with a 419 throttling status code.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with a 419 throttling status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "OtherCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 4xx Client Error status\n      codes.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with untracked 4xx Client Error status\n      codes.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "TotalCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                          "documentation": "\n         <p>The total number of requests that failed with a 4xx Client Error status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                      "documentation": "\n         <p>Information about requests that failed with a 4xx Client Error status code.</p>\n      ",
                      "shape_name": "ErrorStatistics"
                    },
                    "FaultStatistics": {
                      "type": "structure",
                      "members": {
                        "OtherCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 5xx Server Error status\n      codes.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with untracked 5xx Server Error status\n      codes.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "TotalCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                          "documentation": "\n         <p>The total number of requests that failed with a 5xx Server Error status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                      "documentation": "\n         <p>Information about requests that failed with a 5xx Server Error status code.</p>\n      ",
                      "shape_name": "FaultStatistics"
                    },
                    "TotalCount": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The total number of completed requests.</simpara>\n      ",
                      "documentation": "\n         <p>The total number of completed requests.</p>\n      ",
                      "shape_name": "NullableLong"
                    },
                    "TotalResponseTime": {
                      "type": "double",
                      "zonbookDocumentation": "\n         <simpara>The aggregate response time of completed requests.</simpara>\n      ",
                      "documentation": "\n         <p>The aggregate response time of completed requests.</p>\n      ",
                      "shape_name": "NullableDouble"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Aggregated statistics for the service.</simpara>\n      ",
                  "documentation": "\n         <p>Aggregated statistics for the service.</p>\n      ",
                  "shape_name": "ServiceStatistics"
                },
                "DurationHistogram": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of service durations.</simpara>\n      ",
                  "documentation": "\n         <p>A histogram that maps the spread of service durations.</p>\n      ",
                  "shape_name": "Histogram",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Value": {
                        "type": "double",
                        "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the entry.</p>\n      ",
                        "shape_name": "Double"
                      },
                      "Count": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                    "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                    "shape_name": "HistogramEntry"
                  }
                },
                "ResponseTimeHistogram": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of service response times.</simpara>\n      ",
                  "documentation": "\n         <p>A histogram that maps the spread of service response times.</p>\n      ",
                  "shape_name": "Histogram",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Value": {
                        "type": "double",
                        "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the entry.</p>\n      ",
                        "shape_name": "Double"
                      },
                      "Count": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                    "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                    "shape_name": "HistogramEntry"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about an application that processed requests, users that made requests, or\n      downstream services, resources and applications that an application used.</simpara>\n      ",
              "documentation": "\n         <p>Information about an application that processed requests, users that made requests, or\n      downstream services, resources and applications that an application used.</p>\n      ",
              "shape_name": "Service"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetServiceGraphResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves a document that describes services that process incoming requests, and\n      downstream services that they call as a result. Root services process incoming requests and\n      make calls to downstream services. Root services are applications that use the AWS X-Ray SDK.\n      Downstream services can be other applications, AWS resources, HTTP web APIs, or SQL\n      databases.</p>\n      "
    },
    "GetTraceGraph": {
      "name": "GetTraceGraph",
      "http": {
        "method": "POST",
        "uri": "/TraceGraph"
      },
      "input": {
        "type": "structure",
        "members": {
          "TraceIds": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Trace IDs of requests for which to generate a service graph.</simpara>\n      ",
            "documentation": "\n         <p>Trace IDs of requests for which to generate a service graph.</p>\n      ",
            "required": true,
            "shape_name": "TraceIdList",
            "members": {
              "type": "string",
              "shape_name": "TraceId",
              "documentation": null,
              "min_length": 1,
              "max_length": 35
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetTraceGraphRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Services": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The services that have processed one of the specified requests.</simpara>\n      ",
            "documentation": "\n         <p>The services that have processed one of the specified requests.</p>\n      ",
            "shape_name": "ServiceList",
            "members": {
              "type": "structure",
              "members": {
                "ReferenceId": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>Identifier for the service. Unique within the service map.</simpara>\n      ",
                  "documentation": "\n         <p>Identifier for the service. Unique within the service map.</p>\n      ",
                  "shape_name": "NullableInteger"
                },
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The canonical name of the service.</simpara>\n      ",
                  "documentation": "\n         <p>The canonical name of the service.</p>\n      ",
                  "shape_name": "String"
                },
                "Names": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of names for the service, including the canonical name.</simpara>\n      ",
                  "documentation": "\n         <p>A list of names for the service, including the canonical name.</p>\n      ",
                  "shape_name": "ServiceNames",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                },
                "Root": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n    \n         <simpara>Indicates that the service was the first service to process a request.</simpara>\n      ",
                  "documentation": "\n    \n         <p>Indicates that the service was the first service to process a request.</p>\n      ",
                  "shape_name": "NullableBoolean"
                },
                "AccountId": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>Identifier of the AWS account in which the service runs.</simpara>\n      ",
                  "documentation": "\n    \n         <p>Identifier of the AWS account in which the service runs.</p>\n      ",
                  "shape_name": "String"
                },
                "Type": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>The type of service.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>AWS Resource - The type of an AWS resource. For example,\n            <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or\n            <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application\n          used.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code>\n          for downstream calls to Amazon DynamoDB that didn't target a specific table.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>client</code> - Represents the clients that sent requests to a root\n          service.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>remote</code> - A downstream service of indeterminate type.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n    \n         <p>The type of service.</p>\n         <ul>\n            <li>\n               <p>AWS Resource - The type of an AWS resource. For example,\n            <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or\n            <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application\n          used.</p>\n            </li>\n            <li>\n               <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code>\n          for downstream calls to Amazon DynamoDB that didn't target a specific table.</p>\n            </li>\n            <li>\n               <p>\n                  <code>client</code> - Represents the clients that sent requests to a root\n          service.</p>\n            </li>\n            <li>\n               <p>\n                  <code>remote</code> - A downstream service of indeterminate type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "State": {
                  "type": "string",
                  "zonbookDocumentation": "\n    \n         <simpara>The service's state.</simpara>\n      ",
                  "documentation": "\n    \n         <p>The service's state.</p>\n      ",
                  "shape_name": "String"
                },
                "StartTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The start time of the first segment that the service generated.</simpara>\n      ",
                  "documentation": "\n         <p>The start time of the first segment that the service generated.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "EndTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The end time of the last segment that the service generated.</simpara>\n      ",
                  "documentation": "\n         <p>The end time of the last segment that the service generated.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "Edges": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>Connections to downstream services.</simpara>\n      ",
                  "documentation": "\n         <p>Connections to downstream services.</p>\n      ",
                  "shape_name": "EdgeList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "ReferenceId": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>Identifier of the edge. Unique within a service map.</simpara>\n      ",
                        "documentation": "\n         <p>Identifier of the edge. Unique within a service map.</p>\n      ",
                        "shape_name": "NullableInteger"
                      },
                      "StartTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The start time of the first segment on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>The start time of the first segment on the edge.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "EndTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The end time of the last segment on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>The end time of the last segment on the edge.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "SummaryStatistics": {
                        "type": "structure",
                        "members": {
                          "OkCount": {
                            "type": "long",
                            "zonbookDocumentation": "\n         <simpara>The number of requests that completed with a 2xx Success status code.</simpara>\n      ",
                            "documentation": "\n         <p>The number of requests that completed with a 2xx Success status code.</p>\n      ",
                            "shape_name": "NullableLong"
                          },
                          "ErrorStatistics": {
                            "type": "structure",
                            "members": {
                              "ThrottleCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with a 419 throttling status code.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with a 419 throttling status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "OtherCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 4xx Client Error status\n      codes.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with untracked 4xx Client Error status\n      codes.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "TotalCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                                "documentation": "\n         <p>The total number of requests that failed with a 4xx Client Error status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                            "documentation": "\n         <p>Information about requests that failed with a 4xx Client Error status code.</p>\n      ",
                            "shape_name": "ErrorStatistics"
                          },
                          "FaultStatistics": {
                            "type": "structure",
                            "members": {
                              "OtherCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 5xx Server Error status\n      codes.</simpara>\n      ",
                                "documentation": "\n         <p>The number of requests that failed with untracked 5xx Server Error status\n      codes.</p>\n      ",
                                "shape_name": "NullableLong"
                              },
                              "TotalCount": {
                                "type": "long",
                                "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                                "documentation": "\n         <p>The total number of requests that failed with a 5xx Server Error status code.</p>\n      ",
                                "shape_name": "NullableLong"
                              }
                            },
                            "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                            "documentation": "\n         <p>Information about requests that failed with a 5xx Server Error status code.</p>\n      ",
                            "shape_name": "FaultStatistics"
                          },
                          "TotalCount": {
                            "type": "long",
                            "zonbookDocumentation": "\n         <simpara>The total number of completed requests.</simpara>\n      ",
                            "documentation": "\n         <p>The total number of completed requests.</p>\n      ",
                            "shape_name": "NullableLong"
                          },
                          "TotalResponseTime": {
                            "type": "double",
                            "zonbookDocumentation": "\n         <simpara>The aggregate response time of completed requests.</simpara>\n      ",
                            "documentation": "\n         <p>The aggregate response time of completed requests.</p>\n      ",
                            "shape_name": "NullableDouble"
                          }
                        },
                        "zonbookDocumentation": "\n         <simpara>Response statistics for segments on the edge.</simpara>\n      ",
                        "documentation": "\n         <p>Response statistics for segments on the edge.</p>\n      ",
                        "shape_name": "EdgeStatistics"
                      },
                      "ResponseTimeHistogram": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of client response times on an edge.</simpara>\n      ",
                        "documentation": "\n         <p>A histogram that maps the spread of client response times on an edge.</p>\n      ",
                        "shape_name": "Histogram",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Value": {
                              "type": "double",
                              "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                              "documentation": "\n         <p>The value of the entry.</p>\n      ",
                              "shape_name": "Double"
                            },
                            "Count": {
                              "type": "integer",
                              "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                              "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                              "shape_name": "Integer"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                          "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                          "shape_name": "HistogramEntry"
                        }
                      },
                      "Aliases": {
                        "type": "list",
                        "zonbookDocumentation": "\n    \n         <simpara>Aliases for the edge.</simpara>\n      ",
                        "documentation": "\n    \n         <p>Aliases for the edge.</p>\n      ",
                        "shape_name": "AliasList",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <simpara>The canonical name of the alias.</simpara>\n      ",
                              "documentation": "\n         <p>The canonical name of the alias.</p>\n      ",
                              "shape_name": "String"
                            },
                            "Names": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <simpara>A list of names for the alias, including the canonical name.</simpara>\n      ",
                              "documentation": "\n         <p>A list of names for the alias, including the canonical name.</p>\n      ",
                              "shape_name": "AliasNames",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "Type": {
                              "type": "string",
                              "zonbookDocumentation": "\n    \n         <simpara>The type of the alias.</simpara>\n      ",
                              "documentation": "\n    \n         <p>The type of the alias.</p>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <simpara>An alias for an edge.</simpara>\n      ",
                          "documentation": "\n         <p>An alias for an edge.</p>\n      ",
                          "shape_name": "Alias"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Information about a connection between two services.</simpara>\n      ",
                    "documentation": "\n         <p>Information about a connection between two services.</p>\n      ",
                    "shape_name": "Edge"
                  }
                },
                "SummaryStatistics": {
                  "type": "structure",
                  "members": {
                    "OkCount": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The number of requests that completed with a 2xx Success status code.</simpara>\n      ",
                      "documentation": "\n         <p>The number of requests that completed with a 2xx Success status code.</p>\n      ",
                      "shape_name": "NullableLong"
                    },
                    "ErrorStatistics": {
                      "type": "structure",
                      "members": {
                        "ThrottleCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with a 419 throttling status code.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with a 419 throttling status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "OtherCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 4xx Client Error status\n      codes.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with untracked 4xx Client Error status\n      codes.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "TotalCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                          "documentation": "\n         <p>The total number of requests that failed with a 4xx Client Error status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 4xx Client Error status code.</simpara>\n      ",
                      "documentation": "\n         <p>Information about requests that failed with a 4xx Client Error status code.</p>\n      ",
                      "shape_name": "ErrorStatistics"
                    },
                    "FaultStatistics": {
                      "type": "structure",
                      "members": {
                        "OtherCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The number of requests that failed with untracked 5xx Server Error status\n      codes.</simpara>\n      ",
                          "documentation": "\n         <p>The number of requests that failed with untracked 5xx Server Error status\n      codes.</p>\n      ",
                          "shape_name": "NullableLong"
                        },
                        "TotalCount": {
                          "type": "long",
                          "zonbookDocumentation": "\n         <simpara>The total number of requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                          "documentation": "\n         <p>The total number of requests that failed with a 5xx Server Error status code.</p>\n      ",
                          "shape_name": "NullableLong"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Information about requests that failed with a 5xx Server Error status code.</simpara>\n      ",
                      "documentation": "\n         <p>Information about requests that failed with a 5xx Server Error status code.</p>\n      ",
                      "shape_name": "FaultStatistics"
                    },
                    "TotalCount": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The total number of completed requests.</simpara>\n      ",
                      "documentation": "\n         <p>The total number of completed requests.</p>\n      ",
                      "shape_name": "NullableLong"
                    },
                    "TotalResponseTime": {
                      "type": "double",
                      "zonbookDocumentation": "\n         <simpara>The aggregate response time of completed requests.</simpara>\n      ",
                      "documentation": "\n         <p>The aggregate response time of completed requests.</p>\n      ",
                      "shape_name": "NullableDouble"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Aggregated statistics for the service.</simpara>\n      ",
                  "documentation": "\n         <p>Aggregated statistics for the service.</p>\n      ",
                  "shape_name": "ServiceStatistics"
                },
                "DurationHistogram": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of service durations.</simpara>\n      ",
                  "documentation": "\n         <p>A histogram that maps the spread of service durations.</p>\n      ",
                  "shape_name": "Histogram",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Value": {
                        "type": "double",
                        "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the entry.</p>\n      ",
                        "shape_name": "Double"
                      },
                      "Count": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                    "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                    "shape_name": "HistogramEntry"
                  }
                },
                "ResponseTimeHistogram": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A histogram that maps the spread of service response times.</simpara>\n      ",
                  "documentation": "\n         <p>A histogram that maps the spread of service response times.</p>\n      ",
                  "shape_name": "Histogram",
                  "members": {
                    "type": "structure",
                    "members": {
                      "Value": {
                        "type": "double",
                        "zonbookDocumentation": "\n         <simpara>The value of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the entry.</p>\n      ",
                        "shape_name": "Double"
                      },
                      "Count": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The prevalence of the entry.</simpara>\n      ",
                        "documentation": "\n         <p>The prevalence of the entry.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</simpara>\n      ",
                    "documentation": "\n         <p>An entry in a histogram for a statistic. A histogram maps the range of observed values\n      on the X axis, and the prevalence of each value on the Y axis.</p>\n      ",
                    "shape_name": "HistogramEntry"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about an application that processed requests, users that made requests, or\n      downstream services, resources and applications that an application used.</simpara>\n      ",
              "documentation": "\n         <p>Information about an application that processed requests, users that made requests, or\n      downstream services, resources and applications that an application used.</p>\n      ",
              "shape_name": "Service"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetTraceGraphResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves a service graph for one or more specific trace IDs.</p>\n      "
    },
    "GetLegacySamplingRules": {
      "name": "GetLegacySamplingRules",
      "http": {
        "method": "POST",
        "uri": "/LegacySamplingRules"
      },
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "shape_name": "String",
            "documentation": null
          }
        },
        "shape_name": "GetLegacySamplingRulesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "LegacySamplingRules": {
            "type": "list",
            "shape_name": "LegacySamplingRuleList",
            "documentation": null,
            "members": {
              "type": "structure",
              "members": {
                "Identifier": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "ReservoirSize": {
                  "type": "integer",
                  "shape_name": "Integer",
                  "documentation": null
                },
                "Percentage": {
                  "type": "double",
                  "shape_name": "Double",
                  "documentation": null
                }
              },
              "shape_name": "LegacySamplingRule",
              "documentation": null
            }
          },
          "NextToken": {
            "type": "string",
            "shape_name": "String",
            "documentation": null
          }
        },
        "shape_name": "GetLegacySamplingRulesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": null
    },
    "GetSamplingTargets": {
      "name": "GetSamplingTargets",
      "http": {
        "method": "POST",
        "uri": "/SamplingTargets"
      },
      "input": {
        "type": "structure",
        "members": {
          "SamplingStatisticsDocuments": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about rules that the service is using to sample requests.</simpara>\n      ",
            "documentation": "\n         <p>Information about rules that the service is using to sample requests.</p>\n      ",
            "required": true,
            "shape_name": "SamplingStatisticsDocumentList",
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "RuleName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the sampling rule.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the sampling rule.</p>\n      ",
                  "required": true,
                  "shape_name": "RuleName",
                  "min_length": 1,
                  "max_length": 32
                },
                "ClientID": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>A unique identifier for the service in hexadecimal.</simpara>\n      ",
                  "documentation": "\n         <p>A unique identifier for the service in hexadecimal.</p>\n      ",
                  "required": true,
                  "shape_name": "ClientID",
                  "min_length": 24,
                  "max_length": 24
                },
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The current time.</simpara>\n      ",
                  "documentation": "\n         <p>The current time.</p>\n      ",
                  "required": true,
                  "shape_name": "Timestamp"
                },
                "RequestCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests that matched the rule.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests that matched the rule.</p>\n      ",
                  "required": true,
                  "shape_name": "RequestCount",
                  "min_length": 0
                },
                "SampledCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests recorded.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests recorded.</p>\n      ",
                  "required": true,
                  "shape_name": "SampledCount",
                  "min_length": 0
                },
                "BorrowCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests recorded with borrowed reservoir quota.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests recorded with borrowed reservoir quota.</p>\n      ",
                  "shape_name": "BorrowCount",
                  "min_length": 0
                }
              },
              "zonbookDocumentation": "\n         <simpara>Request sampling results for a single rule from a service. Results are for the last 10\n      seconds unless the service has been assigned a longer reporting interval after a previous call\n      to <xref linkend=\"GetSamplingTargets\"/>.</simpara>\n      ",
              "documentation": "\n         <p>Request sampling results for a single rule from a service. Results are for the last 10\n      seconds unless the service has been assigned a longer reporting interval after a previous call\n      to <a>GetSamplingTargets</a>.</p>\n      ",
              "shape_name": "SamplingStatisticsDocument"
            }
          }
        },
        "shape_name": "GetSamplingTargetsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingTargetDocuments": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Updated rules that the service should use to sample requests.</simpara>\n      ",
            "documentation": "\n         <p>Updated rules that the service should use to sample requests.</p>\n      ",
            "shape_name": "SamplingTargetDocumentList",
            "members": {
              "type": "structure",
              "members": {
                "RuleName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the sampling rule.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the sampling rule.</p>\n      ",
                  "shape_name": "String"
                },
                "FixedRate": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                  "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                  "shape_name": "Double"
                },
                "ReservoirQuota": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests per second that X-Ray allocated this service.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests per second that X-Ray allocated this service.</p>\n      ",
                  "shape_name": "NullableInteger"
                },
                "ReservoirQuotaTTL": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>When the reservoir quota expires.</simpara>\n      ",
                  "documentation": "\n         <p>When the reservoir quota expires.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "Interval": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of seconds for the service to wait before getting sampling targets\n      again.</simpara>\n      ",
                  "documentation": "\n         <p>The number of seconds for the service to wait before getting sampling targets\n      again.</p>\n      ",
                  "shape_name": "NullableInteger"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Temporary changes to a sampling rule configuration. To meet the global sampling target\n      for a rule, X-Ray calculates a new reservoir for each service based on the recent sampling\n      results of all services that called <xref linkend=\"GetSamplingTargets\"/>.</simpara>\n      ",
              "documentation": "\n         <p>Temporary changes to a sampling rule configuration. To meet the global sampling target\n      for a rule, X-Ray calculates a new reservoir for each service based on the recent sampling\n      results of all services that called <a>GetSamplingTargets</a>.</p>\n      ",
              "shape_name": "SamplingTargetDocument"
            }
          },
          "LastRuleModification": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The last time a user changed the sampling rule configuration. If the sampling rule\n         configuration changed since the service last retrieved it, the service should call <xref linkend=\"GetSamplingRules\"/> to get the latest version.</simpara>\n      ",
            "documentation": "\n         <p>The last time a user changed the sampling rule configuration. If the sampling rule\n         configuration changed since the service last retrieved it, the service should call <a>GetSamplingRules</a> to get the latest version.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "UnprocessedStatistics": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about <xref linkend=\"SamplingStatisticsDocument\"/> that X-Ray could not\n         process.</simpara>\n      ",
            "documentation": "\n         <p>Information about <a>SamplingStatisticsDocument</a> that X-Ray could not\n         process.</p>\n      ",
            "shape_name": "UnprocessedStatisticsList",
            "members": {
              "type": "structure",
              "members": {
                "RuleName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the sampling rule.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the sampling rule.</p>\n      ",
                  "shape_name": "String"
                },
                "ErrorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error code.</simpara>\n      ",
                  "documentation": "\n         <p>The error code.</p>\n      ",
                  "shape_name": "String"
                },
                "Message": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The error message.</simpara>\n      ",
                  "documentation": "\n         <p>The error message.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Sampling statistics from a call to <xref linkend=\"GetSamplingTargets\"/> that X-Ray\n      could not process.</simpara>\n      ",
              "documentation": "\n         <p>Sampling statistics from a call to <a>GetSamplingTargets</a> that X-Ray\n      could not process.</p>\n      ",
              "shape_name": "UnprocessedStatistics"
            }
          }
        },
        "shape_name": "GetSamplingTargetsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Requests a sampling quota for rules that the service is using to sample requests.\n      </p>\n      "
    },
    "GetSamplingStatisticSummaries": {
      "name": "GetSamplingStatisticSummaries",
      "http": {
        "method": "POST",
        "uri": "/SamplingStatisticSummaries"
      },
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetSamplingStatisticSummariesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingStatisticSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about the number of requests instrumented for each sampling\n         rule.</simpara>\n      ",
            "documentation": "\n         <p>Information about the number of requests instrumented for each sampling\n         rule.</p>\n      ",
            "shape_name": "SamplingStatisticSummaryList",
            "members": {
              "type": "structure",
              "members": {
                "RuleName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the sampling rule.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the sampling rule.</p>\n      ",
                  "shape_name": "String"
                },
                "Timestamp": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The start time of the reporting window.</simpara>\n      ",
                  "documentation": "\n         <p>The start time of the reporting window.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "RequestCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests that matched the rule.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests that matched the rule.</p>\n      ",
                  "shape_name": "Integer"
                },
                "BorrowCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests recorded with borrowed reservoir quota.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests recorded with borrowed reservoir quota.</p>\n      ",
                  "shape_name": "Integer"
                },
                "SampledCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of requests recorded.</simpara>\n      ",
                  "documentation": "\n         <p>The number of requests recorded.</p>\n      ",
                  "shape_name": "Integer"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Aggregated request sampling data for a sampling rule across all services for a 10\n      second window.</simpara>\n      ",
              "documentation": "\n         <p>Aggregated request sampling data for a sampling rule across all services for a 10\n      second window.</p>\n      ",
              "shape_name": "SamplingStatisticSummary"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetSamplingStatisticSummariesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about recent sampling results for all sampling rules.</p>\n      "
    },
    "GetSamplingRules": {
      "name": "GetSamplingRules",
      "http": {
        "method": "POST",
        "uri": "/GetSamplingRules"
      },
      "input": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetSamplingRulesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingRuleRecords": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Rule definitions and metadata.</simpara>\n      ",
            "documentation": "\n         <p>Rule definitions and metadata.</p>\n      ",
            "shape_name": "SamplingRuleRecordList",
            "members": {
              "type": "structure",
              "members": {
                "SamplingRule": {
                  "type": "structure",
                  "members": {
                    "RuleName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                      "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                      "shape_name": "RuleName",
                      "min_length": 1,
                      "max_length": 32
                    },
                    "RuleARN": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                      "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ResourceARN": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                      "required": true,
                      "shape_name": "ResourceARN",
                      "max_length": 500
                    },
                    "Priority": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                      "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                      "required": true,
                      "shape_name": "Priority",
                      "min_length": 1,
                      "max_length": 9999
                    },
                    "FixedRate": {
                      "type": "double",
                      "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                      "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                      "required": true,
                      "shape_name": "FixedRate",
                      "min_length": 0,
                      "max_length": 1
                    },
                    "ReservoirSize": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                      "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                      "required": true,
                      "shape_name": "ReservoirSize",
                      "min_length": 0
                    },
                    "ServiceName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                      "required": true,
                      "shape_name": "ServiceName",
                      "max_length": 64
                    },
                    "ServiceType": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                      "required": true,
                      "shape_name": "ServiceType",
                      "max_length": 64
                    },
                    "Host": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                      "required": true,
                      "shape_name": "Host",
                      "max_length": 64
                    },
                    "HTTPMethod": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                      "required": true,
                      "shape_name": "HTTPMethod",
                      "max_length": 10
                    },
                    "URLPath": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                      "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                      "required": true,
                      "shape_name": "URLPath",
                      "max_length": 128
                    },
                    "Version": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The version of the sampling rule format (<code>1</code>).</simpara>\n      ",
                      "documentation": "\n         <p>The version of the sampling rule format (<code>1</code>).</p>\n      ",
                      "required": true,
                      "shape_name": "Version",
                      "min_length": 1
                    },
                    "Attributes": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                      "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                      "shape_name": "AttributeMap",
                      "max_length": 5,
                      "keys": {
                        "type": "string",
                        "shape_name": "AttributeKey",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 32
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeValue",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 32
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The sampling rule.</simpara>\n      ",
                  "documentation": "\n         <p>The sampling rule.</p>\n      ",
                  "shape_name": "SamplingRule"
                },
                "CreatedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>When the rule was created.</simpara>\n      ",
                  "documentation": "\n         <p>When the rule was created.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "ModifiedAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>When the rule was last modified.</simpara>\n      ",
                  "documentation": "\n         <p>When the rule was last modified.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A <xref linkend=\"SamplingRule\"/> and its metadata.</simpara>\n      ",
              "documentation": "\n         <p>A <a>SamplingRule</a> and its metadata.</p>\n      ",
              "shape_name": "SamplingRuleRecord"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Pagination token. Not used.</simpara>\n      ",
            "documentation": "\n         <p>Pagination token. Not used.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "GetSamplingRulesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Retrieves all sampling rules.</p>\n      "
    },
    "CreateSamplingRule": {
      "name": "CreateSamplingRule",
      "http": {
        "method": "POST",
        "uri": "/CreateSamplingRule"
      },
      "input": {
        "type": "structure",
        "members": {
          "SamplingRule": {
            "type": "structure",
            "members": {
              "RuleName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                "shape_name": "RuleName",
                "min_length": 1,
                "max_length": 32
              },
              "RuleARN": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                "shape_name": "String"
              },
              "ResourceARN": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                "required": true,
                "shape_name": "ResourceARN",
                "max_length": 500
              },
              "Priority": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                "required": true,
                "shape_name": "Priority",
                "min_length": 1,
                "max_length": 9999
              },
              "FixedRate": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                "required": true,
                "shape_name": "FixedRate",
                "min_length": 0,
                "max_length": 1
              },
              "ReservoirSize": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                "required": true,
                "shape_name": "ReservoirSize",
                "min_length": 0
              },
              "ServiceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                "required": true,
                "shape_name": "ServiceName",
                "max_length": 64
              },
              "ServiceType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                "required": true,
                "shape_name": "ServiceType",
                "max_length": 64
              },
              "Host": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                "required": true,
                "shape_name": "Host",
                "max_length": 64
              },
              "HTTPMethod": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                "required": true,
                "shape_name": "HTTPMethod",
                "max_length": 10
              },
              "URLPath": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                "required": true,
                "shape_name": "URLPath",
                "max_length": 128
              },
              "Version": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The version of the sampling rule format (<code>1</code>).</simpara>\n      ",
                "documentation": "\n         <p>The version of the sampling rule format (<code>1</code>).</p>\n      ",
                "required": true,
                "shape_name": "Version",
                "min_length": 1
              },
              "Attributes": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                "shape_name": "AttributeMap",
                "max_length": 5,
                "keys": {
                  "type": "string",
                  "shape_name": "AttributeKey",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 32
                },
                "members": {
                  "type": "string",
                  "shape_name": "AttributeValue",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 32
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>The rule definition.</simpara>\n      ",
            "documentation": "\n         <p>The rule definition.</p>\n      ",
            "required": true,
            "shape_name": "SamplingRule"
          }
        },
        "shape_name": "CreateSamplingRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingRuleRecord": {
            "type": "structure",
            "members": {
              "SamplingRule": {
                "type": "structure",
                "members": {
                  "RuleName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "RuleName",
                    "min_length": 1,
                    "max_length": 32
                  },
                  "RuleARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ResourceARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                    "required": true,
                    "shape_name": "ResourceARN",
                    "max_length": 500
                  },
                  "Priority": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                    "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                    "required": true,
                    "shape_name": "Priority",
                    "min_length": 1,
                    "max_length": 9999
                  },
                  "FixedRate": {
                    "type": "double",
                    "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                    "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                    "required": true,
                    "shape_name": "FixedRate",
                    "min_length": 0,
                    "max_length": 1
                  },
                  "ReservoirSize": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                    "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                    "required": true,
                    "shape_name": "ReservoirSize",
                    "min_length": 0
                  },
                  "ServiceName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceName",
                    "max_length": 64
                  },
                  "ServiceType": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceType",
                    "max_length": 64
                  },
                  "Host": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "Host",
                    "max_length": 64
                  },
                  "HTTPMethod": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                    "required": true,
                    "shape_name": "HTTPMethod",
                    "max_length": 10
                  },
                  "URLPath": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "URLPath",
                    "max_length": 128
                  },
                  "Version": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The version of the sampling rule format (<code>1</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The version of the sampling rule format (<code>1</code>).</p>\n      ",
                    "required": true,
                    "shape_name": "Version",
                    "min_length": 1
                  },
                  "Attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                    "shape_name": "AttributeMap",
                    "max_length": 5,
                    "keys": {
                      "type": "string",
                      "shape_name": "AttributeKey",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    }
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The sampling rule.</simpara>\n      ",
                "documentation": "\n         <p>The sampling rule.</p>\n      ",
                "shape_name": "SamplingRule"
              },
              "CreatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was created.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "ModifiedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was last modified.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was last modified.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The saved rule definition and metadata.</simpara>\n      ",
            "documentation": "\n         <p>The saved rule definition and metadata.</p>\n      ",
            "shape_name": "SamplingRuleRecord"
          }
        },
        "shape_name": "CreateSamplingRuleResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>You have reached the maximum number of sampling rules.</simpara>\n      ",
          "documentation": "\n         <p>You have reached the maximum number of sampling rules.</p>\n      ",
          "shape_name": "RuleLimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a rule to control sampling behavior for instrumented applications. Services\n         retrieve rules with <a>GetSamplingRules</a>, and evaluate each rule in\n         ascending order of <i>priority</i> for each request. If a rule matches, the\n         service records a trace, borrowing it from the reservoir size. After 10 seconds, the\n         service reports back to X-Ray with <a>GetSamplingTargets</a> to get updated\n         versions of each in-use rule. The updated rule contains a trace quota that the service can\n         use instead of borrowing from the reservoir.</p>\n      "
    },
    "UpdateSamplingRule": {
      "name": "UpdateSamplingRule",
      "http": {
        "method": "POST",
        "uri": "/UpdateSamplingRule"
      },
      "input": {
        "type": "structure",
        "members": {
          "SamplingRuleUpdate": {
            "type": "structure",
            "members": {
              "RuleName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                "shape_name": "RuleName",
                "min_length": 1,
                "max_length": 32
              },
              "RuleARN": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                "shape_name": "String"
              },
              "ResourceARN": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                "shape_name": "ResourceARN",
                "max_length": 500
              },
              "Priority": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                "shape_name": "NullableInteger"
              },
              "FixedRate": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                "shape_name": "NullableDouble"
              },
              "ReservoirSize": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                "shape_name": "NullableInteger"
              },
              "Host": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                "shape_name": "Host",
                "max_length": 64
              },
              "ServiceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                "shape_name": "ServiceName",
                "max_length": 64
              },
              "ServiceType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                "shape_name": "ServiceType",
                "max_length": 64
              },
              "HTTPMethod": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                "shape_name": "HTTPMethod",
                "max_length": 10
              },
              "URLPath": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                "shape_name": "URLPath",
                "max_length": 128
              },
              "Attributes": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                "shape_name": "AttributeMap",
                "max_length": 5,
                "keys": {
                  "type": "string",
                  "shape_name": "AttributeKey",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 32
                },
                "members": {
                  "type": "string",
                  "shape_name": "AttributeValue",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 32
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>The rule and fields to change.</simpara>\n      ",
            "documentation": "\n         <p>The rule and fields to change.</p>\n      ",
            "required": true,
            "shape_name": "SamplingRuleUpdate"
          }
        },
        "shape_name": "UpdateSamplingRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingRuleRecord": {
            "type": "structure",
            "members": {
              "SamplingRule": {
                "type": "structure",
                "members": {
                  "RuleName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "RuleName",
                    "min_length": 1,
                    "max_length": 32
                  },
                  "RuleARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ResourceARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                    "required": true,
                    "shape_name": "ResourceARN",
                    "max_length": 500
                  },
                  "Priority": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                    "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                    "required": true,
                    "shape_name": "Priority",
                    "min_length": 1,
                    "max_length": 9999
                  },
                  "FixedRate": {
                    "type": "double",
                    "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                    "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                    "required": true,
                    "shape_name": "FixedRate",
                    "min_length": 0,
                    "max_length": 1
                  },
                  "ReservoirSize": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                    "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                    "required": true,
                    "shape_name": "ReservoirSize",
                    "min_length": 0
                  },
                  "ServiceName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceName",
                    "max_length": 64
                  },
                  "ServiceType": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceType",
                    "max_length": 64
                  },
                  "Host": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "Host",
                    "max_length": 64
                  },
                  "HTTPMethod": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                    "required": true,
                    "shape_name": "HTTPMethod",
                    "max_length": 10
                  },
                  "URLPath": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "URLPath",
                    "max_length": 128
                  },
                  "Version": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The version of the sampling rule format (<code>1</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The version of the sampling rule format (<code>1</code>).</p>\n      ",
                    "required": true,
                    "shape_name": "Version",
                    "min_length": 1
                  },
                  "Attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                    "shape_name": "AttributeMap",
                    "max_length": 5,
                    "keys": {
                      "type": "string",
                      "shape_name": "AttributeKey",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    }
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The sampling rule.</simpara>\n      ",
                "documentation": "\n         <p>The sampling rule.</p>\n      ",
                "shape_name": "SamplingRule"
              },
              "CreatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was created.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "ModifiedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was last modified.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was last modified.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The updated rule definition and metadata.</simpara>\n      ",
            "documentation": "\n         <p>The updated rule definition and metadata.</p>\n      ",
            "shape_name": "SamplingRuleRecord"
          }
        },
        "shape_name": "UpdateSamplingRuleResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Modifies a sampling rule's configuration.</p>\n      "
    },
    "DeleteSamplingRule": {
      "name": "DeleteSamplingRule",
      "http": {
        "method": "POST",
        "uri": "/DeleteSamplingRule"
      },
      "input": {
        "type": "structure",
        "members": {
          "RuleName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
            "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
            "shape_name": "String"
          },
          "RuleARN": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
            "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteSamplingRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SamplingRuleRecord": {
            "type": "structure",
            "members": {
              "SamplingRule": {
                "type": "structure",
                "members": {
                  "RuleName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The name of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "RuleName",
                    "min_length": 1,
                    "max_length": 32
                  },
                  "RuleARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</simpara>\n      ",
                    "documentation": "\n         <p>The ARN of the sampling rule. Specify a rule by either name or ARN, but not both.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ResourceARN": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the ARN of the AWS resource on which the service runs.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the ARN of the AWS resource on which the service runs.</p>\n      ",
                    "required": true,
                    "shape_name": "ResourceARN",
                    "max_length": 500
                  },
                  "Priority": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The priority of the sampling rule.</simpara>\n      ",
                    "documentation": "\n         <p>The priority of the sampling rule.</p>\n      ",
                    "required": true,
                    "shape_name": "Priority",
                    "min_length": 1,
                    "max_length": 9999
                  },
                  "FixedRate": {
                    "type": "double",
                    "zonbookDocumentation": "\n         <simpara>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</simpara>\n      ",
                    "documentation": "\n         <p>The percentage of matching requests to instrument, after the reservoir is\n      exhausted.</p>\n      ",
                    "required": true,
                    "shape_name": "FixedRate",
                    "min_length": 0,
                    "max_length": 1
                  },
                  "ReservoirSize": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</simpara>\n      ",
                    "documentation": "\n         <p>A fixed number of matching requests to instrument per second, prior to applying the\n      fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.</p>\n      ",
                    "required": true,
                    "shape_name": "ReservoirSize",
                    "min_length": 0
                  },
                  "ServiceName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>name</code> that the service uses to identify itself in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>name</code> that the service uses to identify itself in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceName",
                    "max_length": 64
                  },
                  "ServiceType": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the <code>origin</code> that the service uses to identify its type in segments.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the <code>origin</code> that the service uses to identify its type in segments.</p>\n      ",
                    "required": true,
                    "shape_name": "ServiceType",
                    "max_length": 64
                  },
                  "Host": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the hostname from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the hostname from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "Host",
                    "max_length": 64
                  },
                  "HTTPMethod": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the HTTP method of a request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the HTTP method of a request.</p>\n      ",
                    "required": true,
                    "shape_name": "HTTPMethod",
                    "max_length": 10
                  },
                  "URLPath": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Matches the path from a request URL.</simpara>\n      ",
                    "documentation": "\n         <p>Matches the path from a request URL.</p>\n      ",
                    "required": true,
                    "shape_name": "URLPath",
                    "max_length": 128
                  },
                  "Version": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <simpara>The version of the sampling rule format (<code>1</code>).</simpara>\n      ",
                    "documentation": "\n         <p>The version of the sampling rule format (<code>1</code>).</p>\n      ",
                    "required": true,
                    "shape_name": "Version",
                    "min_length": 1
                  },
                  "Attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n         <simpara>Matches attributes derived from the request.</simpara>\n      ",
                    "documentation": "\n         <p>Matches attributes derived from the request.</p>\n      ",
                    "shape_name": "AttributeMap",
                    "max_length": 5,
                    "keys": {
                      "type": "string",
                      "shape_name": "AttributeKey",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeValue",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 32
                    }
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The sampling rule.</simpara>\n      ",
                "documentation": "\n         <p>The sampling rule.</p>\n      ",
                "shape_name": "SamplingRule"
              },
              "CreatedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was created.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "ModifiedAt": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>When the rule was last modified.</simpara>\n      ",
                "documentation": "\n         <p>When the rule was last modified.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The deleted rule definition and metadata.</simpara>\n      ",
            "documentation": "\n         <p>The deleted rule definition and metadata.</p>\n      ",
            "shape_name": "SamplingRuleRecord"
          }
        },
        "shape_name": "DeleteSamplingRuleResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request is missing required parameters or has invalid parameters.</simpara>\n      ",
          "documentation": "\n         <p>The request is missing required parameters or has invalid parameters.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>The request exceeds the maximum number of requests per second.</simpara>\n      ",
          "documentation": "\n         <p>The request exceeds the maximum number of requests per second.</p>\n      ",
          "shape_name": "ThrottledException"
        }
      ],
      "documentation": "\n         <p>Deletes a sampling rule.</p>\n      "
    }
  }
}
