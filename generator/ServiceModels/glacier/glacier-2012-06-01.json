{
  "version": "1.0",
  "type": "rest-json",
  "signature_version": "v4",
  "checksum_format": "sha256",
  "service_full_name": "Amazon Glacier",
  "service_id": "Glacier",
  "uid": "glacier-2012-06-01",
  "endpoint_prefix": "glacier",
  "api_version": "2012-06-01",
  "xmlnamespace": "http://glacier.amazonaws.com/doc/2012-06-01/",
  "documentation": "\n         <p>Amazon Glacier is a storage solution for \"cold data.\"</p>\n\n         <p>Amazon Glacier is an extremely low-cost storage service that provides secure,\n         durable, and easy-to-use storage for data backup and archival. With Amazon Glacier,\n         customers can store their data cost effectively for months, years, or decades. Amazon\n         Glacier also enables customers to offload the administrative burdens of operating and\n         scaling storage to AWS, so they don't have to worry about capacity planning, hardware\n         provisioning, data replication, hardware failure and recovery, or time-consuming hardware\n         migrations.</p>\n\n         <p>Amazon Glacier is a great storage choice when low storage cost is paramount and your\n         data is rarely retrieved. If your\n         application requires fast or frequent access to your data, consider using Amazon S3. For\n         more information, see <a href=\"http://aws.amazon.com/s3/\">Amazon Simple Storage Service\n            (Amazon S3)</a>.</p>\n\n         <p>You can store any kind of data in any format. There is no maximum limit on the total\n         amount of data you can store in Amazon Glacier.</p>\n\n         <p>If you are a first-time user of Amazon Glacier, we recommend that you begin by\n         reading the following sections in the <i>Amazon Glacier Developer\n         Guide</i>:</p>\n         <ul>\n            <li>\n               <p>\n                  <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html\">What is\n                  Amazon Glacier</a> - This section of the Developer Guide describes the\n               underlying data model, the operations it supports, and the AWS SDKs that you can use\n               to interact with the service.</p>\n            </li>\n            <li>\n               <p>\n                  <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html\">Getting Started\n                  with Amazon Glacier</a> - The Getting Started section walks you through the\n               process of creating a vault, uploading archives, creating jobs to download archives,\n               retrieving the job output, and deleting archives.</p>\n            </li>\n         </ul>\n      ",
  "operations": {
    "UploadArchive": {
      "name": "UploadArchive",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/archives",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "archiveDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The optional description of the archive you are uploading.</simpara>\n      ",
            "documentation": "\n         <p>The optional description of the archive you are uploading.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-description"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The SHA256 tree hash of the data being uploaded.</simpara>\n      ",
            "documentation": "\n         <p>The SHA256 tree hash of the data being uploaded.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          },
          "body": {
            "type": "blob",
            "streaming": true,
            "zonbookDocumentation": "\n         <simpara>The data to upload.</simpara>\n      ",
            "documentation": "\n         <p>The data to upload.</p>\n      ",
            "payload": true,
            "shape_name": "Stream"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to add an archive to a vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to add an archive to a vault.</p>\n      ",
        "shape_name": "UploadArchiveInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The relative URI path of the newly added archive resource.</simpara>\n      ",
            "documentation": "\n         <p>The relative URI path of the newly added archive resource.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Location"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The checksum of the archive computed by Amazon Glacier.</simpara>\n      ",
            "documentation": "\n         <p>The checksum of the archive computed by Amazon Glacier.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          },
          "archiveId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the archive. This value is also included as part of the location.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the archive. This value is also included as part of the location.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-id"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n         <simpara>For information about the underlying REST API, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/api-archive-post.html\">Upload Archive</ulink>. For\n         conceptual information, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</ulink>.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n         <p>For information about the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html\">Upload Archive</a>. For\n         conceptual information, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</a>.</p>\n      ",
        "shape_name": "ArchiveCreationOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>408 Request Timeout</simpara>\n      ",
              "documentation": "\n         <p>408 Request Timeout</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</simpara>\n      ",
              "documentation": "\n         <p>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</simpara>\n      ",
          "documentation": "\n         <p>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</p>\n      ",
          "shape_name": "RequestTimeoutException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation adds an archive to a vault. This is a synchronous operation, and for a\n         successful upload, your data is durably persisted. Amazon Glacier returns the archive ID in\n         the <code>x-amz-archive-id</code> header of the response. </p>\n\n         <p>You must use the archive ID to access your data in Amazon Glacier. After you upload\n         an archive, you should save the archive ID returned so that you can retrieve or delete the\n         archive later. Besides saving the archive ID, you can also index it and give it a friendly\n         name to allow for better searching. You can also use the optional archive description field\n         to specify how the archive is referred to in an external index of archives, such as you\n         might create in Amazon DynamoDB. You can also get the vault inventory to obtain a list of\n         archive IDs in a vault. For more information, see <a>InitiateJob</a>. </p>\n\n         <p>You must provide a SHA256 tree hash of the data you are uploading. For information\n         about computing a SHA256 tree hash, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html\">Computing Checksums</a>. </p>\n\n         <p>You can optionally specify an archive description of up to 1,024 printable ASCII\n         characters. You can get the archive description when you either retrieve the archive or get\n         the vault inventory. For more information, see <a>InitiateJob</a>. Amazon\n         Glacier does not interpret the description in any way. An archive description does not need\n         to be unique. You cannot use the description to retrieve or sort the archive list. </p>\n\n         <p>Archives are immutable. After you upload an archive, you cannot edit the archive or\n         its description.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-an-archive.html\">Uploading an Archive in Amazon\n            Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html\">Upload Archive</a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "DeleteArchive": {
      "name": "DeleteArchive",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}/archives/{archiveId}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "archiveId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the archive to delete.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the archive to delete.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for deleting an archive from an Amazon Glacier vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for deleting an archive from an Amazon Glacier vault.</p>\n      ",
        "shape_name": "DeleteArchiveInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation deletes an archive from a vault. Subsequent requests to initiate a\n         retrieval of this archive will fail. Archive retrievals that are in progress for this\n         archive ID may or may not succeed according to the following scenarios:</p>\n         <ul>\n            <li>\n               <p>If the archive retrieval job is actively preparing the data for download when\n               Amazon Glacier receives the delete archive request, the archival retrieval operation\n               might fail.</p>\n            </li>\n            <li>\n               <p>If the archive retrieval job has successfully prepared the archive for download\n               when Amazon Glacier receives the delete archive request, you will be able to download\n               the output.</p>\n            </li>\n         </ul>\n\n         <p>This operation is idempotent. Attempting to delete an already-deleted archive does\n         not result in an error.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-an-archive.html\">Deleting an Archive in Amazon\n            Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html\">Delete Archive</a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "InitiateMultipartUpload": {
      "name": "InitiateMultipartUpload",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "archiveDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The archive description that you are uploading in parts.</simpara>\n         <simpara>The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example\n         1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum\n         allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</simpara>\n      ",
            "documentation": "\n         <p>The archive description that you are uploading in parts.</p>\n         <p>The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example\n         1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum\n         allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-description"
          },
          "partSize": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The size of each part except the last, in bytes. The last part can be smaller than\n         this part size.</simpara>\n      ",
            "documentation": "\n         <p>The size of each part except the last, in bytes. The last part can be smaller than\n         this part size.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-part-size"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for initiating a multipart upload to an Amazon Glacier\n         vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for initiating a multipart upload to an Amazon Glacier\n         vault.</p>\n      ",
        "shape_name": "InitiateMultipartUploadInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The relative URI path of the multipart upload ID Amazon Glacier created.</simpara>\n      ",
            "documentation": "\n         <p>The relative URI path of the multipart upload ID Amazon Glacier created.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Location"
          },
          "uploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the multipart upload. This value is also included as part of the\n         location.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the multipart upload. This value is also included as part of the\n         location.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-multipart-upload-id"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>The Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "InitiateMultipartUploadOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation initiates a multipart upload. Amazon Glacier creates a multipart\n         upload resource and returns its ID in the response. The multipart upload ID is used in\n         subsequent requests to upload parts of an archive (see <a>UploadMultipartPart</a>).</p>\n\n         <p>When you initiate a multipart upload, you specify the part size in number of bytes.\n         The part size must be a megabyte (1024 KB) multiplied by a power of 2-for example, 1048576\n         (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable\n         part size is 1 MB, and the maximum is 4 GB.</p>\n\n         <p>Every part you upload to this resource (see <a>UploadMultipartPart</a>),\n         except the last one, must have the same size. The last one can be the same size or smaller.\n         For example, suppose you want to upload a 16.2 MB file. If you initiate the multipart\n         upload with a part size of 4 MB, you will upload four parts of 4 MB each and one part of\n         0.2 MB. </p>\n\n         <note>\n            <p>You don't need to know the size of the archive when you start a multipart upload\n            because Amazon Glacier does not require you to specify the overall archive\n            size.</p>\n         </note>\n\n         <p>After you complete the multipart upload, Amazon Glacier removes the multipart upload\n         resource referenced by the ID. Amazon Glacier also removes the multipart upload resource if\n         you cancel the multipart upload or it may be removed if there is no activity for a period\n         of 24 hours.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html\">Uploading Large Archives in\n            Parts (Multipart Upload)</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-initiate-upload.html\">Initiate Multipart\n            Upload</a> in the <i>Amazon Glacier Developer Guide</i>.</p>\n      "
    },
    "UploadMultipartPart": {
      "name": "UploadMultipartPart",
      "http": {
        "method": "PUT",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "uploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The upload ID of the multipart upload.</simpara>\n      ",
            "documentation": "\n         <p>The upload ID of the multipart upload.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The SHA256 tree hash of the data being uploaded.</simpara>\n      ",
            "documentation": "\n         <p>The SHA256 tree hash of the data being uploaded.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          },
          "range": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Identifies the range of bytes in the assembled archive that will be uploaded in this\n         part. Amazon Glacier uses this information to assemble the archive in the proper sequence.\n         The format of this header follows RFC 2616. An example header is Content-Range:bytes\n         0-4194303/*.</simpara>\n      ",
            "documentation": "\n         <p>Identifies the range of bytes in the assembled archive that will be uploaded in this\n         part. Amazon Glacier uses this information to assemble the archive in the proper sequence.\n         The format of this header follows RFC 2616. An example header is Content-Range:bytes\n         0-4194303/*.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Content-Range"
          },
          "body": {
            "type": "blob",
            "streaming": true,
            "zonbookDocumentation": "\n         <simpara>The data to upload.</simpara>\n      ",
            "documentation": "\n         <p>The data to upload.</p>\n      ",
            "payload": true,
            "shape_name": "Stream"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to upload a part of an archive in a multipart upload\n         operation.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to upload a part of an archive in a multipart upload\n         operation.</p>\n      ",
        "shape_name": "UploadMultipartPartInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The SHA256 tree hash that Amazon Glacier computed for the uploaded part.</simpara>\n      ",
            "documentation": "\n         <p>The SHA256 tree hash that Amazon Glacier computed for the uploaded part.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "UploadMultipartPartOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>408 Request Timeout</simpara>\n      ",
              "documentation": "\n         <p>408 Request Timeout</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</simpara>\n      ",
              "documentation": "\n         <p>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</simpara>\n      ",
          "documentation": "\n         <p>Returned if, when uploading an archive, Amazon Glacier times out while receiving the\n         upload.</p>\n      ",
          "shape_name": "RequestTimeoutException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation uploads a part of an archive. You can upload archive parts in any\n         order. You can also upload them in parallel. You can upload up to 10,000 parts for a\n         multipart upload.</p>\n\n         <p>Amazon Glacier rejects your upload part request if any of the following conditions is\n         true:</p>\n\n         <ul>\n            <li>\n               <p>\n                  <b>SHA256 tree hash does not match</b>To ensure that part\n               data is not corrupted in transmission, you compute a SHA256 tree hash of the part and\n               include it in your request. Upon receiving the part data, Amazon Glacier also\n               computes a SHA256 tree hash. If these hash values don't match, the operation fails.\n               For information about computing a SHA256 tree hash, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html\">Computing\n                  Checksums</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Part size does not match</b>The size of each part except\n               the last must match the size specified in the corresponding <a>InitiateMultipartUpload</a> request. The size of the last part must be the\n               same size as, or smaller than, the specified size.</p>\n               <note>\n                  <p>If you upload a part whose size is smaller than the part size you specified\n                  in your initiate multipart upload request and that part is not the last part, then\n                  the upload part request will succeed. However, the subsequent Complete Multipart\n                  Upload request will fail.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Range does not align</b>The byte range value in the\n               request does not align with the part size specified in the corresponding initiate\n               request. For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to\n               4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part\n               ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align\n               with the part size and the upload will fail. </p>\n            </li>\n         </ul>\n\n         <p>This operation is idempotent. If you upload the same part multiple times, the data\n         included in the most recent request overwrites the previously uploaded data.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html\">Uploading Large Archives in\n            Parts (Multipart Upload)</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html\">Upload Part </a> in the\n            <i>Amazon Glacier Developer Guide</i>.</p>\n      "
    },
    "CompleteMultipartUpload": {
      "name": "CompleteMultipartUpload",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "uploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The upload ID of the multipart upload.</simpara>\n      ",
            "documentation": "\n         <p>The upload ID of the multipart upload.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "archiveSize": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The total size, in bytes, of the entire archive. This value should be the sum of all\n         the sizes of the individual parts that you uploaded.</simpara>\n      ",
            "documentation": "\n         <p>The total size, in bytes, of the entire archive. This value should be the sum of all\n         the sizes of the individual parts that you uploaded.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-size"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash\n         of the individual parts. If the value you specify in the request does not match the SHA256\n         tree hash of the final assembled archive as computed by Amazon Glacier, Amazon Glacier\n         returns an error and the request fails.</simpara>\n      ",
            "documentation": "\n         <p>The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash\n         of the individual parts. If the value you specify in the request does not match the SHA256\n         tree hash of the final assembled archive as computed by Amazon Glacier, Amazon Glacier\n         returns an error and the request fails.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to complete a multipart upload operation. This informs Amazon\n         Glacier that all the archive parts have been uploaded and Amazon Glacier can now assemble\n         the archive from the uploaded parts. After assembling and saving the archive to the vault,\n         Amazon Glacier returns the URI path of the newly created archive resource.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to complete a multipart upload operation. This informs Amazon\n         Glacier that all the archive parts have been uploaded and Amazon Glacier can now assemble\n         the archive from the uploaded parts. After assembling and saving the archive to the vault,\n         Amazon Glacier returns the URI path of the newly created archive resource.</p>\n      ",
        "shape_name": "CompleteMultipartUploadInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The relative URI path of the newly added archive resource.</simpara>\n      ",
            "documentation": "\n         <p>The relative URI path of the newly added archive resource.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Location"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The checksum of the archive computed by Amazon Glacier.</simpara>\n      ",
            "documentation": "\n         <p>The checksum of the archive computed by Amazon Glacier.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          },
          "archiveId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the archive. This value is also included as part of the location.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the archive. This value is also included as part of the location.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-id"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n         <simpara>For information about the underlying REST API, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/api-archive-post.html\">Upload Archive</ulink>. For\n         conceptual information, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</ulink>.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n         <p>For information about the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html\">Upload Archive</a>. For\n         conceptual information, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</a>.</p>\n      ",
        "shape_name": "ArchiveCreationOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>You call this operation to inform Amazon Glacier that all the archive parts have been\n         uploaded and that Amazon Glacier can now assemble the archive from the uploaded parts.\n         After assembling and saving the archive to the vault, Amazon Glacier returns the URI path\n         of the newly created archive resource. Using the URI path, you can then access the archive.\n         After you upload an archive, you should save the archive ID returned to retrieve the\n         archive at a later point. You can also get the vault inventory to obtain a list of archive\n         IDs in a vault. For more information, see <a>InitiateJob</a>.</p>\n\n         <p>In the request, you must include the computed SHA256 tree hash of the entire archive\n         you have uploaded. For information about computing a SHA256 tree hash, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html\">Computing\n            Checksums</a>. On the server side, Amazon Glacier also constructs the SHA256 tree\n         hash of the assembled archive. If the values match, Amazon Glacier saves the archive to the\n         vault; otherwise, it returns an error, and the operation fails. The <a>ListParts</a> operation returns a list of parts uploaded for a specific\n         multipart upload. It includes checksum information for each uploaded part that can be used\n         to debug a bad checksum issue.</p>\n\n         <p>Additionally, Amazon Glacier also checks for any missing content ranges when\n         assembling the archive, if missing content ranges are found, Amazon Glacier returns an\n         error and the operation fails.</p>\n\n         <p>Complete Multipart Upload is an idempotent operation. After your first successful\n         complete multipart upload, if you call the operation again within a short period, the\n         operation will succeed and return the same archive ID. This is useful in the event you\n         experience a network issue that causes an aborted connection or receive a 500 server error,\n         in which case you can repeat your Complete Multipart Upload request and get the same\n         archive ID without creating duplicate archives. Note, however, that after the multipart\n         upload completes, you cannot call the List Parts operation and the multipart upload will\n         not appear in List Multipart Uploads response, even if idempotent complete is\n         possible.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html\">Uploading Large Archives in\n            Parts (Multipart Upload)</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html\">Complete Multipart\n            Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "AbortMultipartUpload": {
      "name": "AbortMultipartUpload",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "uploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The upload ID of the multipart upload to delete.</simpara>\n      ",
            "documentation": "\n         <p>The upload ID of the multipart upload to delete.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to abort a multipart upload identified by the upload ID.</simpara>\n\n         <simpara>For information about the underlying REST API, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/api-multipart-abort-upload.html\">Abort Multipart\n            Upload</ulink>. For conceptual information, see <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</ulink>.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to abort a multipart upload identified by the upload ID.</p>\n\n         <p>For information about the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html\">Abort Multipart\n            Upload</a>. For conceptual information, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</a>.</p>\n      ",
        "shape_name": "AbortMultipartUploadInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation aborts a multipart upload identified by the upload ID.</p>\n\n\n         <p>After the Abort Multipart Upload request succeeds, you cannot upload any more parts\n         to the multipart upload or complete the multipart upload. Aborting a completed upload\n         fails. However, aborting an already-aborted upload will succeed, for a short time. For more\n         information about uploading a part and completing a multipart upload, see <a>UploadMultipartPart</a> and <a>CompleteMultipartUpload</a>.</p>\n\n         <p>This operation is idempotent.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working with Archives in\n            Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html\">Abort Multipart\n            Upload</a> in the <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "ListParts": {
      "name": "ListParts",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}?marker={marker}&limit={limit}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "uploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The upload ID of the multipart upload.</simpara>\n      ",
            "documentation": "\n         <p>The upload ID of the multipart upload.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An opaque string used for pagination. This value specifies the part at which the\n         listing of parts should begin. Get the marker value from the response of a previous List\n         Parts response. You need only include the marker if you are continuing the pagination of\n         results started in a previous List Parts request.</simpara>\n      ",
            "documentation": "\n         <p>An opaque string used for pagination. This value specifies the part at which the\n         listing of parts should begin. Get the marker value from the response of a previous List\n         Parts response. You need only include the marker if you are continuing the pagination of\n         results started in a previous List Parts request.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "limit": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The maximum number of parts to be returned. The default limit is 50. The number of\n         parts returned might be fewer than the specified limit, but the number of returned parts\n         never exceeds the limit.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of parts to be returned. The default limit is 50. The number of\n         parts returned might be fewer than the specified limit, but the number of returned parts\n         never exceeds the limit.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving a list of parts of an archive that have been uploaded\n         in a specific multipart upload.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving a list of parts of an archive that have been uploaded\n         in a specific multipart upload.</p>\n      ",
        "shape_name": "ListPartsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "MultipartUploadId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the upload to which the parts are associated.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the upload to which the parts are associated.</p>\n      ",
            "shape_name": "string"
          },
          "VaultARN": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the vault to which the multipart upload was\n         initiated.</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the vault to which the multipart upload was\n         initiated.</p>\n      ",
            "shape_name": "string"
          },
          "ArchiveDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The description of the archive that was specified in the Initiate Multipart Upload\n         request.</simpara>\n      ",
            "documentation": "\n         <p>The description of the archive that was specified in the Initiate Multipart Upload\n         request.</p>\n      ",
            "shape_name": "string"
          },
          "PartSizeInBytes": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The part size in bytes. This is the same value that you specified in the Initiate\n         Multipart Upload request.</simpara>\n      ",
            "documentation": "\n         <p>The part size in bytes. This is the same value that you specified in the Initiate\n         Multipart Upload request.</p>\n      ",
            "shape_name": "long"
          },
          "CreationDate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The UTC time at which the multipart upload was initiated.</simpara>\n      ",
            "documentation": "\n         <p>The UTC time at which the multipart upload was initiated.</p>\n      ",
            "shape_name": "string"
          },
          "Parts": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the part sizes of the multipart upload. Each object in the array contains a\n         <code>RangeBytes</code> and <code>sha256-tree-hash</code> name/value\n         pair.</simpara>\n      ",
            "documentation": "\n         <p>A list of the part sizes of the multipart upload. Each object in the array contains a\n         <code>RangeBytes</code> and <code>sha256-tree-hash</code> name/value\n         pair.</p>\n      ",
            "shape_name": "PartList",
            "members": {
              "type": "structure",
              "members": {
                "RangeInBytes": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The byte range of a part, inclusive of the upper value of the range.</simpara>\n      ",
                  "documentation": "\n         <p>The byte range of a part, inclusive of the upper value of the range.</p>\n      ",
                  "shape_name": "string"
                },
                "SHA256TreeHash": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The SHA256 tree hash value that Amazon Glacier calculated for the part. This field is\n         never <code>null</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The SHA256 tree hash value that Amazon Glacier calculated for the part. This field is\n         never <code>null</code>.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A list of the part sizes of the multipart upload.</simpara>\n      ",
              "documentation": "\n         <p>A list of the part sizes of the multipart upload.</p>\n      ",
              "shape_name": "PartListElement"
            }
          },
          "Marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An opaque string that represents where to continue pagination of the results. You use\n         the marker in a new List Parts request to obtain more jobs in the list. If there are no\n         more parts, this value is <code>null</code>.</simpara>\n      ",
            "documentation": "\n         <p>An opaque string that represents where to continue pagination of the results. You use\n         the marker in a new List Parts request to obtain more jobs in the list. If there are no\n         more parts, this value is <code>null</code>.</p>\n      ",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "ListPartsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists the parts of an archive that have been uploaded in a specific\n         multipart upload. You can make this request at any time during an in-progress multipart\n         upload before you complete the upload (see <a>CompleteMultipartUpload</a>. List\n         Parts returns an error for completed uploads. The list returned in the List Parts response\n         is sorted by part range. </p>\n\n         <p>The List Parts operation supports pagination. By default, this operation returns up\n         to 50 uploaded parts in the response. You should always check the response for a\n            <code>marker</code> at which to continue the list; if there are no more items the\n            <code>marker</code> is <code>null</code>. To return a list of parts that begins at a\n         specific part, set the <code>marker</code> request parameter to the value you obtained from\n         a previous List Parts request. You can also limit the number of parts returned in the\n         response by specifying the <code>limit</code> parameter in the request. </p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working\n            with Archives in Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html\">List Parts</a> in the\n            <i>Amazon Glacier Developer Guide</i>.</p>\n      "
    },
    "ListMultipartUploads": {
      "name": "ListMultipartUploads",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/multipart-uploads?marker={marker}&limit={limit}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "limit": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Specifies the maximum number of uploads returned in the response body. If this value\n         is not specified, the List Uploads operation returns up to 50 uploads.</simpara>\n      ",
            "documentation": "\n         <p>Specifies the maximum number of uploads returned in the response body. If this value\n         is not specified, the List Uploads operation returns up to 50 uploads.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An opaque string used for pagination. This value specifies the upload at which the\n         listing of uploads should begin. Get the marker value from a previous List Uploads\n         response. You need only include the marker if you are continuing the pagination of results\n         started in a previous List Uploads request.</simpara>\n      ",
            "documentation": "\n         <p>An opaque string used for pagination. This value specifies the upload at which the\n         listing of uploads should begin. Get the marker value from a previous List Uploads\n         response. You need only include the marker if you are continuing the pagination of results\n         started in a previous List Uploads request.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving list of in-progress multipart uploads for an Amazon\n         Glacier vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving list of in-progress multipart uploads for an Amazon\n         Glacier vault.</p>\n      ",
        "shape_name": "ListMultipartUploadsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "UploadsList": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of in-progress multipart uploads.</simpara>\n      ",
            "documentation": "\n         <p>A list of in-progress multipart uploads.</p>\n      ",
            "shape_name": "UploadsList",
            "members": {
              "type": "structure",
              "members": {
                "MultipartUploadId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of a multipart upload.</simpara>\n      ",
                  "documentation": "\n         <p>The ID of a multipart upload.</p>\n      ",
                  "shape_name": "string"
                },
                "VaultARN": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the vault that contains the archive.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the vault that contains the archive.</p>\n      ",
                  "shape_name": "string"
                },
                "ArchiveDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The description of the archive that was specified in the Initiate Multipart Upload\n         request.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the archive that was specified in the Initiate Multipart Upload\n         request.</p>\n      ",
                  "shape_name": "string"
                },
                "PartSizeInBytes": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The part size, in bytes, specified in the Initiate Multipart Upload request. This is\n         the size of all the parts in the upload except the last part, which may be smaller than\n         this size.</simpara>\n      ",
                  "documentation": "\n         <p>The part size, in bytes, specified in the Initiate Multipart Upload request. This is\n         the size of all the parts in the upload except the last part, which may be smaller than\n         this size.</p>\n      ",
                  "shape_name": "long"
                },
                "CreationDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The UTC time at which the multipart upload was initiated.</simpara>\n      ",
                  "documentation": "\n         <p>The UTC time at which the multipart upload was initiated.</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A list of in-progress multipart uploads for a vault.</simpara>\n      ",
              "documentation": "\n         <p>A list of in-progress multipart uploads for a vault.</p>\n      ",
              "shape_name": "UploadListElement"
            }
          },
          "Marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An opaque string that represents where to continue pagination of the results. You use\n         the marker in a new List Multipart Uploads request to obtain more uploads in the list. If\n         there are no more uploads, this value is <code>null</code>.</simpara>\n      ",
            "documentation": "\n         <p>An opaque string that represents where to continue pagination of the results. You use\n         the marker in a new List Multipart Uploads request to obtain more uploads in the list. If\n         there are no more uploads, this value is <code>null</code>.</p>\n      ",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "ListMultipartUploadsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists in-progress multipart uploads for the specified vault. An\n         in-progress multipart upload is a multipart upload that has been initiated by an <a>InitiateMultipartUpload</a> request, but has not yet been completed or aborted.\n         The list returned in the List Multipart Upload response has no guaranteed order. </p>\n\n         <p>The List Multipart Uploads operation supports pagination. By default, this operation\n         returns up to 50 multipart uploads in the response. You should always check the response\n         for a <code>marker</code> at which to continue the list; if there are no more items the\n            <code>marker</code> is <code>null</code>. To return a list of multipart uploads that\n         begins at a specific upload, set the <code>marker</code> request parameter to the value you\n         obtained from a previous List Multipart Upload request. You can also limit the number of\n         uploads returned in the response by specifying the <code>limit</code> parameter in the\n         request.</p>\n\n         <p>Note the difference between this operation and listing parts (<a>ListParts</a>). The List Multipart Uploads operation lists all multipart uploads\n         for a vault and does not require a multipart upload ID. The List Parts operation requires a\n         multipart upload ID since parts are associated with a single upload.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n\n         <p>For conceptual information and the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html\">Working\n            with Archives in Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-uploads.html\">List Multipart Uploads\n         </a> in the <i>Amazon Glacier Developer Guide</i>.</p>\n      "
    },
    "GetVaultNotifications": {
      "name": "GetVaultNotifications",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/notification-configuration"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving the notification configuration set on an Amazon\n         Glacier vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving the notification configuration set on an Amazon\n         Glacier vault.</p>\n      ",
        "shape_name": "GetVaultNotificationsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "vaultNotificationConfig": {
            "type": "structure",
            "members": {
              "SNSTopic": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name\n         (ARN).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name\n         (ARN).</p>\n      ",
                "shape_name": "string"
              },
              "Events": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of one or more events for which Amazon Glacier will send a notification to the\n         specified Amazon SNS topic.</simpara>\n      ",
                "documentation": "\n         <p>A list of one or more events for which Amazon Glacier will send a notification to the\n         specified Amazon SNS topic.</p>\n      ",
                "shape_name": "NotificationEventList",
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>Returns the notification configuration set on the vault.</simpara>\n      ",
            "documentation": "\n         <p>Returns the notification configuration set on the vault.</p>\n      ",
            "payload": true,
            "shape_name": "VaultNotificationConfig"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "GetVaultNotificationsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation retrieves the <code>notification-configuration</code> subresource of\n         the specified vault.</p>\n\n         <p>For information about setting a notification configuration on a vault, see <a>SetVaultNotifications</a>. If a notification configuration for a vault is not\n         set, the operation returns a <code>404 Not Found</code> error. For more information about\n         vault notifications, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html\">Configuring Vault\n            Notifications in Amazon Glacier</a>. </p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html\">Configuring Vault\n            Notifications in Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-get.html\">Get Vault Notification\n            Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "SetVaultNotifications": {
      "name": "SetVaultNotifications",
      "http": {
        "method": "PUT",
        "uri": "/{accountId}/vaults/{vaultName}/notification-configuration",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultNotificationConfig": {
            "type": "structure",
            "members": {
              "SNSTopic": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name\n         (ARN).</simpara>\n      ",
                "documentation": "\n         <p>The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name\n         (ARN).</p>\n      ",
                "shape_name": "string"
              },
              "Events": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of one or more events for which Amazon Glacier will send a notification to the\n         specified Amazon SNS topic.</simpara>\n      ",
                "documentation": "\n         <p>A list of one or more events for which Amazon Glacier will send a notification to the\n         specified Amazon SNS topic.</p>\n      ",
                "shape_name": "NotificationEventList",
                "members": {
                  "type": "string",
                  "shape_name": "string",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>Provides options for specifying notification configuration.</simpara>\n      ",
            "documentation": "\n         <p>Provides options for specifying notification configuration.</p>\n      ",
            "payload": true,
            "shape_name": "VaultNotificationConfig"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to configure notifications that will be sent when specific events\n         happen to a vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to configure notifications that will be sent when specific events\n         happen to a vault.</p>\n      ",
        "shape_name": "SetVaultNotificationsInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation configures notifications that will be sent when specific events happen\n         to a vault. By default, you don't get any notifications.</p>\n\n         <p>To configure vault notifications, send a PUT request to the\n            <code>notification-configuration</code> subresource of the vault. The request should\n         include a JSON document that provides an Amazon SNS topic and specific events for which you\n         want Amazon Glacier to send notifications to the topic.</p>\n\n         <p>Amazon SNS topics must grant permission to the vault to be allowed to publish\n         notifications to the topic. You can configure a vault to publish a notification for the\n         following vault events:</p>\n\n         <ul>\n            <li>\n                <p>\n                  <b>ArchiveRetrievalCompleted</b> This event occurs when a\n               job that was initiated for an archive retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be \"Succeeded\" or\n               \"Failed\". The notification sent to the SNS topic is the same output as returned from\n                  <a>DescribeJob</a>. </p>\n            </li>\n            <li>\n\n               <p>\n                  <b>InventoryRetrievalCompleted</b> This event occurs when a\n               job that was initiated for an inventory retrieval is completed (<a>InitiateJob</a>). The status of the completed job can be \"Succeeded\" or\n               \"Failed\". The notification sent to the SNS topic is the same output as returned from\n                  <a>DescribeJob</a>. </p>\n            </li>\n         </ul>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html\">Configuring Vault\n            Notifications in Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-put.html\">Set Vault Notification\n            Configuration </a> in the <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "DeleteVaultNotifications": {
      "name": "DeleteVaultNotifications",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}/notification-configuration",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for deleting a vault notification configuration from an Amazon\n         Glacier vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for deleting a vault notification configuration from an Amazon\n         Glacier vault.</p>\n      ",
        "shape_name": "DeleteVaultNotificationsInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation deletes the notification configuration set for a vault. The operation\n         is eventually consistent; that is, it might take some time for Amazon Glacier to completely\n         disable the notifications and you might still receive some notifications for a short time\n         after you send the delete request.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n         <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access\n            Control Using AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/configuring-notifications.html\">Configuring Vault\n            Notifications in Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-notifications-delete.html\">Delete Vault\n            Notification Configuration </a> in the Amazon Glacier Developer Guide. </p>\n      "
    },
    "GetVaultAccessPolicy": {
      "name": "GetVaultAccessPolicy",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/access-policy"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Input for GetVaultAccessPolicy.</simpara>\n      ",
        "documentation": "\n         <p>Input for GetVaultAccessPolicy.</p>\n      ",
        "shape_name": "GetVaultAccessPolicyInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "policy": {
            "type": "structure",
            "members": {
              "Policy": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The vault access policy.</simpara>\n      ",
                "documentation": "\n         <p>The vault access policy.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Contains the returned vault access policy as a JSON string.</simpara>\n      ",
            "documentation": "\n         <p>Contains the returned vault access policy as a JSON string.</p>\n      ",
            "payload": true,
            "shape_name": "VaultAccessPolicy"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Output for GetVaultAccessPolicy.</simpara>\n      ",
        "documentation": "\n         <p>Output for GetVaultAccessPolicy.</p>\n      ",
        "shape_name": "GetVaultAccessPolicyOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation retrieves the <code>access-policy</code> subresource set on the vault;\n         for more information on setting this subresource, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-SetVaultAccessPolicy.html\">Set Vault Access Policy\n            (PUT access-policy)</a>. If there is no access policy set on the vault, the\n         operation returns a <code>404 Not found</code> error. For more information about vault\n         access policies, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html\">Amazon Glacier Access Control\n            with Vault Access Policies</a>.</p>\n      "
    },
    "SetVaultAccessPolicy": {
      "name": "SetVaultAccessPolicy",
      "http": {
        "method": "PUT",
        "uri": "/{accountId}/vaults/{vaultName}/access-policy",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "policy": {
            "type": "structure",
            "members": {
              "Policy": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The vault access policy.</simpara>\n      ",
                "documentation": "\n         <p>The vault access policy.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The vault access policy as a JSON string.</simpara>\n      ",
            "documentation": "\n         <p>The vault access policy as a JSON string.</p>\n      ",
            "payload": true,
            "shape_name": "VaultAccessPolicy"
          }
        },
        "zonbookDocumentation": "\n         <simpara>SetVaultAccessPolicy input.</simpara>\n      ",
        "documentation": "\n         <p>SetVaultAccessPolicy input.</p>\n      ",
        "shape_name": "SetVaultAccessPolicyInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation configures an access policy for a vault and will overwrite an existing\n         policy. To configure a vault access policy, send a PUT request to the\n            <code>access-policy</code> subresource of the vault. An access policy is specific to a\n         vault and is also called a vault subresource. You can set one access policy per vault and\n         the policy can be up to 20 KB in size. For more information about vault access policies,\n         see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html\">Amazon Glacier Access Control with Vault Access Policies</a>. </p>\n      "
    },
    "DeleteVaultAccessPolicy": {
      "name": "DeleteVaultAccessPolicy",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}/access-policy",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>DeleteVaultAccessPolicy input.</simpara>\n      ",
        "documentation": "\n         <p>DeleteVaultAccessPolicy input.</p>\n      ",
        "shape_name": "DeleteVaultAccessPolicyInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation deletes the access policy associated with the specified vault. The\n         operation is eventually consistent; that is, it might take some time for Amazon Glacier to\n         completely remove the access policy, and you might still see the effect of the policy for a\n         short time after you send the delete request.</p>\n         <p>This operation is idempotent. You can invoke delete multiple times, even if there is\n         no policy associated with the vault. For more information about vault access policies, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html\">Amazon Glacier Access Control with Vault Access Policies</a>. </p>\n      "
    },
    "InitiateVaultLock": {
      "name": "InitiateVaultLock",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/lock-policy",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "policy": {
            "type": "structure",
            "members": {
              "Policy": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The vault lock policy.</simpara>\n      ",
                "documentation": "\n         <p>The vault lock policy.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The vault lock policy as a JSON string, which uses \"\\\" as an escape\n         character.</simpara>\n      ",
            "documentation": "\n         <p>The vault lock policy as a JSON string, which uses \"\\\" as an escape\n         character.</p>\n      ",
            "payload": true,
            "shape_name": "VaultLockPolicy"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input values for <code>InitiateVaultLock</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input values for <code>InitiateVaultLock</code>.</p>\n      ",
        "shape_name": "InitiateVaultLockInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "lockId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The lock ID, which is used to complete the vault locking process.</simpara>\n      ",
            "documentation": "\n         <p>The lock ID, which is used to complete the vault locking process.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-lock-id"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "InitiateVaultLockOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation initiates the vault locking process by doing the following:</p>\n         <ul>\n            <li>\n               <p>Installing a vault lock policy on the specified vault.</p>\n            </li>\n            <li>\n               <p>Setting the lock state of vault lock to <code>InProgress</code>.</p>\n            </li>\n            <li>\n               <p>Returning a lock ID, which is used to complete the vault locking\n               process.</p>\n            </li>\n         </ul>\n\n         <p>You can set one vault lock policy for each vault and this policy can be up to 20 KB\n         in size. For more information about vault lock policies, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html\">Amazon Glacier Access Control with\n            Vault Lock Policies</a>. </p>\n         <p>You must complete the vault locking process within 24 hours after the vault lock\n         enters the <code>InProgress</code> state. After the 24 hour window ends, the lock ID\n         expires, the vault automatically exits the <code>InProgress</code> state, and the vault\n         lock policy is removed from the vault. You call <a>CompleteVaultLock</a> to\n         complete the vault locking process by setting the state of the vault lock to\n            <code>Locked</code>. </p>\n         <p>After a vault lock is in the <code>Locked</code> state, you cannot initiate a new\n         vault lock for the vault.</p>\n\n         <p>You can abort the vault locking process by calling <a>AbortVaultLock</a>.\n         You can get the state of the vault lock by calling <a>GetVaultLock</a>. For more\n         information about the vault locking process, <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html\">Amazon Glacier Vault\n         Lock</a>.</p>\n\n         <p>If this operation is called when the vault lock is in the <code>InProgress</code>\n         state, the operation returns an <code>AccessDeniedException</code> error. When the vault\n         lock is in the <code>InProgress</code> state you must call <a>AbortVaultLock</a>\n         before you can initiate a new vault lock policy. </p>\n      "
    },
    "GetVaultLock": {
      "name": "GetVaultLock",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/lock-policy"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input values for <code>GetVaultLock</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input values for <code>GetVaultLock</code>.</p>\n      ",
        "shape_name": "GetVaultLockInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "Policy": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The vault lock policy as a JSON string, which uses \"\\\" as an escape\n         character.</simpara>\n      ",
            "documentation": "\n         <p>The vault lock policy as a JSON string, which uses \"\\\" as an escape\n         character.</p>\n      ",
            "shape_name": "string"
          },
          "State": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The state of the vault lock. <code>InProgress</code> or\n         <code>Locked</code>.</simpara>\n      ",
            "documentation": "\n         <p>The state of the vault lock. <code>InProgress</code> or\n         <code>Locked</code>.</p>\n      ",
            "shape_name": "string"
          },
          "ExpirationDate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The UTC date and time at which the lock ID expires. This value can be\n            <code>null</code> if the vault lock is in a <code>Locked</code> state.</simpara>\n      ",
            "documentation": "\n         <p>The UTC date and time at which the lock ID expires. This value can be\n            <code>null</code> if the vault lock is in a <code>Locked</code> state.</p>\n      ",
            "shape_name": "string"
          },
          "CreationDate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The UTC date and time at which the vault lock was put into the\n            <code>InProgress</code> state.</simpara>\n      ",
            "documentation": "\n         <p>The UTC date and time at which the vault lock was put into the\n            <code>InProgress</code> state.</p>\n      ",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "GetVaultLockOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation retrieves the following attributes from the <code>lock-policy</code>\n         subresource set on the specified vault: </p>\n         <ul>\n            <li>\n               <p>The vault lock policy set on the vault.</p>\n            </li>\n            <li>\n               <p>The state of the vault lock, which is either <code>InProgess</code> or\n                  <code>Locked</code>.</p>\n            </li>\n            <li>\n               <p>When the lock ID expires. The lock ID is used to complete the vault locking\n               process.</p>\n            </li>\n            <li>\n               <p>When the vault lock was initiated and put into the <code>InProgress</code>\n               state.</p>\n            </li>\n         </ul>\n\n         <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by\n         calling <a>CompleteVaultLock</a>. You can abort the vault locking process by\n         calling <a>AbortVaultLock</a>. For more information about the vault locking\n         process, <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html\">Amazon\n            Glacier Vault Lock</a>. </p>\n         <p>If there is no vault lock policy set on the vault, the operation returns a <code>404\n            Not found</code> error. For more information about vault lock policies, <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html\">Amazon\n            Glacier Access Control with Vault Lock Policies</a>. </p>\n      "
    },
    "AbortVaultLock": {
      "name": "AbortVaultLock",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}/lock-policy",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input values for <code>AbortVaultLock</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input values for <code>AbortVaultLock</code>.</p>\n      ",
        "shape_name": "AbortVaultLockInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation aborts the vault locking process if the vault lock is not in the\n            <code>Locked</code> state. If the vault lock is in the <code>Locked</code> state when\n         this operation is requested, the operation returns an <code>AccessDeniedException</code>\n         error. Aborting the vault locking process removes the vault lock policy from the specified\n         vault. </p>\n         <p>A vault lock is put into the <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. A vault lock is put into the <code>Locked</code> state by\n         calling <a>CompleteVaultLock</a>. You can get the state of a vault lock by\n         calling <a>GetVaultLock</a>. For more information about the vault locking\n         process, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html\">Amazon Glacier Vault Lock</a>. For more information about vault lock policies, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock-policy.html\">Amazon\n            Glacier Access Control with Vault Lock Policies</a>. </p>\n         <p>This operation is idempotent. You can successfully invoke this operation multiple\n         times, if the vault lock is in the <code>InProgress</code> state or if there is no policy\n         associated with the vault.</p>\n      "
    },
    "CompleteVaultLock": {
      "name": "CompleteVaultLock",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/lock-policy/{lockId}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "lockId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>lockId</code> value is the lock ID obtained from a <xref linkend=\"InitiateVaultLock\"/> request.</simpara>\n      ",
            "documentation": "\n         <p>The <code>lockId</code> value is the lock ID obtained from a <a>InitiateVaultLock</a> request.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input values for <code>CompleteVaultLock</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input values for <code>CompleteVaultLock</code>.</p>\n      ",
        "shape_name": "CompleteVaultLockInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation completes the vault locking process by transitioning the vault lock\n         from the <code>InProgress</code> state to the <code>Locked</code> state, which causes the\n         vault lock policy to become unchangeable. A vault lock is put into the\n            <code>InProgress</code> state by calling <a>InitiateVaultLock</a>. You can\n         obtain the state of the vault lock by calling <a>GetVaultLock</a>. For more\n         information about the vault locking process, <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-lock.html\">Amazon Glacier Vault Lock</a>. </p>\n         <p>This operation is idempotent. This request is always successful if the vault lock is\n         in the <code>Locked</code> state and the provided lock ID matches the lock ID originally\n         used to lock the vault.</p>\n         <p>If an invalid lock ID is passed in the request when the vault lock is in the\n            <code>Locked</code> state, the operation returns an <code>AccessDeniedException</code>\n         error. If an invalid lock ID is passed in the request when the vault lock is in the\n            <code>InProgress</code> state, the operation throws an <code>InvalidParameter</code>\n         error.</p>\n      "
    },
    "CreateVault": {
      "name": "CreateVault",
      "http": {
        "method": "PUT",
        "uri": "/{accountId}/vaults/{vaultName}",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to create a vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to create a vault.</p>\n      ",
        "shape_name": "CreateVaultInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The URI of the vault that was created.</simpara>\n      ",
            "documentation": "\n         <p>The URI of the vault that was created.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Location"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "CreateVaultOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault limit or tags limit being exceeded.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the request results in a vault limit or tags limit being exceeded.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault or account limit being exceeded.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the request results in a vault or account limit being exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>This operation creates a new vault with the specified name. The name of the vault\n         must be unique within a region for an AWS account. You can create up to 1,000 vaults per\n         account. If you need to create more vaults, contact Amazon Glacier.</p>\n         <p>You must use the following guidelines when naming a vault.</p>\n         <ul>\n            <li>\n               <p>Names can be between 1 and 255 characters long.</p>\n            </li>\n            <li>\n               <p>Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.'\n               (period).</p>\n            </li>\n         </ul>\n\n         <p>This operation is idempotent.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/creating-vaults.html\">Creating a Vault in Amazon\n            Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html\">Create Vault </a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "DescribeVault": {
      "name": "DescribeVault",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving metadata for a specific vault in Amazon\n         Glacier.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving metadata for a specific vault in Amazon\n         Glacier.</p>\n      ",
        "shape_name": "DescribeVaultInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "VaultARN": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the vault.</p>\n      ",
            "shape_name": "string"
          },
          "VaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "shape_name": "string"
          },
          "CreationDate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Universal Coordinated Time (UTC) date when the vault was created. This value\n         should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</simpara>\n      ",
            "documentation": "\n         <p>The Universal Coordinated Time (UTC) date when the vault was created. This value\n         should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</p>\n      ",
            "shape_name": "string"
          },
          "LastInventoryDate": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Universal Coordinated Time (UTC) date when Amazon Glacier completed the last\n         vault inventory.  This value should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</simpara>\n      ",
            "documentation": "\n         <p>The Universal Coordinated Time (UTC) date when Amazon Glacier completed the last\n         vault inventory.  This value should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</p>\n      ",
            "shape_name": "string"
          },
          "NumberOfArchives": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The number of archives in the vault as of the last inventory date. This field will\n         return <code>null</code> if an inventory has not yet run on the vault, for example if you\n         just created the vault.</simpara>\n      ",
            "documentation": "\n         <p>The number of archives in the vault as of the last inventory date. This field will\n         return <code>null</code> if an inventory has not yet run on the vault, for example if you\n         just created the vault.</p>\n      ",
            "shape_name": "long"
          },
          "SizeInBytes": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>Total size, in bytes, of the archives in the vault as of the last inventory date.\n         This field will return null if an inventory has not yet run on the vault, for example if\n         you just created the vault.</simpara>\n      ",
            "documentation": "\n         <p>Total size, in bytes, of the archives in the vault as of the last inventory date.\n         This field will return null if an inventory has not yet run on the vault, for example if\n         you just created the vault.</p>\n      ",
            "shape_name": "long"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "DescribeVaultOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation returns information about a vault, including the vault's Amazon\n         Resource Name (ARN), the date the vault was created, the number of archives it contains,\n         and the total size of all the archives in the vault. The number of archives and their total\n         size are as of the last inventory generation. This means that if you add or remove an\n         archive from a vault, and then immediately use Describe Vault, the change in contents will\n         not be immediately reflected. If you want to retrieve the latest inventory of the vault,\n         use <a>InitiateJob</a>. Amazon Glacier generates vault inventories approximately\n         daily. For more information, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html\">Downloading a Vault Inventory in\n            Amazon Glacier</a>. </p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html\">Retrieving Vault Metadata in\n            Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html\">Describe Vault </a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "ListVaults": {
      "name": "ListVaults",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults?marker={marker}&limit={limit}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A string used for pagination. The marker specifies the vault ARN after which the\n         listing of vaults should begin.</simpara>\n      ",
            "documentation": "\n         <p>A string used for pagination. The marker specifies the vault ARN after which the\n         listing of vaults should begin.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "limit": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The maximum number of vaults to be returned. The default limit is 10. The number of\n         vaults returned might be fewer than the specified limit, but the number of returned vaults\n         never exceeds the limit.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of vaults to be returned. The default limit is 10. The number of\n         vaults returned might be fewer than the specified limit, but the number of returned vaults\n         never exceeds the limit.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options to retrieve the vault list owned by the calling user's account. The\n         list provides metadata information for each vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options to retrieve the vault list owned by the calling user's account. The\n         list provides metadata information for each vault.</p>\n      ",
        "shape_name": "ListVaultsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "VaultList": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>List of vaults.</simpara>\n      ",
            "documentation": "\n         <p>List of vaults.</p>\n      ",
            "shape_name": "VaultList",
            "members": {
              "type": "structure",
              "members": {
                "VaultARN": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the vault.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the vault.</p>\n      ",
                  "shape_name": "string"
                },
                "VaultName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the vault.</p>\n      ",
                  "shape_name": "string"
                },
                "CreationDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Universal Coordinated Time (UTC) date when the vault was created. This value\n         should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The Universal Coordinated Time (UTC) date when the vault was created. This value\n         should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</p>\n      ",
                  "shape_name": "string"
                },
                "LastInventoryDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Universal Coordinated Time (UTC) date when Amazon Glacier completed the last\n         vault inventory.  This value should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The Universal Coordinated Time (UTC) date when Amazon Glacier completed the last\n         vault inventory.  This value should be a string in the ISO 8601 date format, for example\n            <code>2012-03-20T17:03:43.221Z</code>.</p>\n      ",
                  "shape_name": "string"
                },
                "NumberOfArchives": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The number of archives in the vault as of the last inventory date. This field will\n         return <code>null</code> if an inventory has not yet run on the vault, for example if you\n         just created the vault.</simpara>\n      ",
                  "documentation": "\n         <p>The number of archives in the vault as of the last inventory date. This field will\n         return <code>null</code> if an inventory has not yet run on the vault, for example if you\n         just created the vault.</p>\n      ",
                  "shape_name": "long"
                },
                "SizeInBytes": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>Total size, in bytes, of the archives in the vault as of the last inventory date.\n         This field will return null if an inventory has not yet run on the vault, for example if\n         you just created the vault.</simpara>\n      ",
                  "documentation": "\n         <p>Total size, in bytes, of the archives in the vault as of the last inventory date.\n         This field will return null if an inventory has not yet run on the vault, for example if\n         you just created the vault.</p>\n      ",
                  "shape_name": "long"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
              "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
              "shape_name": "DescribeVaultOutput"
            }
          },
          "Marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The vault ARN at which to continue pagination of the results. You use the marker in\n         another List Vaults request to obtain more vaults in the list.</simpara>\n      ",
            "documentation": "\n         <p>The vault ARN at which to continue pagination of the results. You use the marker in\n         another List Vaults request to obtain more vaults in the list.</p>\n      ",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "ListVaultsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists all vaults owned by the calling user's account. The list\n         returned in the response is ASCII-sorted by vault name.</p>\n\n         <p>By default, this operation returns up to 10 items. If there are more vaults to\n         list, the response <code>marker</code> field contains the vault Amazon Resource Name (ARN)\n         at which to continue the list with a new List Vaults request; otherwise, the\n            <code>marker</code> field is <code>null</code>. To return a list of vaults that begins\n         at a specific vault, set the <code>marker</code> request parameter to the vault ARN you\n         obtained from a previous List Vaults request. You can also limit the number of vaults\n         returned in the response by specifying the <code>limit</code> parameter in the request. </p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/retrieving-vault-info.html\">Retrieving Vault Metadata in\n            Amazon Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vaults-get.html\">List Vaults </a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "DeleteVault": {
      "name": "DeleteVault",
      "http": {
        "method": "DELETE",
        "uri": "/{accountId}/vaults/{vaultName}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for deleting a vault from Amazon Glacier.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for deleting a vault from Amazon Glacier.</p>\n      ",
        "shape_name": "DeleteVaultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation deletes a vault. Amazon Glacier will delete a vault only if there are\n         no archives in the vault as of the last inventory and there have been no writes to the\n         vault since the last inventory. If either of these conditions is not satisfied, the vault\n         deletion fails (that is, the vault is not removed) and Amazon Glacier returns an error. You\n         can use <a>DescribeVault</a> to return the number of archives in a vault, and\n         you can use <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html\">Initiate a Job (POST\n            jobs)</a> to initiate a new inventory retrieval for a vault. The inventory contains\n         the archive IDs you use to delete archives using <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html\">Delete Archive (DELETE\n            archive)</a>.</p>\n\n         <p>This operation is idempotent.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p> For conceptual information and underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/deleting-vaults.html\">Deleting a Vault in Amazon\n            Glacier</a> and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html\">Delete Vault </a> in the\n            <i>Amazon Glacier Developer Guide</i>. </p>\n      "
    },
    "InitiateJob": {
      "name": "InitiateJob",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/jobs",
        "response_code": 202
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "jobParameters": {
            "type": "structure",
            "members": {
              "Format": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>When initiating a job to retrieve a vault inventory, you can optionally add this\n         parameter to your request to specify the output format. If you are initiating an inventory\n         job and do not specify a Format field, JSON is the default format. Valid values are \"CSV\"\n         and \"JSON\".</simpara>\n      ",
                "documentation": "\n         <p>When initiating a job to retrieve a vault inventory, you can optionally add this\n         parameter to your request to specify the output format. If you are initiating an inventory\n         job and do not specify a Format field, JSON is the default format. Valid values are \"CSV\"\n         and \"JSON\".</p>\n      ",
                "shape_name": "string"
              },
              "Type": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The job type. You can initiate a job to perform a select query on an archive, \n         retrieve an archive, or get an inventory of a vault. \n         Valid values are \"select\", \"archive-retrieval\" and \"inventory-retrieval\".</simpara>\n      ",
                "documentation": "\n         <p>The job type. You can initiate a job to perform a select query on an archive, \n         retrieve an archive, or get an inventory of a vault. \n         Valid values are \"select\", \"archive-retrieval\" and \"inventory-retrieval\".</p>\n      ",
                "shape_name": "string"
              },
              "ArchiveId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the archive that you want to retrieve. This field is required only if\n            <code>Type</code> is set to <code>select</code> or <code>archive-retrieval</code>code&gt;. \n         An error occurs if you specify this\n         request parameter for an inventory retrieval job request. </simpara>\n      ",
                "documentation": "\n         <p>The ID of the archive that you want to retrieve. This field is required only if\n            <code>Type</code> is set to <code>select</code> or <code>archive-retrieval</code>code&gt;. \n         An error occurs if you specify this\n         request parameter for an inventory retrieval job request. </p>\n      ",
                "shape_name": "string"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The optional description for the job. The description must be less than or equal to\n         1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically,\n         ASCII values 32-126 decimal or 0x20-0x7E hexadecimal.</simpara>\n      ",
                "documentation": "\n         <p>The optional description for the job. The description must be less than or equal to\n         1,024 bytes. The allowable characters are 7-bit ASCII without control codes-specifically,\n         ASCII values 32-126 decimal or 0x20-0x7E hexadecimal.</p>\n      ",
                "shape_name": "string"
              },
              "SNSTopic": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The Amazon SNS topic ARN to which Amazon Glacier sends a notification when the job is\n         completed and the output is ready for you to download. The specified topic publishes the\n         notification to its subscribers. The SNS topic must exist.</simpara>\n      ",
                "documentation": "\n         <p>The Amazon SNS topic ARN to which Amazon Glacier sends a notification when the job is\n         completed and the output is ready for you to download. The specified topic publishes the\n         notification to its subscribers. The SNS topic must exist.</p>\n      ",
                "shape_name": "string"
              },
              "RetrievalByteRange": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The byte range to retrieve for an archive retrieval. in the form\n            \"<emphasis>StartByteValue</emphasis>-<emphasis>EndByteValue</emphasis>\" If not\n         specified, the whole archive is retrieved. If specified, the byte range must be megabyte\n         (1024*1024) aligned which means that <emphasis>StartByteValue</emphasis> must be divisible\n         by 1 MB and <emphasis>EndByteValue</emphasis> plus 1 must be divisible by 1 MB or be the\n         end of the archive specified as the archive byte size value minus 1. If RetrievalByteRange\n         is not megabyte aligned, this operation returns a 400 response. </simpara>\n         <simpara>An error occurs if you specify this field for an inventory retrieval job\n         request.</simpara>\n      ",
                "documentation": "\n         <p>The byte range to retrieve for an archive retrieval. in the form\n            \"<i>StartByteValue</i>-<i>EndByteValue</i>\" If not\n         specified, the whole archive is retrieved. If specified, the byte range must be megabyte\n         (1024*1024) aligned which means that <i>StartByteValue</i> must be divisible\n         by 1 MB and <i>EndByteValue</i> plus 1 must be divisible by 1 MB or be the\n         end of the archive specified as the archive byte size value minus 1. If RetrievalByteRange\n         is not megabyte aligned, this operation returns a 400 response. </p>\n         <p>An error occurs if you specify this field for an inventory retrieval job\n         request.</p>\n      ",
                "shape_name": "string"
              },
              "Tier": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The tier to use for a select or an archive retrieval job. Valid values are\n            <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n            <code>Standard</code> is the default.</simpara>\n      ",
                "documentation": "\n         <p>The tier to use for a select or an archive retrieval job. Valid values are\n            <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n            <code>Standard</code> is the default.</p>\n      ",
                "shape_name": "string"
              },
              "InventoryRetrievalParameters": {
                "type": "structure",
                "members": {
                  "StartDate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The start of the date range in UTC for vault inventory retrieval that includes\n         archives created on or after this date. This value should be a string in the ISO 8601 date\n         format, for example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                    "documentation": "\n         <p>The start of the date range in UTC for vault inventory retrieval that includes\n         archives created on or after this date. This value should be a string in the ISO 8601 date\n         format, for example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                    "shape_name": "string"
                  },
                  "EndDate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The end of the date range in UTC for vault inventory retrieval that includes archives\n         created before this date. This value should be a string in the ISO 8601 date format, for\n         example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                    "documentation": "\n         <p>The end of the date range in UTC for vault inventory retrieval that includes archives\n         created before this date. This value should be a string in the ISO 8601 date format, for\n         example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Limit": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Specifies the maximum number of inventory items returned per vault inventory\n         retrieval request. Valid values are greater than or equal to 1.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies the maximum number of inventory items returned per vault inventory\n         retrieval request. Valid values are greater than or equal to 1.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Marker": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>An opaque string that represents where to continue pagination of the vault inventory\n         retrieval results. You use the marker in a new <emphasis role=\"bold\">InitiateJob</emphasis>\n         request to obtain additional inventory items. If there are no more inventory items, this\n         value is <code>null</code>.</simpara>\n      ",
                    "documentation": "\n         <p>An opaque string that represents where to continue pagination of the vault inventory\n         retrieval results. You use the marker in a new <b>InitiateJob</b>\n         request to obtain additional inventory items. If there are no more inventory items, this\n         value is <code>null</code>.</p>\n      ",
                    "shape_name": "string"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Input parameters used for range inventory retrieval.</simpara>\n      ",
                "documentation": "\n         <p>Input parameters used for range inventory retrieval.</p>\n      ",
                "shape_name": "InventoryRetrievalJobInput"
              },
              "SelectParameters": {
                "type": "structure",
                "members": {
                  "InputSerialization": {
                    "type": "structure",
                    "members": {
                      "csv": {
                        "type": "structure",
                        "members": {
                          "FileHeaderInfo": {
                            "type": "string",
                            "enum": [
                              "USE",
                              "IGNORE",
                              "NONE"
                            ],
                            "zonbookDocumentation": "\n        <para>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</para>\n      ",
                            "documentation": "\n        <p>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</p>\n      ",
                            "shape_name": "FileHeaderInfo"
                          },
                          "Comments": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</para>\n      ",
                            "documentation": "\n        <p>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteEscapeCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                            "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                            "shape_name": "string"
                          },
                          "RecordDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                            "shape_name": "string"
                          },
                          "FieldDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                            "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Describes the serialization of a CSV-encoded object.</para>\n      ",
                        "documentation": "\n        <p>Describes the serialization of a CSV-encoded object.</p>\n      ",
                        "shape_name": "CSVInput"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes the serialization format of the object.</para>\n      ",
                    "documentation": "\n        <p>Describes the serialization format of the object.</p>\n      ",
                    "shape_name": "InputSerialization"
                  },
                  "ExpressionType": {
                    "type": "string",
                    "enum": [
                      "SQL"
                    ],
                    "zonbookDocumentation": "\n        <para>The type of the provided expression, for example <code>SQL</code>.</para>\n      ",
                    "documentation": "\n        <p>The type of the provided expression, for example <code>SQL</code>.</p>\n      ",
                    "shape_name": "ExpressionType"
                  },
                  "Expression": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The expression that is used to select the object.</para>\n      ",
                    "documentation": "\n        <p>The expression that is used to select the object.</p>\n      ",
                    "shape_name": "string"
                  },
                  "OutputSerialization": {
                    "type": "structure",
                    "members": {
                      "csv": {
                        "type": "structure",
                        "members": {
                          "QuoteFields": {
                            "type": "string",
                            "enum": [
                              "ALWAYS",
                              "ASNEEDED"
                            ],
                            "zonbookDocumentation": "\n        <para>A value that indicates whether all output fields should be contained within quotation\n            marks.</para>\n      ",
                            "documentation": "\n        <p>A value that indicates whether all output fields should be contained within quotation\n            marks.</p>\n      ",
                            "shape_name": "QuoteFields"
                          },
                          "QuoteEscapeCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                            "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                            "shape_name": "string"
                          },
                          "RecordDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                            "shape_name": "string"
                          },
                          "FieldDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                            "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Describes the serialization of CSV-encoded query results.</para>\n      ",
                        "documentation": "\n        <p>Describes the serialization of CSV-encoded query results.</p>\n      ",
                        "shape_name": "CSVOutput"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes how the results of the select job are serialized.</para>\n      ",
                    "documentation": "\n        <p>Describes how the results of the select job are serialized.</p>\n      ",
                    "shape_name": "OutputSerialization"
                  }
                },
                "zonbookDocumentation": "\n         <para>Contains the parameters that define a job.</para>\n      ",
                "documentation": "\n         <p>Contains the parameters that define a job.</p>\n      ",
                "shape_name": "SelectParameters"
              },
              "OutputLocation": {
                "type": "structure",
                "members": {
                  "S3": {
                    "type": "structure",
                    "members": {
                      "BucketName": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>The name of the Amazon S3 bucket where the job results are stored.</para>\n      ",
                        "documentation": "\n        <p>The name of the Amazon S3 bucket where the job results are stored.</p>\n      ",
                        "shape_name": "string"
                      },
                      "Prefix": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>The prefix that is prepended to the results for this request.</para>\n      ",
                        "documentation": "\n        <p>The prefix that is prepended to the results for this request.</p>\n      ",
                        "shape_name": "string"
                      },
                      "Encryption": {
                        "type": "structure",
                        "members": {
                          "EncryptionType": {
                            "type": "string",
                            "enum": [
                              "aws:kms",
                              "AES256"
                            ],
                            "zonbookDocumentation": "\n        <para>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</para>\n      ",
                            "documentation": "\n        <p>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</p>\n      ",
                            "shape_name": "EncryptionType"
                          },
                          "KMSKeyId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </para>\n      ",
                            "documentation": "\n        <p>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </p>\n      ",
                            "shape_name": "string"
                          },
                          "KMSContext": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</para>\n      ",
                            "documentation": "\n        <p>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Contains information about the encryption used to store the job results in Amazon S3.</para>\n      ",
                        "documentation": "\n        <p>Contains information about the encryption used to store the job results in Amazon S3.</p>\n      ",
                        "shape_name": "Encryption"
                      },
                      "CannedACL": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public-read",
                          "public-read-write",
                          "aws-exec-read",
                          "authenticated-read",
                          "bucket-owner-read",
                          "bucket-owner-full-control"
                        ],
                        "zonbookDocumentation": "\n        <para>The canned access control list (ACL) to apply to the job results.</para>\n      ",
                        "documentation": "\n        <p>The canned access control list (ACL) to apply to the job results.</p>\n      ",
                        "shape_name": "CannedACL"
                      },
                      "AccessControlList": {
                        "type": "list",
                        "zonbookDocumentation": "\n        <para>A list of grants that control access to the staged results.</para>\n      ",
                        "documentation": "\n        <p>A list of grants that control access to the staged results.</p>\n      ",
                        "shape_name": "AccessControlPolicyList",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Grantee": {
                              "type": "structure",
                              "members": {
                                "Type": {
                                  "type": "string",
                                  "enum": [
                                    "AmazonCustomerByEmail",
                                    "CanonicalUser",
                                    "Group"
                                  ],
                                  "zonbookDocumentation": "\n        <para>Type of grantee</para>\n      ",
                                  "documentation": "\n        <p>Type of grantee</p>\n      ",
                                  "required": true,
                                  "shape_name": "Type"
                                },
                                "DisplayName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>Screen name of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>Screen name of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "URI": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>URI of the grantee group.</para>\n      ",
                                  "documentation": "\n        <p>URI of the grantee group.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "ID": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>The canonical user ID of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>The canonical user ID of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "EmailAddress": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>Email address of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>Email address of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                }
                              },
                              "zonbookDocumentation": "\n        <para>The grantee.</para>\n      ",
                              "documentation": "\n        <p>The grantee.</p>\n      ",
                              "shape_name": "Grantee"
                            },
                            "Permission": {
                              "type": "string",
                              "enum": [
                                "FULL_CONTROL",
                                "WRITE",
                                "WRITE_ACP",
                                "READ",
                                "READ_ACP"
                              ],
                              "zonbookDocumentation": "\n        <para>Specifies the permission given to the grantee. </para>\n      ",
                              "documentation": "\n        <p>Specifies the permission given to the grantee. </p>\n      ",
                              "shape_name": "Permission"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>Contains information about a grant.</para>\n      ",
                          "documentation": "\n        <p>Contains information about a grant.</p>\n      ",
                          "shape_name": "Grant"
                        }
                      },
                      "Tagging": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <para>The tag-set that is applied to the job results.</para>\n      ",
                        "documentation": "\n        <p>The tag-set that is applied to the job results.</p>\n      ",
                        "shape_name": "hashmap",
                        "keys": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        }
                      },
                      "UserMetadata": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <para>A map of metadata to store with the job results in Amazon S3.</para>\n      ",
                        "documentation": "\n        <p>A map of metadata to store with the job results in Amazon S3.</p>\n      ",
                        "shape_name": "hashmap",
                        "keys": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        }
                      },
                      "StorageClass": {
                        "type": "string",
                        "enum": [
                          "STANDARD",
                          "REDUCED_REDUNDANCY",
                          "STANDARD_IA"
                        ],
                        "zonbookDocumentation": "\n        <para>The storage class used to store the job results.</para>\n      ",
                        "documentation": "\n        <p>The storage class used to store the job results.</p>\n      ",
                        "shape_name": "StorageClass"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes an S3 location that will receive the results of the job request.</para>\n      ",
                    "documentation": "\n        <p>Describes an S3 location that will receive the results of the job request.</p>\n      ",
                    "shape_name": "S3Location"
                  }
                },
                "zonbookDocumentation": "\n         <para>Contains information about the location where the select job results are stored.</para>\n      ",
                "documentation": "\n         <p>Contains information about the location where the select job results are stored.</p>\n      ",
                "shape_name": "OutputLocation"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Provides options for specifying job information.</simpara>\n      ",
            "documentation": "\n         <p>Provides options for specifying job information.</p>\n      ",
            "payload": true,
            "shape_name": "JobParameters"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for initiating an Amazon Glacier job.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for initiating an Amazon Glacier job.</p>\n      ",
        "shape_name": "InitiateJobInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The relative URI path of the job.</simpara>\n      ",
            "documentation": "\n         <p>The relative URI path of the job.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Location"
          },
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the job.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-job-id"
          },
          "jobOutputPath": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The path to the location of where the select results are stored.</para>\n      ",
            "documentation": "\n         <p>The path to the location of where the select results are stored.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-job-output-path"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "InitiateJobOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>PolicyEnforcedException</simpara>\n      ",
              "documentation": "\n         <p>PolicyEnforcedException</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>InitiateJob request denied by current data retrieval policy.</simpara>\n      ",
              "documentation": "\n         <p>InitiateJob request denied by current data retrieval policy.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a retrieval job would exceed the current data policy's retrieval rate\n         limit. For more information about data retrieval policies,</simpara>\n      ",
          "documentation": "\n         <p>Returned if a retrieval job would exceed the current data policy's retrieval rate\n         limit. For more information about data retrieval policies,</p>\n      ",
          "shape_name": "PolicyEnforcedException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if there is insufficient capacity to process this expedited request. This\n         error only applies to expedited retrievals and not to standard or bulk\n         retrievals.</simpara>      \n      ",
          "documentation": "\n         <p>Returned if there is insufficient capacity to process this expedited request. This\n         error only applies to expedited retrievals and not to standard or bulk\n         retrievals.</p>      \n      ",
          "shape_name": "InsufficientCapacityException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation initiates a job of the specified type, which can be a select, an archival retrieval,\n         or a vault retrieval. For more information about using this operation, \n         see the documentation for the underlying REST API <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html\">Initiate\n            a Job</a>.\n      </p>\n        \n      "
    },
    "InternalInitiateJob": {
      "name": "InternalInitiateJob",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/internal-jobs",
        "response_code": 202
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "location": "uri",
            "shape_name": "string",
            "documentation": null
          },
          "vaultName": {
            "type": "string",
            "location": "uri",
            "shape_name": "string",
            "documentation": null
          },
          "jobParameters": {
            "type": "structure",
            "members": {
              "Format": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "Type": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "ArchiveId": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "Description": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "SNSTopic": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "RetrievalByteRange": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "Tier": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "InventoryRetrievalParameters": {
                "type": "structure",
                "members": {
                  "StartDate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The start of the date range in UTC for vault inventory retrieval that includes\n         archives created on or after this date. This value should be a string in the ISO 8601 date\n         format, for example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                    "documentation": "\n         <p>The start of the date range in UTC for vault inventory retrieval that includes\n         archives created on or after this date. This value should be a string in the ISO 8601 date\n         format, for example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                    "shape_name": "string"
                  },
                  "EndDate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The end of the date range in UTC for vault inventory retrieval that includes archives\n         created before this date. This value should be a string in the ISO 8601 date format, for\n         example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                    "documentation": "\n         <p>The end of the date range in UTC for vault inventory retrieval that includes archives\n         created before this date. This value should be a string in the ISO 8601 date format, for\n         example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Limit": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>Specifies the maximum number of inventory items returned per vault inventory\n         retrieval request. Valid values are greater than or equal to 1.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies the maximum number of inventory items returned per vault inventory\n         retrieval request. Valid values are greater than or equal to 1.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Marker": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>An opaque string that represents where to continue pagination of the vault inventory\n         retrieval results. You use the marker in a new <emphasis role=\"bold\">InitiateJob</emphasis>\n         request to obtain additional inventory items. If there are no more inventory items, this\n         value is <code>null</code>.</simpara>\n      ",
                    "documentation": "\n         <p>An opaque string that represents where to continue pagination of the vault inventory\n         retrieval results. You use the marker in a new <b>InitiateJob</b>\n         request to obtain additional inventory items. If there are no more inventory items, this\n         value is <code>null</code>.</p>\n      ",
                    "shape_name": "string"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>Provides options for specifying a range inventory retrieval job.</simpara>\n      ",
                "documentation": "\n         <p>Provides options for specifying a range inventory retrieval job.</p>\n      ",
                "shape_name": "InventoryRetrievalJobInput"
              },
              "RequestingAccountId": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "ObjectInfo": {
                "type": "structure",
                "members": {
                  "bucketName": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "bucketARN": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "key": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "versionId": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "ETag": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  }
                },
                "shape_name": "S3ObjectInfo",
                "documentation": null
              },
              "S3EncryptionData": {
                "type": "structure",
                "members": {
                  "EncryptionKey": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "IV": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "Algorithm": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "AlgorithmMode": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "SymmetricKey": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "SymmetricKeyChecksum": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "SymmetricCipherMode": {
                    "type": "string",
                    "shape_name": "string",
                    "documentation": null
                  },
                  "keySerial": {
                    "type": "integer",
                    "shape_name": "nullableInteger",
                    "documentation": null
                  }
                },
                "shape_name": "S3EncryptionData",
                "documentation": null
              },
              "ETag": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "BucketVersioningState": {
                "type": "string",
                "shape_name": "string",
                "documentation": null
              },
              "SelectParameters": {
                "type": "structure",
                "members": {
                  "InputSerialization": {
                    "type": "structure",
                    "members": {
                      "csv": {
                        "type": "structure",
                        "members": {
                          "FileHeaderInfo": {
                            "type": "string",
                            "enum": [
                              "USE",
                              "IGNORE",
                              "NONE"
                            ],
                            "zonbookDocumentation": "\n        <para>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</para>\n      ",
                            "documentation": "\n        <p>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</p>\n      ",
                            "shape_name": "FileHeaderInfo"
                          },
                          "Comments": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</para>\n      ",
                            "documentation": "\n        <p>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteEscapeCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                            "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                            "shape_name": "string"
                          },
                          "RecordDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                            "shape_name": "string"
                          },
                          "FieldDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                            "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Describes the serialization of a CSV-encoded object.</para>\n      ",
                        "documentation": "\n        <p>Describes the serialization of a CSV-encoded object.</p>\n      ",
                        "shape_name": "CSVInput"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes the serialization format of the object.</para>\n      ",
                    "documentation": "\n        <p>Describes the serialization format of the object.</p>\n      ",
                    "shape_name": "InputSerialization"
                  },
                  "ExpressionType": {
                    "type": "string",
                    "enum": [
                      "SQL"
                    ],
                    "zonbookDocumentation": "\n        <para>The type of the provided expression, for example <code>SQL</code>.</para>\n      ",
                    "documentation": "\n        <p>The type of the provided expression, for example <code>SQL</code>.</p>\n      ",
                    "shape_name": "ExpressionType"
                  },
                  "Expression": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The expression that is used to select the object.</para>\n      ",
                    "documentation": "\n        <p>The expression that is used to select the object.</p>\n      ",
                    "shape_name": "string"
                  },
                  "OutputSerialization": {
                    "type": "structure",
                    "members": {
                      "csv": {
                        "type": "structure",
                        "members": {
                          "QuoteFields": {
                            "type": "string",
                            "enum": [
                              "ALWAYS",
                              "ASNEEDED"
                            ],
                            "zonbookDocumentation": "\n        <para>A value that indicates whether all output fields should be contained within quotation\n            marks.</para>\n      ",
                            "documentation": "\n        <p>A value that indicates whether all output fields should be contained within quotation\n            marks.</p>\n      ",
                            "shape_name": "QuoteFields"
                          },
                          "QuoteEscapeCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                            "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                            "shape_name": "string"
                          },
                          "RecordDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                            "shape_name": "string"
                          },
                          "FieldDelimiter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                            "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                            "shape_name": "string"
                          },
                          "QuoteCharacter": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                            "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Describes the serialization of CSV-encoded query results.</para>\n      ",
                        "documentation": "\n        <p>Describes the serialization of CSV-encoded query results.</p>\n      ",
                        "shape_name": "CSVOutput"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes how the results of the select job are serialized.</para>\n      ",
                    "documentation": "\n        <p>Describes how the results of the select job are serialized.</p>\n      ",
                    "shape_name": "OutputSerialization"
                  }
                },
                "zonbookDocumentation": "\n        <para>Contains information about the parameters used for a select.</para>\n      ",
                "documentation": "\n        <p>Contains information about the parameters used for a select.</p>\n      ",
                "shape_name": "SelectParameters"
              },
              "OutputLocation": {
                "type": "structure",
                "members": {
                  "S3": {
                    "type": "structure",
                    "members": {
                      "BucketName": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>The name of the Amazon S3 bucket where the job results are stored.</para>\n      ",
                        "documentation": "\n        <p>The name of the Amazon S3 bucket where the job results are stored.</p>\n      ",
                        "shape_name": "string"
                      },
                      "Prefix": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>The prefix that is prepended to the results for this request.</para>\n      ",
                        "documentation": "\n        <p>The prefix that is prepended to the results for this request.</p>\n      ",
                        "shape_name": "string"
                      },
                      "Encryption": {
                        "type": "structure",
                        "members": {
                          "EncryptionType": {
                            "type": "string",
                            "enum": [
                              "aws:kms",
                              "AES256"
                            ],
                            "zonbookDocumentation": "\n        <para>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</para>\n      ",
                            "documentation": "\n        <p>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</p>\n      ",
                            "shape_name": "EncryptionType"
                          },
                          "KMSKeyId": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </para>\n      ",
                            "documentation": "\n        <p>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </p>\n      ",
                            "shape_name": "string"
                          },
                          "KMSContext": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <para>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</para>\n      ",
                            "documentation": "\n        <p>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</p>\n      ",
                            "shape_name": "string"
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Contains information about the encryption used to store the job results in Amazon S3.</para>\n      ",
                        "documentation": "\n        <p>Contains information about the encryption used to store the job results in Amazon S3.</p>\n      ",
                        "shape_name": "Encryption"
                      },
                      "CannedACL": {
                        "type": "string",
                        "enum": [
                          "private",
                          "public-read",
                          "public-read-write",
                          "aws-exec-read",
                          "authenticated-read",
                          "bucket-owner-read",
                          "bucket-owner-full-control"
                        ],
                        "zonbookDocumentation": "\n        <para>The canned access control list (ACL) to apply to the job results.</para>\n      ",
                        "documentation": "\n        <p>The canned access control list (ACL) to apply to the job results.</p>\n      ",
                        "shape_name": "CannedACL"
                      },
                      "AccessControlList": {
                        "type": "list",
                        "zonbookDocumentation": "\n        <para>A list of grants that control access to the staged results.</para>\n      ",
                        "documentation": "\n        <p>A list of grants that control access to the staged results.</p>\n      ",
                        "shape_name": "AccessControlPolicyList",
                        "members": {
                          "type": "structure",
                          "members": {
                            "Grantee": {
                              "type": "structure",
                              "members": {
                                "Type": {
                                  "type": "string",
                                  "enum": [
                                    "AmazonCustomerByEmail",
                                    "CanonicalUser",
                                    "Group"
                                  ],
                                  "zonbookDocumentation": "\n        <para>Type of grantee</para>\n      ",
                                  "documentation": "\n        <p>Type of grantee</p>\n      ",
                                  "required": true,
                                  "shape_name": "Type"
                                },
                                "DisplayName": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>Screen name of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>Screen name of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "URI": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>URI of the grantee group.</para>\n      ",
                                  "documentation": "\n        <p>URI of the grantee group.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "ID": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>The canonical user ID of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>The canonical user ID of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                },
                                "EmailAddress": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <para>Email address of the grantee.</para>\n      ",
                                  "documentation": "\n        <p>Email address of the grantee.</p>\n      ",
                                  "shape_name": "string"
                                }
                              },
                              "zonbookDocumentation": "\n        <para>The grantee.</para>\n      ",
                              "documentation": "\n        <p>The grantee.</p>\n      ",
                              "shape_name": "Grantee"
                            },
                            "Permission": {
                              "type": "string",
                              "enum": [
                                "FULL_CONTROL",
                                "WRITE",
                                "WRITE_ACP",
                                "READ",
                                "READ_ACP"
                              ],
                              "zonbookDocumentation": "\n        <para>Specifies the permission given to the grantee. </para>\n      ",
                              "documentation": "\n        <p>Specifies the permission given to the grantee. </p>\n      ",
                              "shape_name": "Permission"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>Contains information about a grant.</para>\n      ",
                          "documentation": "\n        <p>Contains information about a grant.</p>\n      ",
                          "shape_name": "Grant"
                        }
                      },
                      "Tagging": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <para>The tag-set that is applied to the job results.</para>\n      ",
                        "documentation": "\n        <p>The tag-set that is applied to the job results.</p>\n      ",
                        "shape_name": "hashmap",
                        "keys": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        }
                      },
                      "UserMetadata": {
                        "type": "map",
                        "zonbookDocumentation": "\n        <para>A map of metadata to store with the job results in Amazon S3.</para>\n      ",
                        "documentation": "\n        <p>A map of metadata to store with the job results in Amazon S3.</p>\n      ",
                        "shape_name": "hashmap",
                        "keys": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        },
                        "members": {
                          "type": "string",
                          "shape_name": "string",
                          "documentation": null
                        }
                      },
                      "StorageClass": {
                        "type": "string",
                        "enum": [
                          "STANDARD",
                          "REDUCED_REDUNDANCY",
                          "STANDARD_IA"
                        ],
                        "zonbookDocumentation": "\n        <para>The storage class used to store the job results.</para>\n      ",
                        "documentation": "\n        <p>The storage class used to store the job results.</p>\n      ",
                        "shape_name": "StorageClass"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes an S3 location that will receive the results of the job request.</para>\n      ",
                    "documentation": "\n        <p>Describes an S3 location that will receive the results of the job request.</p>\n      ",
                    "shape_name": "S3Location"
                  }
                },
                "zonbookDocumentation": "\n        <para>Contains information about the location where the select job results are stored.</para>\n      ",
                "documentation": "\n        <p>Contains information about the location where the select job results are stored.</p>\n      ",
                "shape_name": "OutputLocation"
              }
            },
            "payload": true,
            "shape_name": "InternalJobParameters",
            "documentation": null
          }
        },
        "shape_name": "InternalInitiateJobInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "location": "header",
            "shape_name": "string",
            "documentation": null,
            "location_name": "Location"
          },
          "jobId": {
            "type": "string",
            "location": "header",
            "shape_name": "string",
            "documentation": null,
            "location_name": "x-amz-job-id"
          },
          "jobCompletionTimeInMinutes": {
            "type": "long",
            "location": "header",
            "shape_name": "NullableLong",
            "documentation": null,
            "location_name": "x-amzn-job-completion-time-in-minutes"
          },
          "jobOutputPath": {
            "type": "string",
            "location": "header",
            "shape_name": "string",
            "documentation": null,
            "location_name": "x-amz-job-output-path"
          }
        },
        "shape_name": "InternalInitiateJobOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>PolicyEnforcedException</simpara>\n      ",
              "documentation": "\n         <p>PolicyEnforcedException</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>InitiateJob request denied by current data retrieval policy.</simpara>\n      ",
              "documentation": "\n         <p>InitiateJob request denied by current data retrieval policy.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a retrieval job would exceed the current data policy's retrieval rate\n         limit. For more information about data retrieval policies,</simpara>\n      ",
          "documentation": "\n         <p>Returned if a retrieval job would exceed the current data policy's retrieval rate\n         limit. For more information about data retrieval policies,</p>\n      ",
          "shape_name": "PolicyEnforcedException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if there is insufficient capacity to process this expedited request. This\n         error only applies to expedited retrievals and not to standard or bulk\n         retrievals.</simpara>      \n      ",
          "documentation": "\n         <p>Returned if there is insufficient capacity to process this expedited request. This\n         error only applies to expedited retrievals and not to standard or bulk\n         retrievals.</p>      \n      ",
          "shape_name": "InsufficientCapacityException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "code": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            },
            "message": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          },
          "shape_name": "BadInternalParametersException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "ListJobs": {
      "name": "ListJobs",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/jobs?marker={marker}&limit={limit}&completed={completed}&statuscode={statuscode}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "limit": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The maximum number of jobs to be returned. The default limit is 50. The number of\n         jobs returned might be fewer than the specified limit, but the number of returned jobs\n         never exceeds the limit.</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of jobs to be returned. The default limit is 50. The number of\n         jobs returned might be fewer than the specified limit, but the number of returned jobs\n         never exceeds the limit.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>An opaque string used for pagination. This value specifies the job at which the\n         listing of jobs should begin. Get the marker value from a previous List Jobs response. You\n         only need to include the marker if you are continuing the pagination of results started in\n         a previous List Jobs request.</simpara>\n      ",
            "documentation": "\n         <p>An opaque string used for pagination. This value specifies the job at which the\n         listing of jobs should begin. Get the marker value from a previous List Jobs response. You\n         only need to include the marker if you are continuing the pagination of results started in\n         a previous List Jobs request.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "statuscode": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of job status to return. You can specify the following values:\n            <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code>.</simpara>\n      ",
            "documentation": "\n         <p>The type of job status to return. You can specify the following values:\n            <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code>.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "completed": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The state of the jobs to return. You can specify <code>true</code> or\n            <code>false</code>.</simpara>\n      ",
            "documentation": "\n         <p>The state of the jobs to return. You can specify <code>true</code> or\n            <code>false</code>.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving a job list for an Amazon Glacier vault.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving a job list for an Amazon Glacier vault.</p>\n      ",
        "shape_name": "ListJobsInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "JobList": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of job objects. Each job object contains metadata describing the\n         job.</simpara>\n      ",
            "documentation": "\n         <p>A list of job objects. Each job object contains metadata describing the\n         job.</p>\n      ",
            "shape_name": "JobList",
            "members": {
              "type": "structure",
              "members": {
                "JobId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>An opaque string that identifies an Amazon Glacier job.</simpara>\n      ",
                  "documentation": "\n        <p>An opaque string that identifies an Amazon Glacier job.</p>\n      ",
                  "shape_name": "string"
                },
                "JobDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The job description provided when initiating the job.</simpara>\n      ",
                  "documentation": "\n        <p>The job description provided when initiating the job.</p>\n      ",
                  "shape_name": "string"
                },
                "Action": {
                  "type": "string",
                  "enum": [
                    "ArchiveRetrieval",
                    "InventoryRetrieval",
                    "Select"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The job type. This value is either <code>ArchiveRetrieval</code>,\n                <code>InventoryRetrieval</code>, or\n            <code>Select</code>. </simpara>\n      ",
                  "documentation": "\n        <p>The job type. This value is either <code>ArchiveRetrieval</code>,\n                <code>InventoryRetrieval</code>, or\n            <code>Select</code>. </p>\n      ",
                  "shape_name": "ActionCode"
                },
                "ArchiveId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The archive ID requested for a select job or archive retrieval. Otherwise, this\n            field is null.</simpara>\n      ",
                  "documentation": "\n        <p>The archive ID requested for a select job or archive retrieval. Otherwise, this\n            field is null.</p>\n      ",
                  "shape_name": "string"
                },
                "VaultARN": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the vault from which an archive retrieval was\n            requested.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) of the vault from which an archive retrieval was\n            requested.</p>\n      ",
                  "shape_name": "string"
                },
                "CreationDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The UTC date when the job was created. This value is a string representation of ISO\n            8601 date format, for example <code>\"2012-03-20T17:03:43.221Z\"</code>.</simpara>\n      ",
                  "documentation": "\n        <p>The UTC date when the job was created. This value is a string representation of ISO\n            8601 date format, for example <code>\"2012-03-20T17:03:43.221Z\"</code>.</p>\n      ",
                  "shape_name": "string"
                },
                "Completed": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>The job status. When a job is completed, you get the job's output using Get Job\n            Output (GET output).</simpara>\n      ",
                  "documentation": "\n        <p>The job status. When a job is completed, you get the job's output using Get Job\n            Output (GET output).</p>\n      ",
                  "shape_name": "boolean"
                },
                "StatusCode": {
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Succeeded",
                    "Failed"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The status code can be <code>InProgress</code>, <code>Succeeded</code>, or\n                <code>Failed</code>, and indicates the status of the job.</simpara>\n      ",
                  "documentation": "\n        <p>The status code can be <code>InProgress</code>, <code>Succeeded</code>, or\n                <code>Failed</code>, and indicates the status of the job.</p>\n      ",
                  "shape_name": "StatusCode"
                },
                "StatusMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A friendly message that describes the job status.</simpara>\n      ",
                  "documentation": "\n        <p>A friendly message that describes the job status.</p>\n      ",
                  "shape_name": "string"
                },
                "ArchiveSizeInBytes": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>For an archive retrieval job, this value is the size in bytes of the archive being\n            requested for download. For an inventory retrieval or select job, this value is\n            null.</simpara>\n      ",
                  "documentation": "\n        <p>For an archive retrieval job, this value is the size in bytes of the archive being\n            requested for download. For an inventory retrieval or select job, this value is\n            null.</p>\n      ",
                  "shape_name": "Size"
                },
                "InventorySizeInBytes": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>For an inventory retrieval job, this value is the size in bytes of the inventory\n            requested for download. For an archive retrieval or select job, this value is\n            null.</simpara>\n      ",
                  "documentation": "\n        <p>For an inventory retrieval job, this value is the size in bytes of the inventory\n            requested for download. For an archive retrieval or select job, this value is\n            null.</p>\n      ",
                  "shape_name": "Size"
                },
                "SNSTopic": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>An Amazon SNS topic that receives notification.</simpara>\n      ",
                  "documentation": "\n        <p>An Amazon SNS topic that receives notification.</p>\n      ",
                  "shape_name": "string"
                },
                "CompletionDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The UTC time that the job request completed. While the job is in progress, the\n            value is null.</simpara>\n      ",
                  "documentation": "\n        <p>The UTC time that the job request completed. While the job is in progress, the\n            value is null.</p>\n      ",
                  "shape_name": "string"
                },
                "SHA256TreeHash": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>For an archive retrieval job, this value is the checksum of the archive. Otherwise,\n            this value is null.</simpara>\n        <simpara>The SHA256 tree hash value for the requested range of an archive. If the <emphasis role=\"bold\">InitiateJob</emphasis> request for an archive specified a tree-hash\n            aligned range, then this field returns a value.</simpara>\n        <simpara>If the whole archive is retrieved, this value is the same as the\n            ArchiveSHA256TreeHash value.</simpara>\n        <simpara>This field is null for the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>Archive retrieval jobs that specify a range that is not tree-hash\n                    aligned</simpara>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <listitem>\n                <simpara>Archival jobs that specify a range that is equal to the whole archive, when\n                    the job status is <code>InProgress</code>\n               </simpara>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <listitem>\n                <simpara>Inventory jobs</simpara>\n            </listitem>\n            <listitem>\n                <simpara>Select jobs</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>For an archive retrieval job, this value is the checksum of the archive. Otherwise,\n            this value is null.</p>\n        <p>The SHA256 tree hash value for the requested range of an archive. If the <b>InitiateJob</b> request for an archive specified a tree-hash\n            aligned range, then this field returns a value.</p>\n        <p>If the whole archive is retrieved, this value is the same as the\n            ArchiveSHA256TreeHash value.</p>\n        <p>This field is null for the following:</p>\n        <ul>\n            <li>\n                <p>Archive retrieval jobs that specify a range that is not tree-hash\n                    aligned</p>\n            </li>\n         </ul>\n        <ul>\n            <li>\n                <p>Archival jobs that specify a range that is equal to the whole archive, when\n                    the job status is <code>InProgress</code>\n               </p>\n            </li>\n         </ul>\n        <ul>\n            <li>\n                <p>Inventory jobs</p>\n            </li>\n            <li>\n                <p>Select jobs</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "string"
                },
                "ArchiveSHA256TreeHash": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The SHA256 tree hash of the entire archive for an archive retrieval. For inventory\n            retrieval or select jobs, this field is null.</simpara>\n      ",
                  "documentation": "\n        <p>The SHA256 tree hash of the entire archive for an archive retrieval. For inventory\n            retrieval or select jobs, this field is null.</p>\n      ",
                  "shape_name": "string"
                },
                "RetrievalByteRange": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The retrieved byte range for archive retrieval jobs in the form\n                <emphasis>StartByteValue</emphasis>-<emphasis>EndByteValue</emphasis>. If no range\n            was specified in the archive retrieval, then the whole archive is retrieved. In this\n            case, <emphasis>StartByteValue</emphasis> equals 0 and <emphasis>EndByteValue</emphasis>\n            equals the size of the archive minus 1. For inventory retrieval or select jobs, this\n            field is null. </simpara>\n      ",
                  "documentation": "\n        <p>The retrieved byte range for archive retrieval jobs in the form\n                <i>StartByteValue</i>-<i>EndByteValue</i>. If no range\n            was specified in the archive retrieval, then the whole archive is retrieved. In this\n            case, <i>StartByteValue</i> equals 0 and <i>EndByteValue</i>\n            equals the size of the archive minus 1. For inventory retrieval or select jobs, this\n            field is null. </p>\n      ",
                  "shape_name": "string"
                },
                "Tier": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The tier to use for a select or an archive retrieval. Valid values are\n                <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n                <code>Standard</code> is the default.</simpara>    \n      ",
                  "documentation": "\n        <p>The tier to use for a select or an archive retrieval. Valid values are\n                <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n                <code>Standard</code> is the default.</p>    \n      ",
                  "shape_name": "string"
                },
                "InventoryRetrievalParameters": {
                  "type": "structure",
                  "members": {
                    "Format": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The output format for the vault inventory list, which is set by the <emphasis role=\"bold\">InitiateJob</emphasis> request when initiating a job to retrieve a vault\n            inventory. Valid values are <code>CSV</code> and <code>JSON</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The output format for the vault inventory list, which is set by the <b>InitiateJob</b> request when initiating a job to retrieve a vault\n            inventory. Valid values are <code>CSV</code> and <code>JSON</code>.</p>\n      ",
                      "shape_name": "string"
                    },
                    "StartDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The start of the date range in Universal Coordinated Time (UTC) for vault inventory\n            retrieval that includes archives created on or after this date. This value should be a\n            string in the ISO 8601 date format, for example\n            <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The start of the date range in Universal Coordinated Time (UTC) for vault inventory\n            retrieval that includes archives created on or after this date. This value should be a\n            string in the ISO 8601 date format, for example\n            <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                      "shape_name": "DateTime"
                    },
                    "EndDate": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The end of the date range in UTC for vault inventory retrieval that includes\n            archives created before this date. This value should be a string in the ISO 8601 date\n            format, for example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The end of the date range in UTC for vault inventory retrieval that includes\n            archives created before this date. This value should be a string in the ISO 8601 date\n            format, for example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                      "shape_name": "DateTime"
                    },
                    "Limit": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The maximum number of inventory items returned per vault inventory retrieval\n            request. This limit is set when initiating the job with the a <emphasis role=\"bold\">InitiateJob</emphasis> request. </simpara>\n      ",
                      "documentation": "\n        <p>The maximum number of inventory items returned per vault inventory retrieval\n            request. This limit is set when initiating the job with the a <b>InitiateJob</b> request. </p>\n      ",
                      "shape_name": "string"
                    },
                    "Marker": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>An opaque string that represents where to continue pagination of the vault\n            inventory retrieval results. You use the marker in a new <emphasis role=\"bold\">InitiateJob</emphasis> request to obtain additional inventory items. If there are\n            no more inventory items, this value is <code>null</code>. For more information, see\n                <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering\"> Range Inventory Retrieval</ulink>.</simpara>\n      ",
                      "documentation": "\n        <p>An opaque string that represents where to continue pagination of the vault\n            inventory retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain additional inventory items. If there are\n            no more inventory items, this value is <code>null</code>. For more information, see\n                <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering\"> Range Inventory Retrieval</a>.</p>\n      ",
                      "shape_name": "string"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Parameters used for range inventory retrieval.</simpara>\n      ",
                  "documentation": "\n        <p>Parameters used for range inventory retrieval.</p>\n      ",
                  "shape_name": "InventoryRetrievalJobDescription"
                },
                "JobOutputPath": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>Contains the job output location.</para>\n      ",
                  "documentation": "\n        <p>Contains the job output location.</p>\n      ",
                  "shape_name": "string"
                },
                "SelectParameters": {
                  "type": "structure",
                  "members": {
                    "InputSerialization": {
                      "type": "structure",
                      "members": {
                        "csv": {
                          "type": "structure",
                          "members": {
                            "FileHeaderInfo": {
                              "type": "string",
                              "enum": [
                                "USE",
                                "IGNORE",
                                "NONE"
                              ],
                              "zonbookDocumentation": "\n        <para>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</para>\n      ",
                              "documentation": "\n        <p>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</p>\n      ",
                              "shape_name": "FileHeaderInfo"
                            },
                            "Comments": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</para>\n      ",
                              "documentation": "\n        <p>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</p>\n      ",
                              "shape_name": "string"
                            },
                            "QuoteEscapeCharacter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                              "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                              "shape_name": "string"
                            },
                            "RecordDelimiter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                              "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                              "shape_name": "string"
                            },
                            "FieldDelimiter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                              "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                              "shape_name": "string"
                            },
                            "QuoteCharacter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                              "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                              "shape_name": "string"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>Describes the serialization of a CSV-encoded object.</para>\n      ",
                          "documentation": "\n        <p>Describes the serialization of a CSV-encoded object.</p>\n      ",
                          "shape_name": "CSVInput"
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Describes the serialization format of the object.</para>\n      ",
                      "documentation": "\n        <p>Describes the serialization format of the object.</p>\n      ",
                      "shape_name": "InputSerialization"
                    },
                    "ExpressionType": {
                      "type": "string",
                      "enum": [
                        "SQL"
                      ],
                      "zonbookDocumentation": "\n        <para>The type of the provided expression, for example <code>SQL</code>.</para>\n      ",
                      "documentation": "\n        <p>The type of the provided expression, for example <code>SQL</code>.</p>\n      ",
                      "shape_name": "ExpressionType"
                    },
                    "Expression": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The expression that is used to select the object.</para>\n      ",
                      "documentation": "\n        <p>The expression that is used to select the object.</p>\n      ",
                      "shape_name": "string"
                    },
                    "OutputSerialization": {
                      "type": "structure",
                      "members": {
                        "csv": {
                          "type": "structure",
                          "members": {
                            "QuoteFields": {
                              "type": "string",
                              "enum": [
                                "ALWAYS",
                                "ASNEEDED"
                              ],
                              "zonbookDocumentation": "\n        <para>A value that indicates whether all output fields should be contained within quotation\n            marks.</para>\n      ",
                              "documentation": "\n        <p>A value that indicates whether all output fields should be contained within quotation\n            marks.</p>\n      ",
                              "shape_name": "QuoteFields"
                            },
                            "QuoteEscapeCharacter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                              "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                              "shape_name": "string"
                            },
                            "RecordDelimiter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                              "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                              "shape_name": "string"
                            },
                            "FieldDelimiter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                              "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                              "shape_name": "string"
                            },
                            "QuoteCharacter": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                              "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                              "shape_name": "string"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>Describes the serialization of CSV-encoded query results.</para>\n      ",
                          "documentation": "\n        <p>Describes the serialization of CSV-encoded query results.</p>\n      ",
                          "shape_name": "CSVOutput"
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Describes how the results of the select job are serialized.</para>\n      ",
                      "documentation": "\n        <p>Describes how the results of the select job are serialized.</p>\n      ",
                      "shape_name": "OutputSerialization"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>Contains the parameters used for a select.</para>\n      ",
                  "documentation": "\n        <p>Contains the parameters used for a select.</p>\n      ",
                  "shape_name": "SelectParameters"
                },
                "OutputLocation": {
                  "type": "structure",
                  "members": {
                    "S3": {
                      "type": "structure",
                      "members": {
                        "BucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <para>The name of the Amazon S3 bucket where the job results are stored.</para>\n      ",
                          "documentation": "\n        <p>The name of the Amazon S3 bucket where the job results are stored.</p>\n      ",
                          "shape_name": "string"
                        },
                        "Prefix": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <para>The prefix that is prepended to the results for this request.</para>\n      ",
                          "documentation": "\n        <p>The prefix that is prepended to the results for this request.</p>\n      ",
                          "shape_name": "string"
                        },
                        "Encryption": {
                          "type": "structure",
                          "members": {
                            "EncryptionType": {
                              "type": "string",
                              "enum": [
                                "aws:kms",
                                "AES256"
                              ],
                              "zonbookDocumentation": "\n        <para>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</para>\n      ",
                              "documentation": "\n        <p>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</p>\n      ",
                              "shape_name": "EncryptionType"
                            },
                            "KMSKeyId": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </para>\n      ",
                              "documentation": "\n        <p>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </p>\n      ",
                              "shape_name": "string"
                            },
                            "KMSContext": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</para>\n      ",
                              "documentation": "\n        <p>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</p>\n      ",
                              "shape_name": "string"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>Contains information about the encryption used to store the job results in Amazon S3.</para>\n      ",
                          "documentation": "\n        <p>Contains information about the encryption used to store the job results in Amazon S3.</p>\n      ",
                          "shape_name": "Encryption"
                        },
                        "CannedACL": {
                          "type": "string",
                          "enum": [
                            "private",
                            "public-read",
                            "public-read-write",
                            "aws-exec-read",
                            "authenticated-read",
                            "bucket-owner-read",
                            "bucket-owner-full-control"
                          ],
                          "zonbookDocumentation": "\n        <para>The canned access control list (ACL) to apply to the job results.</para>\n      ",
                          "documentation": "\n        <p>The canned access control list (ACL) to apply to the job results.</p>\n      ",
                          "shape_name": "CannedACL"
                        },
                        "AccessControlList": {
                          "type": "list",
                          "zonbookDocumentation": "\n        <para>A list of grants that control access to the staged results.</para>\n      ",
                          "documentation": "\n        <p>A list of grants that control access to the staged results.</p>\n      ",
                          "shape_name": "AccessControlPolicyList",
                          "members": {
                            "type": "structure",
                            "members": {
                              "Grantee": {
                                "type": "structure",
                                "members": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "AmazonCustomerByEmail",
                                      "CanonicalUser",
                                      "Group"
                                    ],
                                    "zonbookDocumentation": "\n        <para>Type of grantee</para>\n      ",
                                    "documentation": "\n        <p>Type of grantee</p>\n      ",
                                    "required": true,
                                    "shape_name": "Type"
                                  },
                                  "DisplayName": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <para>Screen name of the grantee.</para>\n      ",
                                    "documentation": "\n        <p>Screen name of the grantee.</p>\n      ",
                                    "shape_name": "string"
                                  },
                                  "URI": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <para>URI of the grantee group.</para>\n      ",
                                    "documentation": "\n        <p>URI of the grantee group.</p>\n      ",
                                    "shape_name": "string"
                                  },
                                  "ID": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <para>The canonical user ID of the grantee.</para>\n      ",
                                    "documentation": "\n        <p>The canonical user ID of the grantee.</p>\n      ",
                                    "shape_name": "string"
                                  },
                                  "EmailAddress": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n        <para>Email address of the grantee.</para>\n      ",
                                    "documentation": "\n        <p>Email address of the grantee.</p>\n      ",
                                    "shape_name": "string"
                                  }
                                },
                                "zonbookDocumentation": "\n        <para>The grantee.</para>\n      ",
                                "documentation": "\n        <p>The grantee.</p>\n      ",
                                "shape_name": "Grantee"
                              },
                              "Permission": {
                                "type": "string",
                                "enum": [
                                  "FULL_CONTROL",
                                  "WRITE",
                                  "WRITE_ACP",
                                  "READ",
                                  "READ_ACP"
                                ],
                                "zonbookDocumentation": "\n        <para>Specifies the permission given to the grantee. </para>\n      ",
                                "documentation": "\n        <p>Specifies the permission given to the grantee. </p>\n      ",
                                "shape_name": "Permission"
                              }
                            },
                            "zonbookDocumentation": "\n        <para>Contains information about a grant.</para>\n      ",
                            "documentation": "\n        <p>Contains information about a grant.</p>\n      ",
                            "shape_name": "Grant"
                          }
                        },
                        "Tagging": {
                          "type": "map",
                          "zonbookDocumentation": "\n        <para>The tag-set that is applied to the job results.</para>\n      ",
                          "documentation": "\n        <p>The tag-set that is applied to the job results.</p>\n      ",
                          "shape_name": "hashmap",
                          "keys": {
                            "type": "string",
                            "shape_name": "string",
                            "documentation": null
                          },
                          "members": {
                            "type": "string",
                            "shape_name": "string",
                            "documentation": null
                          }
                        },
                        "UserMetadata": {
                          "type": "map",
                          "zonbookDocumentation": "\n        <para>A map of metadata to store with the job results in Amazon S3.</para>\n      ",
                          "documentation": "\n        <p>A map of metadata to store with the job results in Amazon S3.</p>\n      ",
                          "shape_name": "hashmap",
                          "keys": {
                            "type": "string",
                            "shape_name": "string",
                            "documentation": null
                          },
                          "members": {
                            "type": "string",
                            "shape_name": "string",
                            "documentation": null
                          }
                        },
                        "StorageClass": {
                          "type": "string",
                          "enum": [
                            "STANDARD",
                            "REDUCED_REDUNDANCY",
                            "STANDARD_IA"
                          ],
                          "zonbookDocumentation": "\n        <para>The storage class used to store the job results.</para>\n      ",
                          "documentation": "\n        <p>The storage class used to store the job results.</p>\n      ",
                          "shape_name": "StorageClass"
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Describes an S3 location that will receive the results of the job request.</para>\n      ",
                      "documentation": "\n        <p>Describes an S3 location that will receive the results of the job request.</p>\n      ",
                      "shape_name": "S3Location"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>Contains the location where the data from the select job is stored.</para>\n      ",
                  "documentation": "\n        <p>Contains the location where the data from the select job is stored.</p>\n      ",
                  "shape_name": "OutputLocation"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Contains the description of an Amazon Glacier job.</simpara>\n      ",
              "documentation": "\n        <p>Contains the description of an Amazon Glacier job.</p>\n      ",
              "shape_name": "GlacierJobDescription"
            }
          },
          "Marker": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>\t\n         An opaque string used for pagination that specifies the job at which the listing of jobs should begin. \n         You get the <code>marker</code> value from a previous List Jobs response.\n         You only need to include the marker if you are continuing the pagination of the results started in a \n         previous List Jobs request. </simpara>\n      ",
            "documentation": "\n         <p>\t\n         An opaque string used for pagination that specifies the job at which the listing of jobs should begin. \n         You get the <code>marker</code> value from a previous List Jobs response.\n         You only need to include the marker if you are continuing the pagination of the results started in a \n         previous List Jobs request. </p>\n      ",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "ListJobsOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists jobs for a vault, including jobs that are in-progress and jobs\n         that have recently finished. The List Job operation returns a list of these jobs sorted by job initiation\n         time.</p>\n\n         <note>\n            <p>Amazon Glacier retains recently completed jobs for a period before deleting them;\n            however, it eventually removes completed jobs. The output of completed jobs can be\n            retrieved. Retaining completed jobs for a period of time after they have completed\n            enables you to get a job output in the event you miss the job completion notification or\n            your first attempt to download it fails. For example, suppose you start an archive\n            retrieval job to download an archive. After the job completes, you start to download the\n            archive but encounter a network error. In this scenario, you can retry and download the\n            archive while the job exists.</p>\n         </note>\n\n         <p>The List Jobs operation supports pagination. You should always check the response <code>Marker</code> field. \n         If there are no more jobs to list, the <code>Marker</code> field is set to <code>null</code>. If there are more jobs to list, \n         the <code>Marker</code> field is set to a non-null value, which you can use to continue the pagination of the list. \n         To return a list of jobs that begins at a specific job, \n         set the marker request parameter to the <code>Marker</code> value for that job that you obtained from a previous List Jobs request.</p>\n      \n         <p>You can set a maximum limit for the number of jobs returned in the response by\n         specifying the <code>limit</code> parameter in the request. The default limit is 50. The\n         number of jobs returned might be fewer than the limit, but the number of returned jobs\n         never exceeds the limit.</p>\n\n        <p>Additionally, you can filter the jobs list returned by specifying the optional\n            <code>statuscode</code> parameter or <code>completed</code> parameter, or both. Using\n         the <code>statuscode</code> parameter, you can specify to return only jobs that match\n         either the <code>InProgress</code>, <code>Succeeded</code>, or <code>Failed</code> status.\n         Using the <code>completed</code> parameter, you can specify to return only jobs that were\n         completed (<code>true</code>) or jobs that were not completed\n         (<code>false</code>).</p>\n\n         <p>For more information about using this operation, \n         see the documentation for the underlying REST API <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html\">List Jobs</a>. </p>\n      "
    },
    "DescribeJob": {
      "name": "DescribeJob",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/jobs/{jobId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the job to describe.</simpara>\n      ",
            "documentation": "\n         <p>The ID of the job to describe.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for retrieving a job description.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for retrieving a job description.</p>\n      ",
        "shape_name": "DescribeJobInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "JobId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An opaque string that identifies an Amazon Glacier job.</simpara>\n      ",
            "documentation": "\n        <p>An opaque string that identifies an Amazon Glacier job.</p>\n      ",
            "shape_name": "string"
          },
          "JobDescription": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job description provided when initiating the job.</simpara>\n      ",
            "documentation": "\n        <p>The job description provided when initiating the job.</p>\n      ",
            "shape_name": "string"
          },
          "Action": {
            "type": "string",
            "enum": [
              "ArchiveRetrieval",
              "InventoryRetrieval",
              "Select"
            ],
            "zonbookDocumentation": "\n        <simpara>The job type. This value is either <code>ArchiveRetrieval</code>,\n                <code>InventoryRetrieval</code>, or\n            <code>Select</code>. </simpara>\n      ",
            "documentation": "\n        <p>The job type. This value is either <code>ArchiveRetrieval</code>,\n                <code>InventoryRetrieval</code>, or\n            <code>Select</code>. </p>\n      ",
            "shape_name": "ActionCode"
          },
          "ArchiveId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The archive ID requested for a select job or archive retrieval. Otherwise, this\n            field is null.</simpara>\n      ",
            "documentation": "\n        <p>The archive ID requested for a select job or archive retrieval. Otherwise, this\n            field is null.</p>\n      ",
            "shape_name": "string"
          },
          "VaultARN": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the vault from which an archive retrieval was\n            requested.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the vault from which an archive retrieval was\n            requested.</p>\n      ",
            "shape_name": "string"
          },
          "CreationDate": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The UTC date when the job was created. This value is a string representation of ISO\n            8601 date format, for example <code>\"2012-03-20T17:03:43.221Z\"</code>.</simpara>\n      ",
            "documentation": "\n        <p>The UTC date when the job was created. This value is a string representation of ISO\n            8601 date format, for example <code>\"2012-03-20T17:03:43.221Z\"</code>.</p>\n      ",
            "shape_name": "string"
          },
          "Completed": {
            "type": "boolean",
            "zonbookDocumentation": "\n        <simpara>The job status. When a job is completed, you get the job's output using Get Job\n            Output (GET output).</simpara>\n      ",
            "documentation": "\n        <p>The job status. When a job is completed, you get the job's output using Get Job\n            Output (GET output).</p>\n      ",
            "shape_name": "boolean"
          },
          "StatusCode": {
            "type": "string",
            "enum": [
              "InProgress",
              "Succeeded",
              "Failed"
            ],
            "zonbookDocumentation": "\n        <simpara>The status code can be <code>InProgress</code>, <code>Succeeded</code>, or\n                <code>Failed</code>, and indicates the status of the job.</simpara>\n      ",
            "documentation": "\n        <p>The status code can be <code>InProgress</code>, <code>Succeeded</code>, or\n                <code>Failed</code>, and indicates the status of the job.</p>\n      ",
            "shape_name": "StatusCode"
          },
          "StatusMessage": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A friendly message that describes the job status.</simpara>\n      ",
            "documentation": "\n        <p>A friendly message that describes the job status.</p>\n      ",
            "shape_name": "string"
          },
          "ArchiveSizeInBytes": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>For an archive retrieval job, this value is the size in bytes of the archive being\n            requested for download. For an inventory retrieval or select job, this value is\n            null.</simpara>\n      ",
            "documentation": "\n        <p>For an archive retrieval job, this value is the size in bytes of the archive being\n            requested for download. For an inventory retrieval or select job, this value is\n            null.</p>\n      ",
            "shape_name": "Size"
          },
          "InventorySizeInBytes": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>For an inventory retrieval job, this value is the size in bytes of the inventory\n            requested for download. For an archive retrieval or select job, this value is\n            null.</simpara>\n      ",
            "documentation": "\n        <p>For an inventory retrieval job, this value is the size in bytes of the inventory\n            requested for download. For an archive retrieval or select job, this value is\n            null.</p>\n      ",
            "shape_name": "Size"
          },
          "SNSTopic": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An Amazon SNS topic that receives notification.</simpara>\n      ",
            "documentation": "\n        <p>An Amazon SNS topic that receives notification.</p>\n      ",
            "shape_name": "string"
          },
          "CompletionDate": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The UTC time that the job request completed. While the job is in progress, the\n            value is null.</simpara>\n      ",
            "documentation": "\n        <p>The UTC time that the job request completed. While the job is in progress, the\n            value is null.</p>\n      ",
            "shape_name": "string"
          },
          "SHA256TreeHash": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>For an archive retrieval job, this value is the checksum of the archive. Otherwise,\n            this value is null.</simpara>\n        <simpara>The SHA256 tree hash value for the requested range of an archive. If the <emphasis role=\"bold\">InitiateJob</emphasis> request for an archive specified a tree-hash\n            aligned range, then this field returns a value.</simpara>\n        <simpara>If the whole archive is retrieved, this value is the same as the\n            ArchiveSHA256TreeHash value.</simpara>\n        <simpara>This field is null for the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>Archive retrieval jobs that specify a range that is not tree-hash\n                    aligned</simpara>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <listitem>\n                <simpara>Archival jobs that specify a range that is equal to the whole archive, when\n                    the job status is <code>InProgress</code>\n               </simpara>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <listitem>\n                <simpara>Inventory jobs</simpara>\n            </listitem>\n            <listitem>\n                <simpara>Select jobs</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>For an archive retrieval job, this value is the checksum of the archive. Otherwise,\n            this value is null.</p>\n        <p>The SHA256 tree hash value for the requested range of an archive. If the <b>InitiateJob</b> request for an archive specified a tree-hash\n            aligned range, then this field returns a value.</p>\n        <p>If the whole archive is retrieved, this value is the same as the\n            ArchiveSHA256TreeHash value.</p>\n        <p>This field is null for the following:</p>\n        <ul>\n            <li>\n                <p>Archive retrieval jobs that specify a range that is not tree-hash\n                    aligned</p>\n            </li>\n         </ul>\n        <ul>\n            <li>\n                <p>Archival jobs that specify a range that is equal to the whole archive, when\n                    the job status is <code>InProgress</code>\n               </p>\n            </li>\n         </ul>\n        <ul>\n            <li>\n                <p>Inventory jobs</p>\n            </li>\n            <li>\n                <p>Select jobs</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "string"
          },
          "ArchiveSHA256TreeHash": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The SHA256 tree hash of the entire archive for an archive retrieval. For inventory\n            retrieval or select jobs, this field is null.</simpara>\n      ",
            "documentation": "\n        <p>The SHA256 tree hash of the entire archive for an archive retrieval. For inventory\n            retrieval or select jobs, this field is null.</p>\n      ",
            "shape_name": "string"
          },
          "RetrievalByteRange": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The retrieved byte range for archive retrieval jobs in the form\n                <emphasis>StartByteValue</emphasis>-<emphasis>EndByteValue</emphasis>. If no range\n            was specified in the archive retrieval, then the whole archive is retrieved. In this\n            case, <emphasis>StartByteValue</emphasis> equals 0 and <emphasis>EndByteValue</emphasis>\n            equals the size of the archive minus 1. For inventory retrieval or select jobs, this\n            field is null. </simpara>\n      ",
            "documentation": "\n        <p>The retrieved byte range for archive retrieval jobs in the form\n                <i>StartByteValue</i>-<i>EndByteValue</i>. If no range\n            was specified in the archive retrieval, then the whole archive is retrieved. In this\n            case, <i>StartByteValue</i> equals 0 and <i>EndByteValue</i>\n            equals the size of the archive minus 1. For inventory retrieval or select jobs, this\n            field is null. </p>\n      ",
            "shape_name": "string"
          },
          "Tier": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The tier to use for a select or an archive retrieval. Valid values are\n                <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n                <code>Standard</code> is the default.</simpara>    \n      ",
            "documentation": "\n        <p>The tier to use for a select or an archive retrieval. Valid values are\n                <code>Expedited</code>, <code>Standard</code>, or <code>Bulk</code>.\n                <code>Standard</code> is the default.</p>    \n      ",
            "shape_name": "string"
          },
          "InventoryRetrievalParameters": {
            "type": "structure",
            "members": {
              "Format": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The output format for the vault inventory list, which is set by the <emphasis role=\"bold\">InitiateJob</emphasis> request when initiating a job to retrieve a vault\n            inventory. Valid values are <code>CSV</code> and <code>JSON</code>.</simpara>\n      ",
                "documentation": "\n        <p>The output format for the vault inventory list, which is set by the <b>InitiateJob</b> request when initiating a job to retrieve a vault\n            inventory. Valid values are <code>CSV</code> and <code>JSON</code>.</p>\n      ",
                "shape_name": "string"
              },
              "StartDate": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The start of the date range in Universal Coordinated Time (UTC) for vault inventory\n            retrieval that includes archives created on or after this date. This value should be a\n            string in the ISO 8601 date format, for example\n            <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                "documentation": "\n        <p>The start of the date range in Universal Coordinated Time (UTC) for vault inventory\n            retrieval that includes archives created on or after this date. This value should be a\n            string in the ISO 8601 date format, for example\n            <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                "shape_name": "DateTime"
              },
              "EndDate": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The end of the date range in UTC for vault inventory retrieval that includes\n            archives created before this date. This value should be a string in the ISO 8601 date\n            format, for example <code>2013-03-20T17:03:43Z</code>.</simpara>\n      ",
                "documentation": "\n        <p>The end of the date range in UTC for vault inventory retrieval that includes\n            archives created before this date. This value should be a string in the ISO 8601 date\n            format, for example <code>2013-03-20T17:03:43Z</code>.</p>\n      ",
                "shape_name": "DateTime"
              },
              "Limit": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The maximum number of inventory items returned per vault inventory retrieval\n            request. This limit is set when initiating the job with the a <emphasis role=\"bold\">InitiateJob</emphasis> request. </simpara>\n      ",
                "documentation": "\n        <p>The maximum number of inventory items returned per vault inventory retrieval\n            request. This limit is set when initiating the job with the a <b>InitiateJob</b> request. </p>\n      ",
                "shape_name": "string"
              },
              "Marker": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>An opaque string that represents where to continue pagination of the vault\n            inventory retrieval results. You use the marker in a new <emphasis role=\"bold\">InitiateJob</emphasis> request to obtain additional inventory items. If there are\n            no more inventory items, this value is <code>null</code>. For more information, see\n                <ulink type=\"documentation\" url=\"amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering\"> Range Inventory Retrieval</ulink>.</simpara>\n      ",
                "documentation": "\n        <p>An opaque string that represents where to continue pagination of the vault\n            inventory retrieval results. You use the marker in a new <b>InitiateJob</b> request to obtain additional inventory items. If there are\n            no more inventory items, this value is <code>null</code>. For more information, see\n                <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html#api-initiate-job-post-vault-inventory-list-filtering\"> Range Inventory Retrieval</a>.</p>\n      ",
                "shape_name": "string"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Parameters used for range inventory retrieval.</simpara>\n      ",
            "documentation": "\n        <p>Parameters used for range inventory retrieval.</p>\n      ",
            "shape_name": "InventoryRetrievalJobDescription"
          },
          "JobOutputPath": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>Contains the job output location.</para>\n      ",
            "documentation": "\n        <p>Contains the job output location.</p>\n      ",
            "shape_name": "string"
          },
          "SelectParameters": {
            "type": "structure",
            "members": {
              "InputSerialization": {
                "type": "structure",
                "members": {
                  "csv": {
                    "type": "structure",
                    "members": {
                      "FileHeaderInfo": {
                        "type": "string",
                        "enum": [
                          "USE",
                          "IGNORE",
                          "NONE"
                        ],
                        "zonbookDocumentation": "\n        <para>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</para>\n      ",
                        "documentation": "\n        <p>Describes the first line of input. Valid values are <code>None</code>,\n                <code>Ignore</code>, and <code>Use</code>.</p>\n      ",
                        "shape_name": "FileHeaderInfo"
                      },
                      "Comments": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</para>\n      ",
                        "documentation": "\n        <p>A single character used to indicate that a row should be ignored when the character is\n            present at the start of that row.</p>\n      ",
                        "shape_name": "string"
                      },
                      "QuoteEscapeCharacter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                        "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                        "shape_name": "string"
                      },
                      "RecordDelimiter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                        "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                        "shape_name": "string"
                      },
                      "FieldDelimiter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                        "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                        "shape_name": "string"
                      },
                      "QuoteCharacter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                        "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                        "shape_name": "string"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes the serialization of a CSV-encoded object.</para>\n      ",
                    "documentation": "\n        <p>Describes the serialization of a CSV-encoded object.</p>\n      ",
                    "shape_name": "CSVInput"
                  }
                },
                "zonbookDocumentation": "\n        <para>Describes the serialization format of the object.</para>\n      ",
                "documentation": "\n        <p>Describes the serialization format of the object.</p>\n      ",
                "shape_name": "InputSerialization"
              },
              "ExpressionType": {
                "type": "string",
                "enum": [
                  "SQL"
                ],
                "zonbookDocumentation": "\n        <para>The type of the provided expression, for example <code>SQL</code>.</para>\n      ",
                "documentation": "\n        <p>The type of the provided expression, for example <code>SQL</code>.</p>\n      ",
                "shape_name": "ExpressionType"
              },
              "Expression": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The expression that is used to select the object.</para>\n      ",
                "documentation": "\n        <p>The expression that is used to select the object.</p>\n      ",
                "shape_name": "string"
              },
              "OutputSerialization": {
                "type": "structure",
                "members": {
                  "csv": {
                    "type": "structure",
                    "members": {
                      "QuoteFields": {
                        "type": "string",
                        "enum": [
                          "ALWAYS",
                          "ASNEEDED"
                        ],
                        "zonbookDocumentation": "\n        <para>A value that indicates whether all output fields should be contained within quotation\n            marks.</para>\n      ",
                        "documentation": "\n        <p>A value that indicates whether all output fields should be contained within quotation\n            marks.</p>\n      ",
                        "shape_name": "QuoteFields"
                      },
                      "QuoteEscapeCharacter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</para>\n      ",
                        "documentation": "\n        <p>A single character used for escaping the quotation-mark character inside an already\n            escaped value.</p>\n      ",
                        "shape_name": "string"
                      },
                      "RecordDelimiter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used to separate individual records from each other.</para>\n      ",
                        "documentation": "\n        <p>A value used to separate individual records from each other.</p>\n      ",
                        "shape_name": "string"
                      },
                      "FieldDelimiter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used to separate individual fields from each other within a record.</para>\n      ",
                        "documentation": "\n        <p>A value used to separate individual fields from each other within a record.</p>\n      ",
                        "shape_name": "string"
                      },
                      "QuoteCharacter": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>A value used as an escape character where the field delimiter is part of the\n            value.</para>\n      ",
                        "documentation": "\n        <p>A value used as an escape character where the field delimiter is part of the\n            value.</p>\n      ",
                        "shape_name": "string"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Describes the serialization of CSV-encoded query results.</para>\n      ",
                    "documentation": "\n        <p>Describes the serialization of CSV-encoded query results.</p>\n      ",
                    "shape_name": "CSVOutput"
                  }
                },
                "zonbookDocumentation": "\n        <para>Describes how the results of the select job are serialized.</para>\n      ",
                "documentation": "\n        <p>Describes how the results of the select job are serialized.</p>\n      ",
                "shape_name": "OutputSerialization"
              }
            },
            "zonbookDocumentation": "\n        <para>Contains the parameters used for a select.</para>\n      ",
            "documentation": "\n        <p>Contains the parameters used for a select.</p>\n      ",
            "shape_name": "SelectParameters"
          },
          "OutputLocation": {
            "type": "structure",
            "members": {
              "S3": {
                "type": "structure",
                "members": {
                  "BucketName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The name of the Amazon S3 bucket where the job results are stored.</para>\n      ",
                    "documentation": "\n        <p>The name of the Amazon S3 bucket where the job results are stored.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Prefix": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The prefix that is prepended to the results for this request.</para>\n      ",
                    "documentation": "\n        <p>The prefix that is prepended to the results for this request.</p>\n      ",
                    "shape_name": "string"
                  },
                  "Encryption": {
                    "type": "structure",
                    "members": {
                      "EncryptionType": {
                        "type": "string",
                        "enum": [
                          "aws:kms",
                          "AES256"
                        ],
                        "zonbookDocumentation": "\n        <para>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</para>\n      ",
                        "documentation": "\n        <p>The server-side encryption algorithm used when storing job results in Amazon S3, for\n            example <code>AES256</code> or <code>aws:kms</code>.</p>\n      ",
                        "shape_name": "EncryptionType"
                      },
                      "KMSKeyId": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </para>\n      ",
                        "documentation": "\n        <p>The AWS KMS key ID to use for object encryption. All GET and PUT requests for an\n            object protected by AWS KMS fail if not made by using Secure Sockets Layer (SSL) or\n            Signature Version 4. </p>\n      ",
                        "shape_name": "string"
                      },
                      "KMSContext": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <para>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</para>\n      ",
                        "documentation": "\n        <p>Optional. If the encryption type is <code>aws:kms</code>, you can use this value to\n            specify the encryption context for the job results.</p>\n      ",
                        "shape_name": "string"
                      }
                    },
                    "zonbookDocumentation": "\n        <para>Contains information about the encryption used to store the job results in Amazon S3.</para>\n      ",
                    "documentation": "\n        <p>Contains information about the encryption used to store the job results in Amazon S3.</p>\n      ",
                    "shape_name": "Encryption"
                  },
                  "CannedACL": {
                    "type": "string",
                    "enum": [
                      "private",
                      "public-read",
                      "public-read-write",
                      "aws-exec-read",
                      "authenticated-read",
                      "bucket-owner-read",
                      "bucket-owner-full-control"
                    ],
                    "zonbookDocumentation": "\n        <para>The canned access control list (ACL) to apply to the job results.</para>\n      ",
                    "documentation": "\n        <p>The canned access control list (ACL) to apply to the job results.</p>\n      ",
                    "shape_name": "CannedACL"
                  },
                  "AccessControlList": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <para>A list of grants that control access to the staged results.</para>\n      ",
                    "documentation": "\n        <p>A list of grants that control access to the staged results.</p>\n      ",
                    "shape_name": "AccessControlPolicyList",
                    "members": {
                      "type": "structure",
                      "members": {
                        "Grantee": {
                          "type": "structure",
                          "members": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "AmazonCustomerByEmail",
                                "CanonicalUser",
                                "Group"
                              ],
                              "zonbookDocumentation": "\n        <para>Type of grantee</para>\n      ",
                              "documentation": "\n        <p>Type of grantee</p>\n      ",
                              "required": true,
                              "shape_name": "Type"
                            },
                            "DisplayName": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>Screen name of the grantee.</para>\n      ",
                              "documentation": "\n        <p>Screen name of the grantee.</p>\n      ",
                              "shape_name": "string"
                            },
                            "URI": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>URI of the grantee group.</para>\n      ",
                              "documentation": "\n        <p>URI of the grantee group.</p>\n      ",
                              "shape_name": "string"
                            },
                            "ID": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>The canonical user ID of the grantee.</para>\n      ",
                              "documentation": "\n        <p>The canonical user ID of the grantee.</p>\n      ",
                              "shape_name": "string"
                            },
                            "EmailAddress": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>Email address of the grantee.</para>\n      ",
                              "documentation": "\n        <p>Email address of the grantee.</p>\n      ",
                              "shape_name": "string"
                            }
                          },
                          "zonbookDocumentation": "\n        <para>The grantee.</para>\n      ",
                          "documentation": "\n        <p>The grantee.</p>\n      ",
                          "shape_name": "Grantee"
                        },
                        "Permission": {
                          "type": "string",
                          "enum": [
                            "FULL_CONTROL",
                            "WRITE",
                            "WRITE_ACP",
                            "READ",
                            "READ_ACP"
                          ],
                          "zonbookDocumentation": "\n        <para>Specifies the permission given to the grantee. </para>\n      ",
                          "documentation": "\n        <p>Specifies the permission given to the grantee. </p>\n      ",
                          "shape_name": "Permission"
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Contains information about a grant.</para>\n      ",
                      "documentation": "\n        <p>Contains information about a grant.</p>\n      ",
                      "shape_name": "Grant"
                    }
                  },
                  "Tagging": {
                    "type": "map",
                    "zonbookDocumentation": "\n        <para>The tag-set that is applied to the job results.</para>\n      ",
                    "documentation": "\n        <p>The tag-set that is applied to the job results.</p>\n      ",
                    "shape_name": "hashmap",
                    "keys": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    }
                  },
                  "UserMetadata": {
                    "type": "map",
                    "zonbookDocumentation": "\n        <para>A map of metadata to store with the job results in Amazon S3.</para>\n      ",
                    "documentation": "\n        <p>A map of metadata to store with the job results in Amazon S3.</p>\n      ",
                    "shape_name": "hashmap",
                    "keys": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "string",
                      "documentation": null
                    }
                  },
                  "StorageClass": {
                    "type": "string",
                    "enum": [
                      "STANDARD",
                      "REDUCED_REDUNDANCY",
                      "STANDARD_IA"
                    ],
                    "zonbookDocumentation": "\n        <para>The storage class used to store the job results.</para>\n      ",
                    "documentation": "\n        <p>The storage class used to store the job results.</p>\n      ",
                    "shape_name": "StorageClass"
                  }
                },
                "zonbookDocumentation": "\n        <para>Describes an S3 location that will receive the results of the job request.</para>\n      ",
                "documentation": "\n        <p>Describes an S3 location that will receive the results of the job request.</p>\n      ",
                "shape_name": "S3Location"
              }
            },
            "zonbookDocumentation": "\n        <para>Contains the location where the data from the select job is stored.</para>\n      ",
            "documentation": "\n        <p>Contains the location where the data from the select job is stored.</p>\n      ",
            "shape_name": "OutputLocation"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Contains the description of an Amazon Glacier job.</simpara>\n      ",
        "documentation": "\n        <p>Contains the description of an Amazon Glacier job.</p>\n      ",
        "shape_name": "GlacierJobDescription"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation returns information about a job you previously initiated, including\n         the job initiation date, the user who initiated the job, the job status code/message and\n         the Amazon SNS topic to notify after Amazon Glacier completes the job. For more information\n         about initiating a job, see <a>InitiateJob</a>. </p>\n\n         <note>\n            <p>This operation enables you to check the status of your job. However, it is\n            strongly recommended that you set up an Amazon SNS topic and specify it in your initiate\n            job request so that Amazon Glacier can notify the topic after it completes the\n            job.</p>\n         </note>\n\n         <p>A job ID will not expire for at least 24 hours after Amazon Glacier completes the\n         job.</p>\n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n\n         <p> For more information about using this operation, \n         see the documentation for the underlying REST API <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-describe-job-get.html\">Describe Job</a> \n         in the <i>Amazon Glacier Developer Guide</i>. </p>\n\n      "
    },
    "GetJobOutput": {
      "name": "GetJobOutput",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/jobs/{jobId}/output"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The job ID whose data is downloaded.</simpara>\n      ",
            "documentation": "\n         <p>The job ID whose data is downloaded.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "range": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The range of bytes to retrieve from the output. For example, if you want to download\n         the first 1,048,576 bytes, specify the range as <code>bytes=0-1048575</code>. By default, this operation\n         downloads the entire output.</simpara>\n      \n         <simpara>If the job output is large, then you can use a range to\n         retrieve a portion of the output. This allows you to download the entire output in smaller\n         chunks of bytes. For example, suppose you have 1 GB of job output you want to download and\n         you decide to download 128 MB chunks of data at a time, which is a total of eight Get Job\n         Output requests. You use the following process to download the job output:</simpara>\n     \n         <orderedlist>\n            <listitem>\n               <simpara>Download a 128 MB chunk of output by specifying the appropriate byte range.\n                  Verify that all 128 MB of data was received.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Along with the data, the response includes a SHA256 tree hash of the payload.\n                  You compute the checksum of the payload on the client and compare it with the\n                  checksum you received in the response to ensure you received all the expected\n                  data.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time\n                  specifying the appropriate byte range.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>After downloading all the parts of the job output, you have a list of eight\n                  checksum values. Compute the tree hash of these values to find the checksum of the\n                  entire output. Using the <xref linkend=\"DescribeJob\"/> API, obtain job information of\n                  the job that provided you the output. The response includes the checksum of the\n                  entire archive stored in Amazon Glacier. You compare this value with the checksum you\n                  computed to ensure you have downloaded the entire archive content with no\n                  errors.</simpara>\n               <simpara/>\n            </listitem>\n         </orderedlist>\n      \n      ",
            "documentation": "\n         <p>The range of bytes to retrieve from the output. For example, if you want to download\n         the first 1,048,576 bytes, specify the range as <code>bytes=0-1048575</code>. By default, this operation\n         downloads the entire output.</p>\n      \n         <p>If the job output is large, then you can use a range to\n         retrieve a portion of the output. This allows you to download the entire output in smaller\n         chunks of bytes. For example, suppose you have 1 GB of job output you want to download and\n         you decide to download 128 MB chunks of data at a time, which is a total of eight Get Job\n         Output requests. You use the following process to download the job output:</p>\n     \n         <ol>\n            <li>\n               <p>Download a 128 MB chunk of output by specifying the appropriate byte range.\n                  Verify that all 128 MB of data was received.</p>\n            </li>\n            <li>\n               <p>Along with the data, the response includes a SHA256 tree hash of the payload.\n                  You compute the checksum of the payload on the client and compare it with the\n                  checksum you received in the response to ensure you received all the expected\n                  data.</p>\n            </li>\n            <li>\n               <p>Repeat steps 1 and 2 for all the eight 128 MB chunks of output data, each time\n                  specifying the appropriate byte range.</p>\n            </li>\n            <li>\n               <p>After downloading all the parts of the job output, you have a list of eight\n                  checksum values. Compute the tree hash of these values to find the checksum of the\n                  entire output. Using the <a>DescribeJob</a> API, obtain job information of\n                  the job that provided you the output. The response includes the checksum of the\n                  entire archive stored in Amazon Glacier. You compare this value with the checksum you\n                  computed to ensure you have downloaded the entire archive content with no\n                  errors.</p>\n               <p/>\n            </li>\n         </ol>\n      \n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Range"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Provides options for downloading output of an Amazon Glacier job.</simpara>\n      ",
        "documentation": "\n         <p>Provides options for downloading output of an Amazon Glacier job.</p>\n      ",
        "shape_name": "GetJobOutputInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "body": {
            "type": "blob",
            "streaming": true,
            "zonbookDocumentation": "\n         <simpara>The job data, either archive data or inventory data.</simpara>\n      ",
            "documentation": "\n         <p>The job data, either archive data or inventory data.</p>\n      ",
            "payload": true,
            "shape_name": "Stream"
          },
          "checksum": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The checksum of the data in the response. This header is returned only when\n         retrieving the output for an archive retrieval job. Furthermore, this header appears only\n         under the following conditions:</simpara>\n         <itemizedlist>\n            <listitem>\n                <simpara>You get the entire range of the archive.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>You request a range to return of the archive that starts and ends on a multiple\n               of 1 MB. For example, if you have an 3.1 MB archive and you specify a range to return\n               that starts at 1 MB and ends at 2 MB, then the x-amz-sha256-tree-hash is returned as\n               a response header.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>You request a range of the archive to return that starts on a multiple of 1 MB\n               and goes to the end of the archive. For example, if you have a 3.1 MB archive and you\n               specify a range that starts at 2 MB and ends at 3.1 MB (the end of the archive), then\n               the x-amz-sha256-tree-hash is returned as a response header.</simpara>\n            </listitem>\n         </itemizedlist>\n\n      ",
            "documentation": "\n         <p>The checksum of the data in the response. This header is returned only when\n         retrieving the output for an archive retrieval job. Furthermore, this header appears only\n         under the following conditions:</p>\n         <ul>\n            <li>\n                <p>You get the entire range of the archive.</p>\n            </li>\n            <li>\n               <p>You request a range to return of the archive that starts and ends on a multiple\n               of 1 MB. For example, if you have an 3.1 MB archive and you specify a range to return\n               that starts at 1 MB and ends at 2 MB, then the x-amz-sha256-tree-hash is returned as\n               a response header.</p>\n            </li>\n            <li>\n               <p>You request a range of the archive to return that starts on a multiple of 1 MB\n               and goes to the end of the archive. For example, if you have a 3.1 MB archive and you\n               specify a range that starts at 2 MB and ends at 3.1 MB (the end of the archive), then\n               the x-amz-sha256-tree-hash is returned as a response header.</p>\n            </li>\n         </ul>\n\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-sha256-tree-hash"
          },
          "status": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The HTTP response code for a job output request. The value depends on whether a range\n         was specified in the request.</simpara>\n      ",
            "documentation": "\n         <p>The HTTP response code for a job output request. The value depends on whether a range\n         was specified in the request.</p>\n      ",
            "location": "http_status",
            "shape_name": "httpstatus"
          },
          "contentRange": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The range of bytes returned by Amazon Glacier. If only partial output is downloaded,\n         the response provides the range of bytes Amazon Glacier returned. For example, bytes\n         0-1048575/8388608 returns the first 1 MB from 8 MB.</simpara>\n      ",
            "documentation": "\n         <p>The range of bytes returned by Amazon Glacier. If only partial output is downloaded,\n         the response provides the range of bytes Amazon Glacier returned. For example, bytes\n         0-1048575/8388608 returns the first 1 MB from 8 MB.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Content-Range"
          },
          "acceptRanges": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the range units accepted. For more information, see <ulink url=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">RFC2616</ulink>. </simpara>\n      ",
            "documentation": "\n         <p>Indicates the range units accepted. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">RFC2616</a>. </p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Accept-Ranges"
          },
          "contentType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Content-Type depends on whether the job output is an archive or a vault\n         inventory. For archive data, the Content-Type is application/octet-stream. For vault\n         inventory, if you requested CSV format when you initiated the job, the Content-Type is\n         text/csv. Otherwise, by default, vault inventory is returned as JSON, and the Content-Type\n         is application/json.</simpara>\n      ",
            "documentation": "\n         <p>The Content-Type depends on whether the job output is an archive or a vault\n         inventory. For archive data, the Content-Type is application/octet-stream. For vault\n         inventory, if you requested CSV format when you initiated the job, the Content-Type is\n         text/csv. Otherwise, by default, vault inventory is returned as JSON, and the Content-Type\n         is application/json.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "Content-Type"
          },
          "archiveDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The description of an archive.</simpara>\n      ",
            "documentation": "\n         <p>The description of an archive.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-archive-description"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "GetJobOutputOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation downloads the output of the job you initiated using <a>InitiateJob</a>. Depending on the job type you specified when you initiated the\n         job, the output will be either the content of an archive or a vault inventory.</p>\n\n         <p>You can download all the job output or download a portion of the output by specifying\n         a byte range. In the case of an archive retrieval job, depending on the byte range you\n         specify, Amazon Glacier returns the checksum for the portion of the data. You can compute the\n         checksum on the client and verify that the values match to ensure the portion you downloaded\n         is the correct data.</p>\n         <p>A job ID will not expire for at least 24 hours after Amazon Glacier completes the job. That\n         a byte range. For both archive and inventory retrieval jobs, you should verify the downloaded \n         size against the size returned in the headers from the \n         <b>Get Job Output</b> response.</p>\n         <p>For archive retrieval jobs, you should also verify that the size is what you expected. If\n         you download a portion of the output, the expected size is based on the range of bytes\n         you specified. For example, if you specify a range of <code>bytes=0-1048575</code>, you should\n         verify your download size is 1,048,576 bytes. If you download an entire archive, the\n         expected size is the size of the archive when you uploaded it to Amazon Glacier\n         The expected size is also returned in the headers from the \n         <b>Get Job Output</b> response.</p>\n         <p>In the case of an archive retrieval job, depending on the byte range you\n         specify, Amazon Glacier returns the checksum for the portion of the data. To ensure the portion you downloaded \n         is the correct data, compute the checksum on the client, verify that the values match, \n         and verify that the size is what you expected.</p>\n      \n         <p>A job ID does not expire for at least 24 hours after Amazon Glacier completes the\n         job. That is, you can download the job output within the 24 hours period after Amazon\n         Glacier completes the job.</p>    \n\n         <p>An AWS account has full permission to perform all operations (actions). However, AWS\n         Identity and Access Management (IAM) users don't have any permissions by default. You must\n         grant them explicit permission to perform specific actions. For more information, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html\">Access Control Using\n            AWS Identity and Access Management (IAM)</a>.</p>\n         <p>For conceptual information and the underlying REST API, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/vault-inventory.html\">Downloading a\n            Vault Inventory</a>, <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive.html\">Downloading an\n            Archive</a>, and <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html\">Get Job Output </a>\n         </p>\n      "
    },
    "PurchaseProvisionedCapacity": {
      "name": "PurchaseProvisionedCapacity",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/provisioned-capacity",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account ID of the account that owns the vault. You can either specify an AWS\n         account ID or optionally a single '-' (hyphen), in which case Amazon Glacier uses the AWS\n         account ID associated with the credentials used to sign the request. If you use an account\n         ID, don't include any hyphens ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The AWS account ID of the account that owns the vault. You can either specify an AWS\n         account ID or optionally a single '-' (hyphen), in which case Amazon Glacier uses the AWS\n         account ID associated with the credentials used to sign the request. If you use an account\n         ID, don't include any hyphens ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "shape_name": "PurchaseProvisionedCapacityInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "capacityId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID that identifies the provisioned capacity unit.</simpara>\n      ",
            "documentation": "\n         <p>The ID that identifies the provisioned capacity unit.</p>\n      ",
            "location": "header",
            "shape_name": "string",
            "location_name": "x-amz-capacity-id"
          }
        },
        "shape_name": "PurchaseProvisionedCapacityOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault limit or tags limit being exceeded.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the request results in a vault limit or tags limit being exceeded.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault or account limit being exceeded.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the request results in a vault or account limit being exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation purchases a provisioned capacity unit for an AWS account. </p>\n      "
    },
    "ListProvisionedCapacity": {
      "name": "ListProvisionedCapacity",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/provisioned-capacity"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account ID of the account that owns the vault. You can either specify an AWS\n         account ID or optionally a single '-' (hyphen), in which case Amazon Glacier uses the AWS\n         account ID associated with the credentials used to sign the request. If you use an account\n         ID, don't include any hyphens ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The AWS account ID of the account that owns the vault. You can either specify an AWS\n         account ID or optionally a single '-' (hyphen), in which case Amazon Glacier uses the AWS\n         account ID associated with the credentials used to sign the request. If you use an account\n         ID, don't include any hyphens ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "shape_name": "ListProvisionedCapacityInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ProvisionedCapacityList": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The response body contains the following JSON fields.</simpara>\n      ",
            "documentation": "\n         <p>The response body contains the following JSON fields.</p>\n      ",
            "shape_name": "ProvisionedCapacityList",
            "members": {
              "type": "structure",
              "members": {
                "CapacityId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID that identifies the provisioned capacity unit.</simpara>\n      ",
                  "documentation": "\n         <p>The ID that identifies the provisioned capacity unit.</p>\n      ",
                  "shape_name": "string"
                },
                "StartDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The date that the provisioned capacity unit was purchased, in Universal Coordinated Time (UTC).</simpara>\n      ",
                  "documentation": "\n         <p>The date that the provisioned capacity unit was purchased, in Universal Coordinated Time (UTC).</p>\n      ",
                  "shape_name": "string"
                },
                "ExpirationDate": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The date that the provisioned capacity unit expires, in Universal Coordinated Time (UTC).</simpara>\n      ",
                  "documentation": "\n         <p>The date that the provisioned capacity unit expires, in Universal Coordinated Time (UTC).</p>\n      ",
                  "shape_name": "string"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The definition for a provisioned capacity unit.</simpara>\n      ",
              "documentation": "\n         <p>The definition for a provisioned capacity unit.</p>\n      ",
              "shape_name": "ProvisionedCapacityDescription"
            }
          }
        },
        "shape_name": "ListProvisionedCapacityOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists the provisioned capacity units for the specified AWS\n         account.</p>\n      "
    },
    "SetDataRetrievalPolicy": {
      "name": "SetDataRetrievalPolicy",
      "http": {
        "method": "PUT",
        "uri": "/{accountId}/policies/data-retrieval",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "Policy": {
            "type": "structure",
            "members": {
              "Rules": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>The policy rule. Although this is a list type, currently there must be only one rule,\n         which contains a Strategy field and optionally a BytesPerHour field.</simpara>\n      ",
                "documentation": "\n         <p>The policy rule. Although this is a list type, currently there must be only one rule,\n         which contains a Strategy field and optionally a BytesPerHour field.</p>\n      ",
                "shape_name": "DataRetrievalRulesList",
                "members": {
                  "type": "structure",
                  "members": {
                    "Strategy": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The type of data retrieval policy to set.</simpara>\n         <simpara>Valid values: BytesPerHour|FreeTier|None</simpara>\n      ",
                      "documentation": "\n         <p>The type of data retrieval policy to set.</p>\n         <p>Valid values: BytesPerHour|FreeTier|None</p>\n      ",
                      "shape_name": "string"
                    },
                    "BytesPerHour": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The maximum number of bytes that can be retrieved in an hour.</simpara>\n         <simpara>This field is required only if the value of the Strategy field is\n            <code>BytesPerHour</code>. Your PUT operation will be rejected if the Strategy field is\n         not set to <code>BytesPerHour</code> and you set this field.</simpara>\n      ",
                      "documentation": "\n         <p>The maximum number of bytes that can be retrieved in an hour.</p>\n         <p>This field is required only if the value of the Strategy field is\n            <code>BytesPerHour</code>. Your PUT operation will be rejected if the Strategy field is\n         not set to <code>BytesPerHour</code> and you set this field.</p>\n      ",
                      "shape_name": "NullableLong"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Data retrieval policy rule.</simpara>\n      ",
                  "documentation": "\n         <p>Data retrieval policy rule.</p>\n      ",
                  "shape_name": "DataRetrievalRule"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>The data retrieval policy in JSON format.</simpara>\n      ",
            "documentation": "\n         <p>The data retrieval policy in JSON format.</p>\n      ",
            "shape_name": "DataRetrievalPolicy"
          }
        },
        "zonbookDocumentation": "\n         <simpara>SetDataRetrievalPolicy input.</simpara>\n      ",
        "documentation": "\n         <p>SetDataRetrievalPolicy input.</p>\n      ",
        "shape_name": "SetDataRetrievalPolicyInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation sets and then enacts a data retrieval policy in the region specified\n         in the PUT request. You can set one policy per region for an AWS account. The policy is\n         enacted within a few minutes of a successful PUT operation.</p>\n         <p>The set policy operation does not affect retrieval jobs that were in progress before\n         the policy was enacted. For more information about data retrieval policies, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html\">Amazon\n            Glacier Data Retrieval Policies</a>. </p>\n      "
    },
    "GetDataRetrievalPolicy": {
      "name": "GetDataRetrievalPolicy",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/policies/data-retrieval"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID. </simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID. This value must match the AWS\n         account ID associated with the credentials used to sign the request. You can either specify\n         an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon\n         Glacier uses the AWS account ID associated with the credentials used to sign the request.\n         If you specify your account ID, do not include any hyphens ('-') in the ID. </p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Input for GetDataRetrievalPolicy.</simpara>\n      ",
        "documentation": "\n         <p>Input for GetDataRetrievalPolicy.</p>\n      ",
        "shape_name": "GetDataRetrievalPolicyInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "Policy": {
            "type": "structure",
            "members": {
              "Rules": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>The policy rule. Although this is a list type, currently there must be only one rule,\n         which contains a Strategy field and optionally a BytesPerHour field.</simpara>\n      ",
                "documentation": "\n         <p>The policy rule. Although this is a list type, currently there must be only one rule,\n         which contains a Strategy field and optionally a BytesPerHour field.</p>\n      ",
                "shape_name": "DataRetrievalRulesList",
                "members": {
                  "type": "structure",
                  "members": {
                    "Strategy": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The type of data retrieval policy to set.</simpara>\n         <simpara>Valid values: BytesPerHour|FreeTier|None</simpara>\n      ",
                      "documentation": "\n         <p>The type of data retrieval policy to set.</p>\n         <p>Valid values: BytesPerHour|FreeTier|None</p>\n      ",
                      "shape_name": "string"
                    },
                    "BytesPerHour": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <simpara>The maximum number of bytes that can be retrieved in an hour.</simpara>\n         <simpara>This field is required only if the value of the Strategy field is\n            <code>BytesPerHour</code>. Your PUT operation will be rejected if the Strategy field is\n         not set to <code>BytesPerHour</code> and you set this field.</simpara>\n      ",
                      "documentation": "\n         <p>The maximum number of bytes that can be retrieved in an hour.</p>\n         <p>This field is required only if the value of the Strategy field is\n            <code>BytesPerHour</code>. Your PUT operation will be rejected if the Strategy field is\n         not set to <code>BytesPerHour</code> and you set this field.</p>\n      ",
                      "shape_name": "NullableLong"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>Data retrieval policy rule.</simpara>\n      ",
                  "documentation": "\n         <p>Data retrieval policy rule.</p>\n      ",
                  "shape_name": "DataRetrievalRule"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>Contains the returned data retrieval policy in JSON format.</simpara>\n      ",
            "documentation": "\n         <p>Contains the returned data retrieval policy in JSON format.</p>\n      ",
            "shape_name": "DataRetrievalPolicy"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to the <code>GetDataRetrievalPolicy</code>\n         request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to the <code>GetDataRetrievalPolicy</code>\n         request.</p>\n      ",
        "shape_name": "GetDataRetrievalPolicyOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation returns the current data retrieval policy for the account and region\n         specified in the GET request. For more information about data retrieval policies, see\n            <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/data-retrieval-policy.html\">Amazon Glacier Data Retrieval Policies</a>.</p>\n      "
    },
    "AddTagsToVault": {
      "name": "AddTagsToVault",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/tags?operation=add",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "Tags": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>The tags to add to the vault. Each tag is composed of a key and a value. The value\n         can be an empty string.</simpara>\n      ",
            "documentation": "\n         <p>The tags to add to the vault. Each tag is composed of a key and a value. The value\n         can be an empty string.</p>\n      ",
            "shape_name": "TagMap",
            "keys": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "TagValue",
              "documentation": null
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input values for <code>AddTagsToVault</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input values for <code>AddTagsToVault</code>.</p>\n      ",
        "shape_name": "AddTagsToVaultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault limit or tags limit being exceeded.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the request results in a vault limit or tags limit being exceeded.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the request results in a vault or account limit being exceeded.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the request results in a vault or account limit being exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation adds the specified tags to a vault. Each tag is composed of a key and\n         a value. Each vault can have up to 10 tags. If your request would cause the tag limit for\n         the vault to be exceeded, the operation throws the <code>LimitExceededException</code>\n         error. If a tag already exists on the vault under a specified key, the existing key value\n         will be overwritten. For more information about tags, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html\">Tagging Amazon Glacier Resources</a>.\n      </p>\n      "
    },
    "RemoveTagsFromVault": {
      "name": "RemoveTagsFromVault",
      "http": {
        "method": "POST",
        "uri": "/{accountId}/vaults/{vaultName}/tags?operation=remove",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "TagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of tag keys. Each corresponding tag is removed from the vault.</simpara>\n      ",
            "documentation": "\n         <p>A list of tag keys. Each corresponding tag is removed from the vault.</p>\n      ",
            "shape_name": "TagKeyList",
            "members": {
              "type": "string",
              "shape_name": "string",
              "documentation": null
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input value for <code>RemoveTagsFromVaultInput</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input value for <code>RemoveTagsFromVaultInput</code>.</p>\n      ",
        "shape_name": "RemoveTagsFromVaultInput"
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation removes one or more tags from the set of tags attached to a vault. For\n         more information about tags, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html\">Tagging Amazon Glacier Resources</a>.\n         This operation is idempotent. The operation will be successful, even if there are no tags\n         attached to the vault. </p>\n      "
    },
    "ListTagsForVault": {
      "name": "ListTagsForVault",
      "http": {
        "method": "GET",
        "uri": "/{accountId}/vaults/{vaultName}/tags"
      },
      "input": {
        "type": "structure",
        "members": {
          "accountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</simpara>\n      ",
            "documentation": "\n         <p>The <code>AccountId</code> value is the AWS account ID of the account that owns the\n         vault. You can either specify an AWS account ID or optionally a single '<code>-</code>'\n         (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the\n         credentials used to sign the request. If you use an account ID, do not include any hyphens\n         ('-') in the ID.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          },
          "vaultName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the vault.</simpara>\n      ",
            "documentation": "\n         <p>The name of the vault.</p>\n      ",
            "location": "uri",
            "shape_name": "string"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The input value for <code>ListTagsForVaultInput</code>.</simpara>\n      ",
        "documentation": "\n         <p>The input value for <code>ListTagsForVaultInput</code>.</p>\n      ",
        "shape_name": "ListTagsForVaultInput"
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "map",
            "zonbookDocumentation": "\n         <simpara>The tags attached to the vault. Each tag is composed of a key and a value.</simpara>\n      ",
            "documentation": "\n         <p>The tags attached to the vault. Each tag is composed of a key and a value.</p>\n      ",
            "shape_name": "TagMap",
            "keys": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "TagValue",
              "documentation": null
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>Contains the Amazon Glacier response to your request.</simpara>\n      ",
        "documentation": "\n         <p>Contains the Amazon Glacier response to your request.</p>\n      ",
        "shape_name": "ListTagsForVaultOutput"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
              "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a parameter of the request is incorrectly specified.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a parameter of the request is incorrectly specified.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client.</simpara>\n      ",
              "documentation": "\n         <p>Client.</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>400 Bad Request</simpara>\n      ",
              "documentation": "\n         <p>400 Bad Request</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": " \n         <simpara>Returned if no authentication data is found for the request.</simpara>\n      ",
              "documentation": " \n         <p>Returned if no authentication data is found for the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if a required header or parameter is missing from the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if a required header or parameter is missing from the request.</p>\n      ",
          "shape_name": "MissingParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Client</simpara>\n      ",
              "documentation": "\n         <p>Client</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>404 Not Found</simpara>\n      ",
              "documentation": "\n         <p>404 Not Found</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the specified resource (such as a vault, upload ID, or job ID) doesn't\n         exist.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "type": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Server</simpara>\n      ",
              "documentation": "\n         <p>Server</p>\n      ",
              "shape_name": "string"
            },
            "code": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>500 Internal Server Error</simpara>\n      ",
              "documentation": "\n         <p>500 Internal Server Error</p>\n      ",
              "shape_name": "string"
            },
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
              "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
              "shape_name": "string"
            }
          },
          "zonbookDocumentation": "\n         <simpara>Returned if the service cannot complete the request.</simpara>\n      ",
          "documentation": "\n         <p>Returned if the service cannot complete the request.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        }
      ],
      "documentation": "\n         <p>This operation lists all the tags attached to a vault. The operation returns an empty\n         map if there are no tags. For more information about tags, see <a href=\"http://docs.aws.amazon.com/amazonglacier/latest/dev/tagging.html\">Tagging Amazon Glacier\n         Resources</a>.</p>\n      "
    }
  }
}
