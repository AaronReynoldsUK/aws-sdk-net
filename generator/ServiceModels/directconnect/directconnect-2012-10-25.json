{
  "version": "1.0",
  "type": "json",
  "json_version": 1.1,
  "target_prefix": "OvertureService",
  "signature_version": "v4",
  "service_full_name": "AWS Direct Connect",
  "uid": "directconnect-2012-10-25",
  "endpoint_prefix": "directconnect",
  "api_version": "2012-10-25",
  "xmlnamespace": "http://directconnect.amazonaws.com/doc/2012-10-25/",
  "documentation": "\n    \n         <p>AWS Direct Connect links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. With this connection in place, you can create virtual interfaces directly to the AWS cloud (for example, to Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3)) and to Amazon Virtual Private Cloud (Amazon VPC), bypassing Internet service providers in your network path. An AWS Direct Connect location provides access to AWS in the region it is associated with, as well as access to other US regions. For example, you can provision a single connection to any AWS Direct Connect location in the US and use it to access public AWS services in all US Regions and AWS GovCloud (US).</p>\n      ",
  "operations": {
    "DescribeLocations": {
      "name": "DescribeLocations",
      "input": null,
      "output": {
        "type": "structure",
        "members": {
          "locations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of colocation hubs where network providers have equipment. Most regions have multiple locations available.</simpara>\n      ",
            "documentation": "\n         <p>A list of colocation hubs where network providers have equipment. Most regions have multiple locations available.</p>\n      ",
            "shape_name": "LocationList",
            "members": {
              "type": "structure",
              "members": {
                "locationCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The code used to indicate the AWS Direct Connect location.</simpara>\n      ",
                  "documentation": "\n         <p>The code used to indicate the AWS Direct Connect location.</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "locationName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect location. The name includes the colocation partner name and the physical site of the lit building.</p>\n      ",
                  "shape_name": "LocationName"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the AWS Direct connect location is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the AWS Direct connect location is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An AWS Direct Connect location where connections and interconnects can be requested.</simpara>\n      ",
              "documentation": "\n         <p>An AWS Direct Connect location where connections and interconnects can be requested.</p>\n      ",
              "shape_name": "Location"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A location is a network facility where AWS Direct Connect routers are available to be connected. Generally, these are colocation hubs where many network providers have equipment, and where cross connects can be delivered. Locations include a name and facility code, and must be provided when creating a connection.</simpara>\n      ",
        "documentation": "\n         <p>A location is a network facility where AWS Direct Connect routers are available to be connected. Generally, these are colocation hubs where many network providers have equipment, and where cross connects can be delivered. Locations include a name and facility code, and must be provided when creating a connection.</p>\n      ",
        "shape_name": "Locations"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n  \t      <p>Returns the list of AWS Direct Connect locations in the current AWS region. These are the locations that may be selected when calling <a>CreateConnection</a> or <a>CreateInterconnect</a>.</p>\n      "
    },
    "DescribeVirtualGateways": {
      "name": "DescribeVirtualGateways",
      "input": null,
      "output": {
        "type": "structure",
        "members": {
          "virtualGateways": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of virtual private gateways.</simpara>\n      ",
            "documentation": "\n         <p>A list of virtual private gateways.</p>\n      ",
            "shape_name": "VirtualGatewayList",
            "members": {
              "type": "structure",
              "members": {
                "virtualGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                  "shape_name": "VirtualGatewayId"
                },
                "virtualGatewayState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the virtual private gateway.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: This is the initial state after calling <emphasis>CreateVpnGateway</emphasis>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: Ready for use by a private virtual interface.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  This is the initial state after calling <emphasis>DeleteVpnGateway</emphasis>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  In this state, a private virtual interface is unable to send traffic over this gateway.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the virtual private gateway.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Pending</b>: This is the initial state after calling <i>CreateVpnGateway</i>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: Ready for use by a private virtual interface.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  This is the initial state after calling <i>DeleteVpnGateway</i>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  In this state, a private virtual interface is unable to send traffic over this gateway.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "VirtualGatewayState"
                }
              },
              "zonbookDocumentation": "\n         <simpara>You can create one or more AWS Direct Connect private virtual interfaces linking to your virtual private gateway.</simpara>\n         <simpara>Virtual private gateways can be managed using the Amazon Virtual Private Cloud (Amazon VPC)\n      console or the <ulink url=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">Amazon\n        EC2 CreateVpnGateway action</ulink>.</simpara>\n      ",
              "documentation": "\n         <p>You can create one or more AWS Direct Connect private virtual interfaces linking to your virtual private gateway.</p>\n         <p>Virtual private gateways can be managed using the Amazon Virtual Private Cloud (Amazon VPC)\n      console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">Amazon\n        EC2 CreateVpnGateway action</a>.</p>\n      ",
              "shape_name": "VirtualGateway"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of virtual private gateways.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of virtual private gateways.</p>\n      ",
        "shape_name": "VirtualGateways"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of virtual private gateways owned by the AWS account.</p>\n         <p>You can create one or more AWS Direct Connect private virtual interfaces linking to a virtual private gateway. A virtual private gateway can be managed via Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>\n      "
    },
    "CreateConnection": {
      "name": "CreateConnection",
      "input": {
        "type": "structure",
        "members": {
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "Bandwidth"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionName"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateConnection operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateConnection operation.</p>\n      ",
        "shape_name": "CreateConnectionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new connection between the customer network and a specific AWS Direct Connect location.</p>\n\n         <p>A connection links your internal network to an AWS Direct Connect location over a standard 1 gigabit or 10 gigabit Ethernet fiber-optic cable. One end of the cable is connected to your router, the other to an AWS Direct Connect router. An AWS Direct Connect location provides access to Amazon Web Services in the region it is associated with. You can establish connections with AWS Direct Connect locations in multiple regions, but a connection in one region does not provide connectivity to other regions.</p>\n\t\t       <p>To find the locations for your region, use <a>DescribeLocations</a>.</p>\n         <p>You can automatically add the new connection to a link aggregation group (LAG) by\n            specifying a LAG ID in the request. This ensures that the new connection is allocated on\n            the same AWS Direct Connect endpoint that hosts the specified LAG. If there are no\n            available ports on the endpoint, the request fails and no connection will be\n            created.</p>\n      "
    },
    "DescribeConnections": {
      "name": "DescribeConnections",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeConnections operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeConnections operation.</p>\n      ",
        "shape_name": "DescribeConnectionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of connections.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of connections.</p>\n      ",
        "shape_name": "Connections"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Displays all connections in this region.</p>\n         <p>If a connection ID is provided, the call returns only that particular connection.</p>\n      "
    },
    "DeleteConnection": {
      "name": "DeleteConnection",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteConnection operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteConnection operation.</p>\n      ",
        "shape_name": "DeleteConnectionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes the connection.</p>\n         <p>Deleting a connection only stops the AWS Direct Connect port hour and data transfer charges. You need to cancel separately with the providers any services or charges for cross-connects or network circuits that connect you to the AWS Direct Connect location.</p>\n      "
    },
    "CreatePrivateVirtualInterface": {
      "name": "CreatePrivateVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "newPrivateVirtualInterface": {
            "type": "structure",
            "members": {
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "required": true,
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "required": true,
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "required": true,
                "shape_name": "ASN"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "virtualGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                "shape_name": "VirtualGatewayId"
              },
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Detailed information for the private virtual interface to be created.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Detailed information for the private virtual interface to be created.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "NewPrivateVirtualInterface"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreatePrivateVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreatePrivateVirtualInterface operation.</p>\n      ",
        "shape_name": "CreatePrivateVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
            "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
            "shape_name": "VirtualInterfaceType"
          },
          "virtualInterfaceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
            "shape_name": "VirtualInterfaceName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
            "shape_name": "LongAsn"
          },
          "authKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
            "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
            "shape_name": "BGPAuthKey"
          },
          "amazonAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
            "shape_name": "AmazonAddress"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          },
          "addressFamily": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ipv4",
              "ipv6"
            ],
            "shape_name": "AddressFamily"
          },
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          },
          "customerRouterConfig": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
            "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
            "shape_name": "RouterConfig"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "routeFilterPrefixes": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
            "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
            "shape_name": "RouteFilterPrefixList",
            "members": {
              "type": "structure",
              "members": {
                "cidr": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                  "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                  "shape_name": "CIDR"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
              "shape_name": "RouteFilterPrefix"
            }
          },
          "bgpPeers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
            "shape_name": "BGPPeerList",
            "members": {
              "type": "structure",
              "members": {
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "bgpPeerState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "verifying",
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "BGPPeerState"
                },
                "bgpStatus": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "up",
                    "down"
                  ],
                  "shape_name": "BGPStatus"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
              "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
              "shape_name": "BGPPeer"
            }
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "VirtualInterface"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new private virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A private virtual interface supports sending traffic to a single virtual private cloud (VPC).</p>\n      "
    },
    "CreatePublicVirtualInterface": {
      "name": "CreatePublicVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "newPublicVirtualInterface": {
            "type": "structure",
            "members": {
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "required": true,
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "required": true,
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "required": true,
                "shape_name": "ASN"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "routeFilterPrefixes": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
                "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
                "shape_name": "RouteFilterPrefixList",
                "members": {
                  "type": "structure",
                  "members": {
                    "cidr": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                      "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                      "shape_name": "CIDR"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
                  "shape_name": "RouteFilterPrefix"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>Detailed information for the public virtual interface to be created.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Detailed information for the public virtual interface to be created.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "NewPublicVirtualInterface"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreatePublicVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreatePublicVirtualInterface operation.</p>\n      ",
        "shape_name": "CreatePublicVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
            "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
            "shape_name": "VirtualInterfaceType"
          },
          "virtualInterfaceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
            "shape_name": "VirtualInterfaceName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
            "shape_name": "LongAsn"
          },
          "authKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
            "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
            "shape_name": "BGPAuthKey"
          },
          "amazonAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
            "shape_name": "AmazonAddress"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          },
          "addressFamily": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ipv4",
              "ipv6"
            ],
            "shape_name": "AddressFamily"
          },
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          },
          "customerRouterConfig": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
            "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
            "shape_name": "RouterConfig"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "routeFilterPrefixes": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
            "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
            "shape_name": "RouteFilterPrefixList",
            "members": {
              "type": "structure",
              "members": {
                "cidr": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                  "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                  "shape_name": "CIDR"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
              "shape_name": "RouteFilterPrefix"
            }
          },
          "bgpPeers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
            "shape_name": "BGPPeerList",
            "members": {
              "type": "structure",
              "members": {
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "bgpPeerState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "verifying",
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "BGPPeerState"
                },
                "bgpStatus": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "up",
                    "down"
                  ],
                  "shape_name": "BGPStatus"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
              "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
              "shape_name": "BGPPeer"
            }
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "VirtualInterface"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new public virtual interface. A virtual interface is the VLAN that transports AWS Direct Connect traffic. A public virtual interface supports sending traffic to public services of AWS such as Amazon Simple Storage Service (Amazon S3).</p>\n         <p>When creating an IPv6 public virtual interface (addressFamily is 'ipv6'), the customer and amazon address fields should be left blank to use auto-assigned IPv6 space. Custom IPv6 Addresses are currently not supported.</p>\n      "
    },
    "DescribeVirtualInterfaces": {
      "name": "DescribeVirtualInterfaces",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeVirtualInterfaces operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeVirtualInterfaces operation.</p>\n      ",
        "shape_name": "DescribeVirtualInterfacesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterfaces": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of virtual interfaces.</simpara>\n      ",
            "documentation": "\n         <p>A list of virtual interfaces.</p>\n      ",
            "shape_name": "VirtualInterfaceList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "virtualInterfaceId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "VirtualInterfaceId"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "virtualInterfaceType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
                  "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
                  "shape_name": "VirtualInterfaceType"
                },
                "virtualInterfaceName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                  "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                  "shape_name": "VirtualInterfaceName"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "amazonSideAsn": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                  "shape_name": "LongAsn"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "virtualInterfaceState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "confirming",
                    "verifying",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "VirtualInterfaceState"
                },
                "customerRouterConfig": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
                  "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
                  "shape_name": "RouterConfig"
                },
                "virtualGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                  "shape_name": "VirtualGatewayId"
                },
                "directConnectGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                  "shape_name": "DirectConnectGatewayId"
                },
                "routeFilterPrefixes": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
                  "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
                  "shape_name": "RouteFilterPrefixList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "cidr": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                        "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                        "shape_name": "CIDR"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
                    "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
                    "shape_name": "RouteFilterPrefix"
                  }
                },
                "bgpPeers": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
                  "shape_name": "BGPPeerList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "asn": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                        "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                        "shape_name": "ASN"
                      },
                      "authKey": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                        "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                        "shape_name": "BGPAuthKey"
                      },
                      "addressFamily": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ],
                        "shape_name": "AddressFamily"
                      },
                      "amazonAddress": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                        "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                        "shape_name": "AmazonAddress"
                      },
                      "customerAddress": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                        "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                        "shape_name": "CustomerAddress"
                      },
                      "bgpPeerState": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                        "enum": [
                          "verifying",
                          "pending",
                          "available",
                          "deleting",
                          "deleted"
                        ],
                        "shape_name": "BGPPeerState"
                      },
                      "bgpStatus": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                        "enum": [
                          "up",
                          "down"
                        ],
                        "shape_name": "BGPStatus"
                      },
                      "awsDeviceV2": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                        "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                        "shape_name": "AwsDeviceV2"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
                    "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
                    "shape_name": "BGPPeer"
                  }
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "VirtualInterface"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of virtual interfaces.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of virtual interfaces.</p>\n      ",
        "shape_name": "VirtualInterfaces"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Displays all virtual interfaces for an AWS account. Virtual interfaces deleted fewer\n            than 15 minutes before you make the request are also returned. If you specify a\n            connection ID, only the virtual interfaces associated with the connection are returned.\n            If you specify a virtual interface ID, then only a single virtual interface is\n            returned.</p>\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect\n            location and the customer.</p>\n      "
    },
    "DeleteVirtualInterface": {
      "name": "DeleteVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualInterfaceId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteVirtualInterface operation.</p>\n      ",
        "shape_name": "DeleteVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DeleteVirtualInterface is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DeleteVirtualInterface is called.</p>\n      ",
        "shape_name": "DeleteVirtualInterfaceResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes a virtual interface.</p>\n      "
    },
    "AllocatePrivateVirtualInterface": {
      "name": "AllocatePrivateVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The connection ID on which the private virtual interface is provisioned.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The connection ID on which the private virtual interface is provisioned.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new private virtual interface.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new private virtual interface.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "OwnerAccount"
          },
          "newPrivateVirtualInterfaceAllocation": {
            "type": "structure",
            "members": {
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "required": true,
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "required": true,
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "required": true,
                "shape_name": "ASN"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Detailed information for the private virtual interface to be provisioned.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Detailed information for the private virtual interface to be provisioned.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "NewPrivateVirtualInterfaceAllocation"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AllocatePrivateVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AllocatePrivateVirtualInterface operation.</p>\n      ",
        "shape_name": "AllocatePrivateVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
            "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
            "shape_name": "VirtualInterfaceType"
          },
          "virtualInterfaceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
            "shape_name": "VirtualInterfaceName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
            "shape_name": "LongAsn"
          },
          "authKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
            "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
            "shape_name": "BGPAuthKey"
          },
          "amazonAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
            "shape_name": "AmazonAddress"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          },
          "addressFamily": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ipv4",
              "ipv6"
            ],
            "shape_name": "AddressFamily"
          },
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          },
          "customerRouterConfig": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
            "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
            "shape_name": "RouterConfig"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "routeFilterPrefixes": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
            "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
            "shape_name": "RouteFilterPrefixList",
            "members": {
              "type": "structure",
              "members": {
                "cidr": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                  "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                  "shape_name": "CIDR"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
              "shape_name": "RouteFilterPrefix"
            }
          },
          "bgpPeers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
            "shape_name": "BGPPeerList",
            "members": {
              "type": "structure",
              "members": {
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "bgpPeerState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "verifying",
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "BGPPeerState"
                },
                "bgpStatus": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "up",
                    "down"
                  ],
                  "shape_name": "BGPStatus"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
              "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
              "shape_name": "BGPPeer"
            }
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "VirtualInterface"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Provisions a private virtual interface to be owned by another AWS customer.</p>\n         <p>Virtual interfaces created using this action must be confirmed by the virtual\n            interface owner by using the <a>ConfirmPrivateVirtualInterface</a> action.\n            Until then, the virtual interface will be in 'Confirming' state, and will not be\n            available for handling traffic.</p>\n      "
    },
    "AllocatePublicVirtualInterface": {
      "name": "AllocatePublicVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The connection ID on which the public virtual interface is provisioned.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The connection ID on which the public virtual interface is provisioned.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new public virtual interface.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new public virtual interface.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "OwnerAccount"
          },
          "newPublicVirtualInterfaceAllocation": {
            "type": "structure",
            "members": {
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "required": true,
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "required": true,
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "required": true,
                "shape_name": "ASN"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "routeFilterPrefixes": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
                "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
                "shape_name": "RouteFilterPrefixList",
                "members": {
                  "type": "structure",
                  "members": {
                    "cidr": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                      "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                      "shape_name": "CIDR"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
                  "shape_name": "RouteFilterPrefix"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>Detailed information for the public virtual interface to be provisioned.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Detailed information for the public virtual interface to be provisioned.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "NewPublicVirtualInterfaceAllocation"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AllocatePublicVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AllocatePublicVirtualInterface operation.</p>\n      ",
        "shape_name": "AllocatePublicVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
            "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
            "shape_name": "VirtualInterfaceType"
          },
          "virtualInterfaceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
            "shape_name": "VirtualInterfaceName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
            "shape_name": "LongAsn"
          },
          "authKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
            "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
            "shape_name": "BGPAuthKey"
          },
          "amazonAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
            "shape_name": "AmazonAddress"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          },
          "addressFamily": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ipv4",
              "ipv6"
            ],
            "shape_name": "AddressFamily"
          },
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          },
          "customerRouterConfig": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
            "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
            "shape_name": "RouterConfig"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "routeFilterPrefixes": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
            "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
            "shape_name": "RouteFilterPrefixList",
            "members": {
              "type": "structure",
              "members": {
                "cidr": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                  "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                  "shape_name": "CIDR"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
              "shape_name": "RouteFilterPrefix"
            }
          },
          "bgpPeers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
            "shape_name": "BGPPeerList",
            "members": {
              "type": "structure",
              "members": {
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "bgpPeerState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "verifying",
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "BGPPeerState"
                },
                "bgpStatus": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "up",
                    "down"
                  ],
                  "shape_name": "BGPStatus"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
              "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
              "shape_name": "BGPPeer"
            }
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "VirtualInterface"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Provisions a public virtual interface to be owned by a different customer.</p>\n         <p>The owner of a connection calls this function to provision a public virtual interface which will be owned by another AWS customer.</p>\n         <p>Virtual interfaces created using this function must be confirmed by the virtual interface owner by calling ConfirmPublicVirtualInterface. Until this step has been completed, the virtual interface will be in 'Confirming' state, and will not be available for handling traffic.</p>\n         <p>When creating an IPv6 public virtual interface (addressFamily is 'ipv6'), the customer and amazon address fields should be left blank to use auto-assigned IPv6 space. Custom IPv6 Addresses are currently not supported.</p>\n      "
    },
    "ConfirmPrivateVirtualInterface": {
      "name": "ConfirmPrivateVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualInterfaceId"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>ID of the virtual private gateway that will be attached to the virtual interface.</simpara>\n         <simpara> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <ulink url=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</ulink> action.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>ID of the virtual private gateway that will be attached to the virtual interface.</p>\n         <p> A virtual private gateway can be managed via the Amazon Virtual Private Cloud (VPC) console or the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html\">EC2 CreateVpnGateway</a> action.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>ID of the direct connect gateway that will be attached to the virtual\n            interface.</simpara>\n         <simpara> A direct connect gateway can be managed via the AWS Direct Connect console or the\n                <xref linkend=\"CreateDirectConnectGateway\"/> action.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>ID of the direct connect gateway that will be attached to the virtual\n            interface.</p>\n         <p> A direct connect gateway can be managed via the AWS Direct Connect console or the\n                <a>CreateDirectConnectGateway</a> action.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the ConfirmPrivateVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the ConfirmPrivateVirtualInterface operation.</p>\n      ",
        "shape_name": "ConfirmPrivateVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when ConfirmPrivateVirtualInterface is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when ConfirmPrivateVirtualInterface is called.</p>\n      ",
        "shape_name": "ConfirmPrivateVirtualInterfaceResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Accept ownership of a private virtual interface created by another customer.</p>\n         <p>After the virtual interface owner calls this function, the virtual interface will be\n            created and attached to the given virtual private gateway or direct connect gateway, and\n            will be available for handling traffic.</p>\n      "
    },
    "ConfirmPublicVirtualInterface": {
      "name": "ConfirmPublicVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualInterfaceId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the ConfirmPublicVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the ConfirmPublicVirtualInterface operation.</p>\n      ",
        "shape_name": "ConfirmPublicVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when ConfirmPublicVirtualInterface is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when ConfirmPublicVirtualInterface is called.</p>\n      ",
        "shape_name": "ConfirmPublicVirtualInterfaceResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Accept ownership of a public virtual interface created by another customer.</p>\n         <p>After the virtual interface owner calls this function, the specified virtual interface will be created and made available for handling traffic.</p>\n      "
    },
    "CreateInterconnect": {
      "name": "CreateInterconnect",
      "input": {
        "type": "structure",
        "members": {
          "interconnectName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the interconnect.</simpara>\n         <simpara>Example: \"<emphasis>1G Interconnect to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the interconnect.</p>\n         <p>Example: \"<i>1G Interconnect to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "InterconnectName"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The port bandwidth</simpara>\n         <simpara>Example: 1Gbps</simpara>\n         <simpara>Default: None</simpara>\n         <simpara>Available values: 1Gbps,10Gbps</simpara>\n      ",
            "documentation": "\n         <p>The port bandwidth</p>\n         <p>Example: 1Gbps</p>\n         <p>Default: None</p>\n         <p>Available values: 1Gbps,10Gbps</p>\n      ",
            "required": true,
            "shape_name": "Bandwidth"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the interconnect is located</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the interconnect is located</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LocationCode"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateInterconnect operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateInterconnect operation.</p>\n      ",
        "shape_name": "CreateInterconnectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect.</p>\n         <p>Example: dxcon-abc123</p>\n      ",
            "shape_name": "InterconnectId"
          },
          "interconnectName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the interconnect.</simpara>\n         <simpara>Example: \"<emphasis>1G Interconnect to AWS</emphasis>\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the interconnect.</p>\n         <p>Example: \"<i>1G Interconnect to AWS</i>\"</p>\n      ",
            "shape_name": "InterconnectName"
          },
          "interconnectState": {
            "type": "string",
            "zonbookDocumentation": "\n\n         <simpara>State of the interconnect.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The interconnect has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the interconnect is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The interconnect is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The interconnect has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n\n      ",
            "documentation": "\n\n         <p>State of the interconnect.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The interconnect has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the interconnect is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The interconnect is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The interconnect has been deleted.</p>\n            </li>\n         </ul>\n\n      ",
            "enum": [
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted"
            ],
            "shape_name": "InterconnectState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to DescribeInterconnectLoa for this Interconnect.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to DescribeInterconnectLoa for this Interconnect.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>An interconnect is a connection that can host other connections.</simpara>\n         <simpara>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</simpara>\n         <simpara>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</simpara>\n      ",
        "documentation": "\n         <p>An interconnect is a connection that can host other connections.</p>\n         <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p>\n         <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>\n      ",
        "shape_name": "Interconnect"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new interconnect between a AWS Direct Connect partner's network and a specific AWS Direct Connect location.</p>\n         <p>An interconnect is a connection which is capable of hosting other connections. The AWS Direct Connect partner can use an interconnect to provide sub-1Gbps AWS Direct Connect service to tier 2 customers who do not have their own connections. Like a standard connection, an interconnect links the AWS Direct Connect partner's network to an AWS Direct Connect location over a standard 1 Gbps or 10 Gbps Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an AWS Direct Connect router.</p>\n         <p>You can automatically add the new interconnect to a link aggregation group (LAG) by\n            specifying a LAG ID in the request. This ensures that the new interconnect is allocated on\n            the same AWS Direct Connect endpoint that hosts the specified LAG. If there are no\n            available ports on the endpoint, the request fails and no interconnect will be\n            created.</p>\n         <p>For each end customer, the AWS Direct Connect partner provisions a connection on their interconnect by calling AllocateConnectionOnInterconnect. The end customer can then connect to AWS resources by creating a virtual interface on their connection, using the VLAN assigned to them by the AWS Direct Connect partner.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "DescribeInterconnects": {
      "name": "DescribeInterconnects",
      "input": {
        "type": "structure",
        "members": {
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect.</p>\n         <p>Example: dxcon-abc123</p>\n      ",
            "shape_name": "InterconnectId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeInterconnects operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeInterconnects operation.</p>\n      ",
        "shape_name": "DescribeInterconnectsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "interconnects": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of interconnects.</simpara>\n      ",
            "documentation": "\n         <p>A list of interconnects.</p>\n      ",
            "shape_name": "InterconnectList",
            "members": {
              "type": "structure",
              "members": {
                "interconnectId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the interconnect.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the interconnect.</p>\n         <p>Example: dxcon-abc123</p>\n      ",
                  "shape_name": "InterconnectId"
                },
                "interconnectName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the interconnect.</simpara>\n         <simpara>Example: \"<emphasis>1G Interconnect to AWS</emphasis>\"</simpara>\n      ",
                  "documentation": "\n         <p>The name of the interconnect.</p>\n         <p>Example: \"<i>1G Interconnect to AWS</i>\"</p>\n      ",
                  "shape_name": "InterconnectName"
                },
                "interconnectState": {
                  "type": "string",
                  "zonbookDocumentation": "\n\n         <simpara>State of the interconnect.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The interconnect has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the interconnect is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The interconnect is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The interconnect has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n\n      ",
                  "documentation": "\n\n         <p>State of the interconnect.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The interconnect has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the interconnect is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The interconnect is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The interconnect has been deleted.</p>\n            </li>\n         </ul>\n\n      ",
                  "enum": [
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "InterconnectState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to DescribeInterconnectLoa for this Interconnect.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to DescribeInterconnectLoa for this Interconnect.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>An interconnect is a connection that can host other connections.</simpara>\n         <simpara>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</simpara>\n         <simpara>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</simpara>\n      ",
              "documentation": "\n         <p>An interconnect is a connection that can host other connections.</p>\n         <p>Like a standard AWS Direct Connect connection, an interconnect represents the physical connection between an AWS Direct Connect partner's network and a specific Direct Connect location. An AWS Direct Connect partner who owns an interconnect can provision hosted connections on the interconnect for their end customers, thereby providing the end customers with connectivity to AWS services.</p>\n         <p>The resources of the interconnect, including bandwidth and VLAN numbers, are shared by all of the hosted connections on the interconnect, and the owner of the interconnect determines how these resources are assigned.</p>\n      ",
              "shape_name": "Interconnect"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of interconnects.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of interconnects.</p>\n      ",
        "shape_name": "Interconnects"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of interconnects owned by the AWS account.</p>\n         <p>If an interconnect ID is provided, it will only return this particular interconnect.</p>\n      "
    },
    "DeleteInterconnect": {
      "name": "DeleteInterconnect",
      "input": {
        "type": "structure",
        "members": {
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect.</p>\n         <p>Example: dxcon-abc123</p>\n      ",
            "required": true,
            "shape_name": "InterconnectId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteInterconnect operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteInterconnect operation.</p>\n      ",
        "shape_name": "DeleteInterconnectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "interconnectState": {
            "type": "string",
            "zonbookDocumentation": "\n\n         <simpara>State of the interconnect.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The interconnect has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the interconnect is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The interconnect is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The interconnect has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n\n      ",
            "documentation": "\n\n         <p>State of the interconnect.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of an interconnect. The interconnect stays in the\n          requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The interconnect has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the interconnect is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The interconnect is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The interconnect has been deleted.</p>\n            </li>\n         </ul>\n\n      ",
            "enum": [
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted"
            ],
            "shape_name": "InterconnectState"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DeleteInterconnect is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DeleteInterconnect is called.</p>\n      ",
        "shape_name": "DeleteInterconnectResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified interconnect.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "DescribeLoa": {
      "name": "DescribeLoa",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of a connection, LAG, or interconnect for which to get the LOA-CFA information.</simpara>\n         <simpara>Example: dxcon-abc123 or dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of a connection, LAG, or interconnect for which to get the LOA-CFA information.</p>\n         <p>Example: dxcon-abc123 or dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "providerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the service provider who establishes connectivity on your behalf. If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the service provider who establishes connectivity on your behalf. If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ProviderName"
          },
          "loaContentType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
            "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
            "enum": [
              "application/pdf"
            ],
            "shape_name": "LoaContentType"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeLoa operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeLoa operation.</p>\n      ",
        "shape_name": "DescribeLoaRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "loaContent": {
            "type": "blob",
            "zonbookDocumentation": "\n         <simpara>The binary contents of the LOA-CFA document.</simpara>\n      ",
            "documentation": "\n         <p>The binary contents of the LOA-CFA document.</p>\n      ",
            "shape_name": "LoaContent"
          },
          "loaContentType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
            "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
            "enum": [
              "application/pdf"
            ],
            "shape_name": "LoaContentType"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</p>\n      ",
        "shape_name": "Loa"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns the LOA-CFA for a connection, interconnect, or link aggregation group (LAG).</p>\n         <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to AWS at the colocation facility.  For more information, see <a href=\"http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>\n      "
    },
    "DescribeInterconnectLoa": {
      "name": "DescribeInterconnectLoa",
      "input": {
        "type": "structure",
        "members": {
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect.</p>\n         <p>Example: dxcon-abc123</p>\n      ",
            "required": true,
            "shape_name": "InterconnectId"
          },
          "providerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the service provider who establishes connectivity on your behalf.  If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the service provider who establishes connectivity on your behalf.  If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ProviderName"
          },
          "loaContentType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
            "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
            "enum": [
              "application/pdf"
            ],
            "shape_name": "LoaContentType"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeInterconnectLoa operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeInterconnectLoa operation.</p>\n      ",
        "shape_name": "DescribeInterconnectLoaRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "loa": {
            "type": "structure",
            "members": {
              "loaContent": {
                "type": "blob",
                "zonbookDocumentation": "\n         <simpara>The binary contents of the LOA-CFA document.</simpara>\n      ",
                "documentation": "\n         <p>The binary contents of the LOA-CFA document.</p>\n      ",
                "shape_name": "LoaContent"
              },
              "loaContentType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
                "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
                "enum": [
                  "application/pdf"
                ],
                "shape_name": "LoaContentType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</simpara>\n      ",
            "documentation": "\n         <p>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</p>\n      ",
            "shape_name": "Loa"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DescribeInterconnectLoa is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DescribeInterconnectLoa is called.</p>\n      ",
        "shape_name": "DescribeInterconnectLoaResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deprecated in favor of <a>DescribeLoa</a>.</p>\n         <p>Returns the LOA-CFA for an Interconnect.</p>\n         <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that is used when establishing your cross connect to AWS at the colocation facility.  For more information, see <a href=\"http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>\n      "
    },
    "DescribeConnectionLoa": {
      "name": "DescribeConnectionLoa",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "providerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the APN partner or service provider who establishes connectivity on your behalf.  If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the APN partner or service provider who establishes connectivity on your behalf.  If you supply this parameter, the LOA-CFA lists the provider name alongside your company name as the requester of the cross connect.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ProviderName"
          },
          "loaContentType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
            "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
            "enum": [
              "application/pdf"
            ],
            "shape_name": "LoaContentType"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeConnectionLoa operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeConnectionLoa operation.</p>\n      ",
        "shape_name": "DescribeConnectionLoaRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "loa": {
            "type": "structure",
            "members": {
              "loaContent": {
                "type": "blob",
                "zonbookDocumentation": "\n         <simpara>The binary contents of the LOA-CFA document.</simpara>\n      ",
                "documentation": "\n         <p>The binary contents of the LOA-CFA document.</p>\n      ",
                "shape_name": "LoaContent"
              },
              "loaContentType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</simpara>\n         <simpara>Default: application/pdf</simpara>\n      ",
                "documentation": "\n         <p>A standard media type indicating the content type of the LOA-CFA document.  Currently, the only supported value is \"application/pdf\".</p>\n         <p>Default: application/pdf</p>\n      ",
                "enum": [
                  "application/pdf"
                ],
                "shape_name": "LoaContentType"
              }
            },
            "zonbookDocumentation": "\n         <simpara>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</simpara>\n      ",
            "documentation": "\n         <p>A structure containing the Letter of Authorization - Connecting Facility Assignment (LOA-CFA) for a connection.</p>\n      ",
            "shape_name": "Loa"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DescribeConnectionLoa is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DescribeConnectionLoa is called.</p>\n      ",
        "shape_name": "DescribeConnectionLoaResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deprecated in favor of <a>DescribeLoa</a>.</p>\n         <p>Returns the LOA-CFA for a Connection.</p>\n         <p>The Letter of Authorization - Connecting Facility Assignment (LOA-CFA) is a document that your APN partner or service provider uses when establishing your cross connect to AWS at the colocation facility.  For more information, see <a href=\"http://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html\">Requesting Cross Connects at AWS Direct Connect Locations</a> in the AWS Direct Connect user guide.</p>\n      "
    },
    "DescribeConnectionsOnInterconnect": {
      "name": "DescribeConnectionsOnInterconnect",
      "input": {
        "type": "structure",
        "members": {
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>ID of the interconnect on which a list of connection is provisioned.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>ID of the interconnect on which a list of connection is provisioned.</p>\n         <p>Example: dxcon-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "InterconnectId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeConnectionsOnInterconnect operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeConnectionsOnInterconnect operation.</p>\n      ",
        "shape_name": "DescribeConnectionsOnInterconnectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of connections.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of connections.</p>\n      ",
        "shape_name": "Connections"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deprecated in favor of <a>DescribeHostedConnections</a>.</p>\n         <p>Returns a list of connections that have been provisioned on the given\n            interconnect.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "AllocateConnectionOnInterconnect": {
      "name": "AllocateConnectionOnInterconnect",
      "input": {
        "type": "structure",
        "members": {
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: \"<emphasis>500Mbps</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n         <simpara>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: \"<i>500Mbps</i>\"</p>\n         <p>Default: None</p>\n         <p>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</p>\n      ",
            "required": true,
            "shape_name": "Bandwidth"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Name of the provisioned connection.</simpara>\n         <simpara>Example: \"<emphasis>500M Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Name of the provisioned connection.</p>\n         <p>Example: \"<i>500M Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionName"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Numeric account Id of the customer for whom the connection will be provisioned.</simpara>\n         <simpara>Example: 123443215678</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Numeric account Id of the customer for whom the connection will be provisioned.</p>\n         <p>Example: 123443215678</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "OwnerAccount"
          },
          "interconnectId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>ID of the interconnect on which the connection will be provisioned.</simpara>\n         <simpara>Example: dxcon-456abc78</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>ID of the interconnect on which the connection will be provisioned.</p>\n         <p>Example: dxcon-456abc78</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "InterconnectId"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The dedicated VLAN provisioned to the connection.</simpara>\n         <simpara>Example: 101</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The dedicated VLAN provisioned to the connection.</p>\n         <p>Example: 101</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VLAN"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AllocateConnectionOnInterconnect operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AllocateConnectionOnInterconnect operation.</p>\n      ",
        "shape_name": "AllocateConnectionOnInterconnectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deprecated in favor of <a>AllocateHostedConnection</a>.</p>\n         <p>Creates a hosted connection on an interconnect.</p>\n         <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted connection on the given interconnect.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "AllocateHostedConnection": {
      "name": "AllocateHostedConnection",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect or LAG on which the connection will be\n            provisioned.</simpara>\n         <simpara>Example: dxcon-456abc78 or dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect or LAG on which the connection will be\n            provisioned.</p>\n         <p>Example: dxcon-456abc78 or dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The numeric account ID of the customer for whom the connection will be\n            provisioned.</simpara>\n         <simpara>Example: 123443215678</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The numeric account ID of the customer for whom the connection will be\n            provisioned.</p>\n         <p>Example: 123443215678</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "OwnerAccount"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The bandwidth of the connection.</simpara>\n         <simpara>Example: <code>500Mbps</code>\n         </simpara>\n         <simpara>Default: None</simpara>\n         <simpara>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</simpara>\n      ",
            "documentation": "\n         <p>The bandwidth of the connection.</p>\n         <p>Example: <code>500Mbps</code>\n         </p>\n         <p>Default: None</p>\n         <p>Values: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, or 500Mbps</p>\n      ",
            "required": true,
            "shape_name": "Bandwidth"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the provisioned connection.</simpara>\n         <simpara>Example: \"<code>500M Connection to AWS</code>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the provisioned connection.</p>\n         <p>Example: \"<code>500M Connection to AWS</code>\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The dedicated VLAN provisioned to the hosted connection.</simpara>\n         <simpara>Example: 101</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The dedicated VLAN provisioned to the hosted connection.</p>\n         <p>Example: 101</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VLAN"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to theHostedConnection operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to theHostedConnection operation.</p>\n      ",
        "shape_name": "AllocateHostedConnectionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a hosted connection on an interconnect or a link aggregation group\n            (LAG).</p>\n         <p>Allocates a VLAN number and a specified amount of bandwidth for use by a hosted\n            connection on the given interconnect or LAG.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "DescribeHostedConnections": {
      "name": "DescribeHostedConnections",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect or LAG on which the hosted connections are\n            provisioned.</simpara>\n         <simpara>Example: dxcon-abc123 or dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect or LAG on which the hosted connections are\n            provisioned.</p>\n         <p>Example: dxcon-abc123 or dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeHostedConnections operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeHostedConnections operation.</p>\n      ",
        "shape_name": "DescribeHostedConnectionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of connections.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of connections.</p>\n      ",
        "shape_name": "Connections"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of hosted connections that have been provisioned on the given\n            interconnect or link aggregation group (LAG).</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "AssociateHostedConnection": {
      "name": "AssociateHostedConnection",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the hosted connection.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the hosted connection.</p>\n         <p>Example: dxcon-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "parentConnectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the interconnect or the LAG.</simpara>\n         <simpara>Example: dxcon-abc123 or dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the interconnect or the LAG.</p>\n         <p>Example: dxcon-abc123 or dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AssociateHostedConnection operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AssociateHostedConnection operation.</p>\n      ",
        "shape_name": "AssociateHostedConnectionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Associates a hosted connection and its virtual interfaces with a link aggregation\n            group (LAG) or interconnect. If the target interconnect or LAG has an existing hosted\n            connection with a conflicting VLAN number or IP address, the operation fails. This\n            action temporarily interrupts the hosted connection's connectivity to AWS as it is being\n            migrated.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      "
    },
    "ConfirmConnection": {
      "name": "ConfirmConnection",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the ConfirmConnection operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the ConfirmConnection operation.</p>\n      ",
        "shape_name": "ConfirmConnectionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when ConfirmConnection is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when ConfirmConnection is called.</p>\n      ",
        "shape_name": "ConfirmConnectionResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Confirm the creation of a hosted connection on an interconnect.</p>\n         <p>Upon creation, the hosted connection is initially in the 'Ordering' state, and will remain in this state until the owner calls ConfirmConnection to confirm creation of the hosted connection.</p>\n      "
    },
    "TagResource": {
      "name": "TagResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the Direct Connect resource.</simpara>\n         <simpara>Example: arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the Direct Connect resource.</p>\n         <p>Example: arn:aws:directconnect:us-east-1:123456789012:dxcon/dxcon-fg5678gh</p>\n      ",
            "required": true,
            "shape_name": "ResourceArn"
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of tags to add.</simpara>\n      ",
            "documentation": "\n         <p>The list of tags to add.</p>\n      ",
            "required": true,
            "shape_name": "TagList",
            "min_length": 1,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The key of the tag.</simpara>\n      ",
                  "documentation": "\n         <p>The key of the tag.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 128
                },
                "value": {
                  "type": "string",
                  "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                  "zonbookDocumentation": "\n         <simpara>The value of the tag.</simpara>\n      ",
                  "documentation": "\n         <p>The value of the tag.</p>\n      ",
                  "shape_name": "TagValue",
                  "min_length": 0,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <simpara>Information about a tag.</simpara>\n      ",
              "documentation": "\n         <p>Information about a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the TagResource operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the TagResource operation.</p>\n      ",
        "shape_name": "TagResourceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The response received when TagResource is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when TagResource is called.</p>\n      ",
        "shape_name": "TagResourceResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <simpara>A tag key was specified more than once.</simpara>\n      ",
          "documentation": "\n         <p>A tag key was specified more than once.</p>\n      ",
          "shape_name": "DuplicateTagKeysException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <simpara>You have reached the limit on the number of tags that can be assigned to a Direct Connect resource.</simpara>\n      ",
          "documentation": "\n         <p>You have reached the limit on the number of tags that can be assigned to a Direct Connect resource.</p>\n      ",
          "shape_name": "TooManyTagsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Adds the specified tags to the specified Direct Connect resource. Each Direct Connect resource can have a maximum of 50 tags.</p>\n         <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the Direct Connect resource, this action updates its value.</p>\n      "
    },
    "DescribeTags": {
      "name": "DescribeTags",
      "input": {
        "type": "structure",
        "members": {
          "resourceArns": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Names (ARNs) of the Direct Connect resources.</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Names (ARNs) of the Direct Connect resources.</p>\n      ",
            "required": true,
            "shape_name": "ResourceArnList",
            "members": {
              "type": "string",
              "shape_name": "ResourceArn",
              "documentation": null
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeTags operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeTags operation.</p>\n      ",
        "shape_name": "DescribeTagsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "resourceTags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about the tags.</simpara>\n      ",
            "documentation": "\n         <p>Information about the tags.</p>\n      ",
            "shape_name": "ResourceTagList",
            "members": {
              "type": "structure",
              "members": {
                "resourceArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the Direct Connect resource.</simpara>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the Direct Connect resource.</p>\n      ",
                  "shape_name": "ResourceArn"
                },
                "tags": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>The tags.</simpara>\n      ",
                  "documentation": "\n         <p>The tags.</p>\n      ",
                  "shape_name": "TagList",
                  "min_length": 1,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "zonbookDocumentation": "\n         <simpara>The key of the tag.</simpara>\n      ",
                        "documentation": "\n         <p>The key of the tag.</p>\n      ",
                        "required": true,
                        "shape_name": "TagKey",
                        "min_length": 1,
                        "max_length": 128
                      },
                      "value": {
                        "type": "string",
                        "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
                        "zonbookDocumentation": "\n         <simpara>The value of the tag.</simpara>\n      ",
                        "documentation": "\n         <p>The value of the tag.</p>\n      ",
                        "shape_name": "TagValue",
                        "min_length": 0,
                        "max_length": 256
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>Information about a tag.</simpara>\n      ",
                    "documentation": "\n         <p>Information about a tag.</p>\n      ",
                    "shape_name": "Tag"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>The tags associated with a Direct Connect resource.</simpara>\n      ",
              "documentation": "\n         <p>The tags associated with a Direct Connect resource.</p>\n      ",
              "shape_name": "ResourceTag"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DescribeTags is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DescribeTags is called.</p>\n      ",
        "shape_name": "DescribeTagsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Describes the tags associated with the specified Direct Connect resources.</p>\n      "
    },
    "UntagResource": {
      "name": "UntagResource",
      "input": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Amazon Resource Name (ARN) of the Direct Connect resource.</simpara>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the Direct Connect resource.</p>\n      ",
            "required": true,
            "shape_name": "ResourceArn"
          },
          "tagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>The list of tag keys to remove.</simpara>\n      ",
            "documentation": "\n         <p>The list of tag keys to remove.</p>\n      ",
            "required": true,
            "shape_name": "TagKeyList",
            "members": {
              "type": "string",
              "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
              "shape_name": "TagKey",
              "documentation": null,
              "min_length": 1,
              "max_length": 128
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the UntagResource operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the UntagResource operation.</p>\n      ",
        "shape_name": "UntagResourceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara>The response received when UntagResource is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when UntagResource is called.</p>\n      ",
        "shape_name": "UntagResourceResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Removes one or more tags from the specified Direct Connect resource.</p>\n      "
    },
    "CreateBGPPeer": {
      "name": "CreateBGPPeer",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface on which the BGP peer will be provisioned.</simpara>\n         <simpara>Example: dxvif-456abc78</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface on which the BGP peer will be provisioned.</p>\n         <p>Example: dxvif-456abc78</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "newBGPPeer": {
            "type": "structure",
            "members": {
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "shape_name": "ASN"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Detailed information for the BGP peer to be created.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Detailed information for the BGP peer to be created.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "NewBGPPeer"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateBGPPeer operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateBGPPeer operation.</p>\n      ",
        "shape_name": "CreateBGPPeerRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterface": {
            "type": "structure",
            "members": {
              "ownerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "virtualInterfaceId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "VirtualInterfaceId"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "LocationCode"
              },
              "connectionId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "ConnectionId"
              },
              "virtualInterfaceType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
                "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
                "shape_name": "VirtualInterfaceType"
              },
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "shape_name": "ASN"
              },
              "amazonSideAsn": {
                "type": "long",
                "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                "shape_name": "LongAsn"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "virtualInterfaceState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "confirming",
                  "verifying",
                  "pending",
                  "available",
                  "down",
                  "deleting",
                  "deleted",
                  "rejected"
                ],
                "shape_name": "VirtualInterfaceState"
              },
              "customerRouterConfig": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
                "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
                "shape_name": "RouterConfig"
              },
              "virtualGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                "shape_name": "VirtualGatewayId"
              },
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "routeFilterPrefixes": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
                "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
                "shape_name": "RouteFilterPrefixList",
                "members": {
                  "type": "structure",
                  "members": {
                    "cidr": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                      "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                      "shape_name": "CIDR"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
                  "shape_name": "RouteFilterPrefix"
                }
              },
              "bgpPeers": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
                "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
                "shape_name": "BGPPeerList",
                "members": {
                  "type": "structure",
                  "members": {
                    "asn": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                      "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                      "shape_name": "ASN"
                    },
                    "authKey": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                      "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                      "shape_name": "BGPAuthKey"
                    },
                    "addressFamily": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ],
                      "shape_name": "AddressFamily"
                    },
                    "amazonAddress": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                      "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                      "shape_name": "AmazonAddress"
                    },
                    "customerAddress": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                      "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                      "shape_name": "CustomerAddress"
                    },
                    "bgpPeerState": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "verifying",
                        "pending",
                        "available",
                        "deleting",
                        "deleted"
                      ],
                      "shape_name": "BGPPeerState"
                    },
                    "bgpStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "up",
                        "down"
                      ],
                      "shape_name": "BGPStatus"
                    },
                    "awsDeviceV2": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                      "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                      "shape_name": "AwsDeviceV2"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
                  "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
                  "shape_name": "BGPPeer"
                }
              },
              "region": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "Region"
              },
              "awsDeviceV2": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
                "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
                "shape_name": "AwsDeviceV2"
              }
            },
            "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
            "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
            "shape_name": "VirtualInterface"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when CreateBGPPeer is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when CreateBGPPeer is called.</p>\n      ",
        "shape_name": "CreateBGPPeerResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new BGP peer on a specified virtual interface. The BGP peer cannot be in the same address family (IPv4/IPv6) of an existing BGP peer on the virtual interface.</p>\n         <p>You must create a BGP peer for the corresponding address family in order to access AWS resources that also use that address family.</p>\n         <p>When creating a IPv6 BGP peer, the Amazon address and customer address fields must be left blank. IPv6 addresses are automatically assigned from Amazon's pool of IPv6 addresses; you cannot specify custom IPv6 addresses.</p>\n         <p>For a public virtual interface, the Autonomous System Number (ASN) must be private or already whitelisted for the virtual interface.</p>\n      "
    },
    "DeleteBGPPeer": {
      "name": "DeleteBGPPeer",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface from which the BGP peer will be deleted.</simpara>\n         <simpara>Example: dxvif-456abc78</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface from which the BGP peer will be deleted.</p>\n         <p>Example: dxvif-456abc78</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteBGPPeer operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteBGPPeer operation.</p>\n      ",
        "shape_name": "DeleteBGPPeerRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "virtualInterface": {
            "type": "structure",
            "members": {
              "ownerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "virtualInterfaceId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "VirtualInterfaceId"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "LocationCode"
              },
              "connectionId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "ConnectionId"
              },
              "virtualInterfaceType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
                "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
                "shape_name": "VirtualInterfaceType"
              },
              "virtualInterfaceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
                "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
                "shape_name": "VirtualInterfaceName"
              },
              "vlan": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                "shape_name": "VLAN"
              },
              "asn": {
                "type": "integer",
                "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                "shape_name": "ASN"
              },
              "amazonSideAsn": {
                "type": "long",
                "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                "shape_name": "LongAsn"
              },
              "authKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                "shape_name": "BGPAuthKey"
              },
              "amazonAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                "shape_name": "AmazonAddress"
              },
              "customerAddress": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                "shape_name": "CustomerAddress"
              },
              "addressFamily": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "ipv4",
                  "ipv6"
                ],
                "shape_name": "AddressFamily"
              },
              "virtualInterfaceState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "confirming",
                  "verifying",
                  "pending",
                  "available",
                  "down",
                  "deleting",
                  "deleted",
                  "rejected"
                ],
                "shape_name": "VirtualInterfaceState"
              },
              "customerRouterConfig": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
                "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
                "shape_name": "RouterConfig"
              },
              "virtualGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                "shape_name": "VirtualGatewayId"
              },
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "routeFilterPrefixes": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
                "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
                "shape_name": "RouteFilterPrefixList",
                "members": {
                  "type": "structure",
                  "members": {
                    "cidr": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                      "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                      "shape_name": "CIDR"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
                  "shape_name": "RouteFilterPrefix"
                }
              },
              "bgpPeers": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
                "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
                "shape_name": "BGPPeerList",
                "members": {
                  "type": "structure",
                  "members": {
                    "asn": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                      "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                      "shape_name": "ASN"
                    },
                    "authKey": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                      "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                      "shape_name": "BGPAuthKey"
                    },
                    "addressFamily": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ],
                      "shape_name": "AddressFamily"
                    },
                    "amazonAddress": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                      "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                      "shape_name": "AmazonAddress"
                    },
                    "customerAddress": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                      "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                      "shape_name": "CustomerAddress"
                    },
                    "bgpPeerState": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "verifying",
                        "pending",
                        "available",
                        "deleting",
                        "deleted"
                      ],
                      "shape_name": "BGPPeerState"
                    },
                    "bgpStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                      "enum": [
                        "up",
                        "down"
                      ],
                      "shape_name": "BGPStatus"
                    },
                    "awsDeviceV2": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                      "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                      "shape_name": "AwsDeviceV2"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
                  "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
                  "shape_name": "BGPPeer"
                }
              },
              "region": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "Region"
              },
              "awsDeviceV2": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
                "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
                "shape_name": "AwsDeviceV2"
              }
            },
            "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
            "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
            "shape_name": "VirtualInterface"
          }
        },
        "zonbookDocumentation": "\n         <simpara>The response received when DeleteBGPPeer is called.</simpara>\n      ",
        "documentation": "\n         <p>The response received when DeleteBGPPeer is called.</p>\n      ",
        "shape_name": "DeleteBGPPeerResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes a BGP peer on the specified virtual interface that matches the specified customer address and ASN. You cannot delete the last BGP peer from a virtual interface.</p>\n      "
    },
    "CreateLag": {
      "name": "CreateLag",
      "input": {
        "type": "structure",
        "members": {
          "numberOfConnections": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of physical connections initially provisioned and bundled by the LAG.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The number of physical connections initially provisioned and bundled by the LAG.</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "Count"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS Direct Connect location in which the LAG should be allocated.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS Direct Connect location in which the LAG should be allocated.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LocationCode"
          },
          "connectionsBandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The bandwidth of the individual physical connections bundled by the LAG.</simpara>\n         <simpara>Default: None</simpara>\n         <simpara>Available values: 1Gbps, 10Gbps</simpara>\n      ",
            "documentation": "\n         <p>The bandwidth of the individual physical connections bundled by the LAG.</p>\n         <p>Default: None</p>\n         <p>Available values: 1Gbps, 10Gbps</p>\n      ",
            "required": true,
            "shape_name": "Bandwidth"
          },
          "lagName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the LAG.</simpara>\n         <simpara>Example: \"<code>3x10G LAG to AWS</code>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the LAG.</p>\n         <p>Example: \"<code>3x10G LAG to AWS</code>\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LagName"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of an existing connection to migrate to the LAG.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of an existing connection to migrate to the LAG.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateLag operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateLag operation.</p>\n      ",
        "shape_name": "CreateLagRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connectionsBandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The individual bandwidth of the physical connections bundled by the LAG.</simpara>\n         <simpara>Available values: 1Gbps, 10Gbps</simpara>\n      ",
            "documentation": "\n         <p>The individual bandwidth of the physical connections bundled by the LAG.</p>\n         <p>Available values: 1Gbps, 10Gbps</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "numberOfConnections": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of physical connections bundled by the LAG, up to a maximum of 10.</simpara>\n      ",
            "documentation": "\n         <p>The number of physical connections bundled by the LAG, up to a maximum of 10.</p>\n      ",
            "shape_name": "Count"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The owner of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The owner of the LAG.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "lagName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The name of the LAG.</p>\n      ",
            "shape_name": "LagName"
          },
          "lagState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The state of the LAG.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The LAG has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is established, and the LAG is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The LAG is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The LAG has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The state of the LAG.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The LAG has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is established, and the LAG is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The LAG is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The LAG has been deleted.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted"
            ],
            "shape_name": "LagState"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "minimumLinks": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</simpara>\n      ",
            "documentation": "\n         <p>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</p>\n      ",
            "shape_name": "Count"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          },
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections bundled by this LAG.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections bundled by this LAG.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          },
          "allowsHostedConnections": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Indicates whether the LAG can host other connections.</simpara>\n         <note>\n            <simpara>This is intended for use by AWS Direct Connect partners only.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>Indicates whether the LAG can host other connections.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      ",
            "shape_name": "BooleanFlag"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</simpara>\n      ",
        "documentation": "\n         <p>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</p>\n      ",
        "shape_name": "Lag"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new link aggregation group (LAG) with the specified number of bundled\n            physical connections between the customer network and a specific AWS Direct Connect\n            location. A LAG is a logical interface that uses the Link Aggregation Control Protocol\n            (LACP) to aggregate multiple 1 gigabit or 10 gigabit interfaces, allowing you to treat\n            them as a single interface.</p>\n         <p>All connections in a LAG must use the same bandwidth (for example, 10 Gbps), and must terminate at the same AWS Direct Connect endpoint.</p>\n         <p>You can have up to 10 connections per LAG. Regardless of this limit, if you request more connections for the LAG than AWS Direct Connect can allocate on a single endpoint, no LAG is created.</p>\n         <p>You can specify an existing physical connection or interconnect to include in the LAG\n            (which counts towards the total number of connections). Doing so interrupts the current\n            physical connection or hosted connections, and re-establishes them as a member of the\n            LAG. The LAG will be created on the same AWS Direct Connect endpoint to which the\n            connection terminates. Any virtual interfaces associated with the connection are\n            automatically disassociated and re-associated with the LAG. The connection ID does not\n            change.</p>\n         <p>If the AWS account used to create a LAG is a registered AWS Direct Connect partner, the LAG is automatically enabled to host sub-connections. For a LAG owned by a partner, any associated virtual interfaces cannot be directly configured.</p>\n      "
    },
    "DescribeLags": {
      "name": "DescribeLags",
      "input": {
        "type": "structure",
        "members": {
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeLags operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeLags operation.</p>\n      ",
        "shape_name": "DescribeLagsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "lags": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of LAGs.</simpara>\n      ",
            "documentation": "\n         <p>A list of LAGs.</p>\n      ",
            "shape_name": "LagList",
            "members": {
              "type": "structure",
              "members": {
                "connectionsBandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The individual bandwidth of the physical connections bundled by the LAG.</simpara>\n         <simpara>Available values: 1Gbps, 10Gbps</simpara>\n      ",
                  "documentation": "\n         <p>The individual bandwidth of the physical connections bundled by the LAG.</p>\n         <p>Available values: 1Gbps, 10Gbps</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "numberOfConnections": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The number of physical connections bundled by the LAG, up to a maximum of 10.</simpara>\n      ",
                  "documentation": "\n         <p>The number of physical connections bundled by the LAG, up to a maximum of 10.</p>\n      ",
                  "shape_name": "Count"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The owner of the LAG.</simpara>\n      ",
                  "documentation": "\n        <p>The owner of the LAG.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "lagName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the LAG.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the LAG.</p>\n      ",
                  "shape_name": "LagName"
                },
                "lagState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the LAG.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The LAG has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is established, and the LAG is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The LAG is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The LAG has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the LAG.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The LAG has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is established, and the LAG is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The LAG is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The LAG has been deleted.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "LagState"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "minimumLinks": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</simpara>\n      ",
                  "documentation": "\n         <p>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</p>\n      ",
                  "shape_name": "Count"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                },
                "connections": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of connections bundled by this LAG.</simpara>\n      ",
                  "documentation": "\n         <p>A list of connections bundled by this LAG.</p>\n      ",
                  "shape_name": "ConnectionList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "ownerAccount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                        "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                        "shape_name": "OwnerAccount"
                      },
                      "connectionId": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                        "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                        "shape_name": "ConnectionId"
                      },
                      "connectionName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                        "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                        "shape_name": "ConnectionName"
                      },
                      "connectionState": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                        "enum": [
                          "ordering",
                          "requested",
                          "pending",
                          "available",
                          "down",
                          "deleting",
                          "deleted",
                          "rejected"
                        ],
                        "shape_name": "ConnectionState"
                      },
                      "region": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                        "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                        "shape_name": "Region"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                        "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                        "shape_name": "LocationCode"
                      },
                      "bandwidth": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                        "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                        "shape_name": "Bandwidth"
                      },
                      "vlan": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                        "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                        "shape_name": "VLAN"
                      },
                      "partnerName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                        "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                        "shape_name": "PartnerName"
                      },
                      "loaIssueTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                        "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                        "shape_name": "LoaIssueTime"
                      },
                      "lagId": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                        "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                        "shape_name": "LagId"
                      },
                      "awsDevice": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                        "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                        "deprecated": true,
                        "shape_name": "AwsDevice"
                      },
                      "awsDeviceV2": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                        "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                        "shape_name": "AwsDeviceV2"
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
                    "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
                    "shape_name": "Connection"
                  }
                },
                "allowsHostedConnections": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <simpara>Indicates whether the LAG can host other connections.</simpara>\n         <note>\n            <simpara>This is intended for use by AWS Direct Connect partners only.</simpara>\n         </note>\n      ",
                  "documentation": "\n         <p>Indicates whether the LAG can host other connections.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      ",
                  "shape_name": "BooleanFlag"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</simpara>\n      ",
              "documentation": "\n         <p>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</p>\n      ",
              "shape_name": "Lag"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara>A structure containing a list of LAGs.</simpara>\n      ",
        "documentation": "\n         <p>A structure containing a list of LAGs.</p>\n      ",
        "shape_name": "Lags"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Describes the link aggregation groups (LAGs) in your account. </p>\n         <p>If a LAG ID is provided, only information about the specified LAG is returned.</p>\n      "
    },
    "UpdateLag": {
      "name": "UpdateLag",
      "input": {
        "type": "structure",
        "members": {
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG to update.</simpara>\n         <simpara>Example: dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG to update.</p>\n         <p>Example: dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LagId"
          },
          "lagName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name for the LAG.</simpara>\n         <simpara>Example: \"<code>3x10G LAG to AWS</code>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name for the LAG.</p>\n         <p>Example: \"<code>3x10G LAG to AWS</code>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LagName"
          },
          "minimumLinks": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The minimum number of physical connections that must be operational for the LAG itself to be operational.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The minimum number of physical connections that must be operational for the LAG itself to be operational.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Count"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the UpdateLag operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the UpdateLag operation.</p>\n      ",
        "shape_name": "UpdateLagRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connectionsBandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The individual bandwidth of the physical connections bundled by the LAG.</simpara>\n         <simpara>Available values: 1Gbps, 10Gbps</simpara>\n      ",
            "documentation": "\n         <p>The individual bandwidth of the physical connections bundled by the LAG.</p>\n         <p>Available values: 1Gbps, 10Gbps</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "numberOfConnections": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of physical connections bundled by the LAG, up to a maximum of 10.</simpara>\n      ",
            "documentation": "\n         <p>The number of physical connections bundled by the LAG, up to a maximum of 10.</p>\n      ",
            "shape_name": "Count"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The owner of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The owner of the LAG.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "lagName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The name of the LAG.</p>\n      ",
            "shape_name": "LagName"
          },
          "lagState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The state of the LAG.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The LAG has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is established, and the LAG is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The LAG is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The LAG has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The state of the LAG.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The LAG has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is established, and the LAG is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The LAG is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The LAG has been deleted.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted"
            ],
            "shape_name": "LagState"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "minimumLinks": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</simpara>\n      ",
            "documentation": "\n         <p>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</p>\n      ",
            "shape_name": "Count"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          },
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections bundled by this LAG.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections bundled by this LAG.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          },
          "allowsHostedConnections": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Indicates whether the LAG can host other connections.</simpara>\n         <note>\n            <simpara>This is intended for use by AWS Direct Connect partners only.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>Indicates whether the LAG can host other connections.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      ",
            "shape_name": "BooleanFlag"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</simpara>\n      ",
        "documentation": "\n         <p>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</p>\n      ",
        "shape_name": "Lag"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Updates the attributes of a link aggregation group (LAG). </p>\n         <p>You can update the following attributes: </p>\n        <ul>\n            <li>\n                <p>The name of the LAG.</p>\n            </li>\n            <li>\n                <p>The value for the minimum number of connections that must be operational\n                    for the LAG itself to be operational. </p>\n            </li>\n         </ul>\n        <p>When you create a LAG, the default value for the minimum number of operational\n            connections is zero (0). If you update this value, and the number of operational\n            connections falls below the specified value, the LAG will automatically go down to avoid\n            overutilization of the remaining connections. Adjusting this value should be done with\n            care as it could force the LAG down if the value is set higher than the current number\n            of operational connections.</p>\n      "
    },
    "DeleteLag": {
      "name": "DeleteLag",
      "input": {
        "type": "structure",
        "members": {
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG to delete.</simpara>\n         <simpara>Example: dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG to delete.</p>\n         <p>Example: dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteLag operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteLag operation.</p>\n      ",
        "shape_name": "DeleteLagRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "connectionsBandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The individual bandwidth of the physical connections bundled by the LAG.</simpara>\n         <simpara>Available values: 1Gbps, 10Gbps</simpara>\n      ",
            "documentation": "\n         <p>The individual bandwidth of the physical connections bundled by the LAG.</p>\n         <p>Available values: 1Gbps, 10Gbps</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "numberOfConnections": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The number of physical connections bundled by the LAG, up to a maximum of 10.</simpara>\n      ",
            "documentation": "\n         <p>The number of physical connections bundled by the LAG, up to a maximum of 10.</p>\n      ",
            "shape_name": "Count"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The owner of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The owner of the LAG.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "lagName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the LAG.</simpara>\n      ",
            "documentation": "\n        <p>The name of the LAG.</p>\n      ",
            "shape_name": "LagName"
          },
          "lagState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The state of the LAG.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The LAG has been approved, and is being\n          initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is established, and the LAG is ready for\n          use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The LAG is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The LAG has been deleted.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The state of the LAG.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a LAG. The LAG stays in the\n          requested state until the Letter of Authorization (LOA) is available.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The LAG has been approved, and is being\n          initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is established, and the LAG is ready for\n          use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The LAG is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The LAG has been deleted.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted"
            ],
            "shape_name": "LagState"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "minimumLinks": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</simpara>\n      ",
            "documentation": "\n         <p>The minimum number of physical connections that must be operational for the LAG itself to be operational. If the number of operational connections drops below this setting, the LAG state changes to <code>down</code>. This value can help to ensure that a LAG is not overutilized if a significant number of its bundled connections go down.</p>\n      ",
            "shape_name": "Count"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS Direct Connection endpoint that hosts the LAG.</simpara>\n      ",
            "documentation": "\n         <p>The AWS Direct Connection endpoint that hosts the LAG.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          },
          "connections": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of connections bundled by this LAG.</simpara>\n      ",
            "documentation": "\n         <p>A list of connections bundled by this LAG.</p>\n      ",
            "shape_name": "ConnectionList",
            "members": {
              "type": "structure",
              "members": {
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "connectionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionId"
                },
                "connectionName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "ConnectionName"
                },
                "connectionState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ordering",
                    "requested",
                    "pending",
                    "available",
                    "down",
                    "deleting",
                    "deleted",
                    "rejected"
                  ],
                  "shape_name": "ConnectionState"
                },
                "region": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Region"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "LocationCode"
                },
                "bandwidth": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "Bandwidth"
                },
                "vlan": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
                  "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
                  "shape_name": "VLAN"
                },
                "partnerName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
                  "shape_name": "PartnerName"
                },
                "loaIssueTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
                  "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
                  "shape_name": "LoaIssueTime"
                },
                "lagId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
                  "shape_name": "LagId"
                },
                "awsDevice": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "deprecated": true,
                  "shape_name": "AwsDevice"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
              "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
              "shape_name": "Connection"
            }
          },
          "allowsHostedConnections": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <simpara>Indicates whether the LAG can host other connections.</simpara>\n         <note>\n            <simpara>This is intended for use by AWS Direct Connect partners only.</simpara>\n         </note>\n      ",
            "documentation": "\n         <p>Indicates whether the LAG can host other connections.</p>\n         <note>\n            <p>This is intended for use by AWS Direct Connect partners only.</p>\n         </note>\n      ",
            "shape_name": "BooleanFlag"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</simpara>\n      ",
        "documentation": "\n         <p>Describes a link aggregation group (LAG). A LAG is a connection that uses the Link Aggregation Control Protocol (LACP) to logically aggregate a bundle of physical connections. Like an interconnect, it can host other connections. All connections in a LAG must terminate on the same physical AWS Direct Connect endpoint, and must be the same bandwidth.</p>\n      ",
        "shape_name": "Lag"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes a link aggregation group (LAG). You cannot delete a LAG if it has active\n            virtual interfaces or hosted connections.</p>\n      "
    },
    "AssociateConnectionWithLag": {
      "name": "AssociateConnectionWithLag",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection.</p>\n         <p>Example: dxcon-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG with which to associate the connection.</simpara>\n         <simpara>Example: dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG with which to associate the connection.</p>\n         <p>Example: dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AssociateConnectionWithLag operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AssociateConnectionWithLag operation.</p>\n      ",
        "shape_name": "AssociateConnectionWithLagRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Associates an existing connection with a link aggregation group (LAG). The connection\n            is interrupted and re-established as a member of the LAG (connectivity to AWS will be\n            interrupted). The connection must be hosted on the same AWS Direct Connect endpoint as\n            the LAG, and its bandwidth must match the bandwidth for the LAG. You can reassociate a\n            connection that's currently associated with a different LAG; however, if removing the\n            connection will cause the original LAG to fall below its setting for minimum number of\n            operational connections, the request fails.</p>\n         <p>Any virtual interfaces that are directly associated with the connection are\n            automatically re-associated with the LAG. If the connection was originally associated\n            with a different LAG, the virtual interfaces remain associated with the original\n            LAG.</p>\n         <p>For interconnects, any hosted connections are automatically re-associated with the\n            LAG. If the interconnect was originally associated with a different LAG, the hosted\n            connections remain associated with the original LAG.</p>\n      "
    },
    "DisassociateConnectionFromLag": {
      "name": "DisassociateConnectionFromLag",
      "input": {
        "type": "structure",
        "members": {
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection to disassociate from the LAG.</simpara>\n         <simpara>Example: dxcon-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection to disassociate from the LAG.</p>\n         <p>Example: dxcon-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "LagId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DisassociateConnectionFromLag operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DisassociateConnectionFromLag operation.</p>\n      ",
        "shape_name": "DisassociateConnectionFromLagRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new connection.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new connection.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "connectionName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the connection.</simpara>\n         <simpara>Example: \"<emphasis>My Connection to AWS</emphasis>\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the connection.</p>\n         <p>Example: \"<i>My Connection to AWS</i>\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionName"
          },
          "connectionState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the connection.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Ordering</emphasis>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Requested</emphasis>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The connection has been approved, and is being initialized.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The network link is up, and the connection is ready for use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The network link is down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The connection is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The connection has been deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the connection.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Ordering</b>: The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Requested</b>: The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The connection has been approved, and is being initialized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The network link is up, and the connection is ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The network link is down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The connection is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The connection has been deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>: A hosted connection in the 'Ordering' state will enter the 'Rejected' state if it is deleted by the end customer.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ordering",
              "requested",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "ConnectionState"
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the connection is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the connection is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "bandwidth": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Bandwidth of the connection.</simpara>\n         <simpara>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Bandwidth of the connection.</p>\n         <p>Example: 1Gbps (for regular connections), or 500Mbps (for hosted connections)</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Bandwidth"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "partnerName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the AWS Direct Connect service provider associated with the connection.</simpara>\n      ",
            "documentation": "\n         <p>The name of the AWS Direct Connect service provider associated with the connection.</p>\n      ",
            "shape_name": "PartnerName"
          },
          "loaIssueTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <simpara>The time of the most recent call to <xref linkend=\"DescribeLoa\"/> for this\n            connection.</simpara>\n      ",
            "documentation": "\n         <p>The time of the most recent call to <a>DescribeLoa</a> for this\n            connection.</p>\n      ",
            "shape_name": "LoaIssueTime"
          },
          "lagId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG.</simpara>\n         <simpara>Example: dxlag-fg5678gh</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG.</p>\n         <p>Example: dxlag-fg5678gh</p>\n      ",
            "shape_name": "LagId"
          },
          "awsDevice": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Deprecated in favor of awsDeviceV2.</simpara>\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>Deprecated in favor of awsDeviceV2.</p>\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "deprecated": true,
            "shape_name": "AwsDevice"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the physical connection terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the physical connection terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A connection represents the physical network connection between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "Connection"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Disassociates a connection from a link aggregation group (LAG). The connection is\n            interrupted and re-established as a standalone connection (the connection is not\n            deleted; to delete the connection, use the <a>DeleteConnection</a> request).\n            If the LAG has associated virtual interfaces or hosted connections, they remain\n            associated with the LAG. A disassociated connection owned by an AWS Direct Connect\n            partner is automatically converted to an interconnect.</p>\n         <p>If disassociating the connection will cause the LAG to fall below its setting for\n            minimum number of operational connections, the request fails, except when it's the last\n            member of the LAG. If all connections are disassociated, the LAG continues to exist as\n            an empty LAG with no physical connections. </p>\n      "
    },
    "AssociateVirtualInterface": {
      "name": "AssociateVirtualInterface",
      "input": {
        "type": "structure",
        "members": {
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualInterfaceId"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the LAG or connection with which to associate the virtual\n            interface.</simpara>\n         <simpara>Example: dxlag-abc123 or dxcon-abc123</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the LAG or connection with which to associate the virtual\n            interface.</p>\n         <p>Example: dxlag-abc123 or dxcon-abc123</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "ConnectionId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the AssociateVirtualInterface operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the AssociateVirtualInterface operation.</p>\n      ",
        "shape_name": "AssociateVirtualInterfaceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "ownerAccount": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS account that will own the new virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>The AWS account that will own the new virtual interface.</p>\n      ",
            "shape_name": "OwnerAccount"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "location": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Where the connection is located.</simpara>\n         <simpara>Example: EqSV5</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>Where the connection is located.</p>\n         <p>Example: EqSV5</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "LocationCode"
          },
          "connectionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</simpara>\n         <simpara>Example: dxcon-fg5678gh</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the connection. This field is also used as the ID type for operations\n            that use multiple connection types (LAG, interconnect, and/or connection).</p>\n         <p>Example: dxcon-fg5678gh</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "ConnectionId"
          },
          "virtualInterfaceType": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The type of virtual interface.</simpara>\n         <simpara>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</simpara>\n      ",
            "documentation": "\n         <p>The type of virtual interface.</p>\n         <p>Example: private (Amazon VPC) or public (Amazon S3, Amazon DynamoDB, and so on.)</p>\n      ",
            "shape_name": "VirtualInterfaceType"
          },
          "virtualInterfaceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the virtual interface assigned by the customer.</simpara>\n         <simpara>Example: \"My VPC\"</simpara>\n      ",
            "documentation": "\n         <p>The name of the virtual interface assigned by the customer.</p>\n         <p>Example: \"My VPC\"</p>\n      ",
            "shape_name": "VirtualInterfaceName"
          },
          "vlan": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The VLAN ID.</simpara>\n         <simpara>Example: 101</simpara>\n      ",
            "documentation": "\n         <p>The VLAN ID.</p>\n         <p>Example: 101</p>\n      ",
            "shape_name": "VLAN"
          },
          "asn": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
            "shape_name": "ASN"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
            "shape_name": "LongAsn"
          },
          "authKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
            "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
            "shape_name": "BGPAuthKey"
          },
          "amazonAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
            "shape_name": "AmazonAddress"
          },
          "customerAddress": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
            "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
            "shape_name": "CustomerAddress"
          },
          "addressFamily": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "ipv4",
              "ipv6"
            ],
            "shape_name": "AddressFamily"
          },
          "virtualInterfaceState": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>State of the virtual interface.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Confirming</emphasis>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: A virtual interface that is able to forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: A virtual interface that is BGP down.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  A virtual interface is in this state immediately after calling <xref linkend=\"DeleteVirtualInterface\"/> until it can no longer forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  A virtual interface that cannot forward traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Rejected</emphasis>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>State of the virtual interface.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Confirming</b>: The creation of the virtual interface is pending confirmation from the virtual interface owner.  If the owner of the virtual interface is different from the owner of the connection on which it is provisioned, then the virtual interface will remain in this state until it is confirmed by the virtual interface owner.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Verifying</b>: This state only applies to public virtual interfaces.  Each public virtual interface needs validation before the virtual interface can be created.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: A virtual interface is in this state from the time that it is created until the virtual interface is ready to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: A virtual interface that is able to forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: A virtual interface that is BGP down.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  A virtual interface is in this state immediately after calling <a>DeleteVirtualInterface</a> until it can no longer forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  A virtual interface that cannot forward traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Rejected</b>:  The virtual interface owner has declined creation of the virtual interface.  If a virtual interface in the 'Confirming' state is deleted by the virtual interface owner, the virtual interface will enter the 'Rejected' state.</p>\n            </li>\n         </ul>\n      ",
            "enum": [
              "confirming",
              "verifying",
              "pending",
              "available",
              "down",
              "deleting",
              "deleted",
              "rejected"
            ],
            "shape_name": "VirtualInterfaceState"
          },
          "customerRouterConfig": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Information for generating the customer router configuration.</simpara>\n      ",
            "documentation": "\n         <p>Information for generating the customer router configuration.</p>\n      ",
            "shape_name": "RouterConfig"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "routeFilterPrefixes": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of routes to be advertised to the AWS network in this region (public virtual interface).</simpara>\n      ",
            "documentation": "\n         <p>A list of routes to be advertised to the AWS network in this region (public virtual interface).</p>\n      ",
            "shape_name": "RouteFilterPrefixList",
            "members": {
              "type": "structure",
              "members": {
                "cidr": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>CIDR notation for the advertised route. Multiple routes are separated by commas.</simpara>\n         <simpara>IPv6 CIDRs must be at least a /64 or shorter</simpara>\n         <simpara>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</simpara>\n      ",
                  "documentation": "\n         <p>CIDR notation for the advertised route. Multiple routes are separated by commas.</p>\n         <p>IPv6 CIDRs must be at least a /64 or shorter</p>\n         <p>Example: 10.10.10.0/24,10.10.11.0/24,2001:db8::/64</p>\n      ",
                  "shape_name": "CIDR"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>A route filter prefix that the customer can advertise through Border Gateway Protocol (BGP) over a public virtual interface.</p>\n      ",
              "shape_name": "RouteFilterPrefix"
            }
          },
          "bgpPeers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of the BGP peers configured on this virtual interface.</simpara>\n      ",
            "documentation": "\n         <p>A list of the BGP peers configured on this virtual interface.</p>\n      ",
            "shape_name": "BGPPeerList",
            "members": {
              "type": "structure",
              "members": {
                "asn": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</simpara>\n         <simpara>Example: 65000</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system (AS) number for Border Gateway Protocol (BGP)\n            configuration.</p>\n         <p>Example: 65000</p>\n      ",
                  "shape_name": "ASN"
                },
                "authKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The authentication key for BGP configuration.</simpara>\n         <simpara>Example: asdf34example</simpara>\n      ",
                  "documentation": "\n         <p>The authentication key for BGP configuration.</p>\n         <p>Example: asdf34example</p>\n      ",
                  "shape_name": "BGPAuthKey"
                },
                "addressFamily": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Indicates the address family for the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv4</emphasis>: IPv4 address family</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">ipv6</emphasis>: IPv6 address family</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Indicates the address family for the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>ipv4</b>: IPv4 address family</p>\n            </li>\n            <li>\n               <p>\n                  <b>ipv6</b>: IPv6 address family</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "ipv4",
                    "ipv6"
                  ],
                  "shape_name": "AddressFamily"
                },
                "amazonAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the Amazon interface.</simpara>\n         <simpara>Example: 192.168.1.1/30 or 2001:db8::1/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the Amazon interface.</p>\n         <p>Example: 192.168.1.1/30 or 2001:db8::1/125</p>\n      ",
                  "shape_name": "AmazonAddress"
                },
                "customerAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>IP address assigned to the customer interface.</simpara>\n         <simpara>Example: 192.168.1.2/30 or 2001:db8::2/125</simpara>\n      ",
                  "documentation": "\n         <p>IP address assigned to the customer interface.</p>\n         <p>Example: 192.168.1.2/30 or 2001:db8::2/125</p>\n      ",
                  "shape_name": "CustomerAddress"
                },
                "bgpPeerState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Verifying</emphasis>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The BGP peer has been created, and is in this state until it is ready to be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The BGP peer can be established.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>:  The BGP peer is in the process of being deleted.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>:  The BGP peer has been deleted and cannot be established.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Verifying</b>: The BGP peering addresses or ASN require validation before the BGP peer can be created. This state only applies to BGP peers on a public virtual interface. </p>\n            </li>\n            <li>\n               <p>\n                  <b>Pending</b>: The BGP peer has been created, and is in this state until it is ready to be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The BGP peer can be established.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>:  The BGP peer is in the process of being deleted.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>:  The BGP peer has been deleted and cannot be established.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "verifying",
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "BGPPeerState"
                },
                "bgpStatus": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Up/Down state of the BGP peer.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Up</emphasis>: The BGP peer is established.</simpara>\n               <note>\n                  <simpara>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</simpara>\n               </note>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Down</emphasis>: The BGP peer is down.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The Up/Down state of the BGP peer.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Up</b>: The BGP peer is established.</p>\n               <note>\n                  <p>A state of <code>up</code> does not indicate the state of the routing function. Ensure that\n                        you are receiving routes over the BGP session.</p>\n               </note>\n            </li>\n            <li>\n               <p>\n                  <b>Down</b>: The BGP peer is down.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "up",
                    "down"
                  ],
                  "shape_name": "BGPStatus"
                },
                "awsDeviceV2": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the BGP peer terminates on.</simpara>\n      ",
                  "documentation": "\n         <p>The Direct Connection endpoint which the BGP peer terminates on.</p>\n      ",
                  "shape_name": "AwsDeviceV2"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A structure containing information about a BGP peer.</simpara>\n      ",
              "documentation": "\n         <p>A structure containing information about a BGP peer.</p>\n      ",
              "shape_name": "BGPPeer"
            }
          },
          "region": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The AWS region where the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The AWS region where the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "Region"
          },
          "awsDeviceV2": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The Direct Connection endpoint which the virtual interface terminates on.</simpara>\n      ",
            "documentation": "\n         <p>The Direct Connection endpoint which the virtual interface terminates on.</p>\n      ",
            "shape_name": "AwsDeviceV2"
          }
        },
        "zonbookDocumentation": "\n         <simpara>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</simpara>\n      ",
        "documentation": "\n         <p>A virtual interface (VLAN) transmits the traffic between the AWS Direct Connect location and the customer.</p>\n      ",
        "shape_name": "VirtualInterface"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Associates a virtual interface with a specified link aggregation group (LAG) or\n            connection. Connectivity to AWS is temporarily interrupted as the virtual interface is\n            being migrated. If the target connection or LAG has an associated virtual interface with\n            a conflicting VLAN number or a conflicting IP address, the operation fails. </p>\n        <p>Virtual interfaces associated with a hosted connection cannot be associated with a\n            LAG; hosted connections must be migrated along with their virtual interfaces using <a>AssociateHostedConnection</a>.</p>\n         <p>In order to reassociate a virtual interface to a new connection or LAG, the requester\n\t\t\tmust own either the virtual interface itself or the connection to which the virtual\n\t\t\tinterface is currently associated. Additionally, the requester must own the connection\n\t\t\tor LAG to which the virtual interface will be newly associated.</p>\n      "
    },
    "CreateDirectConnectGateway": {
      "name": "CreateDirectConnectGateway",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the direct connect gateway.</simpara>\n         <simpara>Example: \"My direct connect gateway\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The name of the direct connect gateway.</p>\n         <p>Example: \"My direct connect gateway\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "DirectConnectGatewayName"
          },
          "amazonSideAsn": {
            "type": "long",
            "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for Border Gateway Protocol (BGP) to be configured\n      on the Amazon side of the connection. The ASN must be in the private range of 64,512 to\n      65,534 or 4,200,000,000 to 4,294,967,294 </simpara>\n         <simpara>Example: 65200</simpara>\n         <simpara>Default: 64512</simpara>\n      ",
            "documentation": "\n         <p>The autonomous system number (ASN) for Border Gateway Protocol (BGP) to be configured\n      on the Amazon side of the connection. The ASN must be in the private range of 64,512 to\n      65,534 or 4,200,000,000 to 4,294,967,294 </p>\n         <p>Example: 65200</p>\n         <p>Default: 64512</p>\n      ",
            "shape_name": "LongAsn"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateDirectConnectGateway operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateDirectConnectGateway operation.</p>\n      ",
        "shape_name": "CreateDirectConnectGatewayRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGateway": {
            "type": "structure",
            "members": {
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "directConnectGatewayName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the direct connect gateway.</simpara>\n         <simpara>Example: \"My direct connect gateway\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The name of the direct connect gateway.</p>\n         <p>Example: \"My direct connect gateway\"</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "DirectConnectGatewayName"
              },
              "amazonSideAsn": {
                "type": "long",
                "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                "shape_name": "LongAsn"
              },
              "ownerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the direct connect gateway.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account ID of the owner of the direct connect gateway.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "directConnectGatewayState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The direct connect gateway is ready for\n                    use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The direct connect gateway is deleted and cannot\n                    pass traffic.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the direct connect gateway.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Pending</b>: The initial state after calling\n        <a>CreateDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The direct connect gateway is ready for\n                    use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The initial state after calling\n        <a>DeleteDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The direct connect gateway is deleted and cannot\n                    pass traffic.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "pending",
                  "available",
                  "deleting",
                  "deleted"
                ],
                "shape_name": "DirectConnectGatewayState"
              },
              "stateChangeError": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                "shape_name": "StateChangeError"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The direct connect gateway to be created.</simpara>\n      ",
            "documentation": "\n         <p>The direct connect gateway to be created.</p>\n      ",
            "shape_name": "DirectConnectGateway"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the CreateDirectConnectGateway API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the CreateDirectConnectGateway API call</p>\n      ",
        "shape_name": "CreateDirectConnectGatewayResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates a new direct connect gateway. A direct connect gateway is an intermediate\n            object that enables you to connect a set of virtual interfaces and virtual private\n            gateways. direct connect gateways are global and visible in any AWS region after they\n            are created. The virtual interfaces and virtual private gateways that are connected\n            through a direct connect gateway can be in different regions. This enables you to\n            connect to a VPC in any region, regardless of the region in which the virtual interfaces\n            are located, and pass traffic between them.</p>\n      "
    },
    "DeleteDirectConnectGateway": {
      "name": "DeleteDirectConnectGateway",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "DirectConnectGatewayId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteDirectConnectGateway operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteDirectConnectGateway operation.</p>\n      ",
        "shape_name": "DeleteDirectConnectGatewayRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGateway": {
            "type": "structure",
            "members": {
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "directConnectGatewayName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of the direct connect gateway.</simpara>\n         <simpara>Example: \"My direct connect gateway\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                "documentation": "\n         <p>The name of the direct connect gateway.</p>\n         <p>Example: \"My direct connect gateway\"</p>\n         <p>Default: None</p>\n      ",
                "shape_name": "DirectConnectGatewayName"
              },
              "amazonSideAsn": {
                "type": "long",
                "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                "shape_name": "LongAsn"
              },
              "ownerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the direct connect gateway.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account ID of the owner of the direct connect gateway.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "directConnectGatewayState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The direct connect gateway is ready for\n                    use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The direct connect gateway is deleted and cannot\n                    pass traffic.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the direct connect gateway.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Pending</b>: The initial state after calling\n        <a>CreateDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The direct connect gateway is ready for\n                    use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The initial state after calling\n        <a>DeleteDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The direct connect gateway is deleted and cannot\n                    pass traffic.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "pending",
                  "available",
                  "deleting",
                  "deleted"
                ],
                "shape_name": "DirectConnectGatewayState"
              },
              "stateChangeError": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                "shape_name": "StateChangeError"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The direct connect gateway to be deleted.</simpara>\n      ",
            "documentation": "\n         <p>The direct connect gateway to be deleted.</p>\n      ",
            "shape_name": "DirectConnectGateway"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the DeleteDirectConnectGateway API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the DeleteDirectConnectGateway API call</p>\n      ",
        "shape_name": "DeleteDirectConnectGatewayResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes a direct connect gateway. You must first delete all virtual interfaces that are\n            attached to the direct connect gateway and disassociate all virtual private gateways\n            that are associated with the direct connect gateway.</p>\n      "
    },
    "DescribeDirectConnectGateways": {
      "name": "DescribeDirectConnectGateways",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of direct connect gateways to return per page.</simpara>\n         <simpara>Example: 15</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of direct connect gateways to return per page.</p>\n         <p>Example: 15</p>\n         <p>Default: None</p>\n      ",
            "box": true,
            "shape_name": "MaxResultSetSize"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token provided in the previous describe result to retrieve the next page of the\n            result.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The token provided in the previous describe result to retrieve the next page of the\n            result.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeDirectConnectGateways operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeDirectConnectGateways operation.</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewaysRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGateways": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the direct connect gateways.</simpara>\n      ",
            "documentation": "\n        <p>Information about the direct connect gateways.</p>\n      ",
            "shape_name": "DirectConnectGatewayList",
            "members": {
              "type": "structure",
              "members": {
                "directConnectGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                  "shape_name": "DirectConnectGatewayId"
                },
                "directConnectGatewayName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of the direct connect gateway.</simpara>\n         <simpara>Example: \"My direct connect gateway\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The name of the direct connect gateway.</p>\n         <p>Example: \"My direct connect gateway\"</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "DirectConnectGatewayName"
                },
                "amazonSideAsn": {
                  "type": "long",
                  "zonbookDocumentation": "\n         <simpara>The autonomous system number (ASN) for the Amazon side of the connection.</simpara>\n      ",
                  "documentation": "\n         <p>The autonomous system number (ASN) for the Amazon side of the connection.</p>\n      ",
                  "shape_name": "LongAsn"
                },
                "ownerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the direct connect gateway.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account ID of the owner of the direct connect gateway.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "directConnectGatewayState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Pending</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Available</emphasis>: The direct connect gateway is ready for\n                    use.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleting</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGateway\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Deleted</emphasis>: The direct connect gateway is deleted and cannot\n                    pass traffic.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the direct connect gateway.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Pending</b>: The initial state after calling\n        <a>CreateDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Available</b>: The direct connect gateway is ready for\n                    use.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleting</b>: The initial state after calling\n        <a>DeleteDirectConnectGateway</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Deleted</b>: The direct connect gateway is deleted and cannot\n                    pass traffic.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "pending",
                    "available",
                    "deleting",
                    "deleted"
                  ],
                  "shape_name": "DirectConnectGatewayState"
                },
                "stateChangeError": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                  "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                  "shape_name": "StateChangeError"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A direct connect gateway is an intermediate object that enables you to connect\n            virtual interfaces and virtual private gateways.</simpara>\n      ",
              "documentation": "\n         <p>A direct connect gateway is an intermediate object that enables you to connect\n            virtual interfaces and virtual private gateways.</p>\n      ",
              "shape_name": "DirectConnectGateway"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Token to retrieve the next page of the result.</simpara>\n      ",
            "documentation": "\n         <p>Token to retrieve the next page of the result.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the DescribeDirectConnectGateways API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the DescribeDirectConnectGateways API call</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewaysResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of direct connect gateways in your account. Deleted direct connect\n            gateways are not returned. You can provide a direct connect gateway ID in the request to\n            return information about the specific direct connect gateway only. Otherwise, if a\n            direct connect gateway ID is not provided, information about all of your direct connect\n            gateways is returned. </p>\n      "
    },
    "CreateDirectConnectGatewayAssociation": {
      "name": "CreateDirectConnectGatewayAssociation",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "DirectConnectGatewayId"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway.</simpara>\n         <simpara>Example: \"vgw-abc123ef\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway.</p>\n         <p>Example: \"vgw-abc123ef\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualGatewayId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the CreateDirectConnectGatewayAssociation operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the CreateDirectConnectGatewayAssociation operation.</p>\n      ",
        "shape_name": "CreateDirectConnectGatewayAssociationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGatewayAssociation": {
            "type": "structure",
            "members": {
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "virtualGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                "shape_name": "VirtualGatewayId"
              },
              "virtualGatewayRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The region in which the virtual private gateway is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n      ",
                "documentation": "\n         <p>The region in which the virtual private gateway is located.</p>\n         <p>Example: us-east-1</p>\n      ",
                "shape_name": "VirtualGatewayRegion"
              },
              "virtualGatewayOwnerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the virtual private gateway.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account ID of the owner of the virtual private gateway.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "associationState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway association.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associating</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associated</emphasis>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociating</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociated</emphasis>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the direct connect gateway association.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Associating</b>: The initial state after calling\n        <a>CreateDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Associated</b>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: The initial state after calling\n        <a>DeleteDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociated</b>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "associating",
                  "associated",
                  "disassociating",
                  "disassociated"
                ],
                "shape_name": "DirectConnectGatewayAssociationState"
              },
              "stateChangeError": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                "shape_name": "StateChangeError"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The direct connect gateway association to be created.</simpara>\n      ",
            "documentation": "\n         <p>The direct connect gateway association to be created.</p>\n      ",
            "shape_name": "DirectConnectGatewayAssociation"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the CreateDirectConnectGatewayAssociation API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the CreateDirectConnectGatewayAssociation API call</p>\n      ",
        "shape_name": "CreateDirectConnectGatewayAssociationResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Creates an association between a direct connect gateway and a virtual private gateway\n            (VGW). The VGW must be attached to a VPC and must not be associated with another direct\n            connect gateway.</p>\n      "
    },
    "DeleteDirectConnectGatewayAssociation": {
      "name": "DeleteDirectConnectGatewayAssociation",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "DirectConnectGatewayId"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway.</simpara>\n         <simpara>Example: \"vgw-abc123ef\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway.</p>\n         <p>Example: \"vgw-abc123ef\"</p>\n         <p>Default: None</p>\n      ",
            "required": true,
            "shape_name": "VirtualGatewayId"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DeleteDirectConnectGatewayAssociation operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DeleteDirectConnectGatewayAssociation operation.</p>\n      ",
        "shape_name": "DeleteDirectConnectGatewayAssociationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGatewayAssociation": {
            "type": "structure",
            "members": {
              "directConnectGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                "shape_name": "DirectConnectGatewayId"
              },
              "virtualGatewayId": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                "shape_name": "VirtualGatewayId"
              },
              "virtualGatewayRegion": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The region in which the virtual private gateway is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n      ",
                "documentation": "\n         <p>The region in which the virtual private gateway is located.</p>\n         <p>Example: us-east-1</p>\n      ",
                "shape_name": "VirtualGatewayRegion"
              },
              "virtualGatewayOwnerAccount": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the virtual private gateway.</simpara>\n      ",
                "documentation": "\n         <p>The AWS account ID of the owner of the virtual private gateway.</p>\n      ",
                "shape_name": "OwnerAccount"
              },
              "associationState": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway association.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associating</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associated</emphasis>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociating</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociated</emphasis>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>State of the direct connect gateway association.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Associating</b>: The initial state after calling\n        <a>CreateDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Associated</b>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: The initial state after calling\n        <a>DeleteDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociated</b>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</p>\n            </li>\n         </ul>\n      ",
                "enum": [
                  "associating",
                  "associated",
                  "disassociating",
                  "disassociated"
                ],
                "shape_name": "DirectConnectGatewayAssociationState"
              },
              "stateChangeError": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                "shape_name": "StateChangeError"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The direct connect gateway association to be deleted.</simpara>\n      ",
            "documentation": "\n         <p>The direct connect gateway association to be deleted.</p>\n      ",
            "shape_name": "DirectConnectGatewayAssociation"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the DeleteDirectConnectGatewayAssociation API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the DeleteDirectConnectGatewayAssociation API call</p>\n      ",
        "shape_name": "DeleteDirectConnectGatewayAssociationResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Deletes the association between a direct connect gateway and a virtual private\n            gateway.</p>\n      "
    },
    "DescribeDirectConnectGatewayAssociations": {
      "name": "DescribeDirectConnectGatewayAssociations",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "virtualGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway.</simpara>\n         <simpara>Example: \"vgw-abc123ef\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual private gateway.</p>\n         <p>Example: \"vgw-abc123ef\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualGatewayId"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of direct connect gateway associations to return per\n            page.</simpara>\n         <simpara>Example: 15</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of direct connect gateway associations to return per\n            page.</p>\n         <p>Example: 15</p>\n         <p>Default: None</p>\n      ",
            "box": true,
            "shape_name": "MaxResultSetSize"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token provided in the previous describe result to retrieve the next page of the result.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The token provided in the previous describe result to retrieve the next page of the result.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeDirectConnectGatewayAssociations operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeDirectConnectGatewayAssociations operation.</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewayAssociationsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGatewayAssociations": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about the direct connect gateway associations.</simpara>\n      ",
            "documentation": "\n         <p>Information about the direct connect gateway associations.</p>\n      ",
            "shape_name": "DirectConnectGatewayAssociationList",
            "members": {
              "type": "structure",
              "members": {
                "directConnectGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                  "shape_name": "DirectConnectGatewayId"
                },
                "virtualGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</simpara>\n         <simpara>Example: vgw-123er56</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the virtual private gateway to a VPC. This only applies to private virtual interfaces.</p>\n         <p>Example: vgw-123er56</p>\n      ",
                  "shape_name": "VirtualGatewayId"
                },
                "virtualGatewayRegion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The region in which the virtual private gateway is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n      ",
                  "documentation": "\n         <p>The region in which the virtual private gateway is located.</p>\n         <p>Example: us-east-1</p>\n      ",
                  "shape_name": "VirtualGatewayRegion"
                },
                "virtualGatewayOwnerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the virtual private gateway.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account ID of the owner of the virtual private gateway.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "associationState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway association.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associating</emphasis>: The initial state after calling\n        <xref linkend=\"CreateDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Associated</emphasis>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociating</emphasis>: The initial state after calling\n        <xref linkend=\"DeleteDirectConnectGatewayAssociation\"/>.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Disassociated</emphasis>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the direct connect gateway association.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Associating</b>: The initial state after calling\n        <a>CreateDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Associated</b>: The direct connect gateway and virtual private\n                    gateway are successfully associated and ready to pass traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociating</b>: The initial state after calling\n        <a>DeleteDirectConnectGatewayAssociation</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Disassociated</b>: The virtual private gateway is successfully\n                    disassociated from the direct connect gateway. Traffic flow between the direct\n                    connect gateway and virtual private gateway stops.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "associating",
                    "associated",
                    "disassociating",
                    "disassociated"
                  ],
                  "shape_name": "DirectConnectGatewayAssociationState"
                },
                "stateChangeError": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                  "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                  "shape_name": "StateChangeError"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The association between a direct connect gateway and virtual private\n            gateway.</simpara>\n      ",
              "documentation": "\n         <p>The association between a direct connect gateway and virtual private\n            gateway.</p>\n      ",
              "shape_name": "DirectConnectGatewayAssociation"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Token to retrieve the next page of the result.</simpara>\n      ",
            "documentation": "\n         <p>Token to retrieve the next page of the result.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the DescribeDirectConnectGatewayAssociations API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the DescribeDirectConnectGatewayAssociations API call</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewayAssociationsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of all direct connect gateway and virtual private gateway (VGW)\n            associations. Either a direct connect gateway ID or a VGW ID must be provided in the\n            request. If a direct connect gateway ID is provided, the response returns all VGWs\n            associated with the direct connect gateway. If a VGW ID is provided, the response\n            returns all direct connect gateways associated with the VGW. If both are provided, the\n            response only returns the association that matches both the direct connect gateway and\n            the VGW.</p>\n      "
    },
    "DescribeDirectConnectGatewayAttachments": {
      "name": "DescribeDirectConnectGatewayAttachments",
      "input": {
        "type": "structure",
        "members": {
          "directConnectGatewayId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "DirectConnectGatewayId"
          },
          "virtualInterfaceId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: \"dxvif-abc123ef\"</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: \"dxvif-abc123ef\"</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "VirtualInterfaceId"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>The maximum number of direct connect gateway attachments to return per\n            page.</simpara>\n         <simpara>Example: 15</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The maximum number of direct connect gateway attachments to return per\n            page.</p>\n         <p>Example: 15</p>\n         <p>Default: None</p>\n      ",
            "box": true,
            "shape_name": "MaxResultSetSize"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The token provided in the previous describe result to retrieve the next page of the\n            result.</simpara>\n         <simpara>Default: None</simpara>\n      ",
            "documentation": "\n         <p>The token provided in the previous describe result to retrieve the next page of the\n            result.</p>\n         <p>Default: None</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the parameters to the DescribeDirectConnectGatewayAttachments operation.</simpara>\n      ",
        "documentation": "\n         <p>Container for the parameters to the DescribeDirectConnectGatewayAttachments operation.</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewayAttachmentsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "directConnectGatewayAttachments": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>Information about the direct connect gateway attachments.</simpara>\n      ",
            "documentation": "\n         <p>Information about the direct connect gateway attachments.</p>\n      ",
            "shape_name": "DirectConnectGatewayAttachmentList",
            "members": {
              "type": "structure",
              "members": {
                "directConnectGatewayId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the direct connect gateway.</simpara>\n         <simpara>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the direct connect gateway.</p>\n         <p>Example: \"abcd1234-dcba-5678-be23-cdef9876ab45\"</p>\n      ",
                  "shape_name": "DirectConnectGatewayId"
                },
                "virtualInterfaceId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The ID of the virtual interface.</simpara>\n         <simpara>Example: dxvif-123dfg56</simpara>\n         <simpara>Default: None</simpara>\n      ",
                  "documentation": "\n         <p>The ID of the virtual interface.</p>\n         <p>Example: dxvif-123dfg56</p>\n         <p>Default: None</p>\n      ",
                  "shape_name": "VirtualInterfaceId"
                },
                "virtualInterfaceRegion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The region in which the virtual interface is located.</simpara>\n         <simpara>Example: us-east-1</simpara>\n      ",
                  "documentation": "\n         <p>The region in which the virtual interface is located.</p>\n         <p>Example: us-east-1</p>\n      ",
                  "shape_name": "VirtualInterfaceRegion"
                },
                "virtualInterfaceOwnerAccount": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The AWS account ID of the owner of the virtual interface.</simpara>\n      ",
                  "documentation": "\n         <p>The AWS account ID of the owner of the virtual interface.</p>\n      ",
                  "shape_name": "OwnerAccount"
                },
                "attachmentState": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>State of the direct connect gateway attachment.</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Attaching</emphasis>: The initial state after a virtual interface is\n                    created using the direct connect gateway.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Attached</emphasis>: The direct connect gateway and virtual interface\n                    are successfully attached and ready to pass traffic.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Detaching</emphasis>: The initial state after calling <xref linkend=\"DeleteVirtualInterface\"/> on a virtual interface that is attached\n                    to a direct connect gateway.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <emphasis role=\"bold\">Detached</emphasis>: The virtual interface is successfully detached\n                    from the direct connect gateway. Traffic flow between the direct connect gateway\n                    and virtual interface stops.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>State of the direct connect gateway attachment.</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Attaching</b>: The initial state after a virtual interface is\n                    created using the direct connect gateway.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Attached</b>: The direct connect gateway and virtual interface\n                    are successfully attached and ready to pass traffic.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Detaching</b>: The initial state after calling <a>DeleteVirtualInterface</a> on a virtual interface that is attached\n                    to a direct connect gateway.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Detached</b>: The virtual interface is successfully detached\n                    from the direct connect gateway. Traffic flow between the direct connect gateway\n                    and virtual interface stops.</p>\n            </li>\n         </ul>\n      ",
                  "enum": [
                    "attaching",
                    "attached",
                    "detaching",
                    "detached"
                  ],
                  "shape_name": "DirectConnectGatewayAttachmentState"
                },
                "stateChangeError": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Error message when the state of an object fails to advance.</simpara>\n      ",
                  "documentation": "\n         <p>Error message when the state of an object fails to advance.</p>\n      ",
                  "shape_name": "StateChangeError"
                }
              },
              "zonbookDocumentation": "\n         <simpara>The association between a direct connect gateway and virtual interface.</simpara>\n      ",
              "documentation": "\n         <p>The association between a direct connect gateway and virtual interface.</p>\n      ",
              "shape_name": "DirectConnectGatewayAttachment"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>Token to retrieve the next page of the result.</simpara>\n      ",
            "documentation": "\n         <p>Token to retrieve the next page of the result.</p>\n      ",
            "shape_name": "PaginationToken"
          }
        },
        "zonbookDocumentation": "\n         <simpara>Container for the response from the DescribeDirectConnectGatewayAttachments API call</simpara>\n      ",
        "documentation": "\n         <p>Container for the response from the DescribeDirectConnectGatewayAttachments API call</p>\n      ",
        "shape_name": "DescribeDirectConnectGatewayAttachmentsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is a backend issue on the server side.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is a backend issue on the server side.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>A server-side error occurred during the API call. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>A server-side error occurred during the API call. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectServerException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n         <simpara>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</simpara>\n      ",
              "documentation": "\n         <p>This is an exception thrown when there is an issue with the input provided by the API call. For example, the name provided for a connection contains a pound sign (#). This can also occur when a valid value is provided, but is otherwise constrained. For example, the valid VLAN tag range is 1-4096 but each can only be used once per connection.</p>\n      ",
              "shape_name": "ErrorMessage"
            }
          },
          "zonbookDocumentation": "\n         <simpara>The API was called with invalid parameters. The error message will contain additional details about the cause.</simpara>\n      ",
          "documentation": "\n         <p>The API was called with invalid parameters. The error message will contain additional details about the cause.</p>\n      ",
          "shape_name": "DirectConnectClientException"
        }
      ],
      "documentation": "\n         <p>Returns a list of all direct connect gateway and virtual interface (VIF) attachments.\n            Either a direct connect gateway ID or a VIF ID must be provided in the request. If a\n            direct connect gateway ID is provided, the response returns all VIFs attached to the\n            direct connect gateway. If a VIF ID is provided, the response returns all direct connect\n            gateways attached to the VIF. If both are provided, the response only returns the\n            attachment that matches both the direct connect gateway and the VIF.</p>\n      "
    }
  }
}
