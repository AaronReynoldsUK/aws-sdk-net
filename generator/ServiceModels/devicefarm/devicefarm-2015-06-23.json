{
  "version": "1.0",
  "type": "json",
  "jsonVersion": "1.1",
  "signature_version": "v4",
  "service_full_name": "AWS Device Farm",
  "endpoint_prefix": "devicefarm",
  "service_id": "Device Farm",
  "uid": "devicefarm-2015-06-23",
  "api_version": "2015-06-23",
  "xmlnamespace": "http://devicefarm.amazonaws.com/doc/2015-06-23/",
  "target_prefix": "DeviceFarm_20150623",
  "documentation": "\n        <p>AWS Device Farm is a service that enables mobile app developers to test Android,\n            iOS, and Fire OS apps on physical phones, tablets, and other devices in the\n            cloud.</p>\n      ",
  "operations": {
    "CreateVPCEConfiguration": {
      "name": "CreateVPCEConfiguration",
      "input": {
        "type": "structure",
        "members": {
          "vpceConfigurationName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
            "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
            "required": true,
            "shape_name": "VPCEConfigurationName",
            "min_length": 0,
            "max_length": 1024
          },
          "vpceServiceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
            "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
            "required": true,
            "shape_name": "VPCEServiceName",
            "min_length": 0,
            "max_length": 2048
          },
          "serviceDnsName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The DNS name of the service running in your VPC that you want Device Farm to test.</para>\n      ",
            "documentation": "\n         <p>The DNS name of the service running in your VPC that you want Device Farm to test.</p>\n      ",
            "required": true,
            "shape_name": "ServiceDnsName",
            "min_length": 0,
            "max_length": 2048
          },
          "vpceConfigurationDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfigurationDescription",
            "min_length": 0,
            "max_length": 2048
          }
        },
        "shape_name": "CreateVPCEConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "vpceConfiguration": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "vpceConfigurationName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
                "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
                "shape_name": "VPCEConfigurationName",
                "min_length": 0,
                "max_length": 1024
              },
              "vpceServiceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
                "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
                "shape_name": "VPCEServiceName",
                "min_length": 0,
                "max_length": 2048
              },
              "serviceDnsName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The DNS name that maps to the private IP address of the service you want to access.</para>\n      ",
                "documentation": "\n         <p>The DNS name that maps to the private IP address of the service you want to access.</p>\n      ",
                "shape_name": "ServiceDnsName",
                "min_length": 0,
                "max_length": 2048
              },
              "vpceConfigurationDescription": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
                "shape_name": "VPCEConfigurationDescription",
                "min_length": 0,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfiguration"
          }
        },
        "shape_name": "CreateVPCEConfigurationResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint.</p>\n      "
    },
    "CreateDevicePool": {
      "name": "CreateDevicePool",
      "input": {
        "type": "structure",
        "members": {
          "projectArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the project for the device pool.</simpara>\n      ",
            "documentation": "\n        <p>The ARN of the project for the device pool.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The device pool's name.</simpara>\n      ",
            "documentation": "\n        <p>The device pool's name.</p>\n      ",
            "required": true,
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The device pool's description.</simpara>\n      ",
            "documentation": "\n        <p>The device pool's description.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "rules": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The device pool's rules.</simpara>\n      ",
            "documentation": "\n        <p>The device pool's rules.</p>\n      ",
            "required": true,
            "shape_name": "Rules",
            "members": {
              "type": "structure",
              "members": {
                "attribute": {
                  "type": "string",
                  "enum": [
                    "ARN",
                    "PLATFORM",
                    "FORM_FACTOR",
                    "MANUFACTURER",
                    "REMOTE_ACCESS_ENABLED",
                    "REMOTE_DEBUG_ENABLED",
                    "APPIUM_VERSION",
                    "INSTANCE_ARN",
                    "INSTANCE_LABELS",
                    "FLEET_TYPE"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceAttribute"
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "EQUALS",
                    "LESS_THAN",
                    "GREATER_THAN",
                    "IN",
                    "NOT_IN",
                    "CONTAINS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "RuleOperator"
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                  "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
              "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
              "shape_name": "Rule"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the create device pool operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the create device pool operation.</p>\n      ",
        "shape_name": "CreateDevicePoolRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "devicePool": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's name.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's description.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's description.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The device pool's type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The device pool's type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePoolType"
              },
              "rules": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>Information about the device pool's rules.</simpara>\n      ",
                "documentation": "\n        <p>Information about the device pool's rules.</p>\n      ",
                "shape_name": "Rules",
                "members": {
                  "type": "structure",
                  "members": {
                    "attribute": {
                      "type": "string",
                      "enum": [
                        "ARN",
                        "PLATFORM",
                        "FORM_FACTOR",
                        "MANUFACTURER",
                        "REMOTE_ACCESS_ENABLED",
                        "REMOTE_DEBUG_ENABLED",
                        "APPIUM_VERSION",
                        "INSTANCE_ARN",
                        "INSTANCE_LABELS",
                        "FLEET_TYPE"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceAttribute"
                    },
                    "operator": {
                      "type": "string",
                      "enum": [
                        "EQUALS",
                        "LESS_THAN",
                        "GREATER_THAN",
                        "IN",
                        "NOT_IN",
                        "CONTAINS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "RuleOperator"
                    },
                    "value": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                      "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
                  "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
                  "shape_name": "Rule"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>The newly created device pool.</simpara>\n      ",
            "documentation": "\n        <p>The newly created device pool.</p>\n      ",
            "shape_name": "DevicePool"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a create device pool request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a create device pool request.</p>\n      ",
        "shape_name": "CreateDevicePoolResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Creates a device pool.</p>\n      "
    },
    "CreateNetworkProfile": {
      "name": "CreateNetworkProfile",
      "input": {
        "type": "structure",
        "members": {
          "projectArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to create a\n            network profile.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to create a\n            network profile.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name you wish to specify for the new network profile.</simpara>\n      ",
            "documentation": "\n        <p>The name you wish to specify for the new network profile.</p>\n      ",
            "required": true,
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
            "documentation": "\n        <p>The description of the network profile.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "type": {
            "type": "string",
            "enum": [
              "CURATED",
              "PRIVATE"
            ],
            "zonbookDocumentation": "\n        <simpara>The type of network profile you wish to create. Valid values are listed\n            below.</simpara>\n      ",
            "documentation": "\n        <p>The type of network profile you wish to create. Valid values are listed\n            below.</p>\n      ",
            "shape_name": "NetworkProfileType"
          },
          "uplinkBandwidthBits": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
            "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkBandwidthBits": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
            "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkDelayMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
            "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkDelayMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
            "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkJitterMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
            "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkJitterMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
            "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkLossPercent": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
            "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
            "shape_name": "PercentInteger",
            "min_length": 0,
            "max_length": 100
          },
          "downlinkLossPercent": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
            "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
            "shape_name": "PercentInteger",
            "min_length": 0,
            "max_length": 100
          }
        },
        "shape_name": "CreateNetworkProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "networkProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                "shape_name": "NetworkProfileType"
              },
              "uplinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              },
              "downlinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              }
            },
            "zonbookDocumentation": "\n        <simpara>The network profile that is returned by the create network profile\n            request.</simpara>\n      ",
            "documentation": "\n        <p>The network profile that is returned by the create network profile\n            request.</p>\n      ",
            "shape_name": "NetworkProfile"
          }
        },
        "shape_name": "CreateNetworkProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Creates a network profile.</p>\n      "
    },
    "CreateInstanceProfile": {
      "name": "CreateInstanceProfile",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of your instance profile.</para>\n      ",
            "documentation": "\n         <p>The name of your instance profile.</p>\n      ",
            "required": true,
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The description of your instance profile.</para>\n      ",
            "documentation": "\n         <p>The description of your instance profile.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "packageCleanup": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
            "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
            "shape_name": "Boolean"
          },
          "excludeAppPackagesFromCleanup": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
            "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
            "shape_name": "PackageIds",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "rebootAfterUse": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para> \n      ",
            "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p> \n      ",
            "shape_name": "Boolean"
          }
        },
        "shape_name": "CreateInstanceProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "packageCleanup": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                "shape_name": "Boolean"
              },
              "excludeAppPackagesFromCleanup": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                "shape_name": "PackageIds",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "rebootAfterUse": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                "shape_name": "Boolean"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your instance profile.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your instance profile.</p>\n      ",
            "shape_name": "InstanceProfile"
          }
        },
        "shape_name": "CreateInstanceProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Creates a profile that can be applied to one or more private fleet device instances.</p>\n      "
    },
    "CreateProject": {
      "name": "CreateProject",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The project's name.</simpara>\n      ",
            "documentation": "\n        <p>The project's name.</p>\n      ",
            "required": true,
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "defaultJobTimeoutMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>Sets the execution timeout value (in minutes) for a project. All test runs in this\n            project will use the specified execution timeout value unless overridden when scheduling\n            a run.</simpara>\n      ",
            "documentation": "\n        <p>Sets the execution timeout value (in minutes) for a project. All test runs in this\n            project will use the specified execution timeout value unless overridden when scheduling\n            a run.</p>\n      ",
            "shape_name": "JobTimeoutMinutes"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the create project operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the create project operation.</p>\n      ",
        "shape_name": "CreateProjectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "project": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The project's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's name.</simpara>\n      ",
                "documentation": "\n        <p>The project's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "defaultJobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</simpara>\n      ",
                "documentation": "\n        <p>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the project was created.</simpara>\n      ",
                "documentation": "\n        <p>When the project was created.</p>\n      ",
                "shape_name": "DateTime"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The newly created project.</simpara>\n      ",
            "documentation": "\n        <p>The newly created project.</p>\n      ",
            "shape_name": "Project"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a create project request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a create project request.</p>\n      ",
        "shape_name": "CreateProjectResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Creates a new project.</p>\n      "
    },
    "CreateRemoteAccessSession": {
      "name": "CreateRemoteAccessSession",
      "input": {
        "type": "structure",
        "members": {
          "projectArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to create a remote\n            access session.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to create a remote\n            access session.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "deviceArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the device for which you want to create a remote\n            access session.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the device for which you want to create a remote\n            access session.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "instanceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "sshPublicKey": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The public key of the <code>ssh</code> key pair you want to use for connecting to\n            remote devices in your remote debugging session. This is only required if\n                <code>remoteDebugEnabled</code> is set to <code>true</code>.</simpara>\n      ",
            "documentation": "\n        <p>The public key of the <code>ssh</code> key pair you want to use for connecting to\n            remote devices in your remote debugging session. This is only required if\n                <code>remoteDebugEnabled</code> is set to <code>true</code>.</p>\n      ",
            "shape_name": "SshPublicKey",
            "min_length": 0,
            "max_length": 8192
          },
          "remoteDebugEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n        <simpara>Set to <code>true</code> if you want to access devices remotely for debugging in\n            your remote access session.</simpara>\n      ",
            "documentation": "\n        <p>Set to <code>true</code> if you want to access devices remotely for debugging in\n            your remote access session.</p>\n      ",
            "shape_name": "Boolean"
          },
          "remoteRecordEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n        <para>Set to <code>true</code> to enable remote recording for the remote access\n            session.</para>\n      ",
            "documentation": "\n        <p>Set to <code>true</code> to enable remote recording for the remote access\n            session.</p>\n      ",
            "shape_name": "Boolean"
          },
          "remoteRecordAppArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</para>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the remote access session that you wish to create.</simpara>\n      ",
            "documentation": "\n        <p>The name of the remote access session that you wish to create.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "clientId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Unique identifier for the client. If you want access to multiple devices on the\n            same client, you should pass the same <code>clientId</code> value in each call to\n                <code>CreateRemoteAccessSession</code>. This is required only if\n                <code>remoteDebugEnabled</code> is set to <code>true</code>.</simpara>\n      ",
            "documentation": "\n        <p>Unique identifier for the client. If you want access to multiple devices on the\n            same client, you should pass the same <code>clientId</code> value in each call to\n                <code>CreateRemoteAccessSession</code>. This is required only if\n                <code>remoteDebugEnabled</code> is set to <code>true</code>.</p>\n      ",
            "shape_name": "ClientId",
            "min_length": 0,
            "max_length": 64
          },
          "configuration": {
            "type": "structure",
            "members": {
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>The billing method for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The billing method for the remote access session.</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "vpceConfigurationArns": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of Amazon Resource Names (ARNs) included in the VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>An array of Amazon Resource Names (ARNs) included in the VPC endpoint configuration.</p>\n      ",
                "shape_name": "AmazonResourceNames",
                "members": {
                  "type": "string",
                  "shape_name": "AmazonResourceName",
                  "documentation": null,
                  "min_length": 32
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>The configuration information for the remote access session request.</simpara>\n      ",
            "documentation": "\n        <p>The configuration information for the remote access session request.</p>\n      ",
            "shape_name": "CreateRemoteAccessSessionConfiguration"
          },
          "interactionMode": {
            "type": "string",
            "enum": [
              "INTERACTIVE",
              "NO_VIDEO",
              "VIDEO_ONLY"
            ],
            "zonbookDocumentation": "\n        <para>The interaction mode of the remote access session. Valid values are:</para>\n        <itemizedlist>\n            <listitem>\n                <simpara>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <emphasis role=\"bold\">cannot</emphasis> run XCUITest\n                    framework-based tests in this mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests in this\n                    mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests and\n                    watch the screen in this mode.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The interaction mode of the remote access session. Valid values are:</p>\n        <ul>\n            <li>\n                <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <b>cannot</b> run XCUITest\n                    framework-based tests in this mode.</p>\n            </li>\n            <li>\n                <p>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this\n                    mode.</p>\n            </li>\n            <li>\n                <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <b>can</b> run XCUITest framework-based tests and\n                    watch the screen in this mode.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "InteractionMode",
            "min_length": 0,
            "max_length": 64
          },
          "skipAppResign": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
            "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
            "shape_name": "Boolean"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Creates and submits a request to start a remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Creates and submits a request to start a remote access session.</p>\n      ",
        "shape_name": "CreateRemoteAccessSessionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "remoteAccessSession": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The name of the remote access session.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was created.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The status of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The result of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The result of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>A message about the remote access session.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was started.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was started.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was stopped.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was stopped.</p>\n      ",
                "shape_name": "DateTime"
              },
              "device": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                    "documentation": "\n        <p>The device's ARN.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's display name.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "manufacturer": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "model": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's model name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "modelId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                    "documentation": "\n        <p>The device's model ID.</p>\n      ",
                    "shape_name": "String"
                  },
                  "formFactor": {
                    "type": "string",
                    "enum": [
                      "PHONE",
                      "TABLET"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DeviceFormFactor"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DevicePlatform"
                  },
                  "os": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                    "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                    "shape_name": "String"
                  },
                  "cpu": {
                    "type": "structure",
                    "members": {
                      "frequency": {
                        "type": "string",
                        "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                        "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                        "shape_name": "String"
                      },
                      "architecture": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                        "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                        "shape_name": "String"
                      },
                      "clock": {
                        "type": "double",
                        "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                        "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                        "shape_name": "Double"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                    "shape_name": "CPU"
                  },
                  "resolution": {
                    "type": "structure",
                    "members": {
                      "width": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      },
                      "height": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                    "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                    "shape_name": "Resolution"
                  },
                  "heapSize": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "memory": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "carrier": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                    "documentation": "\n        <p>The device's carrier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "radio": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                    "shape_name": "String"
                  },
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "remoteDebugEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "fleetType": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                    "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                    "shape_name": "String"
                  },
                  "fleetName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "instances": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                    "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                    "shape_name": "DeviceInstances",
                    "members": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "deviceArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "labels": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                          "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                          "shape_name": "InstanceLabels",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                          ],
                          "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                          "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                          "shape_name": "InstanceStatus"
                        },
                        "udid": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                          "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                          "shape_name": "String"
                        },
                        "instanceProfile": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "packageCleanup": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "excludeAppPackagesFromCleanup": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                              "shape_name": "PackageIds",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "rebootAfterUse": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                              "shape_name": "Message",
                              "min_length": 0,
                              "max_length": 16384
                            }
                          },
                          "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                          "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                          "shape_name": "InstanceProfile"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                      "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                      "shape_name": "DeviceInstance"
                    }
                  },
                  "availability": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY_NOT_AVAILABLE",
                      "BUSY",
                      "AVAILABLE",
                      "HIGHLY_AVAILABLE"
                    ],
                    "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                    "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                    "shape_name": "DeviceAvailability"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) used in the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The device (phone or tablet) used in the remote access session.</p>\n      ",
                "shape_name": "Device"
              },
              "instanceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "remoteDebugEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</simpara>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</para>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordAppArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</para>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "hostAddress": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "HostAddress",
                "max_length": 1024
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "ClientId",
                "min_length": 0,
                "max_length": 64
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <ulink type=\"documentation\" url=\"devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</ulink>.\"</simpara>\n      ",
                "documentation": "\n        <p>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <a href=\"http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</a>.\"</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</simpara>\n      ",
                "documentation": "\n        <p>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The endpoint for the remote access sesssion.</simpara>\n      ",
                "documentation": "\n        <p>The endpoint for the remote access sesssion.</p>\n      ",
                "shape_name": "String"
              },
              "deviceUdid": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</p>\n      ",
                "shape_name": "String"
              },
              "interactionMode": {
                "type": "string",
                "enum": [
                  "INTERACTIVE",
                  "NO_VIDEO",
                  "VIDEO_ONLY"
                ],
                "zonbookDocumentation": "\n        <para>The interaction mode of the remote access session. Valid values are:</para>\n        <itemizedlist>\n            <listitem>\n                <simpara>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <emphasis role=\"bold\">cannot</emphasis> run XCUITest\n                    framework-based tests in this mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests in this\n                    mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests and\n                    watch the screen in this mode.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The interaction mode of the remote access session. Valid values are:</p>\n        <ul>\n            <li>\n                <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <b>cannot</b> run XCUITest\n                    framework-based tests in this mode.</p>\n            </li>\n            <li>\n                <p>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this\n                    mode.</p>\n            </li>\n            <li>\n                <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <b>can</b> run XCUITest framework-based tests and\n                    watch the screen in this mode.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "InteractionMode",
                "min_length": 0,
                "max_length": 64
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A container that describes the remote access session when the request to create a\n            remote access session is sent.</simpara>\n      ",
            "documentation": "\n        <p>A container that describes the remote access session when the request to create a\n            remote access session is sent.</p>\n      ",
            "shape_name": "RemoteAccessSession"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the server response from a request to create a remote access\n            session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the server response from a request to create a remote access\n            session.</p>\n      ",
        "shape_name": "CreateRemoteAccessSessionResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Specifies and starts a remote access session.</p>\n      "
    },
    "CreateUpload": {
      "name": "CreateUpload",
      "input": {
        "type": "structure",
        "members": {
          "projectArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the project for the upload.</simpara>\n      ",
            "documentation": "\n        <p>The ARN of the project for the upload.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The upload's file name. The name should not contain the '/' character. If uploading\n            an iOS app, the file name needs to end with the <code>.ipa</code> extension. If\n            uploading an Android app, the file name needs to end with the <code>.apk</code>\n            extension. For all others, the file name must end with the <code>.zip</code> file\n            extension.</simpara>\n      ",
            "documentation": "\n        <p>The upload's file name. The name should not contain the '/' character. If uploading\n            an iOS app, the file name needs to end with the <code>.ipa</code> extension. If\n            uploading an Android app, the file name needs to end with the <code>.apk</code>\n            extension. For all others, the file name must end with the <code>.zip</code> file\n            extension.</p>\n      ",
            "required": true,
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "type": {
            "type": "string",
            "enum": [
              "ANDROID_APP",
              "IOS_APP",
              "WEB_APP",
              "EXTERNAL_DATA",
              "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
              "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
              "APPIUM_PYTHON_TEST_PACKAGE",
              "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
              "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
              "APPIUM_WEB_PYTHON_TEST_PACKAGE",
              "CALABASH_TEST_PACKAGE",
              "INSTRUMENTATION_TEST_PACKAGE",
              "UIAUTOMATION_TEST_PACKAGE",
              "UIAUTOMATOR_TEST_PACKAGE",
              "XCTEST_TEST_PACKAGE",
              "XCTEST_UI_TEST_PACKAGE",
              "APPIUM_JAVA_JUNIT_TEST_SPEC",
              "APPIUM_JAVA_TESTNG_TEST_SPEC",
              "APPIUM_PYTHON_TEST_SPEC",
              "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
              "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
              "APPIUM_WEB_PYTHON_TEST_SPEC",
              "INSTRUMENTATION_TEST_SPEC",
              "XCTEST_UI_TEST_SPEC"
            ],
            "zonbookDocumentation": "\n        <simpara>The upload's upload type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web application upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n        <simpara>\n            <emphasis role=\"bold\">Note</emphasis> If you call <code>CreateUpload</code> with\n                <code>WEB_APP</code> specified, AWS Device Farm throws an\n                <code>ArgumentException</code> error.</simpara>\n      ",
            "documentation": "\n        <p>The upload's upload type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web application upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n        <p>\n            <b>Note</b> If you call <code>CreateUpload</code> with\n                <code>WEB_APP</code> specified, AWS Device Farm throws an\n                <code>ArgumentException</code> error.</p>\n      ",
            "required": true,
            "shape_name": "UploadType"
          },
          "contentType": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
            "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
            "shape_name": "ContentType",
            "min_length": 0,
            "max_length": 64
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the create upload operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the create upload operation.</p>\n      ",
        "shape_name": "CreateUploadRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "upload": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The upload's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's file name.</simpara>\n      ",
                "documentation": "\n        <p>The upload's file name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the upload was created.</simpara>\n      ",
                "documentation": "\n        <p>When the upload was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ANDROID_APP",
                  "IOS_APP",
                  "WEB_APP",
                  "EXTERNAL_DATA",
                  "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_PYTHON_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                  "CALABASH_TEST_PACKAGE",
                  "INSTRUMENTATION_TEST_PACKAGE",
                  "UIAUTOMATION_TEST_PACKAGE",
                  "UIAUTOMATOR_TEST_PACKAGE",
                  "XCTEST_TEST_PACKAGE",
                  "XCTEST_UI_TEST_PACKAGE",
                  "APPIUM_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_PYTHON_TEST_SPEC",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_WEB_PYTHON_TEST_SPEC",
                  "INSTRUMENTATION_TEST_SPEC",
                  "XCTEST_UI_TEST_SPEC"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web appliction upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "PROCESSING",
                  "SUCCEEDED",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's status.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FAILED: A failed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INITIALIZED: An initialized status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SUCCEEDED: A succeeded status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's status.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>FAILED: A failed status.</p>\n            </li>\n            <li>\n                <p>INITIALIZED: An initialized status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SUCCEEDED: A succeeded status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadStatus"
              },
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</simpara>\n      ",
                "documentation": "\n        <p>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</p>\n      ",
                "shape_name": "URL",
                "min_length": 0,
                "max_length": 2048
              },
              "metadata": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</simpara>\n      ",
                "documentation": "\n        <p>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</p>\n      ",
                "shape_name": "Metadata",
                "min_length": 0,
                "max_length": 8192
              },
              "contentType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
                "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
                "shape_name": "ContentType",
                "min_length": 0,
                "max_length": 64
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the upload's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the upload's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "category": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <para>The upload's category. Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>CURATED: An upload managed by AWS Device Farm.</para>\n            </listitem>\n            <listitem>\n                <para>PRIVATE: An upload managed by the AWS Device Farm customer.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's category. Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: An upload managed by AWS Device Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadCategory"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The newly created upload.</simpara>\n      ",
            "documentation": "\n        <p>The newly created upload.</p>\n      ",
            "shape_name": "Upload"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a create upload request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a create upload request.</p>\n      ",
        "shape_name": "CreateUploadResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Uploads an app or test scripts.</p>\n      "
    },
    "DeleteDevicePool": {
      "name": "DeleteDevicePool",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish\n            to delete.</simpara>\n      ",
            "documentation": "\n        <p>Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish\n            to delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the delete device pool operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the delete device pool operation.</p>\n      ",
        "shape_name": "DeleteDevicePoolRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a delete device pool request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a delete device pool request.</p>\n      ",
        "shape_name": "DeleteDevicePoolResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes a device pool given the pool ARN. Does not allow deletion of curated pools\n            owned by the system.</p>\n      "
    },
    "DeleteNetworkProfile": {
      "name": "DeleteNetworkProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile you want to delete.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "DeleteNetworkProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteNetworkProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes a network profile.</p>\n      "
    },
    "DeleteInstanceProfile": {
      "name": "DeleteInstanceProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "DeleteInstanceProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteInstanceProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Deletes a profile that can be applied to one or more private device instances.</p>\n      "
    },
    "DeleteProject": {
      "name": "DeleteProject",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to\n            delete.</simpara>\n      ",
            "documentation": "\n        <p>Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to\n            delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the delete project operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the delete project operation.</p>\n      ",
        "shape_name": "DeleteProjectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a delete project request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a delete project request.</p>\n      ",
        "shape_name": "DeleteProjectResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes an AWS Device Farm project, given the project ARN.</p>\n        <p>\n            <b>Note</b> Deleting this resource does not stop an\n            in-progress run.</p>\n      "
    },
    "DeleteRemoteAccessSession": {
      "name": "DeleteRemoteAccessSession",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote\n            access.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote\n            access.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to delete the specified remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to delete the specified remote access session.</p>\n      ",
        "shape_name": "DeleteRemoteAccessSessionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>The response from the server when a request is made to delete the remote access\n            session.</simpara>\n      ",
        "documentation": "\n        <p>The response from the server when a request is made to delete the remote access\n            session.</p>\n      ",
        "shape_name": "DeleteRemoteAccessSessionResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes a completed remote access session and its results.</p>\n      "
    },
    "DeleteRun": {
      "name": "DeleteRun",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) for the run you wish to delete.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) for the run you wish to delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the delete run operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the delete run operation.</p>\n      ",
        "shape_name": "DeleteRunRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a delete run request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a delete run request.</p>\n      ",
        "shape_name": "DeleteRunResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes the run, given the run ARN.</p>\n        <p>\n            <b>Note</b> Deleting this resource does not stop an\n            in-progress run.</p>\n      "
    },
    "DeleteUpload": {
      "name": "DeleteUpload",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to\n            delete.</simpara>\n      ",
            "documentation": "\n        <p>Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to\n            delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the delete upload operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the delete upload operation.</p>\n      ",
        "shape_name": "DeleteUploadRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a delete upload request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a delete upload request.</p>\n      ",
        "shape_name": "DeleteUploadResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Deletes an upload given the upload ARN.</p>\n      "
    },
    "DeleteVPCEConfiguration": {
      "name": "DeleteVPCEConfiguration",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "DeleteVPCEConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteVPCEConfigurationResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n         <para>There was an error with the update request, or you do not have sufficient permissions to update this VPC endpoint configuration.</para>\n      ",
          "documentation": "\n         <p>There was an error with the update request, or you do not have sufficient permissions to update this VPC endpoint configuration.</p>\n      ",
          "shape_name": "InvalidOperationException"
        }
      ],
      "documentation": "\n         <p>Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.</p>\n      "
    },
    "GetAccountSettings": {
      "name": "GetAccountSettings",
      "input": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request sent to retrieve the account settings.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request sent to retrieve the account settings.</p>\n      ",
        "shape_name": "GetAccountSettingsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "accountSettings": {
            "type": "structure",
            "members": {
              "awsAccountNumber": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The AWS account number specified in the <code>AccountSettings</code>\n            container.</simpara>\n      ",
                "documentation": "\n        <p>The AWS account number specified in the <code>AccountSettings</code>\n            container.</p>\n      ",
                "shape_name": "AWSAccountNumber",
                "min_length": 2,
                "max_length": 16
              },
              "unmeteredDevices": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>Returns the unmetered devices you have purchased or want to purchase.</simpara>\n      ",
                "documentation": "\n        <p>Returns the unmetered devices you have purchased or want to purchase.</p>\n      ",
                "shape_name": "PurchasedDevicesMap",
                "keys": {
                  "type": "string",
                  "enum": [
                    "ANDROID",
                    "IOS"
                  ],
                  "shape_name": "DevicePlatform",
                  "documentation": null
                },
                "members": {
                  "type": "integer",
                  "shape_name": "Integer",
                  "documentation": null
                }
              },
              "unmeteredRemoteAccessDevices": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>Returns the unmetered remote access devices you have purchased or want to\n            purchase.</simpara>\n      ",
                "documentation": "\n        <p>Returns the unmetered remote access devices you have purchased or want to\n            purchase.</p>\n      ",
                "shape_name": "PurchasedDevicesMap",
                "keys": {
                  "type": "string",
                  "enum": [
                    "ANDROID",
                    "IOS"
                  ],
                  "shape_name": "DevicePlatform",
                  "documentation": null
                },
                "members": {
                  "type": "integer",
                  "shape_name": "Integer",
                  "documentation": null
                }
              },
              "maxJobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The maximum number of minutes a test run will execute before it times\n            out.</simpara>\n      ",
                "documentation": "\n        <p>The maximum number of minutes a test run will execute before it times\n            out.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "trialMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The total number of free trial minutes that the account started with.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of free trial minutes that the account started with.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "remaining": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The number of free trial minutes remaining in the account.</simpara>\n      ",
                    "documentation": "\n        <p>The number of free trial minutes remaining in the account.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about an AWS account's usage of free trial device minutes.</simpara>\n      ",
                "documentation": "\n        <p>Information about an AWS account's usage of free trial device minutes.</p>\n      ",
                "shape_name": "TrialMinutes"
              },
              "maxSlots": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>The maximum number of device slots that the AWS account can purchase. Each maximum\n            is expressed as an <code>offering-id:number</code> pair, where the\n                <code>offering-id</code> represents one of the IDs returned by the\n                <code>ListOfferings</code> command.</simpara>\n      ",
                "documentation": "\n        <p>The maximum number of device slots that the AWS account can purchase. Each maximum\n            is expressed as an <code>offering-id:number</code> pair, where the\n                <code>offering-id</code> represents one of the IDs returned by the\n                <code>ListOfferings</code> command.</p>\n      ",
                "shape_name": "MaxSlotMap",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "integer",
                  "shape_name": "Integer",
                  "documentation": null
                }
              },
              "defaultJobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The default number of minutes (at the account level) a test run will execute before\n            it times out. Default value is 60 minutes.</simpara>\n      ",
                "documentation": "\n        <p>The default number of minutes (at the account level) a test run will execute before\n            it times out. Default value is 60 minutes.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The account settings.</simpara>\n      ",
            "documentation": "\n        <p>The account settings.</p>\n      ",
            "shape_name": "AccountSettings"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the account settings return values from the\n                <code>GetAccountSettings</code> request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the account settings return values from the\n                <code>GetAccountSettings</code> request.</p>\n      ",
        "shape_name": "GetAccountSettingsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns the number of unmetered iOS and/or unmetered Android devices that have been\n            purchased by the account.</p>\n      "
    },
    "GetDevice": {
      "name": "GetDevice",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The device type's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The device type's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get device request.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get device request.</p>\n      ",
        "shape_name": "GetDeviceRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "device": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The device's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                "documentation": "\n        <p>The device's display name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "manufacturer": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                "shape_name": "String"
              },
              "model": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                "documentation": "\n        <p>The device's model name.</p>\n      ",
                "shape_name": "String"
              },
              "modelId": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                "documentation": "\n        <p>The device's model ID.</p>\n      ",
                "shape_name": "String"
              },
              "formFactor": {
                "type": "string",
                "enum": [
                  "PHONE",
                  "TABLET"
                ],
                "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DeviceFormFactor"
              },
              "platform": {
                "type": "string",
                "enum": [
                  "ANDROID",
                  "IOS"
                ],
                "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePlatform"
              },
              "os": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                "shape_name": "String"
              },
              "cpu": {
                "type": "structure",
                "members": {
                  "frequency": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                    "shape_name": "String"
                  },
                  "architecture": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                    "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                    "shape_name": "String"
                  },
                  "clock": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                    "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                "shape_name": "CPU"
              },
              "resolution": {
                "type": "structure",
                "members": {
                  "width": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                    "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "height": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                    "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                "shape_name": "Resolution"
              },
              "heapSize": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                "shape_name": "Long"
              },
              "memory": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                "shape_name": "Long"
              },
              "image": {
                "type": "string",
                "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                "shape_name": "String"
              },
              "carrier": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                "documentation": "\n        <p>The device's carrier.</p>\n      ",
                "shape_name": "String"
              },
              "radio": {
                "type": "string",
                "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                "shape_name": "String"
              },
              "remoteAccessEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteDebugEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                "shape_name": "Boolean"
              },
              "fleetType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                "shape_name": "String"
              },
              "fleetName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                "shape_name": "String"
              },
              "instances": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                "shape_name": "DeviceInstances",
                "members": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                      "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "deviceArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                      "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "labels": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                      "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                      "shape_name": "InstanceLabels",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "IN_USE",
                        "PREPARING",
                        "AVAILABLE",
                        "NOT_AVAILABLE"
                      ],
                      "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                      "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                      "shape_name": "InstanceStatus"
                    },
                    "udid": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                      "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                      "shape_name": "String"
                    },
                    "instanceProfile": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "packageCleanup": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                          "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                          "shape_name": "Boolean"
                        },
                        "excludeAppPackagesFromCleanup": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                          "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                          "shape_name": "PackageIds",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "rebootAfterUse": {
                          "type": "boolean",
                          "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                          "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                          "shape_name": "Boolean"
                        },
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                          "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                          "shape_name": "Name",
                          "min_length": 0,
                          "max_length": 256
                        },
                        "description": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                          "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                          "shape_name": "Message",
                          "min_length": 0,
                          "max_length": 16384
                        }
                      },
                      "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                      "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                      "shape_name": "InstanceProfile"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                  "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                  "shape_name": "DeviceInstance"
                }
              },
              "availability": {
                "type": "string",
                "enum": [
                  "TEMPORARY_NOT_AVAILABLE",
                  "BUSY",
                  "AVAILABLE",
                  "HIGHLY_AVAILABLE"
                ],
                "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                "shape_name": "DeviceAvailability"
              }
            },
            "zonbookDocumentation": "\n        <simpara>An object containing information about the requested device.</simpara>\n      ",
            "documentation": "\n        <p>An object containing information about the requested device.</p>\n      ",
            "shape_name": "Device"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get device request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get device request.</p>\n      ",
        "shape_name": "GetDeviceResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a unique device type.</p>\n      "
    },
    "GetDeviceInstance": {
      "name": "GetDeviceInstance",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance you're requesting information about.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance you're requesting information about.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "GetDeviceInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "deviceInstance": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "labels": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                "shape_name": "InstanceLabels",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "IN_USE",
                  "PREPARING",
                  "AVAILABLE",
                  "NOT_AVAILABLE"
                ],
                "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                "shape_name": "InstanceStatus"
              },
              "udid": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                "shape_name": "String"
              },
              "instanceProfile": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "packageCleanup": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                    "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "excludeAppPackagesFromCleanup": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                    "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                    "shape_name": "PackageIds",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "rebootAfterUse": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                    "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "description": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  }
                },
                "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                "shape_name": "InstanceProfile"
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your device instance.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your device instance.</p>\n      ",
            "shape_name": "DeviceInstance"
          }
        },
        "shape_name": "GetDeviceInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about a device instance belonging to a private device fleet.</p>\n      "
    },
    "GetDevicePool": {
      "name": "GetDevicePool",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get device pool operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get device pool operation.</p>\n      ",
        "shape_name": "GetDevicePoolRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "devicePool": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's name.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's description.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's description.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The device pool's type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The device pool's type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePoolType"
              },
              "rules": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>Information about the device pool's rules.</simpara>\n      ",
                "documentation": "\n        <p>Information about the device pool's rules.</p>\n      ",
                "shape_name": "Rules",
                "members": {
                  "type": "structure",
                  "members": {
                    "attribute": {
                      "type": "string",
                      "enum": [
                        "ARN",
                        "PLATFORM",
                        "FORM_FACTOR",
                        "MANUFACTURER",
                        "REMOTE_ACCESS_ENABLED",
                        "REMOTE_DEBUG_ENABLED",
                        "APPIUM_VERSION",
                        "INSTANCE_ARN",
                        "INSTANCE_LABELS",
                        "FLEET_TYPE"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceAttribute"
                    },
                    "operator": {
                      "type": "string",
                      "enum": [
                        "EQUALS",
                        "LESS_THAN",
                        "GREATER_THAN",
                        "IN",
                        "NOT_IN",
                        "CONTAINS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "RuleOperator"
                    },
                    "value": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                      "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
                  "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
                  "shape_name": "Rule"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>An object containing information about the requested device pool.</simpara>\n      ",
            "documentation": "\n        <p>An object containing information about the requested device pool.</p>\n      ",
            "shape_name": "DevicePool"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get device pool request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get device pool request.</p>\n      ",
        "shape_name": "GetDevicePoolResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a device pool.</p>\n      "
    },
    "GetDevicePoolCompatibility": {
      "name": "GetDevicePoolCompatibility",
      "input": {
        "type": "structure",
        "members": {
          "devicePoolArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "appArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the app that is associated with the specified device pool.</simpara>\n      ",
            "documentation": "\n        <p>The ARN of the app that is associated with the specified device pool.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "testType": {
            "type": "string",
            "enum": [
              "BUILTIN_FUZZ",
              "BUILTIN_EXPLORER",
              "WEB_PERFORMANCE_PROFILE",
              "APPIUM_JAVA_JUNIT",
              "APPIUM_JAVA_TESTNG",
              "APPIUM_PYTHON",
              "APPIUM_WEB_JAVA_JUNIT",
              "APPIUM_WEB_JAVA_TESTNG",
              "APPIUM_WEB_PYTHON",
              "CALABASH",
              "INSTRUMENTATION",
              "UIAUTOMATION",
              "UIAUTOMATOR",
              "XCTEST",
              "XCTEST_UI",
              "REMOTE_ACCESS_RECORD",
              "REMOTE_ACCESS_REPLAY"
            ],
            "zonbookDocumentation": "\n        <simpara>The test type for the specified device pool.</simpara>\n        <simpara>Allowed values include the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The test type for the specified device pool.</p>\n        <p>Allowed values include the following:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "TestType"
          },
          "test": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The test's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "TestType"
              },
              "testPackageArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of the uploaded test that will be run.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of the uploaded test that will be run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "testSpecArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification.</para>\n      ",
                "documentation": "\n        <p>The ARN of the YAML-formatted test specification.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "filter": {
                "type": "string",
                "zonbookDocumentation": "\n        \n        <simpara>The test's filter.</simpara>\n      ",
                "documentation": "\n        \n        <p>The test's filter.</p>\n      ",
                "shape_name": "Filter",
                "min_length": 0,
                "max_length": 8192
              },
              "parameters": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>The test's parameters, such as test framework parameters and fixture settings. Parameters are\n            represented by name-value pairs of strings.</simpara>\n        <simpara>For all tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to\n                    \"false\" to disable it.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Calabash tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>profile: A cucumber profile, for example, \"my_profile_name\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>tags: You can limit execution to features or scenarios that have (or don't\n                    have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Appium tests (all types):</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>appium_version: The Appium version. Currently supported values are\n                    \"1.7.2\", \"1.7.1\", \"1.6.5\", \"latest\", and \"default\".</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>“latest” will run the latest Appium version supported by Device\n                            Farm (1.7.2).</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>For “default”, Device Farm will choose a compatible version of\n                            Appium for the device. The current behavior is to run 1.7.2 on Android\n                            devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>This behavior is subject to change.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Fuzz tests (Android only):</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>event_count: The number of events, between 1 and 10000, that the UI fuzz\n                    test should perform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should\n                    wait between events.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>seed: A seed to use for randomizing the UI fuzz test. Using the same seed\n                    value between tests ensures identical event sequences.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Explorer tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>username: A username to use if the Explorer encounters a login form. If not\n                    supplied, no username will be inserted.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>password: A password to use if the Explorer encounters a login form. If not\n                    supplied, no password will be inserted.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Instrumentation:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test case: \"com.android.abc.Test1\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"com.android.abc.Test1#smoke\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For XCTest and XCTestUI:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test class: \"LoginTests\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a multiple test classes: \"LoginTests,SmokeTests\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"LoginTests/testValid\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"LoginTests/testValid,LoginTests/testInvalid\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For UIAutomator:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test case: \"com.android.abc.Test1\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"com.android.abc.Test1#smoke\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's parameters, such as test framework parameters and fixture settings. Parameters are\n            represented by name-value pairs of strings.</p>\n        <p>For all tests:</p>\n        <ul>\n            <li>\n                <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to\n                    \"false\" to disable it.</p>\n            </li>\n         </ul>\n        <p>For Calabash tests:</p>\n        <ul>\n            <li>\n                <p>profile: A cucumber profile, for example, \"my_profile_name\".</p>\n            </li>\n            <li>\n                <p>tags: You can limit execution to features or scenarios that have (or don't\n                    have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p>\n            </li>\n         </ul>\n        <p>For Appium tests (all types):</p>\n        <ul>\n            <li>\n                <p>appium_version: The Appium version. Currently supported values are\n                    \"1.7.2\", \"1.7.1\", \"1.6.5\", \"latest\", and \"default\".</p>\n                <ul>\n                  <li>\n                        <p>“latest” will run the latest Appium version supported by Device\n                            Farm (1.7.2).</p>\n                    </li>\n                  <li>\n                        <p>For “default”, Device Farm will choose a compatible version of\n                            Appium for the device. The current behavior is to run 1.7.2 on Android\n                            devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p>\n                    </li>\n                  <li>\n                        <p>This behavior is subject to change.</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For Fuzz tests (Android only):</p>\n        <ul>\n            <li>\n                <p>event_count: The number of events, between 1 and 10000, that the UI fuzz\n                    test should perform.</p>\n            </li>\n            <li>\n                <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should\n                    wait between events.</p>\n            </li>\n            <li>\n                <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed\n                    value between tests ensures identical event sequences.</p>\n            </li>\n         </ul>\n        <p>For Explorer tests:</p>\n        <ul>\n            <li>\n                <p>username: A username to use if the Explorer encounters a login form. If not\n                    supplied, no username will be inserted.</p>\n            </li>\n            <li>\n                <p>password: A password to use if the Explorer encounters a login form. If not\n                    supplied, no password will be inserted.</p>\n            </li>\n         </ul>\n        <p>For Instrumentation:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test case: \"com.android.abc.Test1\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"com.android.abc.Test1#smoke\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For XCTest and XCTestUI:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test class: \"LoginTests\"</p>\n                    </li>\n                  <li>\n                        <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"LoginTests/testValid\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"LoginTests/testValid,LoginTests/testInvalid\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For UIAutomator:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test case: \"com.android.abc.Test1\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"com.android.abc.Test1#smoke\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestParameters",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the uploaded test to be run against the device pool.</simpara>\n      ",
            "documentation": "\n        <p>Information about the uploaded test to be run against the device pool.</p>\n      ",
            "shape_name": "ScheduleRunTest"
          },
          "configuration": {
            "type": "structure",
            "members": {
              "extraDataPackageArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of the extra data for the run. The extra data is a .zip file that AWS\n            Device Farm will extract to external data for Android or the app's sandbox for\n            iOS.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of the extra data for the run. The extra data is a .zip file that AWS\n            Device Farm will extract to external data for Android or the app's sandbox for\n            iOS.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "networkProfileArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Reserved for internal use.</simpara>\n        \n      ",
                "documentation": "\n        <p>Reserved for internal use.</p>\n        \n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "locale": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Information about the locale that is used for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                "shape_name": "String"
              },
              "location": {
                "type": "structure",
                "members": {
                  "latitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                    "documentation": "\n        <p>The latitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  },
                  "longitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                    "documentation": "\n        <p>The longitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about the location that is used for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                "shape_name": "Location"
              },
              "vpceConfigurationArns": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.</para>\n      ",
                "documentation": "\n         <p>An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.</p>\n      ",
                "shape_name": "AmazonResourceNames",
                "members": {
                  "type": "string",
                  "shape_name": "AmazonResourceName",
                  "documentation": null,
                  "min_length": 32
                }
              },
              "customerArtifactPaths": {
                "type": "structure",
                "members": {
                  "iosPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "IosPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "androidPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "AndroidPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "deviceHostPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "DeviceHostPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Input <code>CustomerArtifactPaths</code> object for the scheduled run\n            configuration.</simpara>\n      ",
                "documentation": "\n        <p>Input <code>CustomerArtifactPaths</code> object for the scheduled run\n            configuration.</p>\n      ",
                "shape_name": "CustomerArtifactPaths"
              },
              "radios": {
                "type": "structure",
                "members": {
                  "wifi": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "bluetooth": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "nfc": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "gps": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about the radio states for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                "shape_name": "Radios"
              },
              "auxiliaryApps": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of auxiliary apps for the run.</simpara>\n      ",
                "documentation": "\n        <p>A list of auxiliary apps for the run.</p>\n      ",
                "shape_name": "AmazonResourceNames",
                "members": {
                  "type": "string",
                  "shape_name": "AmazonResourceName",
                  "documentation": null,
                  "min_length": 32
                }
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                "shape_name": "BillingMethod"
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about the settings for a run.</para>\n      ",
            "documentation": "\n         <p>An object containing information about the settings for a run.</p>\n      ",
            "shape_name": "ScheduleRunConfiguration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get device pool compatibility operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get device pool compatibility operation.</p>\n      ",
        "shape_name": "GetDevicePoolCompatibilityRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "compatibleDevices": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about compatible devices.</simpara>\n      ",
            "documentation": "\n        <p>Information about compatible devices.</p>\n      ",
            "shape_name": "DevicePoolCompatibilityResults",
            "members": {
              "type": "structure",
              "members": {
                "device": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                      "documentation": "\n        <p>The device's ARN.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's display name.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "manufacturer": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "model": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's model name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "modelId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                      "documentation": "\n        <p>The device's model ID.</p>\n      ",
                      "shape_name": "String"
                    },
                    "formFactor": {
                      "type": "string",
                      "enum": [
                        "PHONE",
                        "TABLET"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFormFactor"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "os": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                      "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                      "shape_name": "String"
                    },
                    "cpu": {
                      "type": "structure",
                      "members": {
                        "frequency": {
                          "type": "string",
                          "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                          "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                          "shape_name": "String"
                        },
                        "architecture": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                          "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                          "shape_name": "String"
                        },
                        "clock": {
                          "type": "double",
                          "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                          "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                          "shape_name": "Double"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                      "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                      "shape_name": "CPU"
                    },
                    "resolution": {
                      "type": "structure",
                      "members": {
                        "width": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        },
                        "height": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                      "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                      "shape_name": "Resolution"
                    },
                    "heapSize": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "memory": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "carrier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                      "documentation": "\n        <p>The device's carrier.</p>\n      ",
                      "shape_name": "String"
                    },
                    "radio": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                      "shape_name": "String"
                    },
                    "remoteAccessEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "remoteDebugEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "fleetType": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                      "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                      "shape_name": "String"
                    },
                    "fleetName": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "instances": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                      "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                      "shape_name": "DeviceInstances",
                      "members": {
                        "type": "structure",
                        "members": {
                          "arn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "deviceArn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "labels": {
                            "type": "list",
                            "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                            "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                            "shape_name": "InstanceLabels",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_USE",
                              "PREPARING",
                              "AVAILABLE",
                              "NOT_AVAILABLE"
                            ],
                            "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                            "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                            "shape_name": "InstanceStatus"
                          },
                          "udid": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                            "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                            "shape_name": "String"
                          },
                          "instanceProfile": {
                            "type": "structure",
                            "members": {
                              "arn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                                "shape_name": "AmazonResourceName",
                                "min_length": 32
                              },
                              "packageCleanup": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "excludeAppPackagesFromCleanup": {
                                "type": "list",
                                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                                "shape_name": "PackageIds",
                                "members": {
                                  "type": "string",
                                  "shape_name": "String",
                                  "documentation": null
                                }
                              },
                              "rebootAfterUse": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                                "shape_name": "Name",
                                "min_length": 0,
                                "max_length": 256
                              },
                              "description": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                                "shape_name": "Message",
                                "min_length": 0,
                                "max_length": 16384
                              }
                            },
                            "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                            "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                            "shape_name": "InstanceProfile"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                        "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                        "shape_name": "DeviceInstance"
                      }
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "TEMPORARY_NOT_AVAILABLE",
                        "BUSY",
                        "AVAILABLE",
                        "HIGHLY_AVAILABLE"
                      ],
                      "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                      "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                      "shape_name": "DeviceAvailability"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) that you wish to return information about.</simpara>\n      ",
                  "documentation": "\n        <p>The device (phone or tablet) that you wish to return information about.</p>\n      ",
                  "shape_name": "Device"
                },
                "compatible": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Whether the result was compatible with the device pool.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the result was compatible with the device pool.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "incompatibilityMessages": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>Information about the compatibility.</simpara>\n      ",
                  "documentation": "\n        <p>Information about the compatibility.</p>\n      ",
                  "shape_name": "IncompatibilityMessages",
                  "members": {
                    "type": "structure",
                    "members": {
                      "message": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A message about the incompatibility.</simpara>\n      ",
                        "documentation": "\n        <p>A message about the incompatibility.</p>\n      ",
                        "shape_name": "Message",
                        "min_length": 0,
                        "max_length": 16384
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ARN",
                          "PLATFORM",
                          "FORM_FACTOR",
                          "MANUFACTURER",
                          "REMOTE_ACCESS_ENABLED",
                          "REMOTE_DEBUG_ENABLED",
                          "APPIUM_VERSION",
                          "INSTANCE_ARN",
                          "INSTANCE_LABELS",
                          "FLEET_TYPE"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of incompatibility.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The ARN.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The form factor (for example, phone or tablet).</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The manufacturer.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The platform (for example, Android or iOS).</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                        "documentation": "\n        <p>The type of incompatibility.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The ARN.</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The manufacturer.</p>\n            </li>\n            <li>\n                <p>PLATFORM: The platform (for example, Android or iOS).</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "DeviceAttribute"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about incompatibility.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about incompatibility.</p>\n      ",
                    "shape_name": "IncompatibilityMessage"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a device pool compatibility result.</simpara>\n      ",
              "documentation": "\n        <p>Represents a device pool compatibility result.</p>\n      ",
              "shape_name": "DevicePoolCompatibilityResult"
            }
          },
          "incompatibleDevices": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about incompatible devices.</simpara>\n      ",
            "documentation": "\n        <p>Information about incompatible devices.</p>\n      ",
            "shape_name": "DevicePoolCompatibilityResults",
            "members": {
              "type": "structure",
              "members": {
                "device": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                      "documentation": "\n        <p>The device's ARN.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's display name.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "manufacturer": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "model": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's model name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "modelId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                      "documentation": "\n        <p>The device's model ID.</p>\n      ",
                      "shape_name": "String"
                    },
                    "formFactor": {
                      "type": "string",
                      "enum": [
                        "PHONE",
                        "TABLET"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFormFactor"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "os": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                      "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                      "shape_name": "String"
                    },
                    "cpu": {
                      "type": "structure",
                      "members": {
                        "frequency": {
                          "type": "string",
                          "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                          "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                          "shape_name": "String"
                        },
                        "architecture": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                          "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                          "shape_name": "String"
                        },
                        "clock": {
                          "type": "double",
                          "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                          "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                          "shape_name": "Double"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                      "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                      "shape_name": "CPU"
                    },
                    "resolution": {
                      "type": "structure",
                      "members": {
                        "width": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        },
                        "height": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                      "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                      "shape_name": "Resolution"
                    },
                    "heapSize": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "memory": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "carrier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                      "documentation": "\n        <p>The device's carrier.</p>\n      ",
                      "shape_name": "String"
                    },
                    "radio": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                      "shape_name": "String"
                    },
                    "remoteAccessEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "remoteDebugEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "fleetType": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                      "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                      "shape_name": "String"
                    },
                    "fleetName": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "instances": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                      "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                      "shape_name": "DeviceInstances",
                      "members": {
                        "type": "structure",
                        "members": {
                          "arn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "deviceArn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "labels": {
                            "type": "list",
                            "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                            "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                            "shape_name": "InstanceLabels",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_USE",
                              "PREPARING",
                              "AVAILABLE",
                              "NOT_AVAILABLE"
                            ],
                            "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                            "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                            "shape_name": "InstanceStatus"
                          },
                          "udid": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                            "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                            "shape_name": "String"
                          },
                          "instanceProfile": {
                            "type": "structure",
                            "members": {
                              "arn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                                "shape_name": "AmazonResourceName",
                                "min_length": 32
                              },
                              "packageCleanup": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "excludeAppPackagesFromCleanup": {
                                "type": "list",
                                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                                "shape_name": "PackageIds",
                                "members": {
                                  "type": "string",
                                  "shape_name": "String",
                                  "documentation": null
                                }
                              },
                              "rebootAfterUse": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                                "shape_name": "Name",
                                "min_length": 0,
                                "max_length": 256
                              },
                              "description": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                                "shape_name": "Message",
                                "min_length": 0,
                                "max_length": 16384
                              }
                            },
                            "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                            "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                            "shape_name": "InstanceProfile"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                        "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                        "shape_name": "DeviceInstance"
                      }
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "TEMPORARY_NOT_AVAILABLE",
                        "BUSY",
                        "AVAILABLE",
                        "HIGHLY_AVAILABLE"
                      ],
                      "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                      "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                      "shape_name": "DeviceAvailability"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) that you wish to return information about.</simpara>\n      ",
                  "documentation": "\n        <p>The device (phone or tablet) that you wish to return information about.</p>\n      ",
                  "shape_name": "Device"
                },
                "compatible": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Whether the result was compatible with the device pool.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the result was compatible with the device pool.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "incompatibilityMessages": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>Information about the compatibility.</simpara>\n      ",
                  "documentation": "\n        <p>Information about the compatibility.</p>\n      ",
                  "shape_name": "IncompatibilityMessages",
                  "members": {
                    "type": "structure",
                    "members": {
                      "message": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A message about the incompatibility.</simpara>\n      ",
                        "documentation": "\n        <p>A message about the incompatibility.</p>\n      ",
                        "shape_name": "Message",
                        "min_length": 0,
                        "max_length": 16384
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ARN",
                          "PLATFORM",
                          "FORM_FACTOR",
                          "MANUFACTURER",
                          "REMOTE_ACCESS_ENABLED",
                          "REMOTE_DEBUG_ENABLED",
                          "APPIUM_VERSION",
                          "INSTANCE_ARN",
                          "INSTANCE_LABELS",
                          "FLEET_TYPE"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of incompatibility.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The ARN.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The form factor (for example, phone or tablet).</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The manufacturer.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The platform (for example, Android or iOS).</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                        "documentation": "\n        <p>The type of incompatibility.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The ARN.</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The manufacturer.</p>\n            </li>\n            <li>\n                <p>PLATFORM: The platform (for example, Android or iOS).</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "DeviceAttribute"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents information about incompatibility.</simpara>\n      ",
                    "documentation": "\n        <p>Represents information about incompatibility.</p>\n      ",
                    "shape_name": "IncompatibilityMessage"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a device pool compatibility result.</simpara>\n      ",
              "documentation": "\n        <p>Represents a device pool compatibility result.</p>\n      ",
              "shape_name": "DevicePoolCompatibilityResult"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of describe device pool compatibility request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of describe device pool compatibility request.</p>\n      ",
        "shape_name": "GetDevicePoolCompatibilityResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about compatibility with a device pool.</p>\n      "
    },
    "GetNetworkProfile": {
      "name": "GetNetworkProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile you want to return\n            information about.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile you want to return\n            information about.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "GetNetworkProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "networkProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                "shape_name": "NetworkProfileType"
              },
              "uplinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              },
              "downlinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              }
            },
            "zonbookDocumentation": "\n        <simpara>The network profile.</simpara>\n      ",
            "documentation": "\n        <p>The network profile.</p>\n      ",
            "shape_name": "NetworkProfile"
          }
        },
        "shape_name": "GetNetworkProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns information about a network profile.</p>\n      "
    },
    "GetInstanceProfile": {
      "name": "GetInstanceProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of your instance profile.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of your instance profile.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "GetInstanceProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "packageCleanup": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                "shape_name": "Boolean"
              },
              "excludeAppPackagesFromCleanup": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                "shape_name": "PackageIds",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "rebootAfterUse": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                "shape_name": "Boolean"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your instance profile.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your instance profile.</p>\n      ",
            "shape_name": "InstanceProfile"
          }
        },
        "shape_name": "GetInstanceProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about the specified instance profile.</p>\n      "
    },
    "GetRemoteAccessSession": {
      "name": "GetRemoteAccessSession",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session about which you want to\n            get session information.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session about which you want to\n            get session information.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to get information about the specified remote access\n            session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to get information about the specified remote access\n            session.</p>\n      ",
        "shape_name": "GetRemoteAccessSessionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "remoteAccessSession": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The name of the remote access session.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was created.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The status of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The result of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The result of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>A message about the remote access session.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was started.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was started.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was stopped.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was stopped.</p>\n      ",
                "shape_name": "DateTime"
              },
              "device": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                    "documentation": "\n        <p>The device's ARN.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's display name.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "manufacturer": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "model": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's model name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "modelId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                    "documentation": "\n        <p>The device's model ID.</p>\n      ",
                    "shape_name": "String"
                  },
                  "formFactor": {
                    "type": "string",
                    "enum": [
                      "PHONE",
                      "TABLET"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DeviceFormFactor"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DevicePlatform"
                  },
                  "os": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                    "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                    "shape_name": "String"
                  },
                  "cpu": {
                    "type": "structure",
                    "members": {
                      "frequency": {
                        "type": "string",
                        "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                        "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                        "shape_name": "String"
                      },
                      "architecture": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                        "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                        "shape_name": "String"
                      },
                      "clock": {
                        "type": "double",
                        "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                        "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                        "shape_name": "Double"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                    "shape_name": "CPU"
                  },
                  "resolution": {
                    "type": "structure",
                    "members": {
                      "width": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      },
                      "height": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                    "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                    "shape_name": "Resolution"
                  },
                  "heapSize": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "memory": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "carrier": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                    "documentation": "\n        <p>The device's carrier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "radio": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                    "shape_name": "String"
                  },
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "remoteDebugEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "fleetType": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                    "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                    "shape_name": "String"
                  },
                  "fleetName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "instances": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                    "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                    "shape_name": "DeviceInstances",
                    "members": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "deviceArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "labels": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                          "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                          "shape_name": "InstanceLabels",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                          ],
                          "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                          "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                          "shape_name": "InstanceStatus"
                        },
                        "udid": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                          "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                          "shape_name": "String"
                        },
                        "instanceProfile": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "packageCleanup": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "excludeAppPackagesFromCleanup": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                              "shape_name": "PackageIds",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "rebootAfterUse": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                              "shape_name": "Message",
                              "min_length": 0,
                              "max_length": 16384
                            }
                          },
                          "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                          "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                          "shape_name": "InstanceProfile"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                      "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                      "shape_name": "DeviceInstance"
                    }
                  },
                  "availability": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY_NOT_AVAILABLE",
                      "BUSY",
                      "AVAILABLE",
                      "HIGHLY_AVAILABLE"
                    ],
                    "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                    "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                    "shape_name": "DeviceAvailability"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) used in the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The device (phone or tablet) used in the remote access session.</p>\n      ",
                "shape_name": "Device"
              },
              "instanceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "remoteDebugEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</simpara>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</para>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordAppArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</para>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "hostAddress": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "HostAddress",
                "max_length": 1024
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "ClientId",
                "min_length": 0,
                "max_length": 64
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <ulink type=\"documentation\" url=\"devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</ulink>.\"</simpara>\n      ",
                "documentation": "\n        <p>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <a href=\"http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</a>.\"</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</simpara>\n      ",
                "documentation": "\n        <p>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The endpoint for the remote access sesssion.</simpara>\n      ",
                "documentation": "\n        <p>The endpoint for the remote access sesssion.</p>\n      ",
                "shape_name": "String"
              },
              "deviceUdid": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</p>\n      ",
                "shape_name": "String"
              },
              "interactionMode": {
                "type": "string",
                "enum": [
                  "INTERACTIVE",
                  "NO_VIDEO",
                  "VIDEO_ONLY"
                ],
                "zonbookDocumentation": "\n        <para>The interaction mode of the remote access session. Valid values are:</para>\n        <itemizedlist>\n            <listitem>\n                <simpara>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <emphasis role=\"bold\">cannot</emphasis> run XCUITest\n                    framework-based tests in this mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests in this\n                    mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests and\n                    watch the screen in this mode.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The interaction mode of the remote access session. Valid values are:</p>\n        <ul>\n            <li>\n                <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <b>cannot</b> run XCUITest\n                    framework-based tests in this mode.</p>\n            </li>\n            <li>\n                <p>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this\n                    mode.</p>\n            </li>\n            <li>\n                <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <b>can</b> run XCUITest framework-based tests and\n                    watch the screen in this mode.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "InteractionMode",
                "min_length": 0,
                "max_length": 64
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A container that lists detailed information about the remote access\n            session.</simpara>\n      ",
            "documentation": "\n        <p>A container that lists detailed information about the remote access\n            session.</p>\n      ",
            "shape_name": "RemoteAccessSession"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the response from the server that lists detailed information about the\n            remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the response from the server that lists detailed information about the\n            remote access session.</p>\n      ",
        "shape_name": "GetRemoteAccessSessionResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns a link to a currently running remote access session.</p>\n      "
    },
    "GetJob": {
      "name": "GetJob",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The job's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get job operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get job operation.</p>\n      ",
        "shape_name": "GetJobRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "job": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The job's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The job's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The job's name.</simpara>\n      ",
                "documentation": "\n        <p>The job's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's type.</simpara>\n        <simpara>Allowed values include the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's type.</p>\n        <p>Allowed values include the following:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the job was created.</simpara>\n      ",
                "documentation": "\n        <p>When the job was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The job's start time.</simpara>\n      ",
                "documentation": "\n        <p>The job's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The job's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The job's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The job's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The job's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the job's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the job's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "device": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                    "documentation": "\n        <p>The device's ARN.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's display name.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "manufacturer": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "model": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's model name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "modelId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                    "documentation": "\n        <p>The device's model ID.</p>\n      ",
                    "shape_name": "String"
                  },
                  "formFactor": {
                    "type": "string",
                    "enum": [
                      "PHONE",
                      "TABLET"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DeviceFormFactor"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DevicePlatform"
                  },
                  "os": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                    "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                    "shape_name": "String"
                  },
                  "cpu": {
                    "type": "structure",
                    "members": {
                      "frequency": {
                        "type": "string",
                        "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                        "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                        "shape_name": "String"
                      },
                      "architecture": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                        "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                        "shape_name": "String"
                      },
                      "clock": {
                        "type": "double",
                        "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                        "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                        "shape_name": "Double"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                    "shape_name": "CPU"
                  },
                  "resolution": {
                    "type": "structure",
                    "members": {
                      "width": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      },
                      "height": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                    "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                    "shape_name": "Resolution"
                  },
                  "heapSize": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "memory": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "carrier": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                    "documentation": "\n        <p>The device's carrier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "radio": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                    "shape_name": "String"
                  },
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "remoteDebugEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "fleetType": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                    "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                    "shape_name": "String"
                  },
                  "fleetName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "instances": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                    "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                    "shape_name": "DeviceInstances",
                    "members": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "deviceArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "labels": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                          "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                          "shape_name": "InstanceLabels",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                          ],
                          "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                          "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                          "shape_name": "InstanceStatus"
                        },
                        "udid": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                          "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                          "shape_name": "String"
                        },
                        "instanceProfile": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "packageCleanup": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "excludeAppPackagesFromCleanup": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                              "shape_name": "PackageIds",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "rebootAfterUse": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                              "shape_name": "Message",
                              "min_length": 0,
                              "max_length": 16384
                            }
                          },
                          "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                          "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                          "shape_name": "InstanceProfile"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                      "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                      "shape_name": "DeviceInstance"
                    }
                  },
                  "availability": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY_NOT_AVAILABLE",
                      "BUSY",
                      "AVAILABLE",
                      "HIGHLY_AVAILABLE"
                    ],
                    "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                    "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                    "shape_name": "DeviceAvailability"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The device (phone or tablet).</simpara>\n      ",
                "documentation": "\n        <p>The device (phone or tablet).</p>\n      ",
                "shape_name": "Device"
              },
              "instanceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the job.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the job.</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "videoEndpoint": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The endpoint for streaming device video.</para>\n      ",
                "documentation": "\n        <p>The endpoint for streaming device video.</p>\n      ",
                "shape_name": "String"
              },
              "videoCapture": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</para>\n      ",
                "documentation": "\n        <p>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</p>\n      ",
                "shape_name": "VideoCapture"
              }
            },
            "zonbookDocumentation": "\n        <simpara>An object containing information about the requested job.</simpara>\n      ",
            "documentation": "\n        <p>An object containing information about the requested job.</p>\n      ",
            "shape_name": "Job"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get job request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get job request.</p>\n      ",
        "shape_name": "GetJobResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a job.</p>\n      "
    },
    "GetOfferingStatus": {
      "name": "GetOfferingStatus",
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to retrieve the offering status for the specified customer\n            or account.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to retrieve the offering status for the specified customer\n            or account.</p>\n      ",
        "shape_name": "GetOfferingStatusRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "current": {
            "type": "map",
            "zonbookDocumentation": "\n        <simpara>When specified, gets the offering status for the current period.</simpara>\n      ",
            "documentation": "\n        <p>When specified, gets the offering status for the current period.</p>\n      ",
            "shape_name": "OfferingStatusMap",
            "keys": {
              "type": "string",
              "shape_name": "OfferingIdentifier",
              "documentation": null,
              "min_length": 32
            },
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PURCHASE",
                    "RENEW",
                    "SYSTEM"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The type specified for the offering status.</simpara>\n      ",
                  "documentation": "\n        <p>The type specified for the offering status.</p>\n      ",
                  "shape_name": "OfferingTransactionType"
                },
                "offering": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                      "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                      "shape_name": "OfferingIdentifier",
                      "min_length": 32
                    },
                    "description": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                      "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                      "shape_name": "Message",
                      "min_length": 0,
                      "max_length": 16384
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "RECURRING"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                      "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                      "shape_name": "OfferingType"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                      "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "recurringCharges": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                      "shape_name": "RecurringCharges",
                      "members": {
                        "type": "structure",
                        "members": {
                          "cost": {
                            "type": "structure",
                            "members": {
                              "amount": {
                                "type": "double",
                                "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                                "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                                "shape_name": "Double"
                              },
                              "currencyCode": {
                                "type": "string",
                                "enum": [
                                  "USD"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                                "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                                "shape_name": "CurrencyCode"
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                            "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                            "shape_name": "MonetaryAmount"
                          },
                          "frequency": {
                            "type": "string",
                            "enum": [
                              "MONTHLY"
                            ],
                            "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                            "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                            "shape_name": "RecurringChargeFrequency"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                        "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                        "shape_name": "RecurringCharge"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering status.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the metadata of an offering status.</p>\n      ",
                  "shape_name": "Offering"
                },
                "quantity": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The number of available devices in the offering.</simpara>\n      ",
                  "documentation": "\n        <p>The number of available devices in the offering.</p>\n      ",
                  "shape_name": "Integer"
                },
                "effectiveOn": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date on which the offering is effective.</simpara>\n      ",
                  "documentation": "\n        <p>The date on which the offering is effective.</p>\n      ",
                  "shape_name": "DateTime"
                }
              },
              "zonbookDocumentation": "\n        <simpara>The status of the offering.</simpara>\n      ",
              "documentation": "\n        <p>The status of the offering.</p>\n      ",
              "shape_name": "OfferingStatus"
            }
          },
          "nextPeriod": {
            "type": "map",
            "zonbookDocumentation": "\n        <simpara>When specified, gets the offering status for the next period.</simpara>\n      ",
            "documentation": "\n        <p>When specified, gets the offering status for the next period.</p>\n      ",
            "shape_name": "OfferingStatusMap",
            "keys": {
              "type": "string",
              "shape_name": "OfferingIdentifier",
              "documentation": null,
              "min_length": 32
            },
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "PURCHASE",
                    "RENEW",
                    "SYSTEM"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The type specified for the offering status.</simpara>\n      ",
                  "documentation": "\n        <p>The type specified for the offering status.</p>\n      ",
                  "shape_name": "OfferingTransactionType"
                },
                "offering": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                      "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                      "shape_name": "OfferingIdentifier",
                      "min_length": 32
                    },
                    "description": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                      "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                      "shape_name": "Message",
                      "min_length": 0,
                      "max_length": 16384
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "RECURRING"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                      "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                      "shape_name": "OfferingType"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                      "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "recurringCharges": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                      "shape_name": "RecurringCharges",
                      "members": {
                        "type": "structure",
                        "members": {
                          "cost": {
                            "type": "structure",
                            "members": {
                              "amount": {
                                "type": "double",
                                "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                                "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                                "shape_name": "Double"
                              },
                              "currencyCode": {
                                "type": "string",
                                "enum": [
                                  "USD"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                                "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                                "shape_name": "CurrencyCode"
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                            "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                            "shape_name": "MonetaryAmount"
                          },
                          "frequency": {
                            "type": "string",
                            "enum": [
                              "MONTHLY"
                            ],
                            "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                            "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                            "shape_name": "RecurringChargeFrequency"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                        "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                        "shape_name": "RecurringCharge"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering status.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the metadata of an offering status.</p>\n      ",
                  "shape_name": "Offering"
                },
                "quantity": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The number of available devices in the offering.</simpara>\n      ",
                  "documentation": "\n        <p>The number of available devices in the offering.</p>\n      ",
                  "shape_name": "Integer"
                },
                "effectiveOn": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date on which the offering is effective.</simpara>\n      ",
                  "documentation": "\n        <p>The date on which the offering is effective.</p>\n      ",
                  "shape_name": "DateTime"
                }
              },
              "zonbookDocumentation": "\n        <simpara>The status of the offering.</simpara>\n      ",
              "documentation": "\n        <p>The status of the offering.</p>\n      ",
              "shape_name": "OfferingStatus"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Returns the status result for a device offering.</simpara>\n      ",
        "documentation": "\n        <p>Returns the status result for a device offering.</p>\n      ",
        "shape_name": "GetOfferingStatusResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets the current status and future status of all offerings purchased by an AWS\n            account. The response indicates how many offerings are currently available and the\n            offerings that will be available in the next period. The API returns a\n                <code>NotEligible</code> error if the user is not permitted to invoke the operation.\n            Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n        \n      "
    },
    "GetProject": {
      "name": "GetProject",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The project's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The project's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get project operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get project operation.</p>\n      ",
        "shape_name": "GetProjectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "project": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The project's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's name.</simpara>\n      ",
                "documentation": "\n        <p>The project's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "defaultJobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</simpara>\n      ",
                "documentation": "\n        <p>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the project was created.</simpara>\n      ",
                "documentation": "\n        <p>When the project was created.</p>\n      ",
                "shape_name": "DateTime"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The project you wish to get information about.</simpara>\n      ",
            "documentation": "\n        <p>The project you wish to get information about.</p>\n      ",
            "shape_name": "Project"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get project request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get project request.</p>\n      ",
        "shape_name": "GetProjectResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a project.</p>\n      "
    },
    "GetRun": {
      "name": "GetRun",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The run's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The run's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get run operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get run operation.</p>\n      ",
        "shape_name": "GetRunRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "run": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The run's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's name.</simpara>\n      ",
                "documentation": "\n        <p>The run's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "platform": {
                "type": "string",
                "enum": [
                  "ANDROID",
                  "IOS"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePlatform"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the run was created.</simpara>\n      ",
                "documentation": "\n        <p>When the run was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's start time.</simpara>\n      ",
                "documentation": "\n        <p>The run's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The run's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The run's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The run's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the run's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the run's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "totalJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of jobs for the run.</simpara>\n      ",
                "documentation": "\n        <p>The total number of jobs for the run.</p>\n      ",
                "shape_name": "Integer"
              },
              "completedJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of completed jobs.</simpara>\n      ",
                "documentation": "\n        <p>The total number of completed jobs.</p>\n      ",
                "shape_name": "Integer"
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test run.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test run.</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "networkProfile": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "description": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CURATED",
                      "PRIVATE"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                    "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                    "shape_name": "NetworkProfileType"
                  },
                  "uplinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  },
                  "downlinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The network profile being used for a test run.</simpara>\n      ",
                "documentation": "\n        <p>The network profile being used for a test run.</p>\n      ",
                "shape_name": "NetworkProfile"
              },
              "parsingResultUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</simpara>\n      ",
                "documentation": "\n        <p>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</p>\n      ",
                "shape_name": "String"
              },
              "resultCode": {
                "type": "string",
                "enum": [
                  "PARSING_FAILED",
                  "VPC_ENDPOINT_SETUP_FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</simpara>\n      ",
                "documentation": "\n        <p>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</p>\n      ",
                "shape_name": "ExecutionResultCode"
              },
              "seed": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</p>\n      ",
                "shape_name": "Integer"
              },
              "appUpload": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>An app to upload or that has been uploaded.</para>\n      ",
                "documentation": "\n        <p>An app to upload or that has been uploaded.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "eventCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</p>\n      ",
                "shape_name": "Integer"
              },
              "jobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>The number of minutes the job will execute before it times out.</para>\n      ",
                "documentation": "\n        <p>The number of minutes the job will execute before it times out.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "devicePoolArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the device pool for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the device pool for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "locale": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>Information about the locale that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                "shape_name": "String"
              },
              "radios": {
                "type": "structure",
                "members": {
                  "wifi": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "bluetooth": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "nfc": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "gps": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the radio states for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                "shape_name": "Radios"
              },
              "location": {
                "type": "structure",
                "members": {
                  "latitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                    "documentation": "\n        <p>The latitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  },
                  "longitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                    "documentation": "\n        <p>The longitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the location that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                "shape_name": "Location"
              },
              "customerArtifactPaths": {
                "type": "structure",
                "members": {
                  "iosPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "IosPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "androidPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "AndroidPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "deviceHostPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "DeviceHostPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Output <code>CustomerArtifactPaths</code> object for the test run.</simpara>\n      ",
                "documentation": "\n        <p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>\n      ",
                "shape_name": "CustomerArtifactPaths"
              },
              "webUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Device Farm console URL for the recording of the run.</para>\n      ",
                "documentation": "\n        <p>The Device Farm console URL for the recording of the run.</p>\n      ",
                "shape_name": "String"
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              },
              "testSpecArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the YAML-formatted test specification for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceSelectionResult": {
                "type": "structure",
                "members": {
                  "filters": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <para>The filters in a device selection result.</para>\n      ",
                    "documentation": "\n        <p>The filters in a device selection result.</p>\n      ",
                    "shape_name": "DeviceFilters",
                    "members": {
                      "type": "structure",
                      "members": {
                        "attribute": {
                          "type": "string",
                          "enum": [
                            "ARN",
                            "PLATFORM",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE"
                          ],
                          "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterAttribute"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "EQUALS",
                            "LESS_THAN",
                            "LESS_THAN_OR_EQUALS",
                            "GREATER_THAN",
                            "GREATER_THAN_OR_EQUALS",
                            "IN",
                            "NOT_IN",
                            "CONTAINS"
                          ],
                          "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterOperator"
                        },
                        "values": {
                          "type": "list",
                          "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterValues",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
                      "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
                      "shape_name": "DeviceFilter"
                    }
                  },
                  "matchedDevicesCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The number of devices that matched the device filter selection criteria.</para>\n      ",
                    "documentation": "\n        <p>The number of devices that matched the device filter selection criteria.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "maxDevices": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The maximum number of devices to be selected by a device filter and included in a test run.</para>\n      ",
                    "documentation": "\n        <p>The maximum number of devices to be selected by a device filter and included in a test run.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <para>The results of a device filter used to select the devices for a test run.</para>\n      ",
                "documentation": "\n        <p>The results of a device filter used to select the devices for a test run.</p>\n      ",
                "shape_name": "DeviceSelectionResult"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The run you wish to get results from.</simpara>\n      ",
            "documentation": "\n        <p>The run you wish to get results from.</p>\n      ",
            "shape_name": "Run"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get run request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get run request.</p>\n      ",
        "shape_name": "GetRunResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a run.</p>\n      "
    },
    "GetUpload": {
      "name": "GetUpload",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The upload's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get upload operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get upload operation.</p>\n      ",
        "shape_name": "GetUploadRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "upload": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The upload's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's file name.</simpara>\n      ",
                "documentation": "\n        <p>The upload's file name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the upload was created.</simpara>\n      ",
                "documentation": "\n        <p>When the upload was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ANDROID_APP",
                  "IOS_APP",
                  "WEB_APP",
                  "EXTERNAL_DATA",
                  "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_PYTHON_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                  "CALABASH_TEST_PACKAGE",
                  "INSTRUMENTATION_TEST_PACKAGE",
                  "UIAUTOMATION_TEST_PACKAGE",
                  "UIAUTOMATOR_TEST_PACKAGE",
                  "XCTEST_TEST_PACKAGE",
                  "XCTEST_UI_TEST_PACKAGE",
                  "APPIUM_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_PYTHON_TEST_SPEC",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_WEB_PYTHON_TEST_SPEC",
                  "INSTRUMENTATION_TEST_SPEC",
                  "XCTEST_UI_TEST_SPEC"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web appliction upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "PROCESSING",
                  "SUCCEEDED",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's status.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FAILED: A failed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INITIALIZED: An initialized status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SUCCEEDED: A succeeded status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's status.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>FAILED: A failed status.</p>\n            </li>\n            <li>\n                <p>INITIALIZED: An initialized status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SUCCEEDED: A succeeded status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadStatus"
              },
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</simpara>\n      ",
                "documentation": "\n        <p>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</p>\n      ",
                "shape_name": "URL",
                "min_length": 0,
                "max_length": 2048
              },
              "metadata": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</simpara>\n      ",
                "documentation": "\n        <p>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</p>\n      ",
                "shape_name": "Metadata",
                "min_length": 0,
                "max_length": 8192
              },
              "contentType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
                "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
                "shape_name": "ContentType",
                "min_length": 0,
                "max_length": 64
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the upload's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the upload's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "category": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <para>The upload's category. Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>CURATED: An upload managed by AWS Device Farm.</para>\n            </listitem>\n            <listitem>\n                <para>PRIVATE: An upload managed by the AWS Device Farm customer.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's category. Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: An upload managed by AWS Device Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadCategory"
              }
            },
            "zonbookDocumentation": "\n        <simpara>An app or a set of one or more tests to upload or that have been\n            uploaded.</simpara>\n      ",
            "documentation": "\n        <p>An app or a set of one or more tests to upload or that have been\n            uploaded.</p>\n      ",
            "shape_name": "Upload"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get upload request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get upload request.</p>\n      ",
        "shape_name": "GetUploadResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about an upload.</p>\n      "
    },
    "GetSuite": {
      "name": "GetSuite",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The suite's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The suite's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get suite operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get suite operation.</p>\n      ",
        "shape_name": "GetSuiteRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "suite": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The suite's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The suite's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The suite's name.</simpara>\n      ",
                "documentation": "\n        <p>The suite's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The suite's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The suite's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the suite was created.</simpara>\n      ",
                "documentation": "\n        <p>When the suite was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The suite's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The suite's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The suite's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The suite's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The suite's start time.</simpara>\n      ",
                "documentation": "\n        <p>The suite's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The suite's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The suite's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The suite's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The suite's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the suite's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the suite's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test\n            suite.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test\n            suite.</p>\n      ",
                "shape_name": "DeviceMinutes"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A collection of one or more tests.</simpara>\n      ",
            "documentation": "\n        <p>A collection of one or more tests.</p>\n      ",
            "shape_name": "Suite"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get suite request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get suite request.</p>\n      ",
        "shape_name": "GetSuiteResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a suite.</p>\n      "
    },
    "GetTest": {
      "name": "GetTest",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The test's ARN.</simpara>\n      ",
            "documentation": "\n        <p>The test's ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the get test operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the get test operation.</p>\n      ",
        "shape_name": "GetTestRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "test": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The test's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The test's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The test's name.</simpara>\n      ",
                "documentation": "\n        <p>The test's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The test's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the test was created.</simpara>\n      ",
                "documentation": "\n        <p>When the test was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The test's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The test's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The test's start time.</simpara>\n      ",
                "documentation": "\n        <p>The test's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The test's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The test's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The test's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The test's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the test's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the test's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test.</p>\n      ",
                "shape_name": "DeviceMinutes"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A test condition that is evaluated.</simpara>\n      ",
            "documentation": "\n        <p>A test condition that is evaluated.</p>\n      ",
            "shape_name": "Test"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a get test request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a get test request.</p>\n      ",
        "shape_name": "GetTestResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about a test.</p>\n      "
    },
    "GetVPCEConfiguration": {
      "name": "GetVPCEConfiguration",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "GetVPCEConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "vpceConfiguration": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "vpceConfigurationName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
                "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
                "shape_name": "VPCEConfigurationName",
                "min_length": 0,
                "max_length": 1024
              },
              "vpceServiceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
                "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
                "shape_name": "VPCEServiceName",
                "min_length": 0,
                "max_length": 2048
              },
              "serviceDnsName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The DNS name that maps to the private IP address of the service you want to access.</para>\n      ",
                "documentation": "\n         <p>The DNS name that maps to the private IP address of the service you want to access.</p>\n      ",
                "shape_name": "ServiceDnsName",
                "min_length": 0,
                "max_length": 2048
              },
              "vpceConfigurationDescription": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
                "shape_name": "VPCEConfigurationDescription",
                "min_length": 0,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfiguration"
          }
        },
        "shape_name": "GetVPCEConfigurationResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint.</p>\n      "
    },
    "InstallToRemoteAccessSession": {
      "name": "InstallToRemoteAccessSession",
      "input": {
        "type": "structure",
        "members": {
          "remoteAccessSessionArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session about which you are\n            requesting information.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session about which you are\n            requesting information.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "appArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the app about which you are requesting\n            information.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the app about which you are requesting\n            information.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to install an Android application (in .apk format) or an iOS\n            application (in .ipa format) as part of a remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to install an Android application (in .apk format) or an iOS\n            application (in .ipa format) as part of a remote access session.</p>\n      ",
        "shape_name": "InstallToRemoteAccessSessionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "appUpload": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The upload's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's file name.</simpara>\n      ",
                "documentation": "\n        <p>The upload's file name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the upload was created.</simpara>\n      ",
                "documentation": "\n        <p>When the upload was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ANDROID_APP",
                  "IOS_APP",
                  "WEB_APP",
                  "EXTERNAL_DATA",
                  "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_PYTHON_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                  "CALABASH_TEST_PACKAGE",
                  "INSTRUMENTATION_TEST_PACKAGE",
                  "UIAUTOMATION_TEST_PACKAGE",
                  "UIAUTOMATOR_TEST_PACKAGE",
                  "XCTEST_TEST_PACKAGE",
                  "XCTEST_UI_TEST_PACKAGE",
                  "APPIUM_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_PYTHON_TEST_SPEC",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_WEB_PYTHON_TEST_SPEC",
                  "INSTRUMENTATION_TEST_SPEC",
                  "XCTEST_UI_TEST_SPEC"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web appliction upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "PROCESSING",
                  "SUCCEEDED",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's status.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FAILED: A failed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INITIALIZED: An initialized status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SUCCEEDED: A succeeded status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's status.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>FAILED: A failed status.</p>\n            </li>\n            <li>\n                <p>INITIALIZED: An initialized status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SUCCEEDED: A succeeded status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadStatus"
              },
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</simpara>\n      ",
                "documentation": "\n        <p>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</p>\n      ",
                "shape_name": "URL",
                "min_length": 0,
                "max_length": 2048
              },
              "metadata": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</simpara>\n      ",
                "documentation": "\n        <p>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</p>\n      ",
                "shape_name": "Metadata",
                "min_length": 0,
                "max_length": 8192
              },
              "contentType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
                "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
                "shape_name": "ContentType",
                "min_length": 0,
                "max_length": 64
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the upload's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the upload's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "category": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <para>The upload's category. Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>CURATED: An upload managed by AWS Device Farm.</para>\n            </listitem>\n            <listitem>\n                <para>PRIVATE: An upload managed by the AWS Device Farm customer.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's category. Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: An upload managed by AWS Device Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadCategory"
              }
            },
            "zonbookDocumentation": "\n        <simpara>An app to upload or that has been uploaded.</simpara>\n      ",
            "documentation": "\n        <p>An app to upload or that has been uploaded.</p>\n      ",
            "shape_name": "Upload"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the response from the server after AWS Device Farm makes a request to\n            install to a remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the response from the server after AWS Device Farm makes a request to\n            install to a remote access session.</p>\n      ",
        "shape_name": "InstallToRemoteAccessSessionResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Installs an application to the device in a remote access session. For Android\n            applications, the file must be in .apk format. For iOS applications, the file must be in\n            .ipa format.</p>\n      "
    },
    "ListArtifacts": {
      "name": "ListArtifacts",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Run, Job, Suite, or Test ARN.</simpara>\n      ",
            "documentation": "\n        <p>The Run, Job, Suite, or Test ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "type": {
            "type": "string",
            "enum": [
              "SCREENSHOT",
              "FILE",
              "LOG"
            ],
            "zonbookDocumentation": "\n        <simpara>The artifacts' type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FILE: The artifacts are files.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LOG: The artifacts are logs.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCREENSHOT: The artifacts are screenshots.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The artifacts' type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>FILE: The artifacts are files.</p>\n            </li>\n            <li>\n                <p>LOG: The artifacts are logs.</p>\n            </li>\n            <li>\n                <p>SCREENSHOT: The artifacts are screenshots.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "ArtifactCategory"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list artifacts operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list artifacts operation.</p>\n      ",
        "shape_name": "ListArtifactsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "artifacts": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the artifacts.</simpara>\n      ",
            "documentation": "\n        <p>Information about the artifacts.</p>\n      ",
            "shape_name": "Artifacts",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The artifact's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The artifact's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The artifact's name.</simpara>\n      ",
                  "documentation": "\n        <p>The artifact's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "SCREENSHOT",
                    "DEVICE_LOG",
                    "MESSAGE_LOG",
                    "VIDEO_LOG",
                    "RESULT_LOG",
                    "SERVICE_LOG",
                    "WEBKIT_LOG",
                    "INSTRUMENTATION_OUTPUT",
                    "EXERCISER_MONKEY_OUTPUT",
                    "CALABASH_JSON_OUTPUT",
                    "CALABASH_PRETTY_OUTPUT",
                    "CALABASH_STANDARD_OUTPUT",
                    "CALABASH_JAVA_XML_OUTPUT",
                    "AUTOMATION_OUTPUT",
                    "APPIUM_SERVER_OUTPUT",
                    "APPIUM_JAVA_OUTPUT",
                    "APPIUM_JAVA_XML_OUTPUT",
                    "APPIUM_PYTHON_OUTPUT",
                    "APPIUM_PYTHON_XML_OUTPUT",
                    "EXPLORER_EVENT_LOG",
                    "EXPLORER_SUMMARY_LOG",
                    "APPLICATION_CRASH_REPORT",
                    "XCTEST_LOG",
                    "VIDEO",
                    "CUSTOMER_ARTIFACT",
                    "CUSTOMER_ARTIFACT_LOG",
                    "TESTSPEC_OUTPUT"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The artifact's type.</simpara>\n        <simpara>Allowed values include the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>UNKNOWN: An unknown type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCREENSHOT: The screenshot type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>DEVICE_LOG: The device log type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MESSAGE_LOG: The message log type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RESULT_LOG: The result log type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SERVICE_LOG: The service log type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEBKIT_LOG: The web kit log type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_OUTPUT: The instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an\n                    Android fuzz test.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AUTOMATION_OUTPUT: The automation output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_SERVER_OUTPUT: The Appium server output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_OUTPUT: The Appium Java output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXPLORER_EVENT_LOG: The Explorer event log output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPLICATION_CRASH_REPORT: The application crash report output\n                    type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_LOG: The XCode test output type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The artifact's type.</p>\n        <p>Allowed values include the following:</p>\n        <ul>\n            <li>\n                <p>UNKNOWN: An unknown type.</p>\n            </li>\n            <li>\n                <p>SCREENSHOT: The screenshot type.</p>\n            </li>\n            <li>\n                <p>DEVICE_LOG: The device log type.</p>\n            </li>\n            <li>\n                <p>MESSAGE_LOG: The message log type.</p>\n            </li>\n            <li>\n                <p>RESULT_LOG: The result log type.</p>\n            </li>\n            <li>\n                <p>SERVICE_LOG: The service log type.</p>\n            </li>\n            <li>\n                <p>WEBKIT_LOG: The web kit log type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p>\n            </li>\n            <li>\n                <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an\n                    Android fuzz test.</p>\n            </li>\n            <li>\n                <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p>\n            </li>\n            <li>\n                <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p>\n            </li>\n            <li>\n                <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p>\n            </li>\n            <li>\n                <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p>\n            </li>\n            <li>\n                <p>AUTOMATION_OUTPUT: The automation output type.</p>\n            </li>\n            <li>\n                <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p>\n            </li>\n            <li>\n                <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p>\n            </li>\n            <li>\n                <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p>\n            </li>\n            <li>\n                <p>APPLICATION_CRASH_REPORT: The application crash report output\n                    type.</p>\n            </li>\n            <li>\n                <p>XCTEST_LOG: The XCode test output type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ArtifactType"
                },
                "extension": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The artifact's file extension.</simpara>\n      ",
                  "documentation": "\n        <p>The artifact's file extension.</p>\n      ",
                  "shape_name": "String"
                },
                "url": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that can be used with a corresponding GET request to\n            download the artifact's file.</simpara>\n      ",
                  "documentation": "\n        <p>The pre-signed Amazon S3 URL that can be used with a corresponding GET request to\n            download the artifact's file.</p>\n      ",
                  "shape_name": "URL",
                  "min_length": 0,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents the output of a test. Examples of artifacts include logs and\n            screenshots.</simpara>\n      ",
              "documentation": "\n        <p>Represents the output of a test. Examples of artifacts include logs and\n            screenshots.</p>\n      ",
              "shape_name": "Artifact"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list artifacts operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list artifacts operation.</p>\n      ",
        "shape_name": "ListArtifactsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about artifacts.</p>\n      "
    },
    "ListDevices": {
      "name": "ListDevices",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          },
          "filters": {
            "type": "list",
            "zonbookDocumentation": "\n        <para>Used to select a set of devices. A filter is made up of an\n            attribute, an operator, and one or more values.</para>\n        <itemizedlist>\n            <listitem>\n                <para>Attribute: The aspect of a device such as platform or model\n                    used as the selction criteria in a device filter.</para>\n                <para>Allowed values include:</para>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                            For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>AVAILABILITY: The current availability of the device.\n                            Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>FORM_FACTOR: The device form factor. Valid values are\n                            \"PHONE\" or \"TABLET\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                            access.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                            debugging.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <para>Operator: The filter operator.</para>\n                <itemizedlist>\n                    <listitem>\n                        <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The IN and NOT_IN operators are available for the\n                            ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                            operators are also available for the OS_VERSION attribute.</para>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <para>Values: An array of one or more filter values.</para>\n                <itemizedlist>\n                    <listitem>\n                        <para>The IN and NOT operators can take a values array that has more than one element.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The other operators require an array with a single element.</para>\n                    </listitem>\n                    <listitem>\n                        <para>In a request, the AVAILABILITY attribute takes\n                            \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\" as values.</para>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>Used to select a set of devices. A filter is made up of an\n            attribute, an operator, and one or more values.</p>\n        <ul>\n            <li>\n                <p>Attribute: The aspect of a device such as platform or model\n                    used as the selction criteria in a device filter.</p>\n                <p>Allowed values include:</p>\n                <ul>\n                  <li>\n                        <p>ARN: The Amazon Resource Name (ARN) of the device.\n                            For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n                    </li>\n                  <li>\n                        <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n                    </li>\n                  <li>\n                        <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n                    </li>\n                  <li>\n                        <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n                    </li>\n                  <li>\n                        <p>AVAILABILITY: The current availability of the device.\n                            Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\".</p>\n                    </li>\n                  <li>\n                        <p>FORM_FACTOR: The device form factor. Valid values are\n                            \"PHONE\" or \"TABLET\".</p>\n                    </li>\n                  <li>\n                        <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n                    </li>\n                  <li>\n                        <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                            access.</p>\n                    </li>\n                  <li>\n                        <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                            debugging.</p>\n                    </li>\n                  <li>\n                        <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n                    </li>\n                  <li>\n                        <p>INSTANCE_LABELS: The label of the device instance.</p>\n                    </li>\n                  <li>\n                        <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Operator: The filter operator.</p>\n                <ul>\n                  <li>\n                        <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n                    </li>\n                  <li>\n                        <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n                    </li>\n                  <li>\n                        <p>The IN and NOT_IN operators are available for the\n                            ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n                    </li>\n                  <li>\n                        <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                            operators are also available for the OS_VERSION attribute.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Values: An array of one or more filter values.</p>\n                <ul>\n                  <li>\n                        <p>The IN and NOT operators can take a values array that has more than one element.</p>\n                    </li>\n                  <li>\n                        <p>The other operators require an array with a single element.</p>\n                    </li>\n                  <li>\n                        <p>In a request, the AVAILABILITY attribute takes\n                            \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\" as values.</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n      ",
            "shape_name": "DeviceFilters",
            "members": {
              "type": "structure",
              "members": {
                "attribute": {
                  "type": "string",
                  "enum": [
                    "ARN",
                    "PLATFORM",
                    "OS_VERSION",
                    "MODEL",
                    "AVAILABILITY",
                    "FORM_FACTOR",
                    "MANUFACTURER",
                    "REMOTE_ACCESS_ENABLED",
                    "REMOTE_DEBUG_ENABLED",
                    "INSTANCE_ARN",
                    "INSTANCE_LABELS",
                    "FLEET_TYPE"
                  ],
                  "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceFilterAttribute"
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "EQUALS",
                    "LESS_THAN",
                    "LESS_THAN_OR_EQUALS",
                    "GREATER_THAN",
                    "GREATER_THAN_OR_EQUALS",
                    "IN",
                    "NOT_IN",
                    "CONTAINS"
                  ],
                  "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceFilterOperator"
                },
                "values": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceFilterValues",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                }
              },
              "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
              "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
              "shape_name": "DeviceFilter"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list devices request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list devices request.</p>\n      ",
        "shape_name": "ListDevicesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "devices": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the devices.</simpara>\n      ",
            "documentation": "\n        <p>Information about the devices.</p>\n      ",
            "shape_name": "Devices",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The device's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                  "documentation": "\n        <p>The device's display name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "manufacturer": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                  "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                  "shape_name": "String"
                },
                "model": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                  "documentation": "\n        <p>The device's model name.</p>\n      ",
                  "shape_name": "String"
                },
                "modelId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                  "documentation": "\n        <p>The device's model ID.</p>\n      ",
                  "shape_name": "String"
                },
                "formFactor": {
                  "type": "string",
                  "enum": [
                    "PHONE",
                    "TABLET"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceFormFactor"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ANDROID",
                    "IOS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DevicePlatform"
                },
                "os": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                  "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                  "shape_name": "String"
                },
                "cpu": {
                  "type": "structure",
                  "members": {
                    "frequency": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                      "shape_name": "String"
                    },
                    "architecture": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                      "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                      "shape_name": "String"
                    },
                    "clock": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                      "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                  "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                  "shape_name": "CPU"
                },
                "resolution": {
                  "type": "structure",
                  "members": {
                    "width": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                      "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "height": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                      "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                  "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                  "shape_name": "Resolution"
                },
                "heapSize": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                  "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                  "shape_name": "Long"
                },
                "memory": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                  "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                  "shape_name": "Long"
                },
                "image": {
                  "type": "string",
                  "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                  "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                  "shape_name": "String"
                },
                "carrier": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                  "documentation": "\n        <p>The device's carrier.</p>\n      ",
                  "shape_name": "String"
                },
                "radio": {
                  "type": "string",
                  "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                  "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                  "shape_name": "String"
                },
                "remoteAccessEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                  "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "remoteDebugEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                  "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "fleetType": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                  "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                  "shape_name": "String"
                },
                "fleetName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                  "shape_name": "String"
                },
                "instances": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                  "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                  "shape_name": "DeviceInstances",
                  "members": {
                    "type": "structure",
                    "members": {
                      "arn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                        "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                        "shape_name": "AmazonResourceName",
                        "min_length": 32
                      },
                      "deviceArn": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                        "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                        "shape_name": "AmazonResourceName",
                        "min_length": 32
                      },
                      "labels": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                        "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                        "shape_name": "InstanceLabels",
                        "members": {
                          "type": "string",
                          "shape_name": "String",
                          "documentation": null
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "IN_USE",
                          "PREPARING",
                          "AVAILABLE",
                          "NOT_AVAILABLE"
                        ],
                        "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                        "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                        "shape_name": "InstanceStatus"
                      },
                      "udid": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                        "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                        "shape_name": "String"
                      },
                      "instanceProfile": {
                        "type": "structure",
                        "members": {
                          "arn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "packageCleanup": {
                            "type": "boolean",
                            "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                            "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                            "shape_name": "Boolean"
                          },
                          "excludeAppPackagesFromCleanup": {
                            "type": "list",
                            "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                            "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                            "shape_name": "PackageIds",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          },
                          "rebootAfterUse": {
                            "type": "boolean",
                            "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                            "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                            "shape_name": "Boolean"
                          },
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                            "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                            "shape_name": "Name",
                            "min_length": 0,
                            "max_length": 256
                          },
                          "description": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                            "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                            "shape_name": "Message",
                            "min_length": 0,
                            "max_length": 16384
                          }
                        },
                        "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                        "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                        "shape_name": "InstanceProfile"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                    "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                    "shape_name": "DeviceInstance"
                  }
                },
                "availability": {
                  "type": "string",
                  "enum": [
                    "TEMPORARY_NOT_AVAILABLE",
                    "BUSY",
                    "AVAILABLE",
                    "HIGHLY_AVAILABLE"
                  ],
                  "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                  "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                  "shape_name": "DeviceAvailability"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a device type that an app is tested against.</simpara>\n      ",
              "documentation": "\n        <p>Represents a device type that an app is tested against.</p>\n      ",
              "shape_name": "Device"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list devices operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list devices operation.</p>\n      ",
        "shape_name": "ListDevicesResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about unique device types.</p>\n      "
    },
    "ListDeviceInstances": {
      "name": "ListDeviceInstances",
      "input": {
        "type": "structure",
        "members": {
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>An integer specifying the maximum number of items you want to return in the API response.</para>\n      ",
            "documentation": "\n         <p>An integer specifying the maximum number of items you want to return in the API response.</p>\n      ",
            "shape_name": "Integer"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListDeviceInstancesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "deviceInstances": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An object containing information about your device instances.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your device instances.</p>\n      ",
            "shape_name": "DeviceInstances",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "deviceArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "labels": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                  "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                  "shape_name": "InstanceLabels",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "IN_USE",
                    "PREPARING",
                    "AVAILABLE",
                    "NOT_AVAILABLE"
                  ],
                  "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                  "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                  "shape_name": "InstanceStatus"
                },
                "udid": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                  "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                  "shape_name": "String"
                },
                "instanceProfile": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                      "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "packageCleanup": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                      "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "excludeAppPackagesFromCleanup": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                      "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                      "shape_name": "PackageIds",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    },
                    "rebootAfterUse": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                      "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                      "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "description": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                      "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                      "shape_name": "Message",
                      "min_length": 0,
                      "max_length": 16384
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                  "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                  "shape_name": "InstanceProfile"
                }
              },
              "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
              "documentation": "\n         <p>Represents the device instance.</p>\n      ",
              "shape_name": "DeviceInstance"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that can be used in the next call to this operation to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that can be used in the next call to this operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListDeviceInstancesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about the private device instances associated with one or more AWS accounts.</p>\n      "
    },
    "ListDevicePools": {
      "name": "ListDevicePools",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The project ARN.</simpara>\n      ",
            "documentation": "\n        <p>The project ARN.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "type": {
            "type": "string",
            "enum": [
              "CURATED",
              "PRIVATE"
            ],
            "zonbookDocumentation": "\n        <simpara>The device pools' type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The device pools' type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "DevicePoolType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list device pools request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list device pools request.</p>\n      ",
        "shape_name": "ListDevicePoolsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "devicePools": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the device pools.</simpara>\n      ",
            "documentation": "\n        <p>Information about the device pools.</p>\n      ",
            "shape_name": "DevicePools",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device pool's name.</simpara>\n      ",
                  "documentation": "\n        <p>The device pool's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The device pool's description.</simpara>\n      ",
                  "documentation": "\n        <p>The device pool's description.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURATED",
                    "PRIVATE"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The device pool's type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The device pool's type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DevicePoolType"
                },
                "rules": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>Information about the device pool's rules.</simpara>\n      ",
                  "documentation": "\n        <p>Information about the device pool's rules.</p>\n      ",
                  "shape_name": "Rules",
                  "members": {
                    "type": "structure",
                    "members": {
                      "attribute": {
                        "type": "string",
                        "enum": [
                          "ARN",
                          "PLATFORM",
                          "FORM_FACTOR",
                          "MANUFACTURER",
                          "REMOTE_ACCESS_ENABLED",
                          "REMOTE_DEBUG_ENABLED",
                          "APPIUM_VERSION",
                          "INSTANCE_ARN",
                          "INSTANCE_LABELS",
                          "FLEET_TYPE"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                        "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "DeviceAttribute"
                      },
                      "operator": {
                        "type": "string",
                        "enum": [
                          "EQUALS",
                          "LESS_THAN",
                          "GREATER_THAN",
                          "IN",
                          "NOT_IN",
                          "CONTAINS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                        "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "RuleOperator"
                      },
                      "value": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                        "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
                    "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
                    "shape_name": "Rule"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a collection of device types.</simpara>\n      ",
              "documentation": "\n        <p>Represents a collection of device types.</p>\n      ",
              "shape_name": "DevicePool"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list device pools request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list device pools request.</p>\n      ",
        "shape_name": "ListDevicePoolsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about device pools.</p>\n      "
    },
    "ListJobs": {
      "name": "ListJobs",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The run's Amazon Resource Name (ARN).</simpara>\n      ",
            "documentation": "\n        <p>The run's Amazon Resource Name (ARN).</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list jobs operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list jobs operation.</p>\n      ",
        "shape_name": "ListJobsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "jobs": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the jobs.</simpara>\n      ",
            "documentation": "\n        <p>Information about the jobs.</p>\n      ",
            "shape_name": "Jobs",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The job's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The job's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The job's name.</simpara>\n      ",
                  "documentation": "\n        <p>The job's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BUILTIN_FUZZ",
                    "BUILTIN_EXPLORER",
                    "WEB_PERFORMANCE_PROFILE",
                    "APPIUM_JAVA_JUNIT",
                    "APPIUM_JAVA_TESTNG",
                    "APPIUM_PYTHON",
                    "APPIUM_WEB_JAVA_JUNIT",
                    "APPIUM_WEB_JAVA_TESTNG",
                    "APPIUM_WEB_PYTHON",
                    "CALABASH",
                    "INSTRUMENTATION",
                    "UIAUTOMATION",
                    "UIAUTOMATOR",
                    "XCTEST",
                    "XCTEST_UI",
                    "REMOTE_ACCESS_RECORD",
                    "REMOTE_ACCESS_REPLAY"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The job's type.</simpara>\n        <simpara>Allowed values include the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The job's type.</p>\n        <p>Allowed values include the following:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "TestType"
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the job was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the job was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The job's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The job's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionStatus"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The job's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The job's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionResult"
                },
                "started": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The job's start time.</simpara>\n      ",
                  "documentation": "\n        <p>The job's start time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "stopped": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The job's stop time.</simpara>\n      ",
                  "documentation": "\n        <p>The job's stop time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "counters": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                      "documentation": "\n        <p>The total number of entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "passed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "failed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "warned": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "errored": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "stopped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "skipped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The job's result counters.</simpara>\n      ",
                  "documentation": "\n        <p>The job's result counters.</p>\n      ",
                  "shape_name": "Counters"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the job's result.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the job's result.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "device": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                      "documentation": "\n        <p>The device's ARN.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's display name.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "manufacturer": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "model": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's model name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "modelId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                      "documentation": "\n        <p>The device's model ID.</p>\n      ",
                      "shape_name": "String"
                    },
                    "formFactor": {
                      "type": "string",
                      "enum": [
                        "PHONE",
                        "TABLET"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFormFactor"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "os": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                      "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                      "shape_name": "String"
                    },
                    "cpu": {
                      "type": "structure",
                      "members": {
                        "frequency": {
                          "type": "string",
                          "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                          "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                          "shape_name": "String"
                        },
                        "architecture": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                          "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                          "shape_name": "String"
                        },
                        "clock": {
                          "type": "double",
                          "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                          "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                          "shape_name": "Double"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                      "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                      "shape_name": "CPU"
                    },
                    "resolution": {
                      "type": "structure",
                      "members": {
                        "width": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        },
                        "height": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                      "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                      "shape_name": "Resolution"
                    },
                    "heapSize": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "memory": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "carrier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                      "documentation": "\n        <p>The device's carrier.</p>\n      ",
                      "shape_name": "String"
                    },
                    "radio": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                      "shape_name": "String"
                    },
                    "remoteAccessEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "remoteDebugEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "fleetType": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                      "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                      "shape_name": "String"
                    },
                    "fleetName": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "instances": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                      "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                      "shape_name": "DeviceInstances",
                      "members": {
                        "type": "structure",
                        "members": {
                          "arn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "deviceArn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "labels": {
                            "type": "list",
                            "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                            "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                            "shape_name": "InstanceLabels",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_USE",
                              "PREPARING",
                              "AVAILABLE",
                              "NOT_AVAILABLE"
                            ],
                            "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                            "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                            "shape_name": "InstanceStatus"
                          },
                          "udid": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                            "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                            "shape_name": "String"
                          },
                          "instanceProfile": {
                            "type": "structure",
                            "members": {
                              "arn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                                "shape_name": "AmazonResourceName",
                                "min_length": 32
                              },
                              "packageCleanup": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "excludeAppPackagesFromCleanup": {
                                "type": "list",
                                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                                "shape_name": "PackageIds",
                                "members": {
                                  "type": "string",
                                  "shape_name": "String",
                                  "documentation": null
                                }
                              },
                              "rebootAfterUse": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                                "shape_name": "Name",
                                "min_length": 0,
                                "max_length": 256
                              },
                              "description": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                                "shape_name": "Message",
                                "min_length": 0,
                                "max_length": 16384
                              }
                            },
                            "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                            "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                            "shape_name": "InstanceProfile"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                        "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                        "shape_name": "DeviceInstance"
                      }
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "TEMPORARY_NOT_AVAILABLE",
                        "BUSY",
                        "AVAILABLE",
                        "HIGHLY_AVAILABLE"
                      ],
                      "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                      "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                      "shape_name": "DeviceAvailability"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The device (phone or tablet).</simpara>\n      ",
                  "documentation": "\n        <p>The device (phone or tablet).</p>\n      ",
                  "shape_name": "Device"
                },
                "instanceArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "deviceMinutes": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "metered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "unmetered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the job.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the job.</p>\n      ",
                  "shape_name": "DeviceMinutes"
                },
                "videoEndpoint": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The endpoint for streaming device video.</para>\n      ",
                  "documentation": "\n        <p>The endpoint for streaming device video.</p>\n      ",
                  "shape_name": "String"
                },
                "videoCapture": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <para>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</para>\n      ",
                  "documentation": "\n        <p>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</p>\n      ",
                  "shape_name": "VideoCapture"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a device.</simpara>\n      ",
              "documentation": "\n        <p>Represents a device.</p>\n      ",
              "shape_name": "Job"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list jobs request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list jobs request.</p>\n      ",
        "shape_name": "ListJobsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about jobs for a given test run.</p>\n      "
    },
    "ListNetworkProfiles": {
      "name": "ListNetworkProfiles",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to list network\n            profiles.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to list network\n            profiles.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "type": {
            "type": "string",
            "enum": [
              "CURATED",
              "PRIVATE"
            ],
            "zonbookDocumentation": "\n        <simpara>The type of network profile you wish to return information about. Valid values are\n            listed below.</simpara>\n      ",
            "documentation": "\n        <p>The type of network profile you wish to return information about. Valid values are\n            listed below.</p>\n      ",
            "shape_name": "NetworkProfileType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListNetworkProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "networkProfiles": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of the available network profiles.</simpara>\n      ",
            "documentation": "\n        <p>A list of the available network profiles.</p>\n      ",
            "shape_name": "NetworkProfiles",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                  "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CURATED",
                    "PRIVATE"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                  "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                  "shape_name": "NetworkProfileType"
                },
                "uplinkBandwidthBits": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                  "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                  "shape_name": "Long"
                },
                "downlinkBandwidthBits": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                  "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                  "shape_name": "Long"
                },
                "uplinkDelayMs": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                  "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                  "shape_name": "Long"
                },
                "downlinkDelayMs": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                  "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                  "shape_name": "Long"
                },
                "uplinkJitterMs": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                  "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                  "shape_name": "Long"
                },
                "downlinkJitterMs": {
                  "type": "long",
                  "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                  "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                  "shape_name": "Long"
                },
                "uplinkLossPercent": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                  "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                  "shape_name": "PercentInteger",
                  "min_length": 0,
                  "max_length": 100
                },
                "downlinkLossPercent": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                  "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                  "shape_name": "PercentInteger",
                  "min_length": 0,
                  "max_length": 100
                }
              },
              "zonbookDocumentation": "\n        <simpara>An array of settings that describes characteristics of a network profile.</simpara>\n      ",
              "documentation": "\n        <p>An array of settings that describes characteristics of a network profile.</p>\n      ",
              "shape_name": "NetworkProfile"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListNetworkProfilesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns the list of available network profiles.</p>\n      "
    },
    "ListInstanceProfiles": {
      "name": "ListInstanceProfiles",
      "input": {
        "type": "structure",
        "members": {
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>An integer specifying the maximum number of items you want to return in the API response.</para>\n      ",
            "documentation": "\n         <p>An integer specifying the maximum number of items you want to return in the API response.</p>\n      ",
            "shape_name": "Integer"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListInstanceProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceProfiles": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An object containing information about your instance profiles.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your instance profiles.</p>\n      ",
            "shape_name": "InstanceProfiles",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "packageCleanup": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                  "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "excludeAppPackagesFromCleanup": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                  "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                  "shape_name": "PackageIds",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                },
                "rebootAfterUse": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                  "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                  "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                  "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                }
              },
              "zonbookDocumentation": "\n         <para>Represents the instance profile.</para>\n      ",
              "documentation": "\n         <p>Represents the instance profile.</p>\n      ",
              "shape_name": "InstanceProfile"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that can be used in the next call to this operation to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that can be used in the next call to this operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListInstanceProfilesResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about all the instance profiles in an AWS account.</p>\n      "
    },
    "ListOfferings": {
      "name": "ListOfferings",
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to list all offerings.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to list all offerings.</p>\n      ",
        "shape_name": "ListOfferingsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "offerings": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A value representing the list offering results.</simpara>\n      ",
            "documentation": "\n        <p>A value representing the list offering results.</p>\n      ",
            "shape_name": "Offerings",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                  "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                  "shape_name": "OfferingIdentifier",
                  "min_length": 32
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                  "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "RECURRING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                  "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                  "shape_name": "OfferingType"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ANDROID",
                    "IOS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                  "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                  "shape_name": "DevicePlatform"
                },
                "recurringCharges": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                  "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                  "shape_name": "RecurringCharges",
                  "members": {
                    "type": "structure",
                    "members": {
                      "cost": {
                        "type": "structure",
                        "members": {
                          "amount": {
                            "type": "double",
                            "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                            "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                            "shape_name": "Double"
                          },
                          "currencyCode": {
                            "type": "string",
                            "enum": [
                              "USD"
                            ],
                            "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                            "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                            "shape_name": "CurrencyCode"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                        "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                        "shape_name": "MonetaryAmount"
                      },
                      "frequency": {
                        "type": "string",
                        "enum": [
                          "MONTHLY"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                        "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                        "shape_name": "RecurringChargeFrequency"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                    "shape_name": "RecurringCharge"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents the metadata of a device offering.</simpara>\n      ",
              "documentation": "\n        <p>Represents the metadata of a device offering.</p>\n      ",
              "shape_name": "Offering"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the return values of the list of offerings.</simpara>\n      ",
        "documentation": "\n        <p>Represents the return values of the list of offerings.</p>\n      ",
        "shape_name": "ListOfferingsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns a list of products or offerings that the user can manage through the API.\n            Each offering record indicates the recurring price per unit and the frequency for that\n            offering. The API returns a <code>NotEligible</code> error if the user is not permitted\n            to invoke the operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n        \n      "
    },
    "ListOfferingTransactions": {
      "name": "ListOfferingTransactions",
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to list the offering transaction history.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to list the offering transaction history.</p>\n      ",
        "shape_name": "ListOfferingTransactionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "offeringTransactions": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The audit log of subscriptions you have purchased and modified through AWS Device\n            Farm.</simpara>\n      ",
            "documentation": "\n        <p>The audit log of subscriptions you have purchased and modified through AWS Device\n            Farm.</p>\n      ",
            "shape_name": "OfferingTransactions",
            "members": {
              "type": "structure",
              "members": {
                "offeringStatus": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "PURCHASE",
                        "RENEW",
                        "SYSTEM"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type specified for the offering status.</simpara>\n      ",
                      "documentation": "\n        <p>The type specified for the offering status.</p>\n      ",
                      "shape_name": "OfferingTransactionType"
                    },
                    "offering": {
                      "type": "structure",
                      "members": {
                        "id": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                          "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                          "shape_name": "OfferingIdentifier",
                          "min_length": 32
                        },
                        "description": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                          "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                          "shape_name": "Message",
                          "min_length": 0,
                          "max_length": 16384
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "RECURRING"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                          "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                          "shape_name": "OfferingType"
                        },
                        "platform": {
                          "type": "string",
                          "enum": [
                            "ANDROID",
                            "IOS"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                          "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                          "shape_name": "DevicePlatform"
                        },
                        "recurringCharges": {
                          "type": "list",
                          "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                          "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                          "shape_name": "RecurringCharges",
                          "members": {
                            "type": "structure",
                            "members": {
                              "cost": {
                                "type": "structure",
                                "members": {
                                  "amount": {
                                    "type": "double",
                                    "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                                    "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                                    "shape_name": "Double"
                                  },
                                  "currencyCode": {
                                    "type": "string",
                                    "enum": [
                                      "USD"
                                    ],
                                    "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                                    "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                                    "shape_name": "CurrencyCode"
                                  }
                                },
                                "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                                "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                                "shape_name": "MonetaryAmount"
                              },
                              "frequency": {
                                "type": "string",
                                "enum": [
                                  "MONTHLY"
                                ],
                                "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                                "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                                "shape_name": "RecurringChargeFrequency"
                              }
                            },
                            "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                            "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                            "shape_name": "RecurringCharge"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering status.</simpara>\n      ",
                      "documentation": "\n        <p>Represents the metadata of an offering status.</p>\n      ",
                      "shape_name": "Offering"
                    },
                    "quantity": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of available devices in the offering.</simpara>\n      ",
                      "documentation": "\n        <p>The number of available devices in the offering.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "effectiveOn": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date on which the offering is effective.</simpara>\n      ",
                      "documentation": "\n        <p>The date on which the offering is effective.</p>\n      ",
                      "shape_name": "DateTime"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The status of an offering transaction.</simpara>\n      ",
                  "documentation": "\n        <p>The status of an offering transaction.</p>\n      ",
                  "shape_name": "OfferingStatus"
                },
                "transactionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The transaction ID of the offering transaction.</simpara>\n      ",
                  "documentation": "\n        <p>The transaction ID of the offering transaction.</p>\n      ",
                  "shape_name": "TransactionIdentifier",
                  "min_length": 32
                },
                "offeringPromotionId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering promotion.</simpara>\n      ",
                  "documentation": "\n        <p>The ID that corresponds to a device offering promotion.</p>\n      ",
                  "shape_name": "OfferingPromotionIdentifier",
                  "min_length": 4
                },
                "createdOn": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date on which an offering transaction was created.</simpara>\n      ",
                  "documentation": "\n        <p>The date on which an offering transaction was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "cost": {
                  "type": "structure",
                  "members": {
                    "amount": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                      "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "currencyCode": {
                      "type": "string",
                      "enum": [
                        "USD"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                      "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                      "shape_name": "CurrencyCode"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The cost of an offering transaction.</simpara>\n      ",
                  "documentation": "\n        <p>The cost of an offering transaction.</p>\n      ",
                  "shape_name": "MonetaryAmount"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering transaction.</simpara>\n      ",
              "documentation": "\n        <p>Represents the metadata of an offering transaction.</p>\n      ",
              "shape_name": "OfferingTransaction"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Returns the transaction log of the specified offerings.</simpara>\n      ",
        "documentation": "\n        <p>Returns the transaction log of the specified offerings.</p>\n      ",
        "shape_name": "ListOfferingTransactionsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns a list of all historical purchases, renewals, and system renewal\n            transactions for an AWS account. The list is paginated and ordered by a descending\n            timestamp (most recent transactions are first). The API returns a\n                <code>NotEligible</code> error if the user is not permitted to invoke the operation.\n            Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n        \n      "
    },
    "ListOfferingPromotions": {
      "name": "ListOfferingPromotions",
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListOfferingPromotionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "offeringPromotions": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the offering promotions.</simpara>\n      ",
            "documentation": "\n        <p>Information about the offering promotions.</p>\n      ",
            "shape_name": "OfferingPromotions",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The ID of the offering promotion.</simpara>\n      ",
                  "documentation": "\n        <p>The ID of the offering promotion.</p>\n      ",
                  "shape_name": "OfferingPromotionIdentifier",
                  "min_length": 4
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A string describing the offering promotion.</simpara>\n      ",
                  "documentation": "\n        <p>A string describing the offering promotion.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents information about an offering promotion.</simpara>\n      ",
              "documentation": "\n        <p>Represents information about an offering promotion.</p>\n      ",
              "shape_name": "OfferingPromotion"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier to be used in the next call to this operation, to return the next set\n            of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier to be used in the next call to this operation, to return the next set\n            of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListOfferingPromotionsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns a list of offering promotions. Each offering promotion record contains the\n            ID and description of the promotion. The API returns a <code>NotEligible</code> error if\n            the caller is not permitted to invoke the operation. Contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n      "
    },
    "ListProjects": {
      "name": "ListProjects",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm\n            returns a list of all projects for the AWS account. You can also specify a project\n            ARN.</simpara>\n      ",
            "documentation": "\n        <p>Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm\n            returns a list of all projects for the AWS account. You can also specify a project\n            ARN.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list projects operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list projects operation.</p>\n      ",
        "shape_name": "ListProjectsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "projects": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the projects.</simpara>\n      ",
            "documentation": "\n        <p>Information about the projects.</p>\n      ",
            "shape_name": "Projects",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The project's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The project's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The project's name.</simpara>\n      ",
                  "documentation": "\n        <p>The project's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "defaultJobTimeoutMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</simpara>\n      ",
                  "documentation": "\n        <p>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</p>\n      ",
                  "shape_name": "JobTimeoutMinutes"
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the project was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the project was created.</p>\n      ",
                  "shape_name": "DateTime"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents an operating-system neutral workspace for running and managing\n            tests.</simpara>\n      ",
              "documentation": "\n        <p>Represents an operating-system neutral workspace for running and managing\n            tests.</p>\n      ",
              "shape_name": "Project"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list projects request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list projects request.</p>\n      ",
        "shape_name": "ListProjectsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about projects.</p>\n      "
    },
    "ListRuns": {
      "name": "ListRuns",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to list\n            runs.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to list\n            runs.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list runs operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list runs operation.</p>\n      ",
        "shape_name": "ListRunsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "runs": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the runs.</simpara>\n      ",
            "documentation": "\n        <p>Information about the runs.</p>\n      ",
            "shape_name": "Runs",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The run's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The run's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The run's name.</simpara>\n      ",
                  "documentation": "\n        <p>The run's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BUILTIN_FUZZ",
                    "BUILTIN_EXPLORER",
                    "WEB_PERFORMANCE_PROFILE",
                    "APPIUM_JAVA_JUNIT",
                    "APPIUM_JAVA_TESTNG",
                    "APPIUM_PYTHON",
                    "APPIUM_WEB_JAVA_JUNIT",
                    "APPIUM_WEB_JAVA_TESTNG",
                    "APPIUM_WEB_PYTHON",
                    "CALABASH",
                    "INSTRUMENTATION",
                    "UIAUTOMATION",
                    "UIAUTOMATOR",
                    "XCTEST",
                    "XCTEST_UI",
                    "REMOTE_ACCESS_RECORD",
                    "REMOTE_ACCESS_REPLAY"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The run's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The run's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "TestType"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ANDROID",
                    "IOS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The run's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The run's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DevicePlatform"
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the run was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the run was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The run's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The run's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionStatus"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The run's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The run's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionResult"
                },
                "started": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The run's start time.</simpara>\n      ",
                  "documentation": "\n        <p>The run's start time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "stopped": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The run's stop time.</simpara>\n      ",
                  "documentation": "\n        <p>The run's stop time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "counters": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                      "documentation": "\n        <p>The total number of entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "passed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "failed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "warned": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "errored": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "stopped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "skipped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The run's result counters.</simpara>\n      ",
                  "documentation": "\n        <p>The run's result counters.</p>\n      ",
                  "shape_name": "Counters"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the run's result.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the run's result.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "totalJobs": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The total number of jobs for the run.</simpara>\n      ",
                  "documentation": "\n        <p>The total number of jobs for the run.</p>\n      ",
                  "shape_name": "Integer"
                },
                "completedJobs": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The total number of completed jobs.</simpara>\n      ",
                  "documentation": "\n        <p>The total number of completed jobs.</p>\n      ",
                  "shape_name": "Integer"
                },
                "billingMethod": {
                  "type": "string",
                  "enum": [
                    "METERED",
                    "UNMETERED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                  "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                  "shape_name": "BillingMethod"
                },
                "deviceMinutes": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "metered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "unmetered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test run.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test run.</p>\n      ",
                  "shape_name": "DeviceMinutes"
                },
                "networkProfile": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                      "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "description": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                      "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                      "shape_name": "Message",
                      "min_length": 0,
                      "max_length": 16384
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CURATED",
                        "PRIVATE"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                      "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                      "shape_name": "NetworkProfileType"
                    },
                    "uplinkBandwidthBits": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                      "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "downlinkBandwidthBits": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                      "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "uplinkDelayMs": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                      "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "downlinkDelayMs": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                      "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "uplinkJitterMs": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                      "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "downlinkJitterMs": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                      "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "uplinkLossPercent": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                      "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                      "shape_name": "PercentInteger",
                      "min_length": 0,
                      "max_length": 100
                    },
                    "downlinkLossPercent": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                      "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                      "shape_name": "PercentInteger",
                      "min_length": 0,
                      "max_length": 100
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The network profile being used for a test run.</simpara>\n      ",
                  "documentation": "\n        <p>The network profile being used for a test run.</p>\n      ",
                  "shape_name": "NetworkProfile"
                },
                "parsingResultUrl": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</simpara>\n      ",
                  "documentation": "\n        <p>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</p>\n      ",
                  "shape_name": "String"
                },
                "resultCode": {
                  "type": "string",
                  "enum": [
                    "PARSING_FAILED",
                    "VPC_ENDPOINT_SETUP_FAILED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</simpara>\n      ",
                  "documentation": "\n        <p>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</p>\n      ",
                  "shape_name": "ExecutionResultCode"
                },
                "seed": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <para>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</para>\n      ",
                  "documentation": "\n        <p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</p>\n      ",
                  "shape_name": "Integer"
                },
                "appUpload": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>An app to upload or that has been uploaded.</para>\n      ",
                  "documentation": "\n        <p>An app to upload or that has been uploaded.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "eventCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <para>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</para>\n      ",
                  "documentation": "\n        <p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</p>\n      ",
                  "shape_name": "Integer"
                },
                "jobTimeoutMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <para>The number of minutes the job will execute before it times out.</para>\n      ",
                  "documentation": "\n        <p>The number of minutes the job will execute before it times out.</p>\n      ",
                  "shape_name": "JobTimeoutMinutes"
                },
                "devicePoolArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The ARN of the device pool for the run.</para>\n      ",
                  "documentation": "\n        <p>The ARN of the device pool for the run.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "locale": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>Information about the locale that is used for the run.</para>\n      ",
                  "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                  "shape_name": "String"
                },
                "radios": {
                  "type": "structure",
                  "members": {
                    "wifi": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                      "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "bluetooth": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                      "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "nfc": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                      "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "gps": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                      "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                      "shape_name": "Boolean"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>Information about the radio states for the run.</para>\n      ",
                  "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                  "shape_name": "Radios"
                },
                "location": {
                  "type": "structure",
                  "members": {
                    "latitude": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                      "documentation": "\n        <p>The latitude.</p>\n      ",
                      "required": true,
                      "shape_name": "Double"
                    },
                    "longitude": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                      "documentation": "\n        <p>The longitude.</p>\n      ",
                      "required": true,
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>Information about the location that is used for the run.</para>\n      ",
                  "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                  "shape_name": "Location"
                },
                "customerArtifactPaths": {
                  "type": "structure",
                  "members": {
                    "iosPaths": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                      "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                      "shape_name": "IosPaths",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    },
                    "androidPaths": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                      "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                      "shape_name": "AndroidPaths",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    },
                    "deviceHostPaths": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                      "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                      "shape_name": "DeviceHostPaths",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Output <code>CustomerArtifactPaths</code> object for the test run.</simpara>\n      ",
                  "documentation": "\n        <p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>\n      ",
                  "shape_name": "CustomerArtifactPaths"
                },
                "webUrl": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The Device Farm console URL for the recording of the run.</para>\n      ",
                  "documentation": "\n        <p>The Device Farm console URL for the recording of the run.</p>\n      ",
                  "shape_name": "String"
                },
                "skipAppResign": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                  "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                  "shape_name": "SkipAppResign"
                },
                "testSpecArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification for the run.</para>\n      ",
                  "documentation": "\n        <p>The ARN of the YAML-formatted test specification for the run.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "deviceSelectionResult": {
                  "type": "structure",
                  "members": {
                    "filters": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <para>The filters in a device selection result.</para>\n      ",
                      "documentation": "\n        <p>The filters in a device selection result.</p>\n      ",
                      "shape_name": "DeviceFilters",
                      "members": {
                        "type": "structure",
                        "members": {
                          "attribute": {
                            "type": "string",
                            "enum": [
                              "ARN",
                              "PLATFORM",
                              "OS_VERSION",
                              "MODEL",
                              "AVAILABILITY",
                              "FORM_FACTOR",
                              "MANUFACTURER",
                              "REMOTE_ACCESS_ENABLED",
                              "REMOTE_DEBUG_ENABLED",
                              "INSTANCE_ARN",
                              "INSTANCE_LABELS",
                              "FLEET_TYPE"
                            ],
                            "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                            "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "DeviceFilterAttribute"
                          },
                          "operator": {
                            "type": "string",
                            "enum": [
                              "EQUALS",
                              "LESS_THAN",
                              "LESS_THAN_OR_EQUALS",
                              "GREATER_THAN",
                              "GREATER_THAN_OR_EQUALS",
                              "IN",
                              "NOT_IN",
                              "CONTAINS"
                            ],
                            "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                            "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "DeviceFilterOperator"
                          },
                          "values": {
                            "type": "list",
                            "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                            "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "DeviceFilterValues",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          }
                        },
                        "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
                        "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
                        "shape_name": "DeviceFilter"
                      }
                    },
                    "matchedDevicesCount": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <para>The number of devices that matched the device filter selection criteria.</para>\n      ",
                      "documentation": "\n        <p>The number of devices that matched the device filter selection criteria.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "maxDevices": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <para>The maximum number of devices to be selected by a device filter and included in a test run.</para>\n      ",
                      "documentation": "\n        <p>The maximum number of devices to be selected by a device filter and included in a test run.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <para>The results of a device filter used to select the devices for a test run.</para>\n      ",
                  "documentation": "\n        <p>The results of a device filter used to select the devices for a test run.</p>\n      ",
                  "shape_name": "DeviceSelectionResult"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a test run on a set of devices with a given app package, test\n            parameters, etc.</simpara>\n      ",
              "documentation": "\n        <p>Represents a test run on a set of devices with a given app package, test\n            parameters, etc.</p>\n      ",
              "shape_name": "Run"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list runs request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list runs request.</p>\n      ",
        "shape_name": "ListRunsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about runs, given an AWS Device Farm project ARN.</p>\n      "
    },
    "ListRemoteAccessSessions": {
      "name": "ListRemoteAccessSessions",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session about which you are\n            requesting information.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session about which you are\n            requesting information.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to return information about the remote access\n            session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to return information about the remote access\n            session.</p>\n      ",
        "shape_name": "ListRemoteAccessSessionsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "remoteAccessSessions": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A container representing the metadata from the service about each remote access\n            session you are requesting.</simpara>\n      ",
            "documentation": "\n        <p>A container representing the metadata from the service about each remote access\n            session you are requesting.</p>\n      ",
            "shape_name": "RemoteAccessSessions",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the remote access session.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was created.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time the remote access session was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The status of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The status of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionStatus"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The result of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The result of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionResult"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the remote access session.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "started": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was started.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time the remote access session was started.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "stopped": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was stopped.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time the remote access session was stopped.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "device": {
                  "type": "structure",
                  "members": {
                    "arn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                      "documentation": "\n        <p>The device's ARN.</p>\n      ",
                      "shape_name": "AmazonResourceName",
                      "min_length": 32
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's display name.</p>\n      ",
                      "shape_name": "Name",
                      "min_length": 0,
                      "max_length": 256
                    },
                    "manufacturer": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "model": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                      "documentation": "\n        <p>The device's model name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "modelId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                      "documentation": "\n        <p>The device's model ID.</p>\n      ",
                      "shape_name": "String"
                    },
                    "formFactor": {
                      "type": "string",
                      "enum": [
                        "PHONE",
                        "TABLET"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFormFactor"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ANDROID",
                        "IOS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DevicePlatform"
                    },
                    "os": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                      "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                      "shape_name": "String"
                    },
                    "cpu": {
                      "type": "structure",
                      "members": {
                        "frequency": {
                          "type": "string",
                          "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                          "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                          "shape_name": "String"
                        },
                        "architecture": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                          "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                          "shape_name": "String"
                        },
                        "clock": {
                          "type": "double",
                          "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                          "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                          "shape_name": "Double"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                      "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                      "shape_name": "CPU"
                    },
                    "resolution": {
                      "type": "structure",
                      "members": {
                        "width": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        },
                        "height": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                          "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                      "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                      "shape_name": "Resolution"
                    },
                    "heapSize": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "memory": {
                      "type": "long",
                      "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                      "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                      "shape_name": "Long"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                      "shape_name": "String"
                    },
                    "carrier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                      "documentation": "\n        <p>The device's carrier.</p>\n      ",
                      "shape_name": "String"
                    },
                    "radio": {
                      "type": "string",
                      "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                      "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                      "shape_name": "String"
                    },
                    "remoteAccessEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "remoteDebugEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                      "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "fleetType": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                      "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                      "shape_name": "String"
                    },
                    "fleetName": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "instances": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                      "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                      "shape_name": "DeviceInstances",
                      "members": {
                        "type": "structure",
                        "members": {
                          "arn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "deviceArn": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                            "shape_name": "AmazonResourceName",
                            "min_length": 32
                          },
                          "labels": {
                            "type": "list",
                            "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                            "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                            "shape_name": "InstanceLabels",
                            "members": {
                              "type": "string",
                              "shape_name": "String",
                              "documentation": null
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "IN_USE",
                              "PREPARING",
                              "AVAILABLE",
                              "NOT_AVAILABLE"
                            ],
                            "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                            "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                            "shape_name": "InstanceStatus"
                          },
                          "udid": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                            "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                            "shape_name": "String"
                          },
                          "instanceProfile": {
                            "type": "structure",
                            "members": {
                              "arn": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                                "shape_name": "AmazonResourceName",
                                "min_length": 32
                              },
                              "packageCleanup": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "excludeAppPackagesFromCleanup": {
                                "type": "list",
                                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                                "shape_name": "PackageIds",
                                "members": {
                                  "type": "string",
                                  "shape_name": "String",
                                  "documentation": null
                                }
                              },
                              "rebootAfterUse": {
                                "type": "boolean",
                                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                                "shape_name": "Boolean"
                              },
                              "name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                                "shape_name": "Name",
                                "min_length": 0,
                                "max_length": 256
                              },
                              "description": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                                "shape_name": "Message",
                                "min_length": 0,
                                "max_length": 16384
                              }
                            },
                            "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                            "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                            "shape_name": "InstanceProfile"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                        "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                        "shape_name": "DeviceInstance"
                      }
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "TEMPORARY_NOT_AVAILABLE",
                        "BUSY",
                        "AVAILABLE",
                        "HIGHLY_AVAILABLE"
                      ],
                      "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                      "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                      "shape_name": "DeviceAvailability"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) used in the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>The device (phone or tablet) used in the remote access session.</p>\n      ",
                  "shape_name": "Device"
                },
                "instanceArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "remoteDebugEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</simpara>\n      ",
                  "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "remoteRecordEnabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n        <para>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</para>\n      ",
                  "documentation": "\n        <p>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "remoteRecordAppArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</para>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "hostAddress": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</p>\n      ",
                  "shape_name": "HostAddress",
                  "max_length": 1024
                },
                "clientId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</p>\n      ",
                  "shape_name": "ClientId",
                  "min_length": 0,
                  "max_length": 64
                },
                "billingMethod": {
                  "type": "string",
                  "enum": [
                    "METERED",
                    "UNMETERED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <ulink type=\"documentation\" url=\"devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</ulink>.\"</simpara>\n      ",
                  "documentation": "\n        <p>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <a href=\"http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</a>.\"</p>\n      ",
                  "shape_name": "BillingMethod"
                },
                "deviceMinutes": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "metered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "unmetered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</simpara>\n      ",
                  "documentation": "\n        <p>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</p>\n      ",
                  "shape_name": "DeviceMinutes"
                },
                "endpoint": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The endpoint for the remote access sesssion.</simpara>\n      ",
                  "documentation": "\n        <p>The endpoint for the remote access sesssion.</p>\n      ",
                  "shape_name": "String"
                },
                "deviceUdid": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</simpara>\n      ",
                  "documentation": "\n        <p>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</p>\n      ",
                  "shape_name": "String"
                },
                "interactionMode": {
                  "type": "string",
                  "enum": [
                    "INTERACTIVE",
                    "NO_VIDEO",
                    "VIDEO_ONLY"
                  ],
                  "zonbookDocumentation": "\n        <para>The interaction mode of the remote access session. Valid values are:</para>\n        <itemizedlist>\n            <listitem>\n                <simpara>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <emphasis role=\"bold\">cannot</emphasis> run XCUITest\n                    framework-based tests in this mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests in this\n                    mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests and\n                    watch the screen in this mode.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The interaction mode of the remote access session. Valid values are:</p>\n        <ul>\n            <li>\n                <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <b>cannot</b> run XCUITest\n                    framework-based tests in this mode.</p>\n            </li>\n            <li>\n                <p>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this\n                    mode.</p>\n            </li>\n            <li>\n                <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <b>can</b> run XCUITest framework-based tests and\n                    watch the screen in this mode.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "InteractionMode",
                  "min_length": 0,
                  "max_length": 64
                },
                "skipAppResign": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                  "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                  "shape_name": "SkipAppResign"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents information about the remote access session.</simpara>\n      ",
              "documentation": "\n        <p>Represents information about the remote access session.</p>\n      ",
              "shape_name": "RemoteAccessSession"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the response from the server after AWS Device Farm makes a request to\n            return information about the remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the response from the server after AWS Device Farm makes a request to\n            return information about the remote access session.</p>\n      ",
        "shape_name": "ListRemoteAccessSessionsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Returns a list of all currently running remote access sessions.</p>\n      "
    },
    "ListSamples": {
      "name": "ListSamples",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the job used to list samples.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the job used to list samples.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list samples operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list samples operation.</p>\n      ",
        "shape_name": "ListSamplesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "samples": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the samples.</simpara>\n      ",
            "documentation": "\n        <p>Information about the samples.</p>\n      ",
            "shape_name": "Samples",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The sample's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The sample's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "CPU",
                    "MEMORY",
                    "THREADS",
                    "RX_RATE",
                    "TX_RATE",
                    "RX",
                    "TX",
                    "NATIVE_FRAMES",
                    "NATIVE_FPS",
                    "NATIVE_MIN_DRAWTIME",
                    "NATIVE_AVG_DRAWTIME",
                    "NATIVE_MAX_DRAWTIME",
                    "OPENGL_FRAMES",
                    "OPENGL_FPS",
                    "OPENGL_MIN_DRAWTIME",
                    "OPENGL_AVG_DRAWTIME",
                    "OPENGL_MAX_DRAWTIME"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The sample's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CPU: A CPU sample type. This is expressed as the app processing CPU time\n                    (including child processes) as reported by process, as a percentage.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MEMORY: A memory usage sample type. This is expressed as the total\n                    proportional set size of an app process, in kilobytes.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NATIVE_AVG_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NATIVE_FPS</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NATIVE_FRAMES</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NATIVE_MAX_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NATIVE_MIN_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OPENGL_AVG_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OPENGL_FPS</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OPENGL_FRAMES</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OPENGL_MAX_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OPENGL_MIN_DRAWTIME</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RX</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent,\n                    by app process.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>THREADS: A threads sample type. This is expressed as the total number of\n                    threads per app process.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TX</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TX_RATE: The total number of bytes per second (TCP and UDP) that are\n                    received, by app process.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The sample's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>CPU: A CPU sample type. This is expressed as the app processing CPU time\n                    (including child processes) as reported by process, as a percentage.</p>\n            </li>\n            <li>\n                <p>MEMORY: A memory usage sample type. This is expressed as the total\n                    proportional set size of an app process, in kilobytes.</p>\n            </li>\n            <li>\n                <p>NATIVE_AVG_DRAWTIME</p>\n            </li>\n            <li>\n                <p>NATIVE_FPS</p>\n            </li>\n            <li>\n                <p>NATIVE_FRAMES</p>\n            </li>\n            <li>\n                <p>NATIVE_MAX_DRAWTIME</p>\n            </li>\n            <li>\n                <p>NATIVE_MIN_DRAWTIME</p>\n            </li>\n            <li>\n                <p>OPENGL_AVG_DRAWTIME</p>\n            </li>\n            <li>\n                <p>OPENGL_FPS</p>\n            </li>\n            <li>\n                <p>OPENGL_FRAMES</p>\n            </li>\n            <li>\n                <p>OPENGL_MAX_DRAWTIME</p>\n            </li>\n            <li>\n                <p>OPENGL_MIN_DRAWTIME</p>\n            </li>\n            <li>\n                <p>RX</p>\n            </li>\n            <li>\n                <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent,\n                    by app process.</p>\n            </li>\n            <li>\n                <p>THREADS: A threads sample type. This is expressed as the total number of\n                    threads per app process.</p>\n            </li>\n            <li>\n                <p>TX</p>\n            </li>\n            <li>\n                <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are\n                    received, by app process.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "SampleType"
                },
                "url": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that can be used with a corresponding GET request to\n            download the sample's file.</simpara>\n      ",
                  "documentation": "\n        <p>The pre-signed Amazon S3 URL that can be used with a corresponding GET request to\n            download the sample's file.</p>\n      ",
                  "shape_name": "URL",
                  "min_length": 0,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a sample of performance data.</simpara>\n      ",
              "documentation": "\n        <p>Represents a sample of performance data.</p>\n      ",
              "shape_name": "Sample"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list samples request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list samples request.</p>\n      ",
        "shape_name": "ListSamplesResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about samples, given an AWS Device Farm job ARN.</p>\n      "
    },
    "ListSuites": {
      "name": "ListSuites",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The job's Amazon Resource Name (ARN).</simpara>\n      ",
            "documentation": "\n        <p>The job's Amazon Resource Name (ARN).</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list suites operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list suites operation.</p>\n      ",
        "shape_name": "ListSuitesRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "suites": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the suites.</simpara>\n      ",
            "documentation": "\n        <p>Information about the suites.</p>\n      ",
            "shape_name": "Suites",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The suite's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The suite's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The suite's name.</simpara>\n      ",
                  "documentation": "\n        <p>The suite's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BUILTIN_FUZZ",
                    "BUILTIN_EXPLORER",
                    "WEB_PERFORMANCE_PROFILE",
                    "APPIUM_JAVA_JUNIT",
                    "APPIUM_JAVA_TESTNG",
                    "APPIUM_PYTHON",
                    "APPIUM_WEB_JAVA_JUNIT",
                    "APPIUM_WEB_JAVA_TESTNG",
                    "APPIUM_WEB_PYTHON",
                    "CALABASH",
                    "INSTRUMENTATION",
                    "UIAUTOMATION",
                    "UIAUTOMATOR",
                    "XCTEST",
                    "XCTEST_UI",
                    "REMOTE_ACCESS_RECORD",
                    "REMOTE_ACCESS_REPLAY"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The suite's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The suite's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "TestType"
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the suite was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the suite was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The suite's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The suite's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionStatus"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The suite's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The suite's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionResult"
                },
                "started": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The suite's start time.</simpara>\n      ",
                  "documentation": "\n        <p>The suite's start time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "stopped": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The suite's stop time.</simpara>\n      ",
                  "documentation": "\n        <p>The suite's stop time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "counters": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                      "documentation": "\n        <p>The total number of entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "passed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "failed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "warned": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "errored": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "stopped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "skipped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The suite's result counters.</simpara>\n      ",
                  "documentation": "\n        <p>The suite's result counters.</p>\n      ",
                  "shape_name": "Counters"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the suite's result.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the suite's result.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "deviceMinutes": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "metered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "unmetered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test\n            suite.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test\n            suite.</p>\n      ",
                  "shape_name": "DeviceMinutes"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a collection of one or more tests.</simpara>\n      ",
              "documentation": "\n        <p>Represents a collection of one or more tests.</p>\n      ",
              "shape_name": "Suite"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list suites request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list suites request.</p>\n      ",
        "shape_name": "ListSuitesResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about test suites for a given job.</p>\n      "
    },
    "ListTests": {
      "name": "ListTests",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The test suite's Amazon Resource Name (ARN).</simpara>\n      ",
            "documentation": "\n        <p>The test suite's Amazon Resource Name (ARN).</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list tests operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list tests operation.</p>\n      ",
        "shape_name": "ListTestsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "tests": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the tests.</simpara>\n      ",
            "documentation": "\n        <p>Information about the tests.</p>\n      ",
            "shape_name": "Tests",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The test's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The test's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The test's name.</simpara>\n      ",
                  "documentation": "\n        <p>The test's name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "BUILTIN_FUZZ",
                    "BUILTIN_EXPLORER",
                    "WEB_PERFORMANCE_PROFILE",
                    "APPIUM_JAVA_JUNIT",
                    "APPIUM_JAVA_TESTNG",
                    "APPIUM_PYTHON",
                    "APPIUM_WEB_JAVA_JUNIT",
                    "APPIUM_WEB_JAVA_TESTNG",
                    "APPIUM_WEB_PYTHON",
                    "CALABASH",
                    "INSTRUMENTATION",
                    "UIAUTOMATION",
                    "UIAUTOMATOR",
                    "XCTEST",
                    "XCTEST_UI",
                    "REMOTE_ACCESS_RECORD",
                    "REMOTE_ACCESS_REPLAY"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The test's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The test's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "TestType"
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the test was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the test was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PENDING_CONCURRENCY",
                    "PENDING_DEVICE",
                    "PROCESSING",
                    "SCHEDULING",
                    "PREPARING",
                    "RUNNING",
                    "COMPLETED",
                    "STOPPING"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The test's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The test's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionStatus"
                },
                "result": {
                  "type": "string",
                  "enum": [
                    "PENDING",
                    "PASSED",
                    "WARNED",
                    "FAILED",
                    "SKIPPED",
                    "ERRORED",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The test's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The test's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ExecutionResult"
                },
                "started": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The test's start time.</simpara>\n      ",
                  "documentation": "\n        <p>The test's start time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "stopped": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The test's stop time.</simpara>\n      ",
                  "documentation": "\n        <p>The test's stop time.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "counters": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                      "documentation": "\n        <p>The total number of entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "passed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "failed": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "warned": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "errored": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "stopped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                      "shape_name": "Integer"
                    },
                    "skipped": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                      "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The test's result counters.</simpara>\n      ",
                  "documentation": "\n        <p>The test's result counters.</p>\n      ",
                  "shape_name": "Counters"
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the test's result.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the test's result.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "deviceMinutes": {
                  "type": "structure",
                  "members": {
                    "total": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "metered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                      "shape_name": "Double"
                    },
                    "unmetered": {
                      "type": "double",
                      "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                      "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                      "shape_name": "Double"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test.</p>\n      ",
                  "shape_name": "DeviceMinutes"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a condition that is evaluated.</simpara>\n      ",
              "documentation": "\n        <p>Represents a condition that is evaluated.</p>\n      ",
              "shape_name": "Test"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list tests request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list tests request.</p>\n      ",
        "shape_name": "ListTestsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about tests in a given test suite.</p>\n      "
    },
    "ListUniqueProblems": {
      "name": "ListUniqueProblems",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The unique problems' ARNs.</simpara>\n      ",
            "documentation": "\n        <p>The unique problems' ARNs.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list unique problems operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list unique problems operation.</p>\n      ",
        "shape_name": "ListUniqueProblemsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "uniqueProblems": {
            "type": "map",
            "zonbookDocumentation": "\n        <simpara>Information about the unique problems.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>Information about the unique problems.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "UniqueProblemsByExecutionResultMap",
            "keys": {
              "type": "string",
              "enum": [
                "PENDING",
                "PASSED",
                "WARNED",
                "FAILED",
                "SKIPPED",
                "ERRORED",
                "STOPPED"
              ],
              "shape_name": "ExecutionResult",
              "documentation": null
            },
            "members": {
              "type": "list",
              "shape_name": "UniqueProblems",
              "documentation": null,
              "members": {
                "type": "structure",
                "members": {
                  "message": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>A message about the unique problems' result.</simpara>\n      ",
                    "documentation": "\n        <p>A message about the unique problems' result.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  },
                  "problems": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Information about the problems.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the problems.</p>\n      ",
                    "shape_name": "Problems",
                    "members": {
                      "type": "structure",
                      "members": {
                        "run": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's ARN.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's ARN.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's name.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's name.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Information about the associated run.</simpara>\n      ",
                          "documentation": "\n        <p>Information about the associated run.</p>\n      ",
                          "shape_name": "ProblemDetail"
                        },
                        "job": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's ARN.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's ARN.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's name.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's name.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Information about the associated job.</simpara>\n      ",
                          "documentation": "\n        <p>Information about the associated job.</p>\n      ",
                          "shape_name": "ProblemDetail"
                        },
                        "suite": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's ARN.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's ARN.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's name.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's name.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Information about the associated suite.</simpara>\n      ",
                          "documentation": "\n        <p>Information about the associated suite.</p>\n      ",
                          "shape_name": "ProblemDetail"
                        },
                        "test": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's ARN.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's ARN.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The problem detail's name.</simpara>\n      ",
                              "documentation": "\n        <p>The problem detail's name.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Information about the associated test.</simpara>\n      ",
                          "documentation": "\n        <p>Information about the associated test.</p>\n      ",
                          "shape_name": "ProblemDetail"
                        },
                        "device": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                              "documentation": "\n        <p>The device's ARN.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                              "documentation": "\n        <p>The device's display name.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "manufacturer": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                              "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                              "shape_name": "String"
                            },
                            "model": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                              "documentation": "\n        <p>The device's model name.</p>\n      ",
                              "shape_name": "String"
                            },
                            "modelId": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                              "documentation": "\n        <p>The device's model ID.</p>\n      ",
                              "shape_name": "String"
                            },
                            "formFactor": {
                              "type": "string",
                              "enum": [
                                "PHONE",
                                "TABLET"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                              "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                              "shape_name": "DeviceFormFactor"
                            },
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ANDROID",
                                "IOS"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                              "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                              "shape_name": "DevicePlatform"
                            },
                            "os": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                              "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                              "shape_name": "String"
                            },
                            "cpu": {
                              "type": "structure",
                              "members": {
                                "frequency": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                                  "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                                  "shape_name": "String"
                                },
                                "architecture": {
                                  "type": "string",
                                  "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                                  "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                                  "shape_name": "String"
                                },
                                "clock": {
                                  "type": "double",
                                  "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                                  "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                                  "shape_name": "Double"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                              "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                              "shape_name": "CPU"
                            },
                            "resolution": {
                              "type": "structure",
                              "members": {
                                "width": {
                                  "type": "integer",
                                  "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                                  "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                                  "shape_name": "Integer"
                                },
                                "height": {
                                  "type": "integer",
                                  "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                                  "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                                  "shape_name": "Integer"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                              "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                              "shape_name": "Resolution"
                            },
                            "heapSize": {
                              "type": "long",
                              "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                              "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                              "shape_name": "Long"
                            },
                            "memory": {
                              "type": "long",
                              "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                              "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                              "shape_name": "Long"
                            },
                            "image": {
                              "type": "string",
                              "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                              "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                              "shape_name": "String"
                            },
                            "carrier": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                              "documentation": "\n        <p>The device's carrier.</p>\n      ",
                              "shape_name": "String"
                            },
                            "radio": {
                              "type": "string",
                              "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                              "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                              "shape_name": "String"
                            },
                            "remoteAccessEnabled": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                              "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "remoteDebugEnabled": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                              "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "fleetType": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                              "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                              "shape_name": "String"
                            },
                            "fleetName": {
                              "type": "string",
                              "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                              "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                              "shape_name": "String"
                            },
                            "instances": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                              "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                              "shape_name": "DeviceInstances",
                              "members": {
                                "type": "structure",
                                "members": {
                                  "arn": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                                    "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                                    "shape_name": "AmazonResourceName",
                                    "min_length": 32
                                  },
                                  "deviceArn": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                                    "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                                    "shape_name": "AmazonResourceName",
                                    "min_length": 32
                                  },
                                  "labels": {
                                    "type": "list",
                                    "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                                    "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                                    "shape_name": "InstanceLabels",
                                    "members": {
                                      "type": "string",
                                      "shape_name": "String",
                                      "documentation": null
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "IN_USE",
                                      "PREPARING",
                                      "AVAILABLE",
                                      "NOT_AVAILABLE"
                                    ],
                                    "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                                    "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                                    "shape_name": "InstanceStatus"
                                  },
                                  "udid": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                                    "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                                    "shape_name": "String"
                                  },
                                  "instanceProfile": {
                                    "type": "structure",
                                    "members": {
                                      "arn": {
                                        "type": "string",
                                        "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                                        "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                                        "shape_name": "AmazonResourceName",
                                        "min_length": 32
                                      },
                                      "packageCleanup": {
                                        "type": "boolean",
                                        "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                                        "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                                        "shape_name": "Boolean"
                                      },
                                      "excludeAppPackagesFromCleanup": {
                                        "type": "list",
                                        "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                                        "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                                        "shape_name": "PackageIds",
                                        "members": {
                                          "type": "string",
                                          "shape_name": "String",
                                          "documentation": null
                                        }
                                      },
                                      "rebootAfterUse": {
                                        "type": "boolean",
                                        "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                                        "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                                        "shape_name": "Boolean"
                                      },
                                      "name": {
                                        "type": "string",
                                        "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                                        "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                                        "shape_name": "Name",
                                        "min_length": 0,
                                        "max_length": 256
                                      },
                                      "description": {
                                        "type": "string",
                                        "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                                        "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                                        "shape_name": "Message",
                                        "min_length": 0,
                                        "max_length": 16384
                                      }
                                    },
                                    "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                                    "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                                    "shape_name": "InstanceProfile"
                                  }
                                },
                                "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                                "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                                "shape_name": "DeviceInstance"
                              }
                            },
                            "availability": {
                              "type": "string",
                              "enum": [
                                "TEMPORARY_NOT_AVAILABLE",
                                "BUSY",
                                "AVAILABLE",
                                "HIGHLY_AVAILABLE"
                              ],
                              "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                              "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                              "shape_name": "DeviceAvailability"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Information about the associated device.</simpara>\n      ",
                          "documentation": "\n        <p>Information about the associated device.</p>\n      ",
                          "shape_name": "Device"
                        },
                        "result": {
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "PASSED",
                            "WARNED",
                            "FAILED",
                            "SKIPPED",
                            "ERRORED",
                            "STOPPED"
                          ],
                          "zonbookDocumentation": "\n        <simpara>The problem's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The problem's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "ExecutionResult"
                        },
                        "message": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>A message about the problem's result.</simpara>\n      ",
                          "documentation": "\n        <p>A message about the problem's result.</p>\n      ",
                          "shape_name": "Message",
                          "min_length": 0,
                          "max_length": 16384
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>Represents a specific warning or failure.</simpara>\n      ",
                      "documentation": "\n        <p>Represents a specific warning or failure.</p>\n      ",
                      "shape_name": "Problem"
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>A collection of one or more problems, grouped by their result.</simpara>\n      ",
                "documentation": "\n        <p>A collection of one or more problems, grouped by their result.</p>\n      ",
                "shape_name": "UniqueProblem"
              }
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list unique problems request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list unique problems request.</p>\n      ",
        "shape_name": "ListUniqueProblemsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about unique problems.</p>\n      "
    },
    "ListUploads": {
      "name": "ListUploads",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to list\n            uploads.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to list\n            uploads.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "type": {
            "type": "string",
            "enum": [
              "ANDROID_APP",
              "IOS_APP",
              "WEB_APP",
              "EXTERNAL_DATA",
              "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
              "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
              "APPIUM_PYTHON_TEST_PACKAGE",
              "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
              "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
              "APPIUM_WEB_PYTHON_TEST_PACKAGE",
              "CALABASH_TEST_PACKAGE",
              "INSTRUMENTATION_TEST_PACKAGE",
              "UIAUTOMATION_TEST_PACKAGE",
              "UIAUTOMATOR_TEST_PACKAGE",
              "XCTEST_TEST_PACKAGE",
              "XCTEST_UI_TEST_PACKAGE",
              "APPIUM_JAVA_JUNIT_TEST_SPEC",
              "APPIUM_JAVA_TESTNG_TEST_SPEC",
              "APPIUM_PYTHON_TEST_SPEC",
              "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
              "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
              "APPIUM_WEB_PYTHON_TEST_SPEC",
              "INSTRUMENTATION_TEST_SPEC",
              "XCTEST_UI_TEST_SPEC"
            ],
            "zonbookDocumentation": "\n        <para>The type of upload.</para>\n        <para>Must be one of the following values:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ANDROID_APP: An Android upload.</para>\n            </listitem>\n            <listitem>\n                <para>IOS_APP: An iOS upload.</para>\n            </listitem>\n            <listitem>\n                <para>WEB_APP: A web appliction upload.</para>\n            </listitem>\n            <listitem>\n                <para>EXTERNAL_DATA: An external data upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>CALABASH_TEST_PACKAGE: A Calabash test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</para>\n            </listitem>\n            <listitem>\n                <para>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_TEST_PACKAGE: An XCode test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The type of upload.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "UploadType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>An identifier that was returned from the previous call to this operation, which can\n            be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the list uploads operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the list uploads operation.</p>\n      ",
        "shape_name": "ListUploadsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "uploads": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Information about the uploads.</simpara>\n      ",
            "documentation": "\n        <p>Information about the uploads.</p>\n      ",
            "shape_name": "Uploads",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
                  "documentation": "\n        <p>The upload's ARN.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The upload's file name.</simpara>\n      ",
                  "documentation": "\n        <p>The upload's file name.</p>\n      ",
                  "shape_name": "Name",
                  "min_length": 0,
                  "max_length": 256
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>When the upload was created.</simpara>\n      ",
                  "documentation": "\n        <p>When the upload was created.</p>\n      ",
                  "shape_name": "DateTime"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ANDROID_APP",
                    "IOS_APP",
                    "WEB_APP",
                    "EXTERNAL_DATA",
                    "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                    "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                    "APPIUM_PYTHON_TEST_PACKAGE",
                    "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                    "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                    "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                    "CALABASH_TEST_PACKAGE",
                    "INSTRUMENTATION_TEST_PACKAGE",
                    "UIAUTOMATION_TEST_PACKAGE",
                    "UIAUTOMATOR_TEST_PACKAGE",
                    "XCTEST_TEST_PACKAGE",
                    "XCTEST_UI_TEST_PACKAGE",
                    "APPIUM_JAVA_JUNIT_TEST_SPEC",
                    "APPIUM_JAVA_TESTNG_TEST_SPEC",
                    "APPIUM_PYTHON_TEST_SPEC",
                    "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                    "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                    "APPIUM_WEB_PYTHON_TEST_SPEC",
                    "INSTRUMENTATION_TEST_SPEC",
                    "XCTEST_UI_TEST_SPEC"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The upload's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web appliction upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The upload's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "UploadType"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "INITIALIZED",
                    "PROCESSING",
                    "SUCCEEDED",
                    "FAILED"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The upload's status.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FAILED: A failed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INITIALIZED: An initialized status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SUCCEEDED: A succeeded status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The upload's status.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>FAILED: A failed status.</p>\n            </li>\n            <li>\n                <p>INITIALIZED: An initialized status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SUCCEEDED: A succeeded status.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "UploadStatus"
                },
                "url": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</simpara>\n      ",
                  "documentation": "\n        <p>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</p>\n      ",
                  "shape_name": "URL",
                  "min_length": 0,
                  "max_length": 2048
                },
                "metadata": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</simpara>\n      ",
                  "documentation": "\n        <p>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</p>\n      ",
                  "shape_name": "Metadata",
                  "min_length": 0,
                  "max_length": 8192
                },
                "contentType": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
                  "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
                  "shape_name": "ContentType",
                  "min_length": 0,
                  "max_length": 64
                },
                "message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A message about the upload's result.</simpara>\n      ",
                  "documentation": "\n        <p>A message about the upload's result.</p>\n      ",
                  "shape_name": "Message",
                  "min_length": 0,
                  "max_length": 16384
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "CURATED",
                    "PRIVATE"
                  ],
                  "zonbookDocumentation": "\n        <para>The upload's category. Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>CURATED: An upload managed by AWS Device Farm.</para>\n            </listitem>\n            <listitem>\n                <para>PRIVATE: An upload managed by the AWS Device Farm customer.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The upload's category. Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: An upload managed by AWS Device Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "UploadCategory"
                }
              },
              "zonbookDocumentation": "\n        <simpara>An app or a set of one or more tests to upload or that have been\n            uploaded.</simpara>\n      ",
              "documentation": "\n        <p>An app or a set of one or more tests to upload or that have been\n            uploaded.</p>\n      ",
              "shape_name": "Upload"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</simpara>\n      ",
            "documentation": "\n        <p>If the number of items that are returned is significantly large, this is an\n            identifier that is also returned, which can be used in a subsequent call to this\n            operation to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a list uploads request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a list uploads request.</p>\n      ",
        "shape_name": "ListUploadsResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Gets information about uploads, given an AWS Device Farm project ARN.</p>\n      "
    },
    "ListVPCEConfigurations": {
      "name": "ListVPCEConfigurations",
      "input": {
        "type": "structure",
        "members": {
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>An integer specifying the maximum number of items you want to return in the API response.</para>\n      ",
            "documentation": "\n         <p>An integer specifying the maximum number of items you want to return in the API response.</p>\n      ",
            "shape_name": "Integer"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListVPCEConfigurationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "vpceConfigurations": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An array of <code>VPCEConfiguration</code> objects containing information about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An array of <code>VPCEConfiguration</code> objects containing information about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfigurations",
            "members": {
              "type": "structure",
              "members": {
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>\n      ",
                  "shape_name": "AmazonResourceName",
                  "min_length": 32
                },
                "vpceConfigurationName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
                  "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
                  "shape_name": "VPCEConfigurationName",
                  "min_length": 0,
                  "max_length": 1024
                },
                "vpceServiceName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
                  "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
                  "shape_name": "VPCEServiceName",
                  "min_length": 0,
                  "max_length": 2048
                },
                "serviceDnsName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The DNS name that maps to the private IP address of the service you want to access.</para>\n      ",
                  "documentation": "\n         <p>The DNS name that maps to the private IP address of the service you want to access.</p>\n      ",
                  "shape_name": "ServiceDnsName",
                  "min_length": 0,
                  "max_length": 2048
                },
                "vpceConfigurationDescription": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
                  "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
                  "shape_name": "VPCEConfigurationDescription",
                  "min_length": 0,
                  "max_length": 2048
                }
              },
              "zonbookDocumentation": "\n         <para>Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.</para>\n      ",
              "documentation": "\n         <p>Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.</p>\n      ",
              "shape_name": "VPCEConfiguration"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</para>\n      ",
            "documentation": "\n         <p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>\n      ",
            "shape_name": "PaginationToken",
            "min_length": 4,
            "max_length": 1024
          }
        },
        "shape_name": "ListVPCEConfigurationsResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account.</p>\n      "
    },
    "PurchaseOffering": {
      "name": "PurchaseOffering",
      "input": {
        "type": "structure",
        "members": {
          "offeringId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ID of the offering.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the offering.</p>\n      ",
            "shape_name": "OfferingIdentifier",
            "min_length": 32
          },
          "quantity": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The number of device slots you wish to purchase in an offering request.</simpara>\n      ",
            "documentation": "\n        <p>The number of device slots you wish to purchase in an offering request.</p>\n      ",
            "shape_name": "Integer"
          },
          "offeringPromotionId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ID of the offering promotion to be applied to the purchase.</simpara>\n      ",
            "documentation": "\n        <p>The ID of the offering promotion to be applied to the purchase.</p>\n      ",
            "shape_name": "OfferingPromotionIdentifier",
            "min_length": 4
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request for a purchase offering.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request for a purchase offering.</p>\n      ",
        "shape_name": "PurchaseOfferingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "offeringTransaction": {
            "type": "structure",
            "members": {
              "offeringStatus": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PURCHASE",
                      "RENEW",
                      "SYSTEM"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type specified for the offering status.</simpara>\n      ",
                    "documentation": "\n        <p>The type specified for the offering status.</p>\n      ",
                    "shape_name": "OfferingTransactionType"
                  },
                  "offering": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                        "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                        "shape_name": "OfferingIdentifier",
                        "min_length": 32
                      },
                      "description": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                        "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                        "shape_name": "Message",
                        "min_length": 0,
                        "max_length": 16384
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "RECURRING"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                        "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                        "shape_name": "OfferingType"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ANDROID",
                          "IOS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                        "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                        "shape_name": "DevicePlatform"
                      },
                      "recurringCharges": {
                        "type": "list",
                        "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                        "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                        "shape_name": "RecurringCharges",
                        "members": {
                          "type": "structure",
                          "members": {
                            "cost": {
                              "type": "structure",
                              "members": {
                                "amount": {
                                  "type": "double",
                                  "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                                  "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                                  "shape_name": "Double"
                                },
                                "currencyCode": {
                                  "type": "string",
                                  "enum": [
                                    "USD"
                                  ],
                                  "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                                  "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                                  "shape_name": "CurrencyCode"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                              "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                              "shape_name": "MonetaryAmount"
                            },
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "MONTHLY"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                              "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                              "shape_name": "RecurringChargeFrequency"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                          "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                          "shape_name": "RecurringCharge"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering status.</simpara>\n      ",
                    "documentation": "\n        <p>Represents the metadata of an offering status.</p>\n      ",
                    "shape_name": "Offering"
                  },
                  "quantity": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of available devices in the offering.</simpara>\n      ",
                    "documentation": "\n        <p>The number of available devices in the offering.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "effectiveOn": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n        <simpara>The date on which the offering is effective.</simpara>\n      ",
                    "documentation": "\n        <p>The date on which the offering is effective.</p>\n      ",
                    "shape_name": "DateTime"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The status of an offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The status of an offering transaction.</p>\n      ",
                "shape_name": "OfferingStatus"
              },
              "transactionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The transaction ID of the offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The transaction ID of the offering transaction.</p>\n      ",
                "shape_name": "TransactionIdentifier",
                "min_length": 32
              },
              "offeringPromotionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering promotion.</simpara>\n      ",
                "documentation": "\n        <p>The ID that corresponds to a device offering promotion.</p>\n      ",
                "shape_name": "OfferingPromotionIdentifier",
                "min_length": 4
              },
              "createdOn": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date on which an offering transaction was created.</simpara>\n      ",
                "documentation": "\n        <p>The date on which an offering transaction was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "cost": {
                "type": "structure",
                "members": {
                  "amount": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                    "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "currencyCode": {
                    "type": "string",
                    "enum": [
                      "USD"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                    "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                    "shape_name": "CurrencyCode"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The cost of an offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The cost of an offering transaction.</p>\n      ",
                "shape_name": "MonetaryAmount"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the offering transaction for the purchase result.</simpara>\n      ",
            "documentation": "\n        <p>Represents the offering transaction for the purchase result.</p>\n      ",
            "shape_name": "OfferingTransaction"
          }
        },
        "zonbookDocumentation": "\n        <simpara>The result of the purchase offering (e.g., success or failure).</simpara>\n      ",
        "documentation": "\n        <p>The result of the purchase offering (e.g., success or failure).</p>\n      ",
        "shape_name": "PurchaseOfferingResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Immediately purchases offerings for an AWS account. Offerings renew with the latest\n            total purchased quantity for an offering, unless the renewal was overridden. The API\n            returns a <code>NotEligible</code> error if the user is not permitted to invoke the\n            operation. Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n        \n      "
    },
    "RenewOffering": {
      "name": "RenewOffering",
      "input": {
        "type": "structure",
        "members": {
          "offeringId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ID of a request to renew an offering.</simpara>\n      ",
            "documentation": "\n        <p>The ID of a request to renew an offering.</p>\n      ",
            "shape_name": "OfferingIdentifier",
            "min_length": 32
          },
          "quantity": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The quantity requested in an offering renewal.</simpara>\n      ",
            "documentation": "\n        <p>The quantity requested in an offering renewal.</p>\n      ",
            "shape_name": "Integer"
          }
        },
        "zonbookDocumentation": "\n        <simpara>A request representing an offering renewal.</simpara>\n      ",
        "documentation": "\n        <p>A request representing an offering renewal.</p>\n      ",
        "shape_name": "RenewOfferingRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "offeringTransaction": {
            "type": "structure",
            "members": {
              "offeringStatus": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PURCHASE",
                      "RENEW",
                      "SYSTEM"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type specified for the offering status.</simpara>\n      ",
                    "documentation": "\n        <p>The type specified for the offering status.</p>\n      ",
                    "shape_name": "OfferingTransactionType"
                  },
                  "offering": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering.</simpara>\n      ",
                        "documentation": "\n        <p>The ID that corresponds to a device offering.</p>\n      ",
                        "shape_name": "OfferingIdentifier",
                        "min_length": 32
                      },
                      "description": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A string describing the offering.</simpara>\n      ",
                        "documentation": "\n        <p>A string describing the offering.</p>\n      ",
                        "shape_name": "Message",
                        "min_length": 0,
                        "max_length": 16384
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "RECURRING"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The type of offering (e.g., \"RECURRING\") for a device.</simpara>\n      ",
                        "documentation": "\n        <p>The type of offering (e.g., \"RECURRING\") for a device.</p>\n      ",
                        "shape_name": "OfferingType"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ANDROID",
                          "IOS"
                        ],
                        "zonbookDocumentation": "\n        <simpara>The platform of the device (e.g., ANDROID or IOS).</simpara>\n      ",
                        "documentation": "\n        <p>The platform of the device (e.g., ANDROID or IOS).</p>\n      ",
                        "shape_name": "DevicePlatform"
                      },
                      "recurringCharges": {
                        "type": "list",
                        "zonbookDocumentation": "\n        <simpara>Specifies whether there are recurring charges for the offering.</simpara>\n      ",
                        "documentation": "\n        <p>Specifies whether there are recurring charges for the offering.</p>\n      ",
                        "shape_name": "RecurringCharges",
                        "members": {
                          "type": "structure",
                          "members": {
                            "cost": {
                              "type": "structure",
                              "members": {
                                "amount": {
                                  "type": "double",
                                  "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                                  "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                                  "shape_name": "Double"
                                },
                                "currencyCode": {
                                  "type": "string",
                                  "enum": [
                                    "USD"
                                  ],
                                  "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                                  "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                                  "shape_name": "CurrencyCode"
                                }
                              },
                              "zonbookDocumentation": "\n        <simpara>The cost of the recurring charge.</simpara>\n      ",
                              "documentation": "\n        <p>The cost of the recurring charge.</p>\n      ",
                              "shape_name": "MonetaryAmount"
                            },
                            "frequency": {
                              "type": "string",
                              "enum": [
                                "MONTHLY"
                              ],
                              "zonbookDocumentation": "\n        <simpara>The frequency in which charges will recur.</simpara>\n      ",
                              "documentation": "\n        <p>The frequency in which charges will recur.</p>\n      ",
                              "shape_name": "RecurringChargeFrequency"
                            }
                          },
                          "zonbookDocumentation": "\n        <simpara>Specifies whether charges for devices will be recurring.</simpara>\n      ",
                          "documentation": "\n        <p>Specifies whether charges for devices will be recurring.</p>\n      ",
                          "shape_name": "RecurringCharge"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents the metadata of an offering status.</simpara>\n      ",
                    "documentation": "\n        <p>Represents the metadata of an offering status.</p>\n      ",
                    "shape_name": "Offering"
                  },
                  "quantity": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of available devices in the offering.</simpara>\n      ",
                    "documentation": "\n        <p>The number of available devices in the offering.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "effectiveOn": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n        <simpara>The date on which the offering is effective.</simpara>\n      ",
                    "documentation": "\n        <p>The date on which the offering is effective.</p>\n      ",
                    "shape_name": "DateTime"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The status of an offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The status of an offering transaction.</p>\n      ",
                "shape_name": "OfferingStatus"
              },
              "transactionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The transaction ID of the offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The transaction ID of the offering transaction.</p>\n      ",
                "shape_name": "TransactionIdentifier",
                "min_length": 32
              },
              "offeringPromotionId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ID that corresponds to a device offering promotion.</simpara>\n      ",
                "documentation": "\n        <p>The ID that corresponds to a device offering promotion.</p>\n      ",
                "shape_name": "OfferingPromotionIdentifier",
                "min_length": 4
              },
              "createdOn": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date on which an offering transaction was created.</simpara>\n      ",
                "documentation": "\n        <p>The date on which an offering transaction was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "cost": {
                "type": "structure",
                "members": {
                  "amount": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The numerical amount of an offering or transaction.</simpara>\n      ",
                    "documentation": "\n        <p>The numerical amount of an offering or transaction.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "currencyCode": {
                    "type": "string",
                    "enum": [
                      "USD"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</simpara>\n      ",
                    "documentation": "\n        <p>The currency code of a monetary amount. For example, <code>USD</code> means \"U.S.\n            dollars.\"</p>\n      ",
                    "shape_name": "CurrencyCode"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The cost of an offering transaction.</simpara>\n      ",
                "documentation": "\n        <p>The cost of an offering transaction.</p>\n      ",
                "shape_name": "MonetaryAmount"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the status of the offering transaction for the renewal.</simpara>\n      ",
            "documentation": "\n        <p>Represents the status of the offering transaction for the renewal.</p>\n      ",
            "shape_name": "OfferingTransaction"
          }
        },
        "zonbookDocumentation": "\n        <simpara>The result of a renewal offering.</simpara>\n      ",
        "documentation": "\n        <p>The result of a renewal offering.</p>\n      ",
        "shape_name": "RenewOfferingResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>The HTTP response code of a Not Eligible exception.</simpara>\n      ",
              "documentation": "\n        <p>The HTTP response code of a Not Eligible exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</simpara>\n      ",
          "documentation": "\n        <p>Exception gets thrown when a user is not eligible to perform the specified\n            transaction.</p>\n      ",
          "shape_name": "NotEligibleException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Explicitly sets the quantity of devices to renew for an offering, starting from the\n                <code>effectiveDate</code> of the next period. The API returns a\n                <code>NotEligible</code> error if the user is not permitted to invoke the operation.\n            Please contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you believe that you should be able to\n            invoke this operation.</p>\n        \n      "
    },
    "ScheduleRun": {
      "name": "ScheduleRun",
      "input": {
        "type": "structure",
        "members": {
          "projectArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the project for the run to be scheduled.</simpara>\n      ",
            "documentation": "\n        <p>The ARN of the project for the run to be scheduled.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "appArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the app to schedule a run.</simpara>\n      ",
            "documentation": "\n        <p>The ARN of the app to schedule a run.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "devicePoolArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The ARN of the device pool for the run to be scheduled.</simpara>\n        <para>Either <emphasis role=\"bold\">\n               <code>devicePoolArn</code>\n            </emphasis> or\n            <emphasis role=\"bold\">\n               <code>deviceSelectionConfiguration</code>\n            </emphasis>\n            are required in a request.</para>\n      ",
            "documentation": "\n        <p>The ARN of the device pool for the run to be scheduled.</p>\n        <p>Either <b>\n               <code>devicePoolArn</code>\n            </b> or\n            <b>\n               <code>deviceSelectionConfiguration</code>\n            </b>\n            are required in a request.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "deviceSelectionConfiguration": {
            "type": "structure",
            "members": {
              "filters": {
                "type": "list",
                "zonbookDocumentation": "\n        <para>Used to dynamically select a set of devices for a test run.\n            A filter is made up of an attribute, an operator, and one or more values.</para>\n        <itemizedlist>\n            <listitem>\n                <para>Attribute: The aspect of a device such as platform or model\n                    used as the selection criteria in a device filter.</para>\n                <para>Allowed values include:</para>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                            For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>AVAILABILITY: The current availability of the device.\n                            Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>FORM_FACTOR: The device form factor. Valid values are\n                            \"PHONE\" or \"TABLET\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                            access.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                            debugging.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <para>Operator: The filter operator.</para>\n                <itemizedlist>\n                    <listitem>\n                        <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The IN and NOT_IN operators are available for the\n                            ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                            operators are also available for the OS_VERSION attribute.</para>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n            <listitem>\n                <para>Values: An array of one or more filter values.</para>\n                <itemizedlist>\n                    <listitem>\n                        <para>The IN and NOT operators can take a values array that has more than one element.</para>\n                    </listitem>\n                    <listitem>\n                        <para>The other operators require an array with a single element.</para>\n                    </listitem>\n                    <listitem>\n                        <para>In a request, the AVAILABILITY attribute takes\n                            \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\" as values.</para>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>Used to dynamically select a set of devices for a test run.\n            A filter is made up of an attribute, an operator, and one or more values.</p>\n        <ul>\n            <li>\n                <p>Attribute: The aspect of a device such as platform or model\n                    used as the selection criteria in a device filter.</p>\n                <p>Allowed values include:</p>\n                <ul>\n                  <li>\n                        <p>ARN: The Amazon Resource Name (ARN) of the device.\n                            For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n                    </li>\n                  <li>\n                        <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n                    </li>\n                  <li>\n                        <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n                    </li>\n                  <li>\n                        <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n                    </li>\n                  <li>\n                        <p>AVAILABILITY: The current availability of the device.\n                            Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\".</p>\n                    </li>\n                  <li>\n                        <p>FORM_FACTOR: The device form factor. Valid values are\n                            \"PHONE\" or \"TABLET\".</p>\n                    </li>\n                  <li>\n                        <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n                    </li>\n                  <li>\n                        <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                            access.</p>\n                    </li>\n                  <li>\n                        <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                            debugging.</p>\n                    </li>\n                  <li>\n                        <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n                    </li>\n                  <li>\n                        <p>INSTANCE_LABELS: The label of the device instance.</p>\n                    </li>\n                  <li>\n                        <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Operator: The filter operator.</p>\n                <ul>\n                  <li>\n                        <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n                    </li>\n                  <li>\n                        <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n                    </li>\n                  <li>\n                        <p>The IN and NOT_IN operators are available for the\n                            ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n                    </li>\n                  <li>\n                        <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                            operators are also available for the OS_VERSION attribute.</p>\n                    </li>\n               </ul>\n            </li>\n            <li>\n                <p>Values: An array of one or more filter values.</p>\n                <ul>\n                  <li>\n                        <p>The IN and NOT operators can take a values array that has more than one element.</p>\n                    </li>\n                  <li>\n                        <p>The other operators require an array with a single element.</p>\n                    </li>\n                  <li>\n                        <p>In a request, the AVAILABILITY attribute takes\n                            \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                            or \"TEMPORARY_NOT_AVAILABLE\" as values.</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "DeviceFilters",
                "members": {
                  "type": "structure",
                  "members": {
                    "attribute": {
                      "type": "string",
                      "enum": [
                        "ARN",
                        "PLATFORM",
                        "OS_VERSION",
                        "MODEL",
                        "AVAILABILITY",
                        "FORM_FACTOR",
                        "MANUFACTURER",
                        "REMOTE_ACCESS_ENABLED",
                        "REMOTE_DEBUG_ENABLED",
                        "INSTANCE_ARN",
                        "INSTANCE_LABELS",
                        "FLEET_TYPE"
                      ],
                      "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFilterAttribute"
                    },
                    "operator": {
                      "type": "string",
                      "enum": [
                        "EQUALS",
                        "LESS_THAN",
                        "LESS_THAN_OR_EQUALS",
                        "GREATER_THAN",
                        "GREATER_THAN_OR_EQUALS",
                        "IN",
                        "NOT_IN",
                        "CONTAINS"
                      ],
                      "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFilterOperator"
                    },
                    "values": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceFilterValues",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
                  "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
                  "shape_name": "DeviceFilter"
                }
              },
              "maxDevices": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>The maximum number of devices to be included in a test run.</para>\n      ",
                "documentation": "\n        <p>The maximum number of devices to be included in a test run.</p>\n      ",
                "required": true,
                "shape_name": "Integer"
              }
            },
            "zonbookDocumentation": "\n         <para>The filter criteria used to dynamically select a set of devices for a test run,\n           as well as the maximum number of devices to be included in the run.</para>\n        <para>Either <emphasis role=\"bold\">\n               <code>devicePoolArn</code>\n            </emphasis> or\n            <emphasis role=\"bold\">\n               <code>deviceSelectionConfiguration</code>\n            </emphasis>\n            are required in a request.</para>\n      ",
            "documentation": "\n         <p>The filter criteria used to dynamically select a set of devices for a test run,\n           as well as the maximum number of devices to be included in the run.</p>\n        <p>Either <b>\n               <code>devicePoolArn</code>\n            </b> or\n            <b>\n               <code>deviceSelectionConfiguration</code>\n            </b>\n            are required in a request.</p>\n      ",
            "shape_name": "DeviceSelectionConfiguration"
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name for the run to be scheduled.</simpara>\n      ",
            "documentation": "\n        <p>The name for the run to be scheduled.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "test": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The test's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "TestType"
              },
              "testPackageArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of the uploaded test that will be run.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of the uploaded test that will be run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "testSpecArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification.</para>\n      ",
                "documentation": "\n        <p>The ARN of the YAML-formatted test specification.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "filter": {
                "type": "string",
                "zonbookDocumentation": "\n        \n        <simpara>The test's filter.</simpara>\n      ",
                "documentation": "\n        \n        <p>The test's filter.</p>\n      ",
                "shape_name": "Filter",
                "min_length": 0,
                "max_length": 8192
              },
              "parameters": {
                "type": "map",
                "zonbookDocumentation": "\n        <simpara>The test's parameters, such as test framework parameters and fixture settings. Parameters are\n            represented by name-value pairs of strings.</simpara>\n        <simpara>For all tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to\n                    \"false\" to disable it.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Calabash tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>profile: A cucumber profile, for example, \"my_profile_name\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>tags: You can limit execution to features or scenarios that have (or don't\n                    have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Appium tests (all types):</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>appium_version: The Appium version. Currently supported values are\n                    \"1.7.2\", \"1.7.1\", \"1.6.5\", \"latest\", and \"default\".</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>“latest” will run the latest Appium version supported by Device\n                            Farm (1.7.2).</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>For “default”, Device Farm will choose a compatible version of\n                            Appium for the device. The current behavior is to run 1.7.2 on Android\n                            devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>This behavior is subject to change.</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Fuzz tests (Android only):</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>event_count: The number of events, between 1 and 10000, that the UI fuzz\n                    test should perform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should\n                    wait between events.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>seed: A seed to use for randomizing the UI fuzz test. Using the same seed\n                    value between tests ensures identical event sequences.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Explorer tests:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>username: A username to use if the Explorer encounters a login form. If not\n                    supplied, no username will be inserted.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>password: A password to use if the Explorer encounters a login form. If not\n                    supplied, no password will be inserted.</simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>For Instrumentation:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test case: \"com.android.abc.Test1\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"com.android.abc.Test1#smoke\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For XCTest and XCTestUI:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test class: \"LoginTests\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a multiple test classes: \"LoginTests,SmokeTests\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"LoginTests/testValid\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"LoginTests/testValid,LoginTests/testInvalid\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n        <simpara>For UIAutomator:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>filter: A test filter string. Examples:</simpara>\n                <itemizedlist>\n                    <listitem>\n                        <simpara>Running a single test case: \"com.android.abc.Test1\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running a single test: \"com.android.abc.Test1#smoke\"</simpara>\n                    </listitem>\n                    <listitem>\n                        <simpara>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</simpara>\n                    </listitem>\n                </itemizedlist>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The test's parameters, such as test framework parameters and fixture settings. Parameters are\n            represented by name-value pairs of strings.</p>\n        <p>For all tests:</p>\n        <ul>\n            <li>\n                <p>app_performance_monitoring: Performance monitoring is enabled by default. Set this parameter to\n                    \"false\" to disable it.</p>\n            </li>\n         </ul>\n        <p>For Calabash tests:</p>\n        <ul>\n            <li>\n                <p>profile: A cucumber profile, for example, \"my_profile_name\".</p>\n            </li>\n            <li>\n                <p>tags: You can limit execution to features or scenarios that have (or don't\n                    have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p>\n            </li>\n         </ul>\n        <p>For Appium tests (all types):</p>\n        <ul>\n            <li>\n                <p>appium_version: The Appium version. Currently supported values are\n                    \"1.7.2\", \"1.7.1\", \"1.6.5\", \"latest\", and \"default\".</p>\n                <ul>\n                  <li>\n                        <p>“latest” will run the latest Appium version supported by Device\n                            Farm (1.7.2).</p>\n                    </li>\n                  <li>\n                        <p>For “default”, Device Farm will choose a compatible version of\n                            Appium for the device. The current behavior is to run 1.7.2 on Android\n                            devices and iOS 9 and earlier, 1.7.2 for iOS 10 and later.</p>\n                    </li>\n                  <li>\n                        <p>This behavior is subject to change.</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For Fuzz tests (Android only):</p>\n        <ul>\n            <li>\n                <p>event_count: The number of events, between 1 and 10000, that the UI fuzz\n                    test should perform.</p>\n            </li>\n            <li>\n                <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should\n                    wait between events.</p>\n            </li>\n            <li>\n                <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed\n                    value between tests ensures identical event sequences.</p>\n            </li>\n         </ul>\n        <p>For Explorer tests:</p>\n        <ul>\n            <li>\n                <p>username: A username to use if the Explorer encounters a login form. If not\n                    supplied, no username will be inserted.</p>\n            </li>\n            <li>\n                <p>password: A password to use if the Explorer encounters a login form. If not\n                    supplied, no password will be inserted.</p>\n            </li>\n         </ul>\n        <p>For Instrumentation:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test case: \"com.android.abc.Test1\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"com.android.abc.Test1#smoke\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For XCTest and XCTestUI:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test class: \"LoginTests\"</p>\n                    </li>\n                  <li>\n                        <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"LoginTests/testValid\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"LoginTests/testValid,LoginTests/testInvalid\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n        <p>For UIAutomator:</p>\n        <ul>\n            <li>\n                <p>filter: A test filter string. Examples:</p>\n                <ul>\n                  <li>\n                        <p>Running a single test case: \"com.android.abc.Test1\"</p>\n                    </li>\n                  <li>\n                        <p>Running a single test: \"com.android.abc.Test1#smoke\"</p>\n                    </li>\n                  <li>\n                        <p>Running multiple tests:\n                            \"com.android.abc.Test1,com.android.abc.Test2\"</p>\n                    </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestParameters",
                "keys": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                },
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the test for the run to be scheduled.</simpara>\n      ",
            "documentation": "\n        <p>Information about the test for the run to be scheduled.</p>\n      ",
            "required": true,
            "shape_name": "ScheduleRunTest"
          },
          "configuration": {
            "type": "structure",
            "members": {
              "extraDataPackageArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The ARN of the extra data for the run. The extra data is a .zip file that AWS\n            Device Farm will extract to external data for Android or the app's sandbox for\n            iOS.</simpara>\n      ",
                "documentation": "\n        <p>The ARN of the extra data for the run. The extra data is a .zip file that AWS\n            Device Farm will extract to external data for Android or the app's sandbox for\n            iOS.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "networkProfileArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Reserved for internal use.</simpara>\n        \n      ",
                "documentation": "\n        <p>Reserved for internal use.</p>\n        \n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "locale": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Information about the locale that is used for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                "shape_name": "String"
              },
              "location": {
                "type": "structure",
                "members": {
                  "latitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                    "documentation": "\n        <p>The latitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  },
                  "longitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                    "documentation": "\n        <p>The longitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about the location that is used for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                "shape_name": "Location"
              },
              "vpceConfigurationArns": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.</para>\n      ",
                "documentation": "\n         <p>An array of Amazon Resource Names (ARNs) for your VPC endpoint configurations.</p>\n      ",
                "shape_name": "AmazonResourceNames",
                "members": {
                  "type": "string",
                  "shape_name": "AmazonResourceName",
                  "documentation": null,
                  "min_length": 32
                }
              },
              "customerArtifactPaths": {
                "type": "structure",
                "members": {
                  "iosPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "IosPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "androidPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "AndroidPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "deviceHostPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "DeviceHostPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Input <code>CustomerArtifactPaths</code> object for the scheduled run\n            configuration.</simpara>\n      ",
                "documentation": "\n        <p>Input <code>CustomerArtifactPaths</code> object for the scheduled run\n            configuration.</p>\n      ",
                "shape_name": "CustomerArtifactPaths"
              },
              "radios": {
                "type": "structure",
                "members": {
                  "wifi": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "bluetooth": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "nfc": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "gps": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Information about the radio states for the run.</simpara>\n      ",
                "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                "shape_name": "Radios"
              },
              "auxiliaryApps": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of auxiliary apps for the run.</simpara>\n      ",
                "documentation": "\n        <p>A list of auxiliary apps for the run.</p>\n      ",
                "shape_name": "AmazonResourceNames",
                "members": {
                  "type": "string",
                  "shape_name": "AmazonResourceName",
                  "documentation": null,
                  "min_length": 32
                }
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                "shape_name": "BillingMethod"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the settings for the run to be scheduled.</simpara>\n      ",
            "documentation": "\n        <p>Information about the settings for the run to be scheduled.</p>\n      ",
            "shape_name": "ScheduleRunConfiguration"
          },
          "executionConfiguration": {
            "type": "structure",
            "members": {
              "jobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of minutes a test run will execute before it times out.</simpara>\n      ",
                "documentation": "\n        <p>The number of minutes a test run will execute before it times out.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "accountsCleanup": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>True if account cleanup is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                "documentation": "\n        <p>True if account cleanup is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                "shape_name": "AccountsCleanup"
              },
              "appPackagesCleanup": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>True if app package cleanup is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                "documentation": "\n        <p>True if app package cleanup is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                "shape_name": "AppPackagesCleanup"
              },
              "videoCapture": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>Set to true to enable video capture; otherwise, set to false. The default is\n            true.</para>\n      ",
                "documentation": "\n        <p>Set to true to enable video capture; otherwise, set to false. The default is\n            true.</p>\n      ",
                "shape_name": "VideoCapture"
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Specifies configuration information about a test run, such as the execution timeout\n            (in minutes).</simpara>\n      ",
            "documentation": "\n        <p>Specifies configuration information about a test run, such as the execution timeout\n            (in minutes).</p>\n      ",
            "shape_name": "ExecutionConfiguration"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the schedule run operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the schedule run operation.</p>\n      ",
        "shape_name": "ScheduleRunRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "run": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The run's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's name.</simpara>\n      ",
                "documentation": "\n        <p>The run's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "platform": {
                "type": "string",
                "enum": [
                  "ANDROID",
                  "IOS"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePlatform"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the run was created.</simpara>\n      ",
                "documentation": "\n        <p>When the run was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's start time.</simpara>\n      ",
                "documentation": "\n        <p>The run's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The run's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The run's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The run's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the run's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the run's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "totalJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of jobs for the run.</simpara>\n      ",
                "documentation": "\n        <p>The total number of jobs for the run.</p>\n      ",
                "shape_name": "Integer"
              },
              "completedJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of completed jobs.</simpara>\n      ",
                "documentation": "\n        <p>The total number of completed jobs.</p>\n      ",
                "shape_name": "Integer"
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test run.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test run.</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "networkProfile": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "description": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CURATED",
                      "PRIVATE"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                    "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                    "shape_name": "NetworkProfileType"
                  },
                  "uplinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  },
                  "downlinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The network profile being used for a test run.</simpara>\n      ",
                "documentation": "\n        <p>The network profile being used for a test run.</p>\n      ",
                "shape_name": "NetworkProfile"
              },
              "parsingResultUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</simpara>\n      ",
                "documentation": "\n        <p>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</p>\n      ",
                "shape_name": "String"
              },
              "resultCode": {
                "type": "string",
                "enum": [
                  "PARSING_FAILED",
                  "VPC_ENDPOINT_SETUP_FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</simpara>\n      ",
                "documentation": "\n        <p>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</p>\n      ",
                "shape_name": "ExecutionResultCode"
              },
              "seed": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</p>\n      ",
                "shape_name": "Integer"
              },
              "appUpload": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>An app to upload or that has been uploaded.</para>\n      ",
                "documentation": "\n        <p>An app to upload or that has been uploaded.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "eventCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</p>\n      ",
                "shape_name": "Integer"
              },
              "jobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>The number of minutes the job will execute before it times out.</para>\n      ",
                "documentation": "\n        <p>The number of minutes the job will execute before it times out.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "devicePoolArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the device pool for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the device pool for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "locale": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>Information about the locale that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                "shape_name": "String"
              },
              "radios": {
                "type": "structure",
                "members": {
                  "wifi": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "bluetooth": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "nfc": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "gps": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the radio states for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                "shape_name": "Radios"
              },
              "location": {
                "type": "structure",
                "members": {
                  "latitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                    "documentation": "\n        <p>The latitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  },
                  "longitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                    "documentation": "\n        <p>The longitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the location that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                "shape_name": "Location"
              },
              "customerArtifactPaths": {
                "type": "structure",
                "members": {
                  "iosPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "IosPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "androidPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "AndroidPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "deviceHostPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "DeviceHostPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Output <code>CustomerArtifactPaths</code> object for the test run.</simpara>\n      ",
                "documentation": "\n        <p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>\n      ",
                "shape_name": "CustomerArtifactPaths"
              },
              "webUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Device Farm console URL for the recording of the run.</para>\n      ",
                "documentation": "\n        <p>The Device Farm console URL for the recording of the run.</p>\n      ",
                "shape_name": "String"
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              },
              "testSpecArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the YAML-formatted test specification for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceSelectionResult": {
                "type": "structure",
                "members": {
                  "filters": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <para>The filters in a device selection result.</para>\n      ",
                    "documentation": "\n        <p>The filters in a device selection result.</p>\n      ",
                    "shape_name": "DeviceFilters",
                    "members": {
                      "type": "structure",
                      "members": {
                        "attribute": {
                          "type": "string",
                          "enum": [
                            "ARN",
                            "PLATFORM",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE"
                          ],
                          "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterAttribute"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "EQUALS",
                            "LESS_THAN",
                            "LESS_THAN_OR_EQUALS",
                            "GREATER_THAN",
                            "GREATER_THAN_OR_EQUALS",
                            "IN",
                            "NOT_IN",
                            "CONTAINS"
                          ],
                          "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterOperator"
                        },
                        "values": {
                          "type": "list",
                          "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterValues",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
                      "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
                      "shape_name": "DeviceFilter"
                    }
                  },
                  "matchedDevicesCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The number of devices that matched the device filter selection criteria.</para>\n      ",
                    "documentation": "\n        <p>The number of devices that matched the device filter selection criteria.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "maxDevices": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The maximum number of devices to be selected by a device filter and included in a test run.</para>\n      ",
                    "documentation": "\n        <p>The maximum number of devices to be selected by a device filter and included in a test run.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <para>The results of a device filter used to select the devices for a test run.</para>\n      ",
                "documentation": "\n        <p>The results of a device filter used to select the devices for a test run.</p>\n      ",
                "shape_name": "DeviceSelectionResult"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Information about the scheduled run.</simpara>\n      ",
            "documentation": "\n        <p>Information about the scheduled run.</p>\n      ",
            "shape_name": "Run"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of a schedule run request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of a schedule run request.</p>\n      ",
        "shape_name": "ScheduleRunResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An entity with the same name already exists.</simpara>\n      ",
          "documentation": "\n        <p>An entity with the same name already exists.</p>\n      ",
          "shape_name": "IdempotencyException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Schedules a run.</p>\n      "
    },
    "StopRun": {
      "name": "StopRun",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to\n            stop.</simpara>\n      ",
            "documentation": "\n        <p>Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to\n            stop.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to stop a specific run.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to stop a specific run.</p>\n      ",
        "shape_name": "StopRunRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "run": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The run's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The run's name.</simpara>\n      ",
                "documentation": "\n        <p>The run's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "platform": {
                "type": "string",
                "enum": [
                  "ANDROID",
                  "IOS"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePlatform"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the run was created.</simpara>\n      ",
                "documentation": "\n        <p>When the run was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The run's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The run's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's start time.</simpara>\n      ",
                "documentation": "\n        <p>The run's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The run's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The run's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The run's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The run's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the run's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the run's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "totalJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of jobs for the run.</simpara>\n      ",
                "documentation": "\n        <p>The total number of jobs for the run.</p>\n      ",
                "shape_name": "Integer"
              },
              "completedJobs": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of completed jobs.</simpara>\n      ",
                "documentation": "\n        <p>The total number of completed jobs.</p>\n      ",
                "shape_name": "Integer"
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</simpara>\n      ",
                "documentation": "\n        <p>Specifies the billing method for a test run: <code>metered</code> or\n                <code>unmetered</code>. If the parameter is not specified, the default value is\n                <code>metered</code>.</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the test run.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the test run.</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "networkProfile": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "description": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                    "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CURATED",
                      "PRIVATE"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                    "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                    "shape_name": "NetworkProfileType"
                  },
                  "uplinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkBandwidthBits": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                    "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkDelayMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                    "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "downlinkJitterMs": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                    "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "uplinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  },
                  "downlinkLossPercent": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                    "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                    "shape_name": "PercentInteger",
                    "min_length": 0,
                    "max_length": 100
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The network profile being used for a test run.</simpara>\n      ",
                "documentation": "\n        <p>The network profile being used for a test run.</p>\n      ",
                "shape_name": "NetworkProfile"
              },
              "parsingResultUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</simpara>\n      ",
                "documentation": "\n        <p>Read-only URL for an object in S3 bucket where you can get the parsing results of\n            the test package. If the test package doesn't parse, the reason why it doesn't parse\n            appears in the file that this URL points to.</p>\n      ",
                "shape_name": "String"
              },
              "resultCode": {
                "type": "string",
                "enum": [
                  "PARSING_FAILED",
                  "VPC_ENDPOINT_SETUP_FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</simpara>\n      ",
                "documentation": "\n        <p>Supporting field for the result field. Set only if <code>result</code> is\n                <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because\n            of test package parsing failure.</p>\n      ",
                "shape_name": "ExecutionResultCode"
              },
              "seed": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same\n            seed value between tests ensures identical event sequences.</p>\n      ",
                "shape_name": "Integer"
              },
              "appUpload": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>An app to upload or that has been uploaded.</para>\n      ",
                "documentation": "\n        <p>An app to upload or that has been uploaded.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "eventCount": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</para>\n      ",
                "documentation": "\n        <p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz\n            test should perform.</p>\n      ",
                "shape_name": "Integer"
              },
              "jobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <para>The number of minutes the job will execute before it times out.</para>\n      ",
                "documentation": "\n        <p>The number of minutes the job will execute before it times out.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "devicePoolArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the device pool for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the device pool for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "locale": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>Information about the locale that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the locale that is used for the run.</p>\n      ",
                "shape_name": "String"
              },
              "radios": {
                "type": "structure",
                "members": {
                  "wifi": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Wi-Fi is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "bluetooth": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</simpara>\n      ",
                    "documentation": "\n        <p>True if Bluetooth is enabled at the beginning of the test; otherwise,\n            false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "nfc": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if NFC is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if NFC is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "gps": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>True if GPS is enabled at the beginning of the test; otherwise, false.</simpara>\n      ",
                    "documentation": "\n        <p>True if GPS is enabled at the beginning of the test; otherwise, false.</p>\n      ",
                    "shape_name": "Boolean"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the radio states for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the radio states for the run.</p>\n      ",
                "shape_name": "Radios"
              },
              "location": {
                "type": "structure",
                "members": {
                  "latitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The latitude.</simpara>\n      ",
                    "documentation": "\n        <p>The latitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  },
                  "longitude": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>The longitude.</simpara>\n      ",
                    "documentation": "\n        <p>The longitude.</p>\n      ",
                    "required": true,
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <para>Information about the location that is used for the run.</para>\n      ",
                "documentation": "\n        <p>Information about the location that is used for the run.</p>\n      ",
                "shape_name": "Location"
              },
              "customerArtifactPaths": {
                "type": "structure",
                "members": {
                  "iosPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the iOS device where the artifacts generated by\n            the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "IosPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "androidPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths on the Android device where the artifacts generated\n            by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "AndroidPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "deviceHostPaths": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</simpara>\n      ",
                    "documentation": "\n        <p>Comma-separated list of paths in the test execution environment where the artifacts\n            generated by the customer's tests will be pulled from.</p>\n      ",
                    "shape_name": "DeviceHostPaths",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Output <code>CustomerArtifactPaths</code> object for the test run.</simpara>\n      ",
                "documentation": "\n        <p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>\n      ",
                "shape_name": "CustomerArtifactPaths"
              },
              "webUrl": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Device Farm console URL for the recording of the run.</para>\n      ",
                "documentation": "\n        <p>The Device Farm console URL for the recording of the run.</p>\n      ",
                "shape_name": "String"
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              },
              "testSpecArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The ARN of the YAML-formatted test specification for the run.</para>\n      ",
                "documentation": "\n        <p>The ARN of the YAML-formatted test specification for the run.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceSelectionResult": {
                "type": "structure",
                "members": {
                  "filters": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <para>The filters in a device selection result.</para>\n      ",
                    "documentation": "\n        <p>The filters in a device selection result.</p>\n      ",
                    "shape_name": "DeviceFilters",
                    "members": {
                      "type": "structure",
                      "members": {
                        "attribute": {
                          "type": "string",
                          "enum": [
                            "ARN",
                            "PLATFORM",
                            "OS_VERSION",
                            "MODEL",
                            "AVAILABILITY",
                            "FORM_FACTOR",
                            "MANUFACTURER",
                            "REMOTE_ACCESS_ENABLED",
                            "REMOTE_DEBUG_ENABLED",
                            "INSTANCE_ARN",
                            "INSTANCE_LABELS",
                            "FLEET_TYPE"
                          ],
                          "zonbookDocumentation": "\n        <para>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</para>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>OS_VERSION: The operating system version. For example, \"10.3.2\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MODEL: The device model. For example, \"iPad 5th Gen\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>MANUFACTURER: The device manufacturer. For example, \"Apple\".</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTANCE_LABELS: The label of the device instance.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The aspect of a device such as platform or model used as\n            the selection criteria in a device filter.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of the device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>OS_VERSION: The operating system version. For example, \"10.3.2\".</p>\n            </li>\n            <li>\n                <p>MODEL: The device model. For example, \"iPad 5th Gen\".</p>\n            </li>\n            <li>\n                <p>AVAILABILITY: The current availability of the device.\n                    Valid values are \"AVAILABLE\", \"HIGHLY_AVAILABLE\", \"BUSY\",\n                    or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterAttribute"
                        },
                        "operator": {
                          "type": "string",
                          "enum": [
                            "EQUALS",
                            "LESS_THAN",
                            "LESS_THAN_OR_EQUALS",
                            "GREATER_THAN",
                            "GREATER_THAN_OR_EQUALS",
                            "IN",
                            "NOT_IN",
                            "CONTAINS"
                          ],
                          "zonbookDocumentation": "\n        <para>The filter operator.</para>\n        <itemizedlist>\n            <listitem>\n                <para>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</para>\n            </listitem>\n            <listitem>\n                <para>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</para>\n            </listitem>\n            <listitem>\n                <para>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>The filter operator.</p>\n        <ul>\n            <li>\n                <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p>\n            </li>\n            <li>\n                <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p>\n            </li>\n            <li>\n                <p>The IN and NOT_IN operators are available for the\n                    ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p>\n            </li>\n            <li>\n                <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS\n                    operators are also available for the OS_VERSION attribute.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterOperator"
                        },
                        "values": {
                          "type": "list",
                          "zonbookDocumentation": "\n        <para>An array of one or more filter values used in a device filter.</para>\n        <itemizedlist>\n            <title>Operator Values</title>\n            <listitem>\n               <para>The IN and NOT operators can take a values array that has more than one element.</para>\n            </listitem>\n            <listitem>\n                <para>The other operators require an array with a single element.</para>\n            </listitem>\n        </itemizedlist>\n        <itemizedlist>\n            <title>Attribute Values</title>\n            <listitem>\n                <para>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</para>\n            </listitem>\n            <listitem>\n                <para>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                          "documentation": "\n        <p>An array of one or more filter values used in a device filter.</p>\n        <p class=\"title\">\n            <b>Operator Values</b>\n         </p>\n         <ul>\n            <li>\n               <p>The IN and NOT operators can take a values array that has more than one element.</p>\n            </li>\n            <li>\n                <p>The other operators require an array with a single element.</p>\n            </li>\n         </ul>\n        <p class=\"title\">\n            <b>Attribute Values</b>\n         </p>\n         <ul>\n            <li>\n                <p>The PLATFORM attribute can be set to \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>The AVAILABILITY attribute can be set to \"AVAILABLE\",\n                    \"HIGHLY_AVAILABLE\", \"BUSY\", or \"TEMPORARY_NOT_AVAILABLE\".</p>\n            </li>\n            <li>\n                <p>The FORM_FACTOR attribute can be set to \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>The FLEET_TYPE attribute can be set to \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "DeviceFilterValues",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        }
                      },
                      "zonbookDocumentation": "\n        <para>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <xref linkend=\"ScheduleRun\"/>.</para>\n        <para>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <xref linkend=\"ListDevices\"/>.</para>\n      ",
                      "documentation": "\n        <p>Represents a device filter used to select a set of devices to be included in a test run.\n            This data structure is passed in as the \"deviceSelectionConfiguration\" parameter to ScheduleRun.\n            For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>\n        <p>It is also passed in as the \"filters\" parameter to ListDevices.\n            For an example of the JSON request syntax, see <a>ListDevices</a>.</p>\n      ",
                      "shape_name": "DeviceFilter"
                    }
                  },
                  "matchedDevicesCount": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The number of devices that matched the device filter selection criteria.</para>\n      ",
                    "documentation": "\n        <p>The number of devices that matched the device filter selection criteria.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "maxDevices": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <para>The maximum number of devices to be selected by a device filter and included in a test run.</para>\n      ",
                    "documentation": "\n        <p>The maximum number of devices to be selected by a device filter and included in a test run.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <para>The results of a device filter used to select the devices for a test run.</para>\n      ",
                "documentation": "\n        <p>The results of a device filter used to select the devices for a test run.</p>\n      ",
                "shape_name": "DeviceSelectionResult"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The run that was stopped.</simpara>\n      ",
            "documentation": "\n        <p>The run that was stopped.</p>\n      ",
            "shape_name": "Run"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the results of your stop run attempt.</simpara>\n      ",
        "documentation": "\n        <p>Represents the results of your stop run attempt.</p>\n      ",
        "shape_name": "StopRunResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Initiates a stop request for the current test run. AWS Device Farm will immediately\n            stop the run on devices where tests have not started executing, and you will not be\n            billed for these devices. On devices where tests have started executing, Setup Suite and\n            Teardown Suite tests will run to completion before stopping execution on those devices.\n            You will be billed for Setup, Teardown, and any tests that were in progress or already\n            completed.</p>\n      "
    },
    "StopJob": {
      "name": "StopJob",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>Represents the Amazon Resource Name (ARN) of the \n            Device Farm job you wish to stop.</para>\n      ",
            "documentation": "\n        <p>Represents the Amazon Resource Name (ARN) of the \n            Device Farm job you wish to stop.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "shape_name": "StopJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "job": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The job's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The job's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The job's name.</simpara>\n      ",
                "documentation": "\n        <p>The job's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "type": {
                "type": "string",
                "enum": [
                  "BUILTIN_FUZZ",
                  "BUILTIN_EXPLORER",
                  "WEB_PERFORMANCE_PROFILE",
                  "APPIUM_JAVA_JUNIT",
                  "APPIUM_JAVA_TESTNG",
                  "APPIUM_PYTHON",
                  "APPIUM_WEB_JAVA_JUNIT",
                  "APPIUM_WEB_JAVA_TESTNG",
                  "APPIUM_WEB_PYTHON",
                  "CALABASH",
                  "INSTRUMENTATION",
                  "UIAUTOMATION",
                  "UIAUTOMATOR",
                  "XCTEST",
                  "XCTEST_UI",
                  "REMOTE_ACCESS_RECORD",
                  "REMOTE_ACCESS_REPLAY"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's type.</simpara>\n        <simpara>Allowed values include the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>BUILTIN_FUZZ: The built-in fuzz type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON: The Appium Python type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH: The Calabash type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION: The Instrumentation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION: The uiautomation type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR: The uiautomator type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST: The XCode test type.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI: The XCode UI test type.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's type.</p>\n        <p>Allowed values include the following:</p>\n        <ul>\n            <li>\n                <p>BUILTIN_FUZZ: The built-in fuzz type.</p>\n            </li>\n            <li>\n                <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an\n                    Android app, interacting with it and capturing screenshots at the same\n                    time.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON: The Appium Python type.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p>\n            </li>\n            <li>\n                <p>CALABASH: The Calabash type.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION: The Instrumentation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION: The uiautomation type.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR: The uiautomator type.</p>\n            </li>\n            <li>\n                <p>XCTEST: The XCode test type.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI: The XCode UI test type.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "TestType"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the job was created.</simpara>\n      ",
                "documentation": "\n        <p>When the job was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's status.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's status.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The job's result.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The job's result.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The job's start time.</simpara>\n      ",
                "documentation": "\n        <p>The job's start time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The job's stop time.</simpara>\n      ",
                "documentation": "\n        <p>The job's stop time.</p>\n      ",
                "shape_name": "DateTime"
              },
              "counters": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The total number of entities.</simpara>\n      ",
                    "documentation": "\n        <p>The total number of entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "passed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of passed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of passed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "failed": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of failed entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of failed entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "warned": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of warned entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of warned entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "errored": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of errored entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of errored entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "stopped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of stopped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of stopped entities.</p>\n      ",
                    "shape_name": "Integer"
                  },
                  "skipped": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The number of skipped entities.</simpara>\n      ",
                    "documentation": "\n        <p>The number of skipped entities.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The job's result counters.</simpara>\n      ",
                "documentation": "\n        <p>The job's result counters.</p>\n      ",
                "shape_name": "Counters"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the job's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the job's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "device": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                    "documentation": "\n        <p>The device's ARN.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's display name.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "manufacturer": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "model": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's model name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "modelId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                    "documentation": "\n        <p>The device's model ID.</p>\n      ",
                    "shape_name": "String"
                  },
                  "formFactor": {
                    "type": "string",
                    "enum": [
                      "PHONE",
                      "TABLET"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DeviceFormFactor"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DevicePlatform"
                  },
                  "os": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                    "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                    "shape_name": "String"
                  },
                  "cpu": {
                    "type": "structure",
                    "members": {
                      "frequency": {
                        "type": "string",
                        "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                        "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                        "shape_name": "String"
                      },
                      "architecture": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                        "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                        "shape_name": "String"
                      },
                      "clock": {
                        "type": "double",
                        "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                        "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                        "shape_name": "Double"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                    "shape_name": "CPU"
                  },
                  "resolution": {
                    "type": "structure",
                    "members": {
                      "width": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      },
                      "height": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                    "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                    "shape_name": "Resolution"
                  },
                  "heapSize": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "memory": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "carrier": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                    "documentation": "\n        <p>The device's carrier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "radio": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                    "shape_name": "String"
                  },
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "remoteDebugEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "fleetType": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                    "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                    "shape_name": "String"
                  },
                  "fleetName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "instances": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                    "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                    "shape_name": "DeviceInstances",
                    "members": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "deviceArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "labels": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                          "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                          "shape_name": "InstanceLabels",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                          ],
                          "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                          "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                          "shape_name": "InstanceStatus"
                        },
                        "udid": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                          "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                          "shape_name": "String"
                        },
                        "instanceProfile": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "packageCleanup": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "excludeAppPackagesFromCleanup": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                              "shape_name": "PackageIds",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "rebootAfterUse": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                              "shape_name": "Message",
                              "min_length": 0,
                              "max_length": 16384
                            }
                          },
                          "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                          "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                          "shape_name": "InstanceProfile"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                      "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                      "shape_name": "DeviceInstance"
                    }
                  },
                  "availability": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY_NOT_AVAILABLE",
                      "BUSY",
                      "AVAILABLE",
                      "HIGHLY_AVAILABLE"
                    ],
                    "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                    "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                    "shape_name": "DeviceAvailability"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The device (phone or tablet).</simpara>\n      ",
                "documentation": "\n        <p>The device (phone or tablet).</p>\n      ",
                "shape_name": "Device"
              },
              "instanceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Represents the total (metered or unmetered) minutes used by the job.</simpara>\n      ",
                "documentation": "\n        <p>Represents the total (metered or unmetered) minutes used by the job.</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "videoEndpoint": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The endpoint for streaming device video.</para>\n      ",
                "documentation": "\n        <p>The endpoint for streaming device video.</p>\n      ",
                "shape_name": "String"
              },
              "videoCapture": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</para>\n      ",
                "documentation": "\n        <p>This value is set to true if video capture is enabled; otherwise, it is set to\n            false.</p>\n      ",
                "shape_name": "VideoCapture"
              }
            },
            "zonbookDocumentation": "\n        <para>The job that was stopped.</para>\n      ",
            "documentation": "\n        <p>The job that was stopped.</p>\n      ",
            "shape_name": "Job"
          }
        },
        "shape_name": "StopJobResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Initiates a stop request for the current job. \n            AWS Device Farm will immediately stop the job on the device where \n            tests have not started executing, and you will not be billed for \n            this device. On the device where tests have started executing, \n            Setup Suite and Teardown Suite tests will run to completion \n            before stopping execution on the device.\n            You will be billed for Setup, Teardown, and any tests that \n            were in progress or already completed.</p> \n      "
    },
    "StopRemoteAccessSession": {
      "name": "StopRemoteAccessSession",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session you wish to\n            stop.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session you wish to\n            stop.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the request to stop the remote access session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the request to stop the remote access session.</p>\n      ",
        "shape_name": "StopRemoteAccessSessionRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "remoteAccessSession": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the remote access session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The name of the remote access session.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was created.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PENDING_CONCURRENCY",
                  "PENDING_DEVICE",
                  "PROCESSING",
                  "SCHEDULING",
                  "PREPARING",
                  "RUNNING",
                  "COMPLETED",
                  "STOPPING"
                ],
                "zonbookDocumentation": "\n        <simpara>The status of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_CONCURRENCY: A pending concurrency status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PENDING_DEVICE: A pending device status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SCHEDULING: A scheduling status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PREPARING: A preparing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>RUNNING: A running status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>COMPLETED: A completed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPING: A stopping status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The status of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending status.</p>\n            </li>\n            <li>\n                <p>PENDING_CONCURRENCY: A pending concurrency status.</p>\n            </li>\n            <li>\n                <p>PENDING_DEVICE: A pending device status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SCHEDULING: A scheduling status.</p>\n            </li>\n            <li>\n                <p>PREPARING: A preparing status.</p>\n            </li>\n            <li>\n                <p>RUNNING: A running status.</p>\n            </li>\n            <li>\n                <p>COMPLETED: A completed status.</p>\n            </li>\n            <li>\n                <p>STOPPING: A stopping status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionStatus"
              },
              "result": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PASSED",
                  "WARNED",
                  "FAILED",
                  "SKIPPED",
                  "ERRORED",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n        <simpara>The result of the remote access session. Can be any of the following:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PENDING: A pending condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PASSED: A passing condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WARNED: A warning condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>FAILED: A failed condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SKIPPED: A skipped condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>ERRORED: An error condition.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>STOPPED: A stopped condition.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The result of the remote access session. Can be any of the following:</p>\n        <ul>\n            <li>\n                <p>PENDING: A pending condition.</p>\n            </li>\n            <li>\n                <p>PASSED: A passing condition.</p>\n            </li>\n            <li>\n                <p>WARNED: A warning condition.</p>\n            </li>\n            <li>\n                <p>FAILED: A failed condition.</p>\n            </li>\n            <li>\n                <p>SKIPPED: A skipped condition.</p>\n            </li>\n            <li>\n                <p>ERRORED: An error condition.</p>\n            </li>\n            <li>\n                <p>STOPPED: A stopped condition.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ExecutionResult"
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>A message about the remote access session.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "started": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was started.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was started.</p>\n      ",
                "shape_name": "DateTime"
              },
              "stopped": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>The date and time the remote access session was stopped.</simpara>\n      ",
                "documentation": "\n        <p>The date and time the remote access session was stopped.</p>\n      ",
                "shape_name": "DateTime"
              },
              "device": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's ARN.</simpara>\n      ",
                    "documentation": "\n        <p>The device's ARN.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's display name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's display name.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "manufacturer": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's manufacturer name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's manufacturer name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "model": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's model name.</simpara>\n      ",
                    "documentation": "\n        <p>The device's model name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "modelId": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <para>The device's model ID.</para>\n      ",
                    "documentation": "\n        <p>The device's model ID.</p>\n      ",
                    "shape_name": "String"
                  },
                  "formFactor": {
                    "type": "string",
                    "enum": [
                      "PHONE",
                      "TABLET"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's form factor.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>PHONE: The phone form factor.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>TABLET: The tablet form factor.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's form factor.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>PHONE: The phone form factor.</p>\n            </li>\n            <li>\n                <p>TABLET: The tablet form factor.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DeviceFormFactor"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ANDROID",
                      "IOS"
                    ],
                    "zonbookDocumentation": "\n        <simpara>The device's platform.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID: The Android platform.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS: The iOS platform.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                    "documentation": "\n        <p>The device's platform.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ANDROID: The Android platform.</p>\n            </li>\n            <li>\n                <p>IOS: The iOS platform.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "DevicePlatform"
                  },
                  "os": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's operating system type.</simpara>\n      ",
                    "documentation": "\n        <p>The device's operating system type.</p>\n      ",
                    "shape_name": "String"
                  },
                  "cpu": {
                    "type": "structure",
                    "members": {
                      "frequency": {
                        "type": "string",
                        "zonbookDocumentation": "\n        \n        <simpara>The CPU's frequency.</simpara>\n      ",
                        "documentation": "\n        \n        <p>The CPU's frequency.</p>\n      ",
                        "shape_name": "String"
                      },
                      "architecture": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The CPU's architecture, for example x86 or ARM.</simpara>\n      ",
                        "documentation": "\n        <p>The CPU's architecture, for example x86 or ARM.</p>\n      ",
                        "shape_name": "String"
                      },
                      "clock": {
                        "type": "double",
                        "zonbookDocumentation": "\n        <simpara>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</simpara>\n      ",
                        "documentation": "\n        <p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2\n            GHz CPU is expressed as 1200000000.</p>\n      ",
                        "shape_name": "Double"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Information about the device's CPU.</simpara>\n      ",
                    "documentation": "\n        <p>Information about the device's CPU.</p>\n      ",
                    "shape_name": "CPU"
                  },
                  "resolution": {
                    "type": "structure",
                    "members": {
                      "width": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's width, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's width, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      },
                      "height": {
                        "type": "integer",
                        "zonbookDocumentation": "\n        <simpara>The screen resolution's height, expressed in pixels.</simpara>\n      ",
                        "documentation": "\n        <p>The screen resolution's height, expressed in pixels.</p>\n      ",
                        "shape_name": "Integer"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>The resolution of the device.</simpara>\n      ",
                    "documentation": "\n        <p>The resolution of the device.</p>\n      ",
                    "shape_name": "Resolution"
                  },
                  "heapSize": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's heap size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's heap size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "memory": {
                    "type": "long",
                    "zonbookDocumentation": "\n        <simpara>The device's total memory size, expressed in bytes.</simpara>\n      ",
                    "documentation": "\n        <p>The device's total memory size, expressed in bytes.</p>\n      ",
                    "shape_name": "Long"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's image name.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's image name.</p>\n      ",
                    "shape_name": "String"
                  },
                  "carrier": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The device's carrier.</simpara>\n      ",
                    "documentation": "\n        <p>The device's carrier.</p>\n      ",
                    "shape_name": "String"
                  },
                  "radio": {
                    "type": "string",
                    "zonbookDocumentation": "\n        \n        <simpara>The device's radio.</simpara>\n      ",
                    "documentation": "\n        \n        <p>The device's radio.</p>\n      ",
                    "shape_name": "String"
                  },
                  "remoteAccessEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>Specifies whether remote access has been enabled for the specified\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>Specifies whether remote access has been enabled for the specified\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "remoteDebugEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</simpara>\n      ",
                    "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the\n            device.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "fleetType": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</simpara>\n      ",
                    "documentation": "\n        <p>The type of fleet to which this device belongs. Possible values for fleet type are\n            PRIVATE and PUBLIC.</p>\n      ",
                    "shape_name": "String"
                  },
                  "fleetName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the fleet to which this device belongs.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the fleet to which this device belongs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "instances": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>The instances belonging to this device.</para>\n      ",
                    "documentation": "\n         <p>The instances belonging to this device.</p>\n      ",
                    "shape_name": "DeviceInstances",
                    "members": {
                      "type": "structure",
                      "members": {
                        "arn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "deviceArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                          "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                          "shape_name": "AmazonResourceName",
                          "min_length": 32
                        },
                        "labels": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                          "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                          "shape_name": "InstanceLabels",
                          "members": {
                            "type": "string",
                            "shape_name": "String",
                            "documentation": null
                          }
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "IN_USE",
                            "PREPARING",
                            "AVAILABLE",
                            "NOT_AVAILABLE"
                          ],
                          "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                          "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                          "shape_name": "InstanceStatus"
                        },
                        "udid": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                          "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                          "shape_name": "String"
                        },
                        "instanceProfile": {
                          "type": "structure",
                          "members": {
                            "arn": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                              "shape_name": "AmazonResourceName",
                              "min_length": 32
                            },
                            "packageCleanup": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "excludeAppPackagesFromCleanup": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                              "shape_name": "PackageIds",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            },
                            "rebootAfterUse": {
                              "type": "boolean",
                              "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                              "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                              "shape_name": "Boolean"
                            },
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                              "shape_name": "Name",
                              "min_length": 0,
                              "max_length": 256
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                              "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                              "shape_name": "Message",
                              "min_length": 0,
                              "max_length": 16384
                            }
                          },
                          "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                          "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                          "shape_name": "InstanceProfile"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Represents the device instance.</para>\n      ",
                      "documentation": "\n         <p>Represents the device instance.</p>\n      ",
                      "shape_name": "DeviceInstance"
                    }
                  },
                  "availability": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY_NOT_AVAILABLE",
                      "BUSY",
                      "AVAILABLE",
                      "HIGHLY_AVAILABLE"
                    ],
                    "zonbookDocumentation": "\n        <para>Reflects how likely a device will be available for a test run.</para>\n      ",
                    "documentation": "\n        <p>Reflects how likely a device will be available for a test run.</p>\n      ",
                    "shape_name": "DeviceAvailability"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The device (phone or tablet) used in the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>The device (phone or tablet) used in the remote access session.</p>\n      ",
                "shape_name": "Device"
              },
              "instanceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "remoteDebugEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <simpara>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</simpara>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote debugging is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordEnabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n        <para>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</para>\n      ",
                "documentation": "\n        <p>This flag is set to <code>true</code> if remote recording is enabled for the remote\n            access session.</p>\n      ",
                "shape_name": "Boolean"
              },
              "remoteRecordAppArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</para>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access\n            session.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "hostAddress": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>IP address of the EC2 host where you need to connect to remotely debug devices.\n            Only returned if remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "HostAddress",
                "max_length": 1024
              },
              "clientId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique identifier of your client for the remote access session. Only returned if\n            remote debugging is enabled for the remote access session.</p>\n      ",
                "shape_name": "ClientId",
                "min_length": 0,
                "max_length": 64
              },
              "billingMethod": {
                "type": "string",
                "enum": [
                  "METERED",
                  "UNMETERED"
                ],
                "zonbookDocumentation": "\n        <simpara>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <ulink type=\"documentation\" url=\"devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</ulink>.\"</simpara>\n      ",
                "documentation": "\n        <p>The billing method of the remote access session. Possible values include\n                <code>METERED</code> or <code>UNMETERED</code>. For more information about metered\n            devices, see <a href=\"http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device\n                Farm terminology</a>.\"</p>\n      ",
                "shape_name": "BillingMethod"
              },
              "deviceMinutes": {
                "type": "structure",
                "members": {
                  "total": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents the total minutes used by the resource to run\n            tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents the total minutes used by the resource to run\n            tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "metered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of metered minutes used by the resource to\n            run tests.</p>\n      ",
                    "shape_name": "Double"
                  },
                  "unmetered": {
                    "type": "double",
                    "zonbookDocumentation": "\n        <simpara>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</simpara>\n      ",
                    "documentation": "\n        <p>When specified, represents only the sum of unmetered minutes used by the resource\n            to run tests.</p>\n      ",
                    "shape_name": "Double"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</simpara>\n      ",
                "documentation": "\n        <p>The number of minutes a device is used in a remote access sesssion (including setup\n            and teardown minutes).</p>\n      ",
                "shape_name": "DeviceMinutes"
              },
              "endpoint": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The endpoint for the remote access sesssion.</simpara>\n      ",
                "documentation": "\n        <p>The endpoint for the remote access sesssion.</p>\n      ",
                "shape_name": "String"
              },
              "deviceUdid": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</simpara>\n      ",
                "documentation": "\n        <p>Unique device identifier for the remote device. Only returned if remote debugging\n            is enabled for the remote access session.</p>\n      ",
                "shape_name": "String"
              },
              "interactionMode": {
                "type": "string",
                "enum": [
                  "INTERACTIVE",
                  "NO_VIDEO",
                  "VIDEO_ONLY"
                ],
                "zonbookDocumentation": "\n        <para>The interaction mode of the remote access session. Valid values are:</para>\n        <itemizedlist>\n            <listitem>\n                <simpara>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <emphasis role=\"bold\">cannot</emphasis> run XCUITest\n                    framework-based tests in this mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests in this\n                    mode.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <emphasis role=\"bold\">can</emphasis> run XCUITest framework-based tests and\n                    watch the screen in this mode.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The interaction mode of the remote access session. Valid values are:</p>\n        <ul>\n            <li>\n                <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and\n                    rotating the screen. You <b>cannot</b> run XCUITest\n                    framework-based tests in this mode.</p>\n            </li>\n            <li>\n                <p>NO_VIDEO: You are connected to the device but cannot interact with it or\n                    view the screen. This mode has the fastest test execution speed. You <b>can</b> run XCUITest framework-based tests in this\n                    mode.</p>\n            </li>\n            <li>\n                <p>VIDEO_ONLY: You can view the screen but cannot touch or rotate it. You\n                        <b>can</b> run XCUITest framework-based tests and\n                    watch the screen in this mode.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "InteractionMode",
                "min_length": 0,
                "max_length": 64
              },
              "skipAppResign": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</para>\n         <para>For more information about how Device Farm re-signs your app(s), see <ulink url=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</ulink> in the <emphasis>AWS Device Farm FAQs</emphasis>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, for private devices, Device Farm will not sign your app again. For public devices, Device Farm always signs your apps again and this parameter has no effect.</p>\n         <p>For more information about how Device Farm re-signs your app(s), see <a href=\"https://aws.amazon.com/device-farm/faq/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>\n      ",
                "shape_name": "SkipAppResign"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A container representing the metadata from the service about the remote access\n            session you are stopping.</simpara>\n      ",
            "documentation": "\n        <p>A container representing the metadata from the service about the remote access\n            session you are stopping.</p>\n      ",
            "shape_name": "RemoteAccessSession"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the response from the server that describes the remote access session\n            when AWS Device Farm stops the session.</simpara>\n      ",
        "documentation": "\n        <p>Represents the response from the server that describes the remote access session\n            when AWS Device Farm stops the session.</p>\n      ",
        "shape_name": "StopRemoteAccessSessionResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Ends a specified remote access session.</p>\n      "
    },
    "UpdateDevicePool": {
      "name": "UpdateDevicePool",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to\n            update.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to\n            update.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A string representing the name of the device pool you wish to update.</simpara>\n      ",
            "documentation": "\n        <p>A string representing the name of the device pool you wish to update.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description of the device pool you wish to update.</simpara>\n      ",
            "documentation": "\n        <p>A description of the device pool you wish to update.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "rules": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>Represents the rules you wish to modify for the device pool. Updating rules is\n            optional; however, if you choose to update rules for your request, the update will\n            replace the existing rules.</simpara>\n      ",
            "documentation": "\n        <p>Represents the rules you wish to modify for the device pool. Updating rules is\n            optional; however, if you choose to update rules for your request, the update will\n            replace the existing rules.</p>\n      ",
            "shape_name": "Rules",
            "members": {
              "type": "structure",
              "members": {
                "attribute": {
                  "type": "string",
                  "enum": [
                    "ARN",
                    "PLATFORM",
                    "FORM_FACTOR",
                    "MANUFACTURER",
                    "REMOTE_ACCESS_ENABLED",
                    "REMOTE_DEBUG_ENABLED",
                    "APPIUM_VERSION",
                    "INSTANCE_ARN",
                    "INSTANCE_LABELS",
                    "FLEET_TYPE"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "DeviceAttribute"
                },
                "operator": {
                  "type": "string",
                  "enum": [
                    "EQUALS",
                    "LESS_THAN",
                    "GREATER_THAN",
                    "IN",
                    "NOT_IN",
                    "CONTAINS"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                  "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "RuleOperator"
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                  "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
              "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
              "shape_name": "Rule"
            }
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the update device pool operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the update device pool operation.</p>\n      ",
        "shape_name": "UpdateDevicePoolRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "devicePool": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's name.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The device pool's description.</simpara>\n      ",
                "documentation": "\n        <p>The device pool's description.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The device pool's type.</simpara>\n        <simpara>Allowed values include:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The device pool's type.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: A device pool that is created and managed by AWS Device\n                    Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: A device pool that is created and managed by the device pool\n                    developer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "DevicePoolType"
              },
              "rules": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>Information about the device pool's rules.</simpara>\n      ",
                "documentation": "\n        <p>Information about the device pool's rules.</p>\n      ",
                "shape_name": "Rules",
                "members": {
                  "type": "structure",
                  "members": {
                    "attribute": {
                      "type": "string",
                      "enum": [
                        "ARN",
                        "PLATFORM",
                        "FORM_FACTOR",
                        "MANUFACTURER",
                        "REMOTE_ACCESS_ENABLED",
                        "REMOTE_DEBUG_ENABLED",
                        "APPIUM_VERSION",
                        "INSTANCE_ARN",
                        "INSTANCE_LABELS",
                        "FLEET_TYPE"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</simpara>\n        <para>Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</para>\n            </listitem>\n            <listitem>\n                <para>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</para>\n            </listitem>\n            <listitem>\n                <para>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</para>\n            </listitem>\n            <listitem>\n                <para>MANUFACTURER: The device manufacturer. For example, \"Apple\".</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</para>\n            </listitem>\n            <listitem>\n                <para>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</para>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_VERSION: The Appium version for the test.</simpara>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>INSTANCE_LABELS: The label of the device instance.</para>\n            </listitem>\n            <listitem>\n                <para>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</para>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's attribute. It is the aspect of a device such as platform or model\n            used as selection criteria to create or update a device pool.</p>\n        <p>Allowed values include:</p>\n        <ul>\n            <li>\n                <p>ARN: The Amazon Resource Name (ARN) of a device.\n                    For example, \"arn:aws:devicefarm:us-west-2::device:12345Example\".</p>\n            </li>\n            <li>\n                <p>PLATFORM: The device platform. Valid values are \"ANDROID\" or \"IOS\".</p>\n            </li>\n            <li>\n                <p>FORM_FACTOR: The device form factor. Valid values are\n                    \"PHONE\" or \"TABLET\".</p>\n            </li>\n            <li>\n                <p>MANUFACTURER: The device manufacturer. For example, \"Apple\".</p>\n            </li>\n            <li>\n                <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote\n                    access.</p>\n            </li>\n            <li>\n                <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote\n                    debugging.</p>\n            </li>\n            <li>\n                <p>APPIUM_VERSION: The Appium version for the test.</p>\n            </li>\n            <li>\n                <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p>\n            </li>\n            <li>\n                <p>INSTANCE_LABELS: The label of the device instance.</p>\n            </li>\n            <li>\n                <p>FLEET_TYPE: The fleet type. Valid values are \"PUBLIC\" or \"PRIVATE\".</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "DeviceAttribute"
                    },
                    "operator": {
                      "type": "string",
                      "enum": [
                        "EQUALS",
                        "LESS_THAN",
                        "GREATER_THAN",
                        "IN",
                        "NOT_IN",
                        "CONTAINS"
                      ],
                      "zonbookDocumentation": "\n        <simpara>The rule's operator.</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>EQUALS: The equals operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>GREATER_THAN: The greater-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IN: The in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>LESS_THAN: The less-than operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>NOT_IN: The not-in operator.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CONTAINS: The contains operator.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                      "documentation": "\n        <p>The rule's operator.</p>\n        <ul>\n            <li>\n                <p>EQUALS: The equals operator.</p>\n            </li>\n            <li>\n                <p>GREATER_THAN: The greater-than operator.</p>\n            </li>\n            <li>\n                <p>IN: The in operator.</p>\n            </li>\n            <li>\n                <p>LESS_THAN: The less-than operator.</p>\n            </li>\n            <li>\n                <p>NOT_IN: The not-in operator.</p>\n            </li>\n            <li>\n                <p>CONTAINS: The contains operator.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "RuleOperator"
                    },
                    "value": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The rule's value.</simpara>\n        <para>The value must be passed in as a string using escaped quotes.</para>\n        <para>For example:</para>\n        <para>\"value\": \"\\\"ANDROID\\\"\"</para>\n      ",
                      "documentation": "\n        <p>The rule's value.</p>\n        <p>The value must be passed in as a string using escaped quotes.</p>\n        <p>For example:</p>\n        <p>\"value\": \"\\\"ANDROID\\\"\"</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <xref linkend=\"CreateDevicePool\"/> and <xref linkend=\"UpdateDevicePool\"/>.</simpara>\n      ",
                  "documentation": "\n        <p>Represents a condition for a device pool. It is passed in as the\n            <code>rules</code> parameter to <a>CreateDevicePool</a> and <a>UpdateDevicePool</a>.</p>\n      ",
                  "shape_name": "Rule"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>The device pool you just updated.</simpara>\n      ",
            "documentation": "\n        <p>The device pool you just updated.</p>\n      ",
            "shape_name": "DevicePool"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of an update device pool request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of an update device pool request.</p>\n      ",
        "shape_name": "UpdateDevicePoolResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Modifies the name, description, and rules in a device pool given the attributes and\n            the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a\n            whole (or not at all).</p>\n      "
    },
    "UpdateDeviceInstance": {
      "name": "UpdateDeviceInstance",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "profileArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the profile that you want to associate with the device instance.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the profile that you want to associate with the device instance.</p>\n      ",
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "labels": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An array of strings that you want to associate with the device instance.</para>\n      ",
            "documentation": "\n         <p>An array of strings that you want to associate with the device instance.</p>\n      ",
            "shape_name": "InstanceLabels",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "UpdateDeviceInstanceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "deviceInstance": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device instance.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device instance.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "deviceArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the device.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the device.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "labels": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of strings describing the device instance.</para>\n      ",
                "documentation": "\n         <p>An array of strings describing the device instance.</p>\n      ",
                "shape_name": "InstanceLabels",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "IN_USE",
                  "PREPARING",
                  "AVAILABLE",
                  "NOT_AVAILABLE"
                ],
                "zonbookDocumentation": "\n         <para>The status of the device instance. Valid values are listed below.</para>\n      ",
                "documentation": "\n         <p>The status of the device instance. Valid values are listed below.</p>\n      ",
                "shape_name": "InstanceStatus"
              },
              "udid": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Unique device identifier for the device instance.</para>\n      ",
                "documentation": "\n         <p>Unique device identifier for the device instance.</p>\n      ",
                "shape_name": "String"
              },
              "instanceProfile": {
                "type": "structure",
                "members": {
                  "arn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                    "shape_name": "AmazonResourceName",
                    "min_length": 32
                  },
                  "packageCleanup": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                    "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "excludeAppPackagesFromCleanup": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                    "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                    "shape_name": "PackageIds",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  },
                  "rebootAfterUse": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                    "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                    "shape_name": "Name",
                    "min_length": 0,
                    "max_length": 256
                  },
                  "description": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                    "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                    "shape_name": "Message",
                    "min_length": 0,
                    "max_length": 16384
                  }
                },
                "zonbookDocumentation": "\n         <para>A object containing information about the instance profile.</para>\n      ",
                "documentation": "\n         <p>A object containing information about the instance profile.</p>\n      ",
                "shape_name": "InstanceProfile"
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your device instance.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your device instance.</p>\n      ",
            "shape_name": "DeviceInstance"
          }
        },
        "shape_name": "UpdateDeviceInstanceResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Updates information about an existing private device instance.</p>\n      "
    },
    "UpdateNetworkProfile": {
      "name": "UpdateNetworkProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project for which you want to update network\n            profile settings.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project for which you want to update network\n            profile settings.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the network profile about which you are returning\n            information.</simpara>\n      ",
            "documentation": "\n        <p>The name of the network profile about which you are returning\n            information.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The descriptoin of the network profile about which you are returning\n            information.</simpara>\n      ",
            "documentation": "\n        <p>The descriptoin of the network profile about which you are returning\n            information.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "type": {
            "type": "string",
            "enum": [
              "CURATED",
              "PRIVATE"
            ],
            "zonbookDocumentation": "\n        <simpara>The type of network profile you wish to return information about. Valid values are\n            listed below.</simpara>\n      ",
            "documentation": "\n        <p>The type of network profile you wish to return information about. Valid values are\n            listed below.</p>\n      ",
            "shape_name": "NetworkProfileType"
          },
          "uplinkBandwidthBits": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
            "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkBandwidthBits": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
            "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkDelayMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
            "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkDelayMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
            "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkJitterMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
            "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
            "shape_name": "Long"
          },
          "downlinkJitterMs": {
            "type": "long",
            "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
            "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
            "shape_name": "Long"
          },
          "uplinkLossPercent": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
            "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
            "shape_name": "PercentInteger",
            "min_length": 0,
            "max_length": 100
          },
          "downlinkLossPercent": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
            "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
            "shape_name": "PercentInteger",
            "min_length": 0,
            "max_length": 100
          }
        },
        "shape_name": "UpdateNetworkProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "networkProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) of the network profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The name of the network profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the network profile.</simpara>\n      ",
                "documentation": "\n        <p>The description of the network profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "type": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <simpara>The type of network profile. Valid values are listed below.</simpara>\n      ",
                "documentation": "\n        <p>The type of network profile. Valid values are listed below.</p>\n      ",
                "shape_name": "NetworkProfileType"
              },
              "uplinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkBandwidthBits": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</simpara>\n      ",
                "documentation": "\n        <p>The data throughput rate in bits per second, as an integer from 0 to\n            104857600.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkDelayMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</simpara>\n      ",
                "documentation": "\n        <p>Delay time for all packets to destination in milliseconds as an integer from 0 to\n            2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "downlinkJitterMs": {
                "type": "long",
                "zonbookDocumentation": "\n        <simpara>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</simpara>\n      ",
                "documentation": "\n        <p>Time variation in the delay of received packets in milliseconds as an integer from\n            0 to 2000.</p>\n      ",
                "shape_name": "Long"
              },
              "uplinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of transmitted packets that fail to arrive from 0 to 100\n            percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              },
              "downlinkLossPercent": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>Proportion of received packets that fail to arrive from 0 to 100 percent.</simpara>\n      ",
                "documentation": "\n        <p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>\n      ",
                "shape_name": "PercentInteger",
                "min_length": 0,
                "max_length": 100
              }
            },
            "zonbookDocumentation": "\n        <simpara>A list of the available network profiles.</simpara>\n      ",
            "documentation": "\n        <p>A list of the available network profiles.</p>\n      ",
            "shape_name": "NetworkProfile"
          }
        },
        "shape_name": "UpdateNetworkProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Updates the network profile with specific settings.</p>\n      "
    },
    "UpdateInstanceProfile": {
      "name": "UpdateInstanceProfile",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The updated name for your instance profile.</para>\n      ",
            "documentation": "\n         <p>The updated name for your instance profile.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The updated description for your instance profile.</para>\n      ",
            "documentation": "\n         <p>The updated description for your instance profile.</p>\n      ",
            "shape_name": "Message",
            "min_length": 0,
            "max_length": 16384
          },
          "packageCleanup": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.</para>\n      ",
            "documentation": "\n         <p>The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.</p>\n      ",
            "shape_name": "Boolean"
          },
          "excludeAppPackagesFromCleanup": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
            "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
            "shape_name": "PackageIds",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "rebootAfterUse": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.</para>\n      ",
            "documentation": "\n         <p>The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.</p>\n      ",
            "shape_name": "Boolean"
          }
        },
        "shape_name": "UpdateInstanceProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "instanceProfile": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the instance profile.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "packageCleanup": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will remove app packages after a test run. The default value is <code>false</code> for private devices.</p>\n      ",
                "shape_name": "Boolean"
              },
              "excludeAppPackagesFromCleanup": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</para>\n         <para>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>An array of strings specifying the list of app packages that should not be cleaned up from the device after a test run is over.</p>\n         <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>\n      ",
                "shape_name": "PackageIds",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "rebootAfterUse": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</para>\n      ",
                "documentation": "\n         <p>When set to <code>true</code>, Device Farm will reboot the instance after a test run. The default value is <code>true</code>.</p>\n      ",
                "shape_name": "Boolean"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The name of the instance profile.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The description of the instance profile.</para>\n      ",
                "documentation": "\n         <p>The description of the instance profile.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your instance profile.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your instance profile.</p>\n      ",
            "shape_name": "InstanceProfile"
          }
        },
        "shape_name": "UpdateInstanceProfileResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n         <p>Updates information about an existing private device instance profile.</p>\n      "
    },
    "UpdateProject": {
      "name": "UpdateProject",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the project whose name you wish to\n            update.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the project whose name you wish to\n            update.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A string representing the new name of the project that you are updating.</simpara>\n      ",
            "documentation": "\n        <p>A string representing the new name of the project that you are updating.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "defaultJobTimeoutMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The number of minutes a test run in the project will execute before it times\n            out.</simpara>\n      ",
            "documentation": "\n        <p>The number of minutes a test run in the project will execute before it times\n            out.</p>\n      ",
            "shape_name": "JobTimeoutMinutes"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents a request to the update project operation.</simpara>\n      ",
        "documentation": "\n        <p>Represents a request to the update project operation.</p>\n      ",
        "shape_name": "UpdateProjectRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "project": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The project's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The project's name.</simpara>\n      ",
                "documentation": "\n        <p>The project's name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "defaultJobTimeoutMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</simpara>\n      ",
                "documentation": "\n        <p>The default number of minutes (at the project level) a test run will execute before\n            it times out. Default value is 60 minutes.</p>\n      ",
                "shape_name": "JobTimeoutMinutes"
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the project was created.</simpara>\n      ",
                "documentation": "\n        <p>When the project was created.</p>\n      ",
                "shape_name": "DateTime"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The project you wish to update.</simpara>\n      ",
            "documentation": "\n        <p>The project you wish to update.</p>\n      ",
            "shape_name": "Project"
          }
        },
        "zonbookDocumentation": "\n        <simpara>Represents the result of an update project request.</simpara>\n      ",
        "documentation": "\n        <p>Represents the result of an update project request.</p>\n      ",
        "shape_name": "UpdateProjectResult"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Modifies the specified project name, given the project ARN and a new\n            name.</p>\n      "
    },
    "UpdateUpload": {
      "name": "UpdateUpload",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The Amazon Resource Name (ARN) of the uploaded test spec.</para>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the uploaded test spec.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The upload's test spec file name. The name should not contain the '/' character.\n            The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file\n            extension.</para>\n      ",
            "documentation": "\n        <p>The upload's test spec file name. The name should not contain the '/' character.\n            The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file\n            extension.</p>\n      ",
            "shape_name": "Name",
            "min_length": 0,
            "max_length": 256
          },
          "contentType": {
            "type": "string",
            "zonbookDocumentation": "\n        <para>The upload's content type (for example, \"application/x-yaml\").</para>\n      ",
            "documentation": "\n        <p>The upload's content type (for example, \"application/x-yaml\").</p>\n      ",
            "shape_name": "ContentType",
            "min_length": 0,
            "max_length": 64
          },
          "editContent": {
            "type": "boolean",
            "zonbookDocumentation": "\n        <para>Set to true if the YAML file has changed and needs to be updated; otherwise, set to false.</para>\n      ",
            "documentation": "\n        <p>Set to true if the YAML file has changed and needs to be updated; otherwise, set to false.</p>\n      ",
            "shape_name": "Boolean"
          }
        },
        "shape_name": "UpdateUploadRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "upload": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's ARN.</simpara>\n      ",
                "documentation": "\n        <p>The upload's ARN.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's file name.</simpara>\n      ",
                "documentation": "\n        <p>The upload's file name.</p>\n      ",
                "shape_name": "Name",
                "min_length": 0,
                "max_length": 256
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n        <simpara>When the upload was created.</simpara>\n      ",
                "documentation": "\n        <p>When the upload was created.</p>\n      ",
                "shape_name": "DateTime"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ANDROID_APP",
                  "IOS_APP",
                  "WEB_APP",
                  "EXTERNAL_DATA",
                  "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_PYTHON_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
                  "APPIUM_WEB_PYTHON_TEST_PACKAGE",
                  "CALABASH_TEST_PACKAGE",
                  "INSTRUMENTATION_TEST_PACKAGE",
                  "UIAUTOMATION_TEST_PACKAGE",
                  "UIAUTOMATOR_TEST_PACKAGE",
                  "XCTEST_TEST_PACKAGE",
                  "XCTEST_UI_TEST_PACKAGE",
                  "APPIUM_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_PYTHON_TEST_SPEC",
                  "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
                  "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
                  "APPIUM_WEB_PYTHON_TEST_SPEC",
                  "INSTRUMENTATION_TEST_SPEC",
                  "XCTEST_UI_TEST_SPEC"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's type.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>ANDROID_APP: An Android upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>IOS_APP: An iOS upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>WEB_APP: A web appliction upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>EXTERNAL_DATA: An external data upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>CALABASH_TEST_PACKAGE: A Calabash test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_TEST_PACKAGE: An XCode test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</simpara>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</para>\n            </listitem>\n            <listitem>\n                <para>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</para>\n            </listitem>\n            <listitem>\n                <para>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's type.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>ANDROID_APP: An Android upload.</p>\n            </li>\n            <li>\n                <p>IOS_APP: An iOS upload.</p>\n            </li>\n            <li>\n                <p>WEB_APP: A web appliction upload.</p>\n            </li>\n            <li>\n                <p>EXTERNAL_DATA: An external data upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package\n                    upload.</p>\n            </li>\n            <li>\n                <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p>\n            </li>\n            <li>\n                <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC: An Appium Java JUnit test spec upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC: An Appium Java TestNG test spec\n                    upload.</p>\n            </li>\n            <li>\n                <p>APPIUM_WEB_PYTHON_TEST_SPEC: An Appium Python test spec upload.</p>\n            </li>\n            <li>\n                <p>INSTRUMENTATION_TEST_SPEC: An instrumentation test spec upload.</p>\n            </li>\n            <li>\n                <p>XCTEST_UI_TEST_SPEC: An XCode UI test spec upload.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadType"
              },
              "status": {
                "type": "string",
                "enum": [
                  "INITIALIZED",
                  "PROCESSING",
                  "SUCCEEDED",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n        <simpara>The upload's status.</simpara>\n        <simpara>Must be one of the following values:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>FAILED: A failed status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>INITIALIZED: An initialized status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>PROCESSING: A processing status.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>SUCCEEDED: A succeeded status.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's status.</p>\n        <p>Must be one of the following values:</p>\n        <ul>\n            <li>\n                <p>FAILED: A failed status.</p>\n            </li>\n            <li>\n                <p>INITIALIZED: An initialized status.</p>\n            </li>\n            <li>\n                <p>PROCESSING: A processing status.</p>\n            </li>\n            <li>\n                <p>SUCCEEDED: A succeeded status.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadStatus"
              },
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</simpara>\n      ",
                "documentation": "\n        <p>The pre-signed Amazon S3 URL that was used to store a file through a corresponding\n            PUT request.</p>\n      ",
                "shape_name": "URL",
                "min_length": 0,
                "max_length": 2048
              },
              "metadata": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</simpara>\n      ",
                "documentation": "\n        <p>The upload's metadata. For example, for Android, this contains information that is\n            parsed from the manifest and is displayed in the AWS Device Farm console after the\n            associated app is uploaded.</p>\n      ",
                "shape_name": "Metadata",
                "min_length": 0,
                "max_length": 8192
              },
              "contentType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The upload's content type (for example, \"application/octet-stream\").</simpara>\n      ",
                "documentation": "\n        <p>The upload's content type (for example, \"application/octet-stream\").</p>\n      ",
                "shape_name": "ContentType",
                "min_length": 0,
                "max_length": 64
              },
              "message": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A message about the upload's result.</simpara>\n      ",
                "documentation": "\n        <p>A message about the upload's result.</p>\n      ",
                "shape_name": "Message",
                "min_length": 0,
                "max_length": 16384
              },
              "category": {
                "type": "string",
                "enum": [
                  "CURATED",
                  "PRIVATE"
                ],
                "zonbookDocumentation": "\n        <para>The upload's category. Allowed values include:</para>\n        <itemizedlist>\n            <listitem>\n                <para>CURATED: An upload managed by AWS Device Farm.</para>\n            </listitem>\n            <listitem>\n                <para>PRIVATE: An upload managed by the AWS Device Farm customer.</para>\n            </listitem>\n        </itemizedlist>\n      ",
                "documentation": "\n        <p>The upload's category. Allowed values include:</p>\n        <ul>\n            <li>\n                <p>CURATED: An upload managed by AWS Device Farm.</p>\n            </li>\n            <li>\n                <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "UploadCategory"
              }
            },
            "zonbookDocumentation": "\n        <para>A test spec uploaded to Device Farm.</para>\n      ",
            "documentation": "\n        <p>A test spec uploaded to Device Farm.</p>\n      ",
            "shape_name": "Upload"
          }
        },
        "shape_name": "UpdateUploadResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>A limit was exceeded.</simpara>\n      ",
          "documentation": "\n        <p>A limit was exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        }
      ],
      "documentation": "\n        <p>Update an uploaded test specification (test spec).</p>\n      "
    },
    "UpdateVPCEConfiguration": {
      "name": "UpdateVPCEConfiguration",
      "input": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.</para>\n      ",
            "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.</p>\n      ",
            "required": true,
            "shape_name": "AmazonResourceName",
            "min_length": 32
          },
          "vpceConfigurationName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
            "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
            "shape_name": "VPCEConfigurationName",
            "min_length": 0,
            "max_length": 1024
          },
          "vpceServiceName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
            "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
            "shape_name": "VPCEServiceName",
            "min_length": 0,
            "max_length": 2048
          },
          "serviceDnsName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The DNS (domain) name used to connect to your private service in your Amazon VPC. The DNS name must not already be in use on the Internet.</para>\n      ",
            "documentation": "\n         <p>The DNS (domain) name used to connect to your private service in your Amazon VPC. The DNS name must not already be in use on the Internet.</p>\n      ",
            "shape_name": "ServiceDnsName",
            "min_length": 0,
            "max_length": 2048
          },
          "vpceConfigurationDescription": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfigurationDescription",
            "min_length": 0,
            "max_length": 2048
          }
        },
        "shape_name": "UpdateVPCEConfigurationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "vpceConfiguration": {
            "type": "structure",
            "members": {
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>\n      ",
                "shape_name": "AmazonResourceName",
                "min_length": 32
              },
              "vpceConfigurationName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</para>\n      ",
                "documentation": "\n         <p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>\n      ",
                "shape_name": "VPCEConfigurationName",
                "min_length": 0,
                "max_length": 1024
              },
              "vpceServiceName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</para>\n      ",
                "documentation": "\n         <p>The name of the VPC endpoint service running inside your AWS account that you want Device Farm to test.</p>\n      ",
                "shape_name": "VPCEServiceName",
                "min_length": 0,
                "max_length": 2048
              },
              "serviceDnsName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The DNS name that maps to the private IP address of the service you want to access.</para>\n      ",
                "documentation": "\n         <p>The DNS name that maps to the private IP address of the service you want to access.</p>\n      ",
                "shape_name": "ServiceDnsName",
                "min_length": 0,
                "max_length": 2048
              },
              "vpceConfigurationDescription": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>An optional description, providing more details about your VPC endpoint configuration.</para>\n      ",
                "documentation": "\n         <p>An optional description, providing more details about your VPC endpoint configuration.</p>\n      ",
                "shape_name": "VPCEConfigurationDescription",
                "min_length": 0,
                "max_length": 2048
              }
            },
            "zonbookDocumentation": "\n         <para>An object containing information about your VPC endpoint configuration.</para>\n      ",
            "documentation": "\n         <p>An object containing information about your VPC endpoint configuration.</p>\n      ",
            "shape_name": "VPCEConfiguration"
          }
        },
        "shape_name": "UpdateVPCEConfigurationResult",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>An invalid argument was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid argument was specified.</p>\n      ",
          "shape_name": "ArgumentException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>The specified entity was not found.</simpara>\n      ",
          "documentation": "\n        <p>The specified entity was not found.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "zonbookDocumentation": "\n        <simpara>Any additional information about the exception.</simpara>\n      ",
              "documentation": "\n        <p>Any additional information about the exception.</p>\n      ",
              "shape_name": "Message",
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n        <simpara>There was a problem with the service account.</simpara>\n      ",
          "documentation": "\n        <p>There was a problem with the service account.</p>\n      ",
          "shape_name": "ServiceAccountException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "Message",
              "documentation": null,
              "min_length": 0,
              "max_length": 16384
            }
          },
          "zonbookDocumentation": "\n         <para>There was an error with the update request, or you do not have sufficient permissions to update this VPC endpoint configuration.</para>\n      ",
          "documentation": "\n         <p>There was an error with the update request, or you do not have sufficient permissions to update this VPC endpoint configuration.</p>\n      ",
          "shape_name": "InvalidOperationException"
        }
      ],
      "documentation": "\n         <p>Updates information about an existing Amazon Virtual Private Cloud (VPC) endpoint configuration.</p>\n      "
    }
  }
}
