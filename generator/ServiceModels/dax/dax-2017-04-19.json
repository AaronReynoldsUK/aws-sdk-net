{
  "version": "1.0",
  "type": "json",
  "json_version": "1.1",
  "signature_version": "v4",
  "service_full_name": "Amazon DynamoDB Accelerator (DAX)",
  "service_abbreviation": "Amazon DAX",
  "service_id": "DAX",
  "uid": "dax-2017-04-19",
  "endpoint_prefix": "dax",
  "api_version": "2017-04-19",
  "xmlnamespace": "http://dax.amazonaws.com/doc/2017-04-19/",
  "target_prefix": "AmazonDAXV3",
  "documentation": "\n        <p>DAX is a managed caching service engineered for Amazon DynamoDB. DAX\n            dramatically speeds up database reads by caching frequently-accessed data from DynamoDB, so\n            applications can access that data with sub-millisecond latency. You can create a DAX\n            cluster easily, using the AWS Management Console. With a few simple modifications to\n            your code, your application can begin taking advantage of the DAX cluster and realize\n            significant improvements in read performance.</p>\n      ",
  "operations": {
    "CreateCluster": {
      "name": "CreateCluster",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The cluster identifier. This parameter is stored as a lowercase\n            string.</simpara>\n        <simpara>\n            <emphasis role=\"bold\">Constraints:</emphasis>\n        </simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>A name must contain from 1 to 20 alphanumeric characters or\n                    hyphens.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>The first character must be a letter.</simpara>\n            </listitem>\n            <listitem>\n                <simpara>A name cannot end with a hyphen or contain two consecutive\n                    hyphens.</simpara>\n            </listitem>\n        </itemizedlist>\n      ",
            "documentation": "\n        <p>The cluster identifier. This parameter is stored as a lowercase\n            string.</p>\n        <p>\n            <b>Constraints:</b>\n        </p>\n        <ul>\n            <li>\n                <p>A name must contain from 1 to 20 alphanumeric characters or\n                    hyphens.</p>\n            </li>\n            <li>\n                <p>The first character must be a letter.</p>\n            </li>\n            <li>\n                <p>A name cannot end with a hyphen or contain two consecutive\n                    hyphens.</p>\n            </li>\n         </ul>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "NodeType": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The compute and memory capacity of the nodes in the cluster.</simpara>\n      ",
            "documentation": "\n        <p>The compute and memory capacity of the nodes in the cluster.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description of the cluster.</simpara>\n      ",
            "documentation": "\n        <p>A description of the cluster.</p>\n      ",
            "shape_name": "String"
          },
          "ReplicationFactor": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The number of nodes in the DAX cluster. A replication factor of 1 will\n            create a single-node cluster, without any read replicas. For additional fault tolerance,\n            you can create a multiple node cluster with one or more read replicas. To do this, set\n                <emphasis>ReplicationFactor</emphasis> to 2 or more.</simpara>\n        <note>\n            <simpara>AWS recommends that you have at least two read replicas per cluster.</simpara>\n         </note>\n      ",
            "documentation": "\n        <p>The number of nodes in the DAX cluster. A replication factor of 1 will\n            create a single-node cluster, without any read replicas. For additional fault tolerance,\n            you can create a multiple node cluster with one or more read replicas. To do this, set\n                <i>ReplicationFactor</i> to 2 or more.</p>\n        <note>\n            <p>AWS recommends that you have at least two read replicas per cluster.</p>\n         </note>\n      ",
            "required": true,
            "shape_name": "Integer"
          },
          "AvailabilityZones": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The Availability Zones (AZs) in which the cluster nodes will be created. All nodes\n            belonging to the cluster are placed in these Availability Zones. Use this parameter if you want\n            to distribute the nodes across multiple AZs.</simpara>\n      ",
            "documentation": "\n        <p>The Availability Zones (AZs) in which the cluster nodes will be created. All nodes\n            belonging to the cluster are placed in these Availability Zones. Use this parameter if you want\n            to distribute the nodes across multiple AZs.</p>\n      ",
            "shape_name": "AvailabilityZoneList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "SubnetGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the subnet group to be used for the replication group.</simpara>\n        <important>\n            <simpara>DAX clusters can only run in an Amazon VPC environment. All of the subnets\n                that you specify in a subnet group must exist in the same VPC.</simpara>\n        </important>\n      ",
            "documentation": "\n        <p>The name of the subnet group to be used for the replication group.</p>\n        <important>\n            <p>DAX clusters can only run in an Amazon VPC environment. All of the subnets\n                that you specify in a subnet group must exist in the same VPC.</p>\n        </important>\n      ",
            "shape_name": "String"
          },
          "SecurityGroupIds": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the \n             security group ID is system-generated.)</simpara>\n        <simpara>If this parameter is not specified, DAX assigns the default VPC security group to\n            each node.</simpara>\n      ",
            "documentation": "\n        <p>A list of security group IDs to be assigned to each node in the DAX cluster. (Each of the \n             security group ID is system-generated.)</p>\n        <p>If this parameter is not specified, DAX assigns the default VPC security group to\n            each node.</p>\n      ",
            "shape_name": "SecurityGroupIdentifierList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "PreferredMaintenanceWindow": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Specifies the weekly time range during which maintenance on the DAX cluster is\n            performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock\n            UTC). The minimum maintenance window is a 60 minute period. Valid values for\n                <code>ddd</code> are:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                    <code>sun</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>mon</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>tue</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>wed</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>thu</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>fri</code>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <code>sat</code>\n                </simpara>\n            </listitem>\n        </itemizedlist>\n        <simpara>Example: <code>sun:05:00-sun:09:00</code>\n        </simpara>\n        <note>\n            <simpara>If you don't specify a preferred maintenance window when you create or modify a\n                cache cluster, DAX assigns a 60-minute maintenance window on a randomly selected day\n                of the week.</simpara>\n         </note>\n      ",
            "documentation": "\n        <p>Specifies the weekly time range during which maintenance on the DAX cluster is\n            performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock\n            UTC). The minimum maintenance window is a 60 minute period. Valid values for\n                <code>ddd</code> are:</p>\n        <ul>\n            <li>\n                <p>\n                    <code>sun</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>mon</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>tue</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>wed</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>thu</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>fri</code>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <code>sat</code>\n                </p>\n            </li>\n         </ul>\n        <p>Example: <code>sun:05:00-sun:09:00</code>\n        </p>\n        <note>\n            <p>If you don't specify a preferred maintenance window when you create or modify a\n                cache cluster, DAX assigns a 60-minute maintenance window on a randomly selected day\n                of the week.</p>\n         </note>\n      ",
            "shape_name": "String"
          },
          "NotificationTopicArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will\n            be sent.</simpara>\n        <note>\n            <simpara>The Amazon SNS topic owner must be same as the DAX cluster owner.</simpara>\n        </note>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications will\n            be sent.</p>\n        <note>\n            <p>The Amazon SNS topic owner must be same as the DAX cluster owner.</p>\n        </note>\n      ",
            "shape_name": "String"
          },
          "IamRoleArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
            "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
            "shape_name": "String"
          },
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The parameter group to be associated with the DAX cluster.</simpara>\n      ",
            "documentation": "\n        <p>The parameter group to be associated with the DAX cluster.</p>\n      ",
            "shape_name": "String"
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A set of tags to associate with the DAX cluster.  </simpara>\n      ",
            "documentation": "\n        <p>A set of tags to associate with the DAX cluster.  </p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</simpara>\n      ",
                  "documentation": "\n        <p>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</p>\n      ",
                  "shape_name": "String"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the tag. Tag values are case-sensitive and can be null. </simpara>\n      ",
                  "documentation": "\n        <p>The value of the tag. Tag values are case-sensitive and can be null. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</simpara>\n        <simpara>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</simpara> \n        <simpara>You cannot backdate the application of a tag.</simpara>\n      ",
              "documentation": "\n        <p>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</p>\n        <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> \n        <p>You cannot backdate the application of a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          },
          "SSESpecification": {
            "type": "structure",
            "members": {
              "Enabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <simpara>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</simpara>\n      ",
                "documentation": "\n         <p>Indicates whether server-side encryption is enabled (true) or disabled (false) on the cluster.</p>\n      ",
                "required": true,
                "shape_name": "SSEEnabled"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Represents the settings used to enable server-side encryption on the cluster.</simpara>\n      ",
            "documentation": "\n         <p>Represents the settings used to enable server-side encryption on the cluster.</p>\n      ",
            "shape_name": "SSESpecification"
          }
        },
        "shape_name": "CreateClusterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster that you have created.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster that you have created.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "CreateClusterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You already have a DAX cluster with the given identifier.</simpara>\n      ",
          "documentation": "\n        <p>You already have a DAX cluster with the given identifier.</p>\n      ",
          "shape_name": "ClusterAlreadyExistsFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>There are not enough system resources to create the cluster you requested (or to\n            resize an already-existing cluster). </simpara>\n      ",
          "documentation": "\n        <p>There are not enough system resources to create the cluster you requested (or to\n            resize an already-existing cluster). </p>\n      ",
          "shape_name": "InsufficientClusterCapacityFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested subnet group name does not refer to an existing subnet\n            group.</simpara>\n      ",
          "documentation": "\n        <p>The requested subnet group name does not refer to an existing subnet\n            group.</p>\n      ",
          "shape_name": "SubnetGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>One or more parameters in a parameter group are in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>One or more parameters in a parameter group are in an invalid state.</p>\n      ",
          "shape_name": "InvalidParameterGroupStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of DAX clusters for your AWS\n            account.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of DAX clusters for your AWS\n            account.</p>\n      ",
          "shape_name": "ClusterQuotaForCustomerExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of nodes for a DAX\n            cluster.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of nodes for a DAX\n            cluster.</p>\n      ",
          "shape_name": "NodeQuotaForClusterExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of nodes for your AWS\n            account.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of nodes for your AWS\n            account.</p>\n      ",
          "shape_name": "NodeQuotaForCustomerExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The VPC network is in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>The VPC network is in an invalid state.</p>\n      ",
          "shape_name": "InvalidVPCNetworkStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have exceeded the maximum number of tags for this DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>You have exceeded the maximum number of tags for this DAX cluster.</p>\n      ",
          "shape_name": "TagQuotaPerResourceExceeded"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Creates a DAX cluster. All nodes in the cluster run the same DAX caching software.</p>\n      "
    },
    "DecreaseReplicationFactor": {
      "name": "DecreaseReplicationFactor",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster from which you want to remove nodes.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX cluster from which you want to remove nodes.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "NewReplicationFactor": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The new number of nodes for the DAX cluster.</simpara>\n      ",
            "documentation": "\n        <p>The new number of nodes for the DAX cluster.</p>\n      ",
            "required": true,
            "shape_name": "Integer"
          },
          "AvailabilityZones": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The Availability Zone(s) from which to remove nodes.</simpara>\n      ",
            "documentation": "\n        <p>The Availability Zone(s) from which to remove nodes.</p>\n      ",
            "shape_name": "AvailabilityZoneList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "NodeIdsToRemove": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The unique identifiers of the nodes to be removed from the cluster.</simpara>\n      ",
            "documentation": "\n        <p>The unique identifiers of the nodes to be removed from the cluster.</p>\n      ",
            "shape_name": "NodeIdentifierList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "DecreaseReplicationFactorRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster, after you have decreased its replication\n            factor.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster, after you have decreased its replication\n            factor.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "DecreaseReplicationFactorResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>None of the nodes in the cluster have the given node ID.</simpara>\n      ",
          "documentation": "\n        <p>None of the nodes in the cluster have the given node ID.</p>\n      ",
          "shape_name": "NodeNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Removes one or more nodes from a DAX cluster.</p>\n        <note>\n            <p>You cannot use <code>DecreaseReplicationFactor</code> to remove the last node in a DAX cluster. If you need to do this, use <code>DeleteCluster</code> instead.</p>\n         </note>\n      "
    },
    "DeleteCluster": {
      "name": "DeleteCluster",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the cluster to be deleted.</simpara>\n      ",
            "documentation": "\n        <p>The name of the cluster to be deleted.</p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteClusterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster that is being deleted.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster that is being deleted.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "DeleteClusterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Deletes a previously provisioned DAX cluster.\n                <i>DeleteCluster</i> deletes all associated nodes, node endpoints\n            and the DAX cluster itself. When you receive a successful response from this action,\n            DAX immediately begins deleting the cluster; you cannot cancel or revert this\n            action.</p>\n\n      "
    },
    "DescribeClusters": {
      "name": "DescribeClusters",
      "input": {
        "type": "structure",
        "members": {
          "ClusterNames": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The names of the DAX clusters being described.</simpara>\n      ",
            "documentation": "\n        <p>The names of the DAX clusters being described.</p>\n      ",
            "shape_name": "ClusterNameList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n        <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n        <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeClustersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "Clusters": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The descriptions of your DAX clusters, in response to a\n            <emphasis>DescribeClusters</emphasis> request.</simpara>\n      ",
            "documentation": "\n        <p>The descriptions of your DAX clusters, in response to a\n            <i>DescribeClusters</i> request.</p>\n      ",
            "shape_name": "ClusterList",
            "members": {
              "type": "structure",
              "members": {
                "ClusterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                  "shape_name": "String"
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                  "shape_name": "String"
                },
                "ClusterArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                  "shape_name": "String"
                },
                "TotalNodes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                  "shape_name": "IntegerOptional"
                },
                "ActiveNodes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                  "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                  "shape_name": "IntegerOptional"
                },
                "NodeType": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                  "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                  "shape_name": "String"
                },
                "Status": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                  "shape_name": "String"
                },
                "ClusterDiscoveryEndpoint": {
                  "type": "structure",
                  "members": {
                    "Address": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                      "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                      "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                      "shape_name": "Integer"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                  "shape_name": "Endpoint"
                },
                "NodeIdsToRemove": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                  "shape_name": "NodeIdentifierList",
                  "members": {
                    "type": "string",
                    "shape_name": "String",
                    "documentation": null
                  }
                },
                "Nodes": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                  "shape_name": "NodeList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "NodeId": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                        "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                        "shape_name": "String"
                      },
                      "Endpoint": {
                        "type": "structure",
                        "members": {
                          "Address": {
                            "type": "string",
                            "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                            "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                            "shape_name": "String"
                          },
                          "Port": {
                            "type": "integer",
                            "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                            "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                            "shape_name": "Integer"
                          }
                        },
                        "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                        "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                        "shape_name": "Endpoint"
                      },
                      "NodeCreateTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                        "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                        "shape_name": "TStamp"
                      },
                      "AvailabilityZone": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                        "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                        "shape_name": "String"
                      },
                      "NodeStatus": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                        "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                        "shape_name": "String"
                      },
                      "ParameterGroupStatus": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                        "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                    "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                    "shape_name": "Node"
                  }
                },
                "PreferredMaintenanceWindow": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                  "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                  "shape_name": "String"
                },
                "NotificationConfiguration": {
                  "type": "structure",
                  "members": {
                    "TopicArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                      "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                      "shape_name": "String"
                    },
                    "TopicStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                      "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                  "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                  "shape_name": "NotificationConfiguration"
                },
                "SubnetGroup": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                  "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                  "shape_name": "String"
                },
                "SecurityGroups": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                  "shape_name": "SecurityGroupMembershipList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "SecurityGroupIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                        "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                        "shape_name": "String"
                      },
                      "Status": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                        "documentation": "\n        <p>The status of this security group.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                    "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                    "shape_name": "SecurityGroupMembership"
                  }
                },
                "IamRoleArn": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                  "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                  "shape_name": "String"
                },
                "ParameterGroup": {
                  "type": "structure",
                  "members": {
                    "ParameterGroupName": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                      "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterApplyStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                      "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeIdsToReboot": {
                      "type": "list",
                      "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                      "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                      "shape_name": "NodeIdentifierList",
                      "members": {
                        "type": "string",
                        "shape_name": "String",
                        "documentation": null
                      }
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                  "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                  "shape_name": "ParameterGroupStatus"
                },
                "SSEDescription": {
                  "type": "structure",
                  "members": {
                    "Status": {
                      "type": "string",
                      "enum": [
                        "ENABLING",
                        "ENABLED",
                        "DISABLING",
                        "DISABLED"
                      ],
                      "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "SSEStatus"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                  "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                  "shape_name": "SSEDescription"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Contains all of the attributes of a specific DAX cluster.</simpara>\n      ",
              "documentation": "\n        <p>Contains all of the attributes of a specific DAX cluster.</p>\n      ",
              "shape_name": "Cluster"
            }
          }
        },
        "shape_name": "DescribeClustersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Returns information about all provisioned DAX clusters if no cluster identifier\n            is specified, or about a specific DAX cluster if a cluster identifier is\n            supplied.</p>\n        <p>If the cluster is in the CREATING state, only cluster level information will be\n            displayed until all of the nodes are successfully provisioned.</p>\n        <p>If the cluster is in the DELETING state, only cluster level information will be\n            displayed.</p>\n        <p>If nodes are currently being added to the DAX cluster, node endpoint information\n            and creation time for the additional nodes will not be displayed until they are\n            completely provisioned. When the DAX cluster state is <i>available</i>,\n            the cluster is ready for use.</p>\n        <p>If nodes are currently being removed from the DAX cluster, no endpoint\n            information for the removed nodes is displayed.</p>\n\n      "
    },
    "IncreaseReplicationFactor": {
      "name": "IncreaseReplicationFactor",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster that will receive additional nodes.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX cluster that will receive additional nodes.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "NewReplicationFactor": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The new number of nodes for the DAX cluster.</simpara>\n      ",
            "documentation": "\n        <p>The new number of nodes for the DAX cluster.</p>\n      ",
            "required": true,
            "shape_name": "Integer"
          },
          "AvailabilityZones": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The Availability Zones (AZs) in which the cluster nodes will be created. All nodes\n            belonging to the cluster are placed in these Availability Zones. Use this parameter if you want\n            to distribute the nodes across multiple AZs.</simpara>\n      ",
            "documentation": "\n        <p>The Availability Zones (AZs) in which the cluster nodes will be created. All nodes\n            belonging to the cluster are placed in these Availability Zones. Use this parameter if you want\n            to distribute the nodes across multiple AZs.</p>\n      ",
            "shape_name": "AvailabilityZoneList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "IncreaseReplicationFactorRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster. with its new replication factor.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster. with its new replication factor.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "IncreaseReplicationFactorResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>There are not enough system resources to create the cluster you requested (or to\n            resize an already-existing cluster). </simpara>\n      ",
          "documentation": "\n        <p>There are not enough system resources to create the cluster you requested (or to\n            resize an already-existing cluster). </p>\n      ",
          "shape_name": "InsufficientClusterCapacityFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The VPC network is in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>The VPC network is in an invalid state.</p>\n      ",
          "shape_name": "InvalidVPCNetworkStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of nodes for a DAX\n            cluster.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of nodes for a DAX\n            cluster.</p>\n      ",
          "shape_name": "NodeQuotaForClusterExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of nodes for your AWS\n            account.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of nodes for your AWS\n            account.</p>\n      ",
          "shape_name": "NodeQuotaForCustomerExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Adds one or more nodes to a DAX cluster.</p>    \n      "
    },
    "UpdateCluster": {
      "name": "UpdateCluster",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster to be modified.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX cluster to be modified.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description of the changes being made to the cluster.</simpara>\n      ",
            "documentation": "\n        <p>A description of the changes being made to the cluster.</p>\n      ",
            "shape_name": "String"
          },
          "PreferredMaintenanceWindow": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
            "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
            "shape_name": "String"
          },
          "NotificationTopicArn": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic.</simpara>\n      ",
            "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic.</p>\n      ",
            "shape_name": "String"
          },
          "NotificationTopicStatus": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
            "documentation": "\n        <p>The current state of the topic.</p>\n      ",
            "shape_name": "String"
          },
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of a parameter group for this cluster.</simpara>\n      ",
            "documentation": "\n        <p>The name of a parameter group for this cluster.</p>\n      ",
            "shape_name": "String"
          },
          "SecurityGroupIds": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of user-specified security group IDs to be assigned to each node in the DAX cluster.  If this parameter is not \n            specified, DAX assigns the default VPC security group to each node.</simpara>\n      ",
            "documentation": "\n        <p>A list of user-specified security group IDs to be assigned to each node in the DAX cluster.  If this parameter is not \n            specified, DAX assigns the default VPC security group to each node.</p>\n      ",
            "shape_name": "SecurityGroupIdentifierList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "UpdateClusterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster, after it has been modified.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster, after it has been modified.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "UpdateClusterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>One or more parameters in a parameter group are in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>One or more parameters in a parameter group are in an invalid state.</p>\n      ",
          "shape_name": "InvalidParameterGroupStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Modifies the settings for a DAX cluster. You can use this action to change one or\n            more cluster configuration parameters by specifying the parameters and the new\n            values.</p>\n      "
    },
    "RebootNode": {
      "name": "RebootNode",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster containing the node to be rebooted.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX cluster containing the node to be rebooted.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "NodeId": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The system-assigned ID of the node to be rebooted.</simpara>\n      ",
            "documentation": "\n        <p>The system-assigned ID of the node to be rebooted.</p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "RebootNodeRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>A description of the DAX cluster after a node has been rebooted.</simpara>\n      ",
            "documentation": "\n        <p>A description of the DAX cluster after a node has been rebooted.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "RebootNodeResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>None of the nodes in the cluster have the given node ID.</simpara>\n      ",
          "documentation": "\n        <p>None of the nodes in the cluster have the given node ID.</p>\n      ",
          "shape_name": "NodeNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Reboots a single node of a DAX cluster. The reboot action takes place\n            as soon as possible. During the\n            reboot, the node status is set to REBOOTING.</p>\n        \n      "
    },
    "ResetCluster": {
      "name": "ResetCluster",
      "input": {
        "type": "structure",
        "members": {
          "ClusterName": {
            "type": "string",
            "required": true,
            "shape_name": "String",
            "documentation": null
          }
        },
        "shape_name": "ResetClusterRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Cluster": {
            "type": "structure",
            "members": {
              "ClusterName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The name of the DAX cluster.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The description of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </simpara>\n      ",
                "documentation": "\n        <p>The Amazon Resource Name (ARN) that uniquely identifies the cluster.\n        </p>\n      ",
                "shape_name": "String"
              },
              "TotalNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The total number of nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The total number of nodes in the cluster.</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "ActiveNodes": {
                "type": "integer",
                "zonbookDocumentation": "\n        <simpara>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</simpara>\n      ",
                "documentation": "\n        <p>The number of nodes in the cluster that are active (i.e., capable of serving\n            requests).</p>\n      ",
                "shape_name": "IntegerOptional"
              },
              "NodeType": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</simpara>\n      ",
                "documentation": "\n        <p>The node type for the nodes in the cluster. (All nodes in a DAX cluster are of\n            the same type.)</p>\n      ",
                "shape_name": "String"
              },
              "Status": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The current status of the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The current status of the cluster.</p>\n      ",
                "shape_name": "String"
              },
              "ClusterDiscoveryEndpoint": {
                "type": "structure",
                "members": {
                  "Address": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                    "shape_name": "String"
                  },
                  "Port": {
                    "type": "integer",
                    "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                    "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                    "shape_name": "Integer"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</simpara>\n      ",
                "documentation": "\n        <p>The configuration endpoint for this DAX cluster, consisting of a DNS name and a\n            port number. Client applications can specify this endpoint, rather than an individual\n            node endpoint, and allow the DAX client software to intelligently route requests and\n            responses to nodes in the DAX cluster.</p>\n      ",
                "shape_name": "Endpoint"
              },
              "NodeIdsToRemove": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes to be removed from the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes to be removed from the cluster.</p>\n      ",
                "shape_name": "NodeIdentifierList",
                "members": {
                  "type": "string",
                  "shape_name": "String",
                  "documentation": null
                }
              },
              "Nodes": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of nodes that are currently in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of nodes that are currently in the cluster.</p>\n      ",
                "shape_name": "NodeList",
                "members": {
                  "type": "structure",
                  "members": {
                    "NodeId": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>A system-generated identifier for the node.</simpara>\n      ",
                      "documentation": "\n        <p>A system-generated identifier for the node.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Endpoint": {
                      "type": "structure",
                      "members": {
                        "Address": {
                          "type": "string",
                          "zonbookDocumentation": "\n        <simpara>The DNS hostname of the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The DNS hostname of the endpoint.</p>\n      ",
                          "shape_name": "String"
                        },
                        "Port": {
                          "type": "integer",
                          "zonbookDocumentation": "\n        <simpara>The port number that applications should use to connect to the endpoint.</simpara>\n      ",
                          "documentation": "\n        <p>The port number that applications should use to connect to the endpoint.</p>\n      ",
                          "shape_name": "Integer"
                        }
                      },
                      "zonbookDocumentation": "\n        <simpara>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</simpara>\n      ",
                      "documentation": "\n        <p>The endpoint for the node, consisting of a DNS name and a port number. Client\n            applications can connect directly to a node endpoint, if desired (as an alternative to\n            allowing DAX client software to intelligently route requests and responses to nodes in\n            the DAX cluster.</p>\n      ",
                      "shape_name": "Endpoint"
                    },
                    "NodeCreateTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n        <simpara>The date and time (in UNIX epoch format) when the node was launched.</simpara>\n      ",
                      "documentation": "\n        <p>The date and time (in UNIX epoch format) when the node was launched.</p>\n      ",
                      "shape_name": "TStamp"
                    },
                    "AvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) in which the node has been deployed.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) in which the node has been deployed.</p>\n      ",
                      "shape_name": "String"
                    },
                    "NodeStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The current status of the node. For example: <code>available</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The current status of the node. For example: <code>available</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "ParameterGroupStatus": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</simpara>\n      ",
                      "documentation": "\n        <p>The status of the parameter group associated with this node. For example,\n                <code>in-sync</code>.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents an individual node within a DAX cluster.</simpara>\n      ",
                  "documentation": "\n        <p>Represents an individual node within a DAX cluster.</p>\n      ",
                  "shape_name": "Node"
                }
              },
              "PreferredMaintenanceWindow": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</simpara>\n      ",
                "documentation": "\n        <p>A range of time when maintenance of DAX cluster software will be performed. For\n            example: <code>sun:01:00-sun:09:00</code>. Cluster maintenance normally takes less than\n            30 minutes, and is performed automatically within the maintenance window.</p>\n      ",
                "shape_name": "String"
              },
              "NotificationConfiguration": {
                "type": "structure",
                "members": {
                  "TopicArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) that identifies the topic. </simpara>\n      ",
                    "documentation": "\n        <p>The Amazon Resource Name (ARN) that identifies the topic. </p>\n      ",
                    "shape_name": "String"
                  },
                  "TopicStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The current state of the topic.</simpara>\n      ",
                    "documentation": "\n        <p>The current state of the topic.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n        <simpara>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</simpara>\n      ",
                "documentation": "\n        <p>Describes a notification topic and its status. Notification topics are used for\n            publishing DAX events to subscribers using Amazon Simple Notification Service\n            (SNS).</p>\n      ",
                "shape_name": "NotificationConfiguration"
              },
              "SubnetGroup": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The subnet group where the DAX cluster is running.</simpara>\n      ",
                "documentation": "\n        <p>The subnet group where the DAX cluster is running.</p>\n      ",
                "shape_name": "String"
              },
              "SecurityGroups": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of security groups, and the status of each, for the nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>A list of security groups, and the status of each, for the nodes in the cluster.</p>\n      ",
                "shape_name": "SecurityGroupMembershipList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SecurityGroupIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The unique ID for this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The unique ID for this security group.</p>\n      ",
                      "shape_name": "String"
                    },
                    "Status": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The status of this security group.</simpara>\n      ",
                      "documentation": "\n        <p>The status of this security group.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>An individual VPC security group and its status.</simpara>\n      ",
                  "documentation": "\n        <p>An individual VPC security group and its status.</p>\n      ",
                  "shape_name": "SecurityGroupMembership"
                }
              },
              "IamRoleArn": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</simpara>\n      ",
                "documentation": "\n        <p>A valid Amazon Resource Name (ARN) that identifies an IAM role. At runtime, DAX\n            will assume this role and use the role's permissions to access DynamoDB on your\n            behalf.</p>\n      ",
                "shape_name": "String"
              },
              "ParameterGroup": {
                "type": "structure",
                "members": {
                  "ParameterGroupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                    "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                    "shape_name": "String"
                  },
                  "ParameterApplyStatus": {
                    "type": "string",
                    "zonbookDocumentation": "\n        <simpara>The status of parameter updates. </simpara>\n      ",
                    "documentation": "\n        <p>The status of parameter updates. </p>\n      ",
                    "shape_name": "String"
                  },
                  "NodeIdsToReboot": {
                    "type": "list",
                    "zonbookDocumentation": "\n        <simpara>The node IDs of one or more nodes to be rebooted.</simpara>\n      ",
                    "documentation": "\n        <p>The node IDs of one or more nodes to be rebooted.</p>\n      ",
                    "shape_name": "NodeIdentifierList",
                    "members": {
                      "type": "string",
                      "shape_name": "String",
                      "documentation": null
                    }
                  }
                },
                "zonbookDocumentation": "\n        <simpara>The parameter group being used by nodes in the cluster.</simpara>\n      ",
                "documentation": "\n        <p>The parameter group being used by nodes in the cluster.</p>\n      ",
                "shape_name": "ParameterGroupStatus"
              },
              "SSEDescription": {
                "type": "structure",
                "members": {
                  "Status": {
                    "type": "string",
                    "enum": [
                      "ENABLING",
                      "ENABLED",
                      "DISABLING",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <simpara>The current state of server-side encryption:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</simpara>\n            </listitem>\n            <listitem>\n               <simpara>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current state of server-side encryption:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLING</code> - Server-side encryption is being enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ENABLED</code> - Server-side encryption is enabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLING</code> - Server-side encryption is being disabled.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> - Server-side encryption is disabled.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "SSEStatus"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The description of the server-side encryption status on the specified DAX cluster.</simpara>\n      ",
                "documentation": "\n         <p>The description of the server-side encryption status on the specified DAX cluster.</p>\n      ",
                "shape_name": "SSEDescription"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Contains all of the attributes of a specific DAX cluster.</simpara>\n      ",
            "documentation": "\n        <p>Contains all of the attributes of a specific DAX cluster.</p>\n      ",
            "shape_name": "Cluster"
          }
        },
        "shape_name": "ResetClusterResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": null
    },
    "DescribeEvents": {
      "name": "DescribeEvents",
      "input": {
        "type": "structure",
        "members": {
          "SourceName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The identifier of the event source for which events will be returned. If not\n            specified, then all sources are included in the response.</simpara>\n      ",
            "documentation": "\n        <p>The identifier of the event source for which events will be returned. If not\n            specified, then all sources are included in the response.</p>\n      ",
            "shape_name": "String"
          },
          "SourceType": {
            "type": "string",
            "enum": [
              "CLUSTER",
              "PARAMETER_GROUP",
              "SUBNET_GROUP"
            ],
            "zonbookDocumentation": "\n        <simpara>The event source to retrieve events for. If no value is specified, all events are\n            returned.</simpara>\n      ",
            "documentation": "\n        <p>The event source to retrieve events for. If no value is specified, all events are\n            returned.</p>\n      ",
            "shape_name": "SourceType"
          },
          "StartTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n        <simpara>The beginning of the time interval to retrieve events for, specified in ISO 8601\n            format.</simpara>\n      ",
            "documentation": "\n        <p>The beginning of the time interval to retrieve events for, specified in ISO 8601\n            format.</p>\n      ",
            "shape_name": "TStamp"
          },
          "EndTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n        <simpara>The end of the time interval for which to retrieve events, specified in ISO 8601\n            format.</simpara>\n      ",
            "documentation": "\n        <p>The end of the time interval for which to retrieve events, specified in ISO 8601\n            format.</p>\n      ",
            "shape_name": "TStamp"
          },
          "Duration": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The number of minutes' worth of events to retrieve.</simpara>\n      ",
            "documentation": "\n        <p>The number of minutes' worth of events to retrieve.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n        <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n        <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeEventsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "Events": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>An array of events.  Each element in the array represents one event.</simpara>\n      ",
            "documentation": "\n        <p>An array of events.  Each element in the array represents one event.</p>\n      ",
            "shape_name": "EventList",
            "members": {
              "type": "structure",
              "members": {
                "SourceName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The source of the event. For example, if the event occurred at the node level, the\n            source would be the node ID.</simpara>\n      ",
                  "documentation": "\n        <p>The source of the event. For example, if the event occurred at the node level, the\n            source would be the node ID.</p>\n      ",
                  "shape_name": "String"
                },
                "SourceType": {
                  "type": "string",
                  "enum": [
                    "CLUSTER",
                    "PARAMETER_GROUP",
                    "SUBNET_GROUP"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Specifies the origin of this event - a cluster, a parameter group, a node ID,\n            etc.</simpara>\n      ",
                  "documentation": "\n        <p>Specifies the origin of this event - a cluster, a parameter group, a node ID,\n            etc.</p>\n      ",
                  "shape_name": "SourceType"
                },
                "Message": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A user-defined message associated with the event.</simpara>\n      ",
                  "documentation": "\n        <p>A user-defined message associated with the event.</p>\n      ",
                  "shape_name": "String"
                },
                "Date": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n        <simpara>The date and time when the event occurred.</simpara>\n      ",
                  "documentation": "\n        <p>The date and time when the event occurred.</p>\n      ",
                  "shape_name": "TStamp"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents a single occurrence of something interesting within the system. Some\n            examples of events are creating a DAX cluster, adding or removing a node, or rebooting\n            a node.</simpara>\n      ",
              "documentation": "\n        <p>Represents a single occurrence of something interesting within the system. Some\n            examples of events are creating a DAX cluster, adding or removing a node, or rebooting\n            a node.</p>\n      ",
              "shape_name": "Event"
            }
          }
        },
        "shape_name": "DescribeEventsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Returns events related to DAX clusters and parameter groups. You can obtain\n            events specific to a particular DAX cluster or parameter group by providing the name\n            as a parameter.</p>\n        <p>By default, only the events occurring within the last hour are returned; however,\n            you can retrieve up to 14 days' worth of events if necessary.</p>\n\n      "
    },
    "CreateParameterGroup": {
      "name": "CreateParameterGroup",
      "input": {
        "type": "structure",
        "members": {
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the parameter group to apply to all of the clusters in this replication\n            group.</simpara>\n      ",
            "documentation": "\n        <p>The name of the parameter group to apply to all of the clusters in this replication\n            group.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description of the parameter group.</simpara>\n      ",
            "documentation": "\n        <p>A description of the parameter group.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "CreateParameterGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ParameterGroup": {
            "type": "structure",
            "members": {
              "ParameterGroupName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A description of the parameter group.</simpara>\n      ",
                "documentation": "\n        <p>A description of the parameter group.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the output of a <emphasis>CreateParameterGroup</emphasis>\n            action.</simpara>\n      ",
            "documentation": "\n        <p>Represents the output of a <i>CreateParameterGroup</i>\n            action.</p>\n      ",
            "shape_name": "ParameterGroup"
          }
        },
        "shape_name": "CreateParameterGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have attempted to exceed the maximum number of parameter groups.</simpara>\n      ",
          "documentation": "\n        <p>You have attempted to exceed the maximum number of parameter groups.</p>\n      ",
          "shape_name": "ParameterGroupQuotaExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group already exists.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group already exists.</p>\n      ",
          "shape_name": "ParameterGroupAlreadyExistsFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>One or more parameters in a parameter group are in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>One or more parameters in a parameter group are in an invalid state.</p>\n      ",
          "shape_name": "InvalidParameterGroupStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Creates a new parameter group. A parameter group is a collection of parameters that\n            you apply to all of the nodes in a DAX cluster.</p>\n\n      "
    },
    "DeleteParameterGroup": {
      "name": "DeleteParameterGroup",
      "input": {
        "type": "structure",
        "members": {
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the parameter group to delete.</simpara>\n      ",
            "documentation": "\n        <p>The name of the parameter group to delete.</p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteParameterGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DeletionMessage": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A user-specified message for this action (i.e., a reason for deleting the parameter\n            group).</simpara>\n      ",
            "documentation": "\n        <p>A user-specified message for this action (i.e., a reason for deleting the parameter\n            group).</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteParameterGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>One or more parameters in a parameter group are in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>One or more parameters in a parameter group are in an invalid state.</p>\n      ",
          "shape_name": "InvalidParameterGroupStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Deletes the specified parameter group. You cannot delete a parameter group if it is\n            associated with any DAX clusters.</p>\n      "
    },
    "DescribeDefaultParameters": {
      "name": "DescribeDefaultParameters",
      "input": {
        "type": "structure",
        "members": {
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n        <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n        <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeDefaultParametersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "Parameters": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of parameters.  Each element in the list represents one parameter.</simpara>\n      ",
            "documentation": "\n        <p>A list of parameters.  Each element in the list represents one parameter.</p>\n      ",
            "shape_name": "ParameterList",
            "members": {
              "type": "structure",
              "members": {
                "ParameterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "ParameterType": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "NODE_TYPE_SPECIFIC"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Determines whether the parameter can be applied to any nodes, or only nodes of a\n            particular type.</simpara>\n      ",
                  "documentation": "\n        <p>Determines whether the parameter can be applied to any nodes, or only nodes of a\n            particular type.</p>\n      ",
                  "shape_name": "ParameterType"
                },
                "ParameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value for the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The value for the parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "NodeTypeSpecificValues": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of node types, and specific parameter values for each node.</simpara>\n      ",
                  "documentation": "\n        <p>A list of node types, and specific parameter values for each node.</p>\n      ",
                  "shape_name": "NodeTypeSpecificValueList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "NodeType": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A node type to which the parameter value applies.</simpara>\n      ",
                        "documentation": "\n        <p>A node type to which the parameter value applies.</p>\n      ",
                        "shape_name": "String"
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The parameter value for this node type.</simpara>\n      ",
                        "documentation": "\n        <p>The parameter value for this node type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents a parameter value that is applicable to a particular node\n            type.</simpara>\n      ",
                    "documentation": "\n        <p>Represents a parameter value that is applicable to a particular node\n            type.</p>\n      ",
                    "shape_name": "NodeTypeSpecificValue"
                  }
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A description of the parameter</simpara>\n      ",
                  "documentation": "\n        <p>A description of the parameter</p>\n      ",
                  "shape_name": "String"
                },
                "Source": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</simpara>\n      ",
                  "documentation": "\n        <p>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "DataType": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The data type of the parameter. For example, <code>integer</code>:</simpara>\n      ",
                  "documentation": "\n        <p>The data type of the parameter. For example, <code>integer</code>:</p>\n      ",
                  "shape_name": "String"
                },
                "AllowedValues": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A range of values within which the parameter can be set.</simpara>\n      ",
                  "documentation": "\n        <p>A range of values within which the parameter can be set.</p>\n      ",
                  "shape_name": "String"
                },
                "IsModifiable": {
                  "type": "string",
                  "enum": [
                    "TRUE",
                    "FALSE",
                    "CONDITIONAL"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Whether the customer is allowed to modify the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the customer is allowed to modify the parameter.</p>\n      ",
                  "shape_name": "IsModifiable"
                },
                "ChangeType": {
                  "type": "string",
                  "enum": [
                    "IMMEDIATE",
                    "REQUIRES_REBOOT"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The conditions under which changes to this parameter can be applied. For example,\n                <code>requires-reboot</code> indicates that a new value for this parameter will only\n            take effect if a node is rebooted.</simpara>\n      ",
                  "documentation": "\n        <p>The conditions under which changes to this parameter can be applied. For example,\n                <code>requires-reboot</code> indicates that a new value for this parameter will only\n            take effect if a node is rebooted.</p>\n      ",
                  "shape_name": "ChangeType"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Describes an individual setting that controls some aspect of DAX\n            behavior.</simpara>\n      ",
              "documentation": "\n        <p>Describes an individual setting that controls some aspect of DAX\n            behavior.</p>\n      ",
              "shape_name": "Parameter"
            }
          }
        },
        "shape_name": "DescribeDefaultParametersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Returns the default system parameter information for the DAX caching\n            software.</p>\n      "
    },
    "DescribeParameterGroups": {
      "name": "DescribeParameterGroups",
      "input": {
        "type": "structure",
        "members": {
          "ParameterGroupNames": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The names of the parameter groups.</simpara>\n      ",
            "documentation": "\n        <p>The names of the parameter groups.</p>\n      ",
            "shape_name": "ParameterGroupNameList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n        <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n        <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeParameterGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "ParameterGroups": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>An array of parameter groups.  Each element in the array represents one parameter group.</simpara>\n      ",
            "documentation": "\n        <p>An array of parameter groups.  Each element in the array represents one parameter group.</p>\n      ",
            "shape_name": "ParameterGroupList",
            "members": {
              "type": "structure",
              "members": {
                "ParameterGroupName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                  "shape_name": "String"
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A description of the parameter group.</simpara>\n      ",
                  "documentation": "\n        <p>A description of the parameter group.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A named set of parameters that are applied to all of the nodes in a DAX\n            cluster.</simpara>\n      ",
              "documentation": "\n        <p>A named set of parameters that are applied to all of the nodes in a DAX\n            cluster.</p>\n      ",
              "shape_name": "ParameterGroup"
            }
          }
        },
        "shape_name": "DescribeParameterGroupsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Returns a list of parameter group descriptions. If a parameter group name is\n            specified, the list will contain only the descriptions for that group.</p>\n      "
    },
    "DescribeParameters": {
      "name": "DescribeParameters",
      "input": {
        "type": "structure",
        "members": {
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
            "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Source": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</simpara>\n      ",
            "documentation": "\n        <p>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</p>\n      ",
            "shape_name": "String"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n        <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n        <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeParametersRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "Parameters": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of parameters within a parameter group.  Each element in the list represents one parameter.</simpara>\n      ",
            "documentation": "\n        <p>A list of parameters within a parameter group.  Each element in the list represents one parameter.</p>\n      ",
            "shape_name": "ParameterList",
            "members": {
              "type": "structure",
              "members": {
                "ParameterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "ParameterType": {
                  "type": "string",
                  "enum": [
                    "DEFAULT",
                    "NODE_TYPE_SPECIFIC"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Determines whether the parameter can be applied to any nodes, or only nodes of a\n            particular type.</simpara>\n      ",
                  "documentation": "\n        <p>Determines whether the parameter can be applied to any nodes, or only nodes of a\n            particular type.</p>\n      ",
                  "shape_name": "ParameterType"
                },
                "ParameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value for the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The value for the parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "NodeTypeSpecificValues": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of node types, and specific parameter values for each node.</simpara>\n      ",
                  "documentation": "\n        <p>A list of node types, and specific parameter values for each node.</p>\n      ",
                  "shape_name": "NodeTypeSpecificValueList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "NodeType": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>A node type to which the parameter value applies.</simpara>\n      ",
                        "documentation": "\n        <p>A node type to which the parameter value applies.</p>\n      ",
                        "shape_name": "String"
                      },
                      "Value": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The parameter value for this node type.</simpara>\n      ",
                        "documentation": "\n        <p>The parameter value for this node type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents a parameter value that is applicable to a particular node\n            type.</simpara>\n      ",
                    "documentation": "\n        <p>Represents a parameter value that is applicable to a particular node\n            type.</p>\n      ",
                    "shape_name": "NodeTypeSpecificValue"
                  }
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A description of the parameter</simpara>\n      ",
                  "documentation": "\n        <p>A description of the parameter</p>\n      ",
                  "shape_name": "String"
                },
                "Source": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</simpara>\n      ",
                  "documentation": "\n        <p>How the parameter is defined. For example, <code>system</code> denotes a\n            system-defined parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "DataType": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The data type of the parameter. For example, <code>integer</code>:</simpara>\n      ",
                  "documentation": "\n        <p>The data type of the parameter. For example, <code>integer</code>:</p>\n      ",
                  "shape_name": "String"
                },
                "AllowedValues": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>A range of values within which the parameter can be set.</simpara>\n      ",
                  "documentation": "\n        <p>A range of values within which the parameter can be set.</p>\n      ",
                  "shape_name": "String"
                },
                "IsModifiable": {
                  "type": "string",
                  "enum": [
                    "TRUE",
                    "FALSE",
                    "CONDITIONAL"
                  ],
                  "zonbookDocumentation": "\n        <simpara>Whether the customer is allowed to modify the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>Whether the customer is allowed to modify the parameter.</p>\n      ",
                  "shape_name": "IsModifiable"
                },
                "ChangeType": {
                  "type": "string",
                  "enum": [
                    "IMMEDIATE",
                    "REQUIRES_REBOOT"
                  ],
                  "zonbookDocumentation": "\n        <simpara>The conditions under which changes to this parameter can be applied. For example,\n                <code>requires-reboot</code> indicates that a new value for this parameter will only\n            take effect if a node is rebooted.</simpara>\n      ",
                  "documentation": "\n        <p>The conditions under which changes to this parameter can be applied. For example,\n                <code>requires-reboot</code> indicates that a new value for this parameter will only\n            take effect if a node is rebooted.</p>\n      ",
                  "shape_name": "ChangeType"
                }
              },
              "zonbookDocumentation": "\n        <simpara>Describes an individual setting that controls some aspect of DAX\n            behavior.</simpara>\n      ",
              "documentation": "\n        <p>Describes an individual setting that controls some aspect of DAX\n            behavior.</p>\n      ",
              "shape_name": "Parameter"
            }
          }
        },
        "shape_name": "DescribeParametersResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Returns the detailed parameter list for a particular parameter group.</p>\n\n      "
    },
    "UpdateParameterGroup": {
      "name": "UpdateParameterGroup",
      "input": {
        "type": "structure",
        "members": {
          "ParameterGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
            "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "ParameterNameValues": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>An array of name-value pairs for the parameters in the group. Each element in the\n            array represents a single parameter.</simpara>\n      ",
            "documentation": "\n        <p>An array of name-value pairs for the parameters in the group. Each element in the\n            array represents a single parameter.</p>\n      ",
            "required": true,
            "shape_name": "ParameterNameValueList",
            "members": {
              "type": "structure",
              "members": {
                "ParameterName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the parameter.</p>\n      ",
                  "shape_name": "String"
                },
                "ParameterValue": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the parameter.</simpara>\n      ",
                  "documentation": "\n        <p>The value of the parameter.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>An individual DAX parameter.</simpara>\n      ",
              "documentation": "\n        <p>An individual DAX parameter.</p>\n      ",
              "shape_name": "ParameterNameValue"
            }
          }
        },
        "shape_name": "UpdateParameterGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ParameterGroup": {
            "type": "structure",
            "members": {
              "ParameterGroupName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the parameter group.</simpara>\n      ",
                "documentation": "\n        <p>The name of the parameter group.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>A description of the parameter group.</simpara>\n      ",
                "documentation": "\n        <p>A description of the parameter group.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n        <simpara>The parameter group that has been modified.</simpara>\n      ",
            "documentation": "\n        <p>The parameter group that has been modified.</p>\n      ",
            "shape_name": "ParameterGroup"
          }
        },
        "shape_name": "UpdateParameterGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>One or more parameters in a parameter group are in an invalid state.</simpara>\n      ",
          "documentation": "\n        <p>One or more parameters in a parameter group are in an invalid state.</p>\n      ",
          "shape_name": "InvalidParameterGroupStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified parameter group does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The specified parameter group does not exist.</p>\n      ",
          "shape_name": "ParameterGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Modifies the parameters of a parameter group. You can modify up to 20\n            parameters in a single request by submitting a list parameter name and value\n            pairs.</p>\n\n      "
    },
    "CreateSubnetGroup": {
      "name": "CreateSubnetGroup",
      "input": {
        "type": "structure",
        "members": {
          "SubnetGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A name for the subnet group. This value is stored as a lowercase string. </simpara>\n      ",
            "documentation": "\n        <p>A name for the subnet group. This value is stored as a lowercase string. </p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description for the subnet group</simpara>\n      ",
            "documentation": "\n        <p>A description for the subnet group</p>\n      ",
            "shape_name": "String"
          },
          "SubnetIds": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of VPC subnet IDs for the subnet group.</simpara>\n      ",
            "documentation": "\n        <p>A list of VPC subnet IDs for the subnet group.</p>\n      ",
            "required": true,
            "shape_name": "SubnetIdentifierList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "CreateSubnetGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SubnetGroup": {
            "type": "structure",
            "members": {
              "SubnetGroupName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The name of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The description of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "VpcId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "Subnets": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of subnets associated with the subnet group. </simpara>\n      ",
                "documentation": "\n        <p>A list of subnets associated with the subnet group. </p>\n      ",
                "shape_name": "SubnetList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SubnetIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The system-assigned identifier for the subnet.</simpara>\n      ",
                      "documentation": "\n        <p>The system-assigned identifier for the subnet.</p>\n      ",
                      "shape_name": "String"
                    },
                    "SubnetAvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) for subnet subnet.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) for subnet subnet.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</p>\n      ",
                  "shape_name": "Subnet"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>Represents the output of a <emphasis>CreateSubnetGroup</emphasis>\n            operation.</simpara>\n      ",
            "documentation": "\n        <p>Represents the output of a <i>CreateSubnetGroup</i>\n            operation.</p>\n      ",
            "shape_name": "SubnetGroup"
          }
        },
        "shape_name": "CreateSubnetGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified subnet group already exists.</simpara>\n      ",
          "documentation": "\n        <p>The specified subnet group already exists.</p>\n      ",
          "shape_name": "SubnetGroupAlreadyExistsFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</simpara>\n      ",
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</p>\n      ",
          "shape_name": "SubnetGroupQuotaExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</simpara>\n      ",
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</p>\n      ",
          "shape_name": "SubnetQuotaExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>An invalid subnet identifier was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid subnet identifier was specified.</p>\n      ",
          "shape_name": "InvalidSubnet"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        }
      ],
      "documentation": "\n        <p>Creates a new subnet group.</p>\n\n      "
    },
    "DeleteSubnetGroup": {
      "name": "DeleteSubnetGroup",
      "input": {
        "type": "structure",
        "members": {
          "SubnetGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the subnet group to delete.</simpara>\n      ",
            "documentation": "\n        <p>The name of the subnet group to delete.</p>\n      ",
            "required": true,
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteSubnetGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "DeletionMessage": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A user-specified message for this action (i.e., a reason for deleting the subnet\n            group).</simpara>\n      ",
            "documentation": "\n        <p>A user-specified message for this action (i.e., a reason for deleting the subnet\n            group).</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DeleteSubnetGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The specified subnet group is currently in use.</simpara>\n      ",
          "documentation": "\n        <p>The specified subnet group is currently in use.</p>\n      ",
          "shape_name": "SubnetGroupInUseFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested subnet group name does not refer to an existing subnet\n            group.</simpara>\n      ",
          "documentation": "\n        <p>The requested subnet group name does not refer to an existing subnet\n            group.</p>\n      ",
          "shape_name": "SubnetGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        }
      ],
      "documentation": "\n        <p>Deletes a subnet group.</p>\n        <note>\n            <p>You cannot delete a subnet group if it is associated with any DAX\n                clusters.</p>\n        </note>\n      "
    },
    "DescribeSubnetGroups": {
      "name": "DescribeSubnetGroups",
      "input": {
        "type": "structure",
        "members": {
          "SubnetGroupNames": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The name of the subnet group.</simpara>\n      ",
            "documentation": "\n        <p>The name of the subnet group.</p>\n      ",
            "shape_name": "SubnetGroupNameList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n        <simpara>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</simpara>\n            <simpara>The value for <code>MaxResults</code> must be between 20 and 100.</simpara>\n      ",
            "documentation": "\n        <p>The maximum number of results to include in the response. If more results exist\n            than the specified <code>MaxResults</code> value, a token is included in the response so\n            that the remaining results can be retrieved.</p>\n            <p>The value for <code>MaxResults</code> must be between 20 and 100.</p>\n      ",
            "shape_name": "IntegerOptional"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token, up to the value specified by\n            <code>MaxResults</code>.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "DescribeSubnetGroupsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>Provides an identifier to allow retrieval of paginated results.</simpara>\n      ",
            "documentation": "\n        <p>Provides an identifier to allow retrieval of paginated results.</p>\n      ",
            "shape_name": "String"
          },
          "SubnetGroups": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>An array of subnet groups.  Each element in the array represents a single subnet group.</simpara>\n      ",
            "documentation": "\n        <p>An array of subnet groups.  Each element in the array represents a single subnet group.</p>\n      ",
            "shape_name": "SubnetGroupList",
            "members": {
              "type": "structure",
              "members": {
                "SubnetGroupName": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The name of the subnet group.</simpara>\n      ",
                  "documentation": "\n        <p>The name of the subnet group.</p>\n      ",
                  "shape_name": "String"
                },
                "Description": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The description of the subnet group.</simpara>\n      ",
                  "documentation": "\n        <p>The description of the subnet group.</p>\n      ",
                  "shape_name": "String"
                },
                "VpcId": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</simpara>\n      ",
                  "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</p>\n      ",
                  "shape_name": "String"
                },
                "Subnets": {
                  "type": "list",
                  "zonbookDocumentation": "\n        <simpara>A list of subnets associated with the subnet group. </simpara>\n      ",
                  "documentation": "\n        <p>A list of subnets associated with the subnet group. </p>\n      ",
                  "shape_name": "SubnetList",
                  "members": {
                    "type": "structure",
                    "members": {
                      "SubnetIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The system-assigned identifier for the subnet.</simpara>\n      ",
                        "documentation": "\n        <p>The system-assigned identifier for the subnet.</p>\n      ",
                        "shape_name": "String"
                      },
                      "SubnetAvailabilityZone": {
                        "type": "string",
                        "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) for subnet subnet.</simpara>\n      ",
                        "documentation": "\n        <p>The Availability Zone (AZ) for subnet subnet.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n        <simpara>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</simpara>\n      ",
                    "documentation": "\n        <p>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</p>\n      ",
                    "shape_name": "Subnet"
                  }
                }
              },
              "zonbookDocumentation": "\n        <simpara>Represents the output of one of the following actions:</simpara>\n        <itemizedlist>\n            <listitem>\n                <simpara>\n                    <emphasis>CreateSubnetGroup</emphasis>\n                </simpara>\n            </listitem>\n            <listitem>\n                <simpara>\n                    <emphasis>ModifySubnetGroup</emphasis>\n                </simpara>\n            </listitem>\n        </itemizedlist>\n      ",
              "documentation": "\n        <p>Represents the output of one of the following actions:</p>\n        <ul>\n            <li>\n                <p>\n                    <i>CreateSubnetGroup</i>\n                </p>\n            </li>\n            <li>\n                <p>\n                    <i>ModifySubnetGroup</i>\n                </p>\n            </li>\n         </ul>\n      ",
              "shape_name": "SubnetGroup"
            }
          }
        },
        "shape_name": "DescribeSubnetGroupsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested subnet group name does not refer to an existing subnet\n            group.</simpara>\n      ",
          "documentation": "\n        <p>The requested subnet group name does not refer to an existing subnet\n            group.</p>\n      ",
          "shape_name": "SubnetGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        }
      ],
      "documentation": "\n        <p>Returns a list of subnet group descriptions. If a subnet group name is specified,\n            the list will contain only the description of that group.</p>\n      "
    },
    "UpdateSubnetGroup": {
      "name": "UpdateSubnetGroup",
      "input": {
        "type": "structure",
        "members": {
          "SubnetGroupName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the subnet group.</simpara>\n      ",
            "documentation": "\n        <p>The name of the subnet group.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Description": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>A description of the subnet group.</simpara>\n      ",
            "documentation": "\n        <p>A description of the subnet group.</p>\n      ",
            "shape_name": "String"
          },
          "SubnetIds": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of subnet IDs in the subnet group.</simpara>\n      ",
            "documentation": "\n        <p>A list of subnet IDs in the subnet group.</p>\n      ",
            "shape_name": "SubnetIdentifierList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "UpdateSubnetGroupRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "SubnetGroup": {
            "type": "structure",
            "members": {
              "SubnetGroupName": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The name of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The name of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "Description": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The description of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The description of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "VpcId": {
                "type": "string",
                "zonbookDocumentation": "\n        <simpara>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</simpara>\n      ",
                "documentation": "\n        <p>The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet group.</p>\n      ",
                "shape_name": "String"
              },
              "Subnets": {
                "type": "list",
                "zonbookDocumentation": "\n        <simpara>A list of subnets associated with the subnet group. </simpara>\n      ",
                "documentation": "\n        <p>A list of subnets associated with the subnet group. </p>\n      ",
                "shape_name": "SubnetList",
                "members": {
                  "type": "structure",
                  "members": {
                    "SubnetIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The system-assigned identifier for the subnet.</simpara>\n      ",
                      "documentation": "\n        <p>The system-assigned identifier for the subnet.</p>\n      ",
                      "shape_name": "String"
                    },
                    "SubnetAvailabilityZone": {
                      "type": "string",
                      "zonbookDocumentation": "\n        <simpara>The Availability Zone (AZ) for subnet subnet.</simpara>\n      ",
                      "documentation": "\n        <p>The Availability Zone (AZ) for subnet subnet.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n        <simpara>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</simpara>\n      ",
                  "documentation": "\n        <p>Represents the subnet associated with a DAX cluster. This parameter refers to\n            subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with\n            DAX.</p>\n      ",
                  "shape_name": "Subnet"
                }
              }
            },
            "zonbookDocumentation": "\n        <simpara>The subnet group that has been modified.</simpara>\n      ",
            "documentation": "\n        <p>The subnet group that has been modified.</p>\n      ",
            "shape_name": "SubnetGroup"
          }
        },
        "shape_name": "UpdateSubnetGroupResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested subnet group name does not refer to an existing subnet\n            group.</simpara>\n      ",
          "documentation": "\n        <p>The requested subnet group name does not refer to an existing subnet\n            group.</p>\n      ",
          "shape_name": "SubnetGroupNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</simpara>\n      ",
          "documentation": "\n        <p>The request cannot be processed because it would exceed the allowed number of\n            subnets in a subnet group.</p>\n      ",
          "shape_name": "SubnetQuotaExceededFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested subnet is being used by another subnet group.</simpara>\n      ",
          "documentation": "\n        <p>The requested subnet is being used by another subnet group.</p>\n      ",
          "shape_name": "SubnetInUse"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>An invalid subnet identifier was specified.</simpara>\n      ",
          "documentation": "\n        <p>An invalid subnet identifier was specified.</p>\n      ",
          "shape_name": "InvalidSubnet"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        }
      ],
      "documentation": "\n        <p>Modifies an existing subnet group.</p>\n\n      "
    },
    "TagResource": {
      "name": "TagResource",
      "input": {
        "type": "structure",
        "members": {
          "ResourceName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX resource to which tags should be added.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX resource to which tags should be added.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The tags to be assigned to the DAX resource. </simpara>\n      ",
            "documentation": "\n        <p>The tags to be assigned to the DAX resource. </p>\n      ",
            "required": true,
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</simpara>\n      ",
                  "documentation": "\n        <p>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</p>\n      ",
                  "shape_name": "String"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the tag. Tag values are case-sensitive and can be null. </simpara>\n      ",
                  "documentation": "\n        <p>The value of the tag. Tag values are case-sensitive and can be null. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</simpara>\n        <simpara>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</simpara> \n        <simpara>You cannot backdate the application of a tag.</simpara>\n      ",
              "documentation": "\n        <p>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</p>\n        <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> \n        <p>You cannot backdate the application of a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "TagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The list of tags that are associated with the DAX resource.</simpara>\n      ",
            "documentation": "\n        <p>The list of tags that are associated with the DAX resource.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</simpara>\n      ",
                  "documentation": "\n        <p>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</p>\n      ",
                  "shape_name": "String"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the tag. Tag values are case-sensitive and can be null. </simpara>\n      ",
                  "documentation": "\n        <p>The value of the tag. Tag values are case-sensitive and can be null. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</simpara>\n        <simpara>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</simpara> \n        <simpara>You cannot backdate the application of a tag.</simpara>\n      ",
              "documentation": "\n        <p>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</p>\n        <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> \n        <p>You cannot backdate the application of a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "TagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>You have exceeded the maximum number of tags for this DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>You have exceeded the maximum number of tags for this DAX cluster.</p>\n      ",
          "shape_name": "TagQuotaPerResourceExceeded"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) supplied in the request is not valid.</simpara>\n      ",
          "documentation": "\n        <p>The Amazon Resource Name (ARN) supplied in the request is not valid.</p>\n      ",
          "shape_name": "InvalidARNFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Associates a set of tags with a DAX resource.  You can call <code>TagResource</code> up to 5 times per second, per\n            account. </p>\n      "
    },
    "UntagResource": {
      "name": "UntagResource",
      "input": {
        "type": "structure",
        "members": {
          "ResourceName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX resource from which the tags should be removed.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX resource from which the tags should be removed.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "TagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of tag keys. If the DAX cluster has any tags with these keys, then the tags are removed from the cluster.</simpara>\n      ",
            "documentation": "\n        <p>A list of tag keys. If the DAX cluster has any tags with these keys, then the tags are removed from the cluster.</p>\n      ",
            "required": true,
            "shape_name": "KeyList",
            "members": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          }
        },
        "shape_name": "UntagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>The tag keys that have been removed from the cluster.</simpara>\n      ",
            "documentation": "\n        <p>The tag keys that have been removed from the cluster.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</simpara>\n      ",
                  "documentation": "\n        <p>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</p>\n      ",
                  "shape_name": "String"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the tag. Tag values are case-sensitive and can be null. </simpara>\n      ",
                  "documentation": "\n        <p>The value of the tag. Tag values are case-sensitive and can be null. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</simpara>\n        <simpara>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</simpara> \n        <simpara>You cannot backdate the application of a tag.</simpara>\n      ",
              "documentation": "\n        <p>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</p>\n        <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> \n        <p>You cannot backdate the application of a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "UntagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) supplied in the request is not valid.</simpara>\n      ",
          "documentation": "\n        <p>The Amazon Resource Name (ARN) supplied in the request is not valid.</p>\n      ",
          "shape_name": "InvalidARNFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The tag does not exist.</simpara>\n      ",
          "documentation": "\n        <p>The tag does not exist.</p>\n      ",
          "shape_name": "TagNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>Removes the association of tags from a DAX resource. You can call\n            <code>UntagResource</code> up to 5 times per second, per account. </p>\n      "
    },
    "ListTags": {
      "name": "ListTags",
      "input": {
        "type": "structure",
        "members": {
          "ResourceName": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>The name of the DAX resource to which the tags belong.</simpara>\n      ",
            "documentation": "\n        <p>The name of the DAX resource to which the tags belong.</p>\n      ",
            "required": true,
            "shape_name": "String"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token.</simpara>\n      ",
            "documentation": "\n        <p>An optional token returned from a prior request. Use this token for pagination of\n            results from this action. If this parameter is specified, the response includes only\n            results beyond the token.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListTagsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n        <simpara>A list of tags currently associated with the DAX cluster.</simpara>\n      ",
            "documentation": "\n        <p>A list of tags currently associated with the DAX cluster.</p>\n      ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</simpara>\n      ",
                  "documentation": "\n        <p>The key for the tag.  Tag keys are case sensitive. Every DAX cluster can only have\n            one tag with the same key. If you try to add an existing tag (same key), the\n            existing tag value will be updated to the new value.</p>\n      ",
                  "shape_name": "String"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n        <simpara>The value of the tag. Tag values are case-sensitive and can be null. </simpara>\n      ",
                  "documentation": "\n        <p>The value of the tag. Tag values are case-sensitive and can be null. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n        <simpara>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</simpara>\n        <simpara>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</simpara> \n        <simpara>You cannot backdate the application of a tag.</simpara>\n      ",
              "documentation": "\n        <p>A description of a tag.  Every tag is a key-value pair. You can add up to 50 tags to a single\n            DAX cluster.</p>\n        <p>AWS-assigned tag names and values are automatically assigned the <code>aws:</code>\n            prefix, which the user cannot assign. AWS-assigned tag names do not count towards the\n            tag limit of 50. User-assigned tag names have the prefix <code>user:</code>.</p> \n        <p>You cannot backdate the application of a tag.</p>\n      ",
              "shape_name": "Tag"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n        <simpara>If this value is present, there are additional results to be displayed.  To retrieve them, call \n            <code>ListTags</code> again, with <code>NextToken</code> set to this value.</simpara>\n      ",
            "documentation": "\n        <p>If this value is present, there are additional results to be displayed.  To retrieve them, call \n            <code>ListTags</code> again, with <code>NextToken</code> set to this value.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListTagsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested cluster ID does not refer to an existing DAX cluster.</simpara>\n      ",
          "documentation": "\n        <p>The requested cluster ID does not refer to an existing DAX cluster.</p>\n      ",
          "shape_name": "ClusterNotFoundFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The Amazon Resource Name (ARN) supplied in the request is not valid.</simpara>\n      ",
          "documentation": "\n        <p>The Amazon Resource Name (ARN) supplied in the request is not valid.</p>\n      ",
          "shape_name": "InvalidARNFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n        <simpara>The requested DAX cluster is not in the <emphasis>available</emphasis>\n            state.</simpara>\n      ",
          "documentation": "\n        <p>The requested DAX cluster is not in the <i>available</i>\n            state.</p>\n      ",
          "shape_name": "InvalidClusterStateFault"
        },
        {
          "type": "structure",
          "members": {
          },
          "shape_name": "ServiceLinkedRoleNotFoundFault",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>The value for a parameter is invalid.</simpara>\n      ",
          "documentation": "\n        <p>The value for a parameter is invalid.</p>\n      ",
          "shape_name": "InvalidParameterValueException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "AwsQueryErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n        <simpara>Two or more incompatible parameters were specified.</simpara>\n      ",
          "documentation": "\n        <p>Two or more incompatible parameters were specified.</p>\n      ",
          "shape_name": "InvalidParameterCombinationException"
        }
      ],
      "documentation": "\n        <p>List all of the tags for a DAX cluster. You can call <code>ListTags</code> up to\n            10 times per second, per account.</p>\n      "
    },
    "LockServiceLinkedRole": {
      "name": "LockServiceLinkedRole",
      "input": {
        "type": "structure",
        "members": {
          "RoleArn": {
            "type": "string",
            "required": true,
            "shape_name": "arnType",
            "documentation": null,
            "min_length": 20,
            "max_length": 2048
          },
          "Timeout": {
            "type": "long",
            "required": true,
            "shape_name": "longType",
            "documentation": null
          }
        },
        "shape_name": "LockServiceLinkedRoleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "CanBeDeleted": {
            "type": "boolean",
            "required": true,
            "shape_name": "booleanType",
            "documentation": null
          },
          "ReasonOfFailure": {
            "type": "string",
            "shape_name": "stringType",
            "documentation": null
          },
          "RelatedResources": {
            "type": "list",
            "shape_name": "stringListType",
            "documentation": null,
            "members": {
              "type": "string",
              "shape_name": "stringType",
              "documentation": null
            }
          }
        },
        "shape_name": "LockServiceLinkedRoleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockServiceException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockClientException",
          "documentation": null
        }
      ],
      "documentation": null
    },
    "UnlockServiceLinkedRole": {
      "name": "UnlockServiceLinkedRole",
      "input": {
        "type": "structure",
        "members": {
          "RoleArn": {
            "type": "string",
            "required": true,
            "shape_name": "arnType",
            "documentation": null,
            "min_length": 20,
            "max_length": 2048
          },
          "DeletionStatus": {
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED"
            ],
            "shape_name": "deletionStatus",
            "documentation": null
          }
        },
        "shape_name": "UnlockServiceLinkedRoleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UnlockServiceLinkedRoleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockServiceException",
          "documentation": null
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "shape_name": "ServiceLinkedRoleLockClientException",
          "documentation": null
        }
      ],
      "documentation": null
    }
  }
}
