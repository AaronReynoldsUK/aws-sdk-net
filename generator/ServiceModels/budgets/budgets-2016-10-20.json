{
  "version": "1.0",
  "type": "json",
  "json_version": 1.1,
  "target_prefix": "AWSBudgetServiceGateway",
  "signature_version": "v4",
  "service_full_name": "AWS Budgets",
  "service_abbreviation": "AWSBudgets",
  "service_id": "Budgets",
  "uid": "budgets-2016-10-20",
  "endpoint_prefix": "budgets",
  "api_version": "2016-10-20",
  "documentation": "\n         <p>The AWS Budgets API enables you to use AWS Budgets to plan your service usage, service\n      costs, and instance reservations. The API reference provides descriptions, syntax, and usage\n      examples for each of the actions and data types for AWS Budgets. </p>\n         <p>Budgets provide you with a way to see the following information:</p>\n         <ul>\n            <li>\n               <p>How close your plan is to your budgeted amount or to the free tier limits</p>\n            </li>\n            <li>\n               <p>Your usage-to-date, including how much you've used of your Reserved Instances\n          (RIs)</p>\n            </li>\n            <li>\n               <p>Your current estimated charges from AWS, and how much your predicted usage will\n          accrue in charges by the end of the month</p>\n            </li>\n            <li>\n               <p>How much of your budget has been used</p>\n            </li>\n         </ul>\n         <p>AWS updates your budget status several times a day. Budgets track your unblended costs,\n      subscriptions, refunds, and RIs. You can create the following types of budgets:</p>\n         <ul>\n            <li>\n               <p>\n                  <b>Cost budgets</b>\n          -\n          Plan how much you want to spend on a service.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Usage budgets</b> - Plan how much you want to\n          use one or more services.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RI utilization budgets</b> - Define a utilization\n          threshold, and receive alerts when your RI usage falls below that threshold. This lets you\n          see if your RIs are unused or under-utilized.</p>\n            </li>\n            <li>\n               <p>\n                  <b>RI coverage budgets</b> - Define a coverage threshold,\n          and receive alerts when the number of your instance hours that are covered by RIs fall\n          below that threshold. This lets you see how much of your instance usage is covered by a\n          reservation.</p>\n            </li>\n         </ul>\n         <p>Service Endpoint</p>\n         <p>The AWS Budgets API provides the following endpoint:</p>\n         <ul>\n            <li>\n               <p>https://budgets.amazonaws.com</p>\n            </li>\n         </ul>\n         <p>For information about costs that are associated with the AWS Budgets API, see <a href=\"https://aws.amazon.com/aws-cost-management/pricing/\">AWS Cost Management\n        Pricing</a>.</p>\n      ",
  "operations": {
    "CreateBudget": {
      "name": "CreateBudget",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "Budget": {
            "type": "structure",
            "members": {
              "BudgetName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</simpara>\n      ",
                "documentation": "\n         <p>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</p>\n      ",
                "pattern": "[^:\\\\]+",
                "required": true,
                "shape_name": "BudgetName",
                "min_length": 1,
                "max_length": 100
              },
              "BudgetLimit": {
                "type": "structure",
                "members": {
                  "Amount": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                    "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                    "pattern": "([0-9]*\\.)?[0-9]+",
                    "required": true,
                    "shape_name": "NumericValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  },
                  "Unit": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                    "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                    "pattern": ".*",
                    "required": true,
                    "shape_name": "UnitValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</simpara>\n         <simpara>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</simpara>\n      ",
                "documentation": "\n         <p>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</p>\n         <p>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</p>\n      ",
                "shape_name": "Spend"
              },
              "CostFilters": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The cost filters, such as service or region, that are applied to a budget.</simpara>\n      ",
                "documentation": "\n         <p>The cost filters, such as service or region, that are applied to a budget.</p>\n      ",
                "shape_name": "CostFilters",
                "keys": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                  "documentation": "\n         <p> A generic string.</p>\n      ",
                  "pattern": ".*",
                  "shape_name": "GenericString",
                  "min_length": 0,
                  "max_length": 2147483647
                },
                "members": {
                  "type": "list",
                  "shape_name": "DimensionValues",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                    "documentation": "\n         <p> A generic string.</p>\n      ",
                    "pattern": ".*",
                    "shape_name": "GenericString",
                    "min_length": 0,
                    "max_length": 2147483647
                  }
                }
              },
              "CostTypes": {
                "type": "structure",
                "members": {
                  "IncludeTax": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes taxes.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes taxes.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes subscriptions.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes subscriptions.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseBlended": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses a blended rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses a blended rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRefund": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes refunds.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes refunds.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeCredit": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes credits.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes credits.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeUpfront": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes upfront RI costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes upfront RI costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRecurring": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes recurring fees such as monthly RI fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeOtherSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes non-RI subscription\n      costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes non-RI subscription\n      costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSupport": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes support subscription fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes support subscription fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeDiscount": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes discounts.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes discounts.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseAmortized": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses the amortized rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses the amortized rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The types of costs that are included in this <code>COST</code> budget.</simpara>\n         <simpara>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</simpara>\n      ",
                "documentation": "\n         <p>The types of costs that are included in this <code>COST</code> budget.</p>\n         <p>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>\n      ",
                "shape_name": "CostTypes"
              },
              "TimeUnit": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</simpara>\n      ",
                "documentation": "\n         <p>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</p>\n      ",
                "enum": [
                  "DAILY",
                  "MONTHLY",
                  "QUARTERLY",
                  "ANNUALLY"
                ],
                "required": true,
                "shape_name": "TimeUnit"
              },
              "TimePeriod": {
                "type": "structure",
                "members": {
                  "Start": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                    "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  },
                  "End": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                    "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </simpara>\n         <simpara>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </simpara>\n         <simpara>You can change either date with the <code>UpdateBudget</code> operation.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</simpara>\n      ",
                "documentation": "\n         <p>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </p>\n         <p>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </p>\n         <p>You can change either date with the <code>UpdateBudget</code> operation.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</p>\n      ",
                "shape_name": "TimePeriod"
              },
              "CalculatedSpend": {
                "type": "structure",
                "members": {
                  "ActualSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you have used.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you have used.</p>\n      ",
                    "required": true,
                    "shape_name": "Spend"
                  },
                  "ForecastedSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you are forecasted to use.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you are forecasted to use.</p>\n      ",
                    "shape_name": "Spend"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The actual and forecasted cost or usage that the budget tracks.</simpara>\n      ",
                "documentation": "\n         <p>The actual and forecasted cost or usage that the budget tracks.</p>\n      ",
                "shape_name": "CalculatedSpend"
              },
              "BudgetType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</simpara>\n      ",
                "documentation": "\n         <p>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</p>\n      ",
                "enum": [
                  "USAGE",
                  "COST",
                  "RI_UTILIZATION",
                  "RI_COVERAGE"
                ],
                "required": true,
                "shape_name": "BudgetType"
              },
              "LastUpdatedTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The last time that you updated this budget.</simpara>\n      ",
                "documentation": "\n         <p>The last time that you updated this budget.</p>\n      ",
                "shape_name": "GenericTimestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The budget object that you want to create.</simpara>\n      ",
            "documentation": "\n         <p>The budget object that you want to create.</p>\n      ",
            "required": true,
            "shape_name": "Budget"
          },
          "NotificationsWithSubscribers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A notification that you want to associate with a budget. A budget can have up to five\n      notifications, and each notification can have one SNS subscriber and up to 10 email\n      subscribers. If you include notifications and subscribers in your <code>CreateBudget</code>\n      call, AWS creates the notifications and subscribers for you.</simpara>\n      ",
            "documentation": "\n         <p>A notification that you want to associate with a budget. A budget can have up to five\n      notifications, and each notification can have one SNS subscriber and up to 10 email\n      subscribers. If you include notifications and subscribers in your <code>CreateBudget</code>\n      call, AWS creates the notifications and subscribers for you.</p>\n      ",
            "shape_name": "NotificationWithSubscribersList",
            "max_length": 5,
            "members": {
              "type": "structure",
              "members": {
                "Notification": {
                  "type": "structure",
                  "members": {
                    "NotificationType": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                      "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                      "enum": [
                        "ACTUAL",
                        "FORECASTED"
                      ],
                      "required": true,
                      "shape_name": "NotificationType"
                    },
                    "ComparisonOperator": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                      "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                      "enum": [
                        "GREATER_THAN",
                        "LESS_THAN",
                        "EQUAL_TO"
                      ],
                      "required": true,
                      "shape_name": "ComparisonOperator"
                    },
                    "Threshold": {
                      "type": "double",
                      "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                      "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                      "required": true,
                      "shape_name": "NotificationThreshold",
                      "min_length": 0,
                      "max_length": 1000000000
                    },
                    "ThresholdType": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                      "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                      "enum": [
                        "PERCENTAGE",
                        "ABSOLUTE_VALUE"
                      ],
                      "shape_name": "ThresholdType"
                    },
                    "NotificationState": {
                      "type": "string",
                      "enum": [
                        "OK",
                        "ALARM"
                      ],
                      "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                      "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                      "shape_name": "NotificationState"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The notification that is associated with a budget.</simpara>\n      ",
                  "documentation": "\n         <p>The notification that is associated with a budget.</p>\n      ",
                  "required": true,
                  "shape_name": "Notification"
                },
                "Subscribers": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <simpara>A list of subscribers who are subscribed to this notification.</simpara>\n      ",
                  "documentation": "\n         <p>A list of subscribers who are subscribed to this notification.</p>\n      ",
                  "required": true,
                  "shape_name": "Subscribers",
                  "min_length": 1,
                  "max_length": 11,
                  "members": {
                    "type": "structure",
                    "members": {
                      "SubscriptionType": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                        "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                        "enum": [
                          "SNS",
                          "EMAIL"
                        ],
                        "required": true,
                        "shape_name": "SubscriptionType"
                      },
                      "Address": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                        "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                        "pattern": ".*",
                        "sensitive": true,
                        "required": true,
                        "shape_name": "SubscriberAddress",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</simpara>\n         <simpara>For example, an email subscriber would have the following parameters:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>An <code>address</code> of <code>example@example.com</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</p>\n         <p>For example, an email subscriber would have the following parameters:</p>\n         <ul>\n            <li>\n               <p>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </p>\n            </li>\n            <li>\n               <p>An <code>address</code> of <code>example@example.com</code>\n               </p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "Subscriber"
                  }
                }
              },
              "zonbookDocumentation": "\n         <simpara>A notification with subscribers. A notification can have one SNS subscriber and up to\n      10 email subscribers, for a total of 11 subscribers.</simpara>\n      ",
              "documentation": "\n         <p>A notification with subscribers. A notification can have one SNS subscriber and up to\n      10 email subscribers, for a total of 11 subscribers.</p>\n      ",
              "shape_name": "NotificationWithSubscribers"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of CreateBudget </simpara>\n      ",
        "documentation": "\n         <p> Request of CreateBudget </p>\n      ",
        "shape_name": "CreateBudgetRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of CreateBudget </simpara>\n      ",
        "documentation": "\n         <p> Response of CreateBudget </p>\n      ",
        "shape_name": "CreateBudgetResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>You've exceeded the notification or subscriber limit.</para>\n      ",
          "documentation": "\n         <p>You've exceeded the notification or subscriber limit.</p>\n      ",
          "shape_name": "CreationLimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The budget name already exists. Budget names must be unique within an account.</para>\n      ",
          "documentation": "\n         <p>The budget name already exists. Budget names must be unique within an account.</p>\n      ",
          "shape_name": "DuplicateRecordException"
        }
      ],
      "documentation": "\n         <p>Creates a budget and, if included, notifications and subscribers. </p>\n    \n      "
    },
    "CreateNotification": {
      "name": "CreateNotification",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget that you want to create a\n      notification for.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget that you want to create a\n      notification for.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget that you want AWS to notify you about. Budget names must be\n      unique within an account.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget that you want AWS to notify you about. Budget names must be\n      unique within an account.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification that you want to create.</simpara>\n      ",
            "documentation": "\n         <p>The notification that you want to create.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "Subscribers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of subscribers that you want to associate with the notification. Each\n      notification can have one SNS subscriber and up to 10 email subscribers.</simpara>\n      ",
            "documentation": "\n         <p>A list of subscribers that you want to associate with the notification. Each\n      notification can have one SNS subscriber and up to 10 email subscribers.</p>\n      ",
            "required": true,
            "shape_name": "Subscribers",
            "min_length": 1,
            "max_length": 11,
            "members": {
              "type": "structure",
              "members": {
                "SubscriptionType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                  "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                  "enum": [
                    "SNS",
                    "EMAIL"
                  ],
                  "required": true,
                  "shape_name": "SubscriptionType"
                },
                "Address": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                  "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                  "pattern": ".*",
                  "sensitive": true,
                  "required": true,
                  "shape_name": "SubscriberAddress",
                  "min_length": 1,
                  "max_length": 2147483647
                }
              },
              "zonbookDocumentation": "\n         <simpara>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</simpara>\n         <simpara>For example, an email subscriber would have the following parameters:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>An <code>address</code> of <code>example@example.com</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
              "documentation": "\n         <p>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</p>\n         <p>For example, an email subscriber would have the following parameters:</p>\n         <ul>\n            <li>\n               <p>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </p>\n            </li>\n            <li>\n               <p>An <code>address</code> of <code>example@example.com</code>\n               </p>\n            </li>\n         </ul>\n      ",
              "shape_name": "Subscriber"
            }
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of CreateNotification </simpara>\n      ",
        "documentation": "\n         <p> Request of CreateNotification </p>\n      ",
        "shape_name": "CreateNotificationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of CreateNotification </simpara>\n      ",
        "documentation": "\n         <p> Response of CreateNotification </p>\n      ",
        "shape_name": "CreateNotificationResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>You've exceeded the notification or subscriber limit.</para>\n      ",
          "documentation": "\n         <p>You've exceeded the notification or subscriber limit.</p>\n      ",
          "shape_name": "CreationLimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The budget name already exists. Budget names must be unique within an account.</para>\n      ",
          "documentation": "\n         <p>The budget name already exists. Budget names must be unique within an account.</p>\n      ",
          "shape_name": "DuplicateRecordException"
        }
      ],
      "documentation": "\n         <p>Creates a notification. You must create the budget before you create the associated\n      notification.</p>\n    \n      "
    },
    "CreateSubscriber": {
      "name": "CreateSubscriber",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget that you want to create a\n      subscriber for.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget that you want to create a\n      subscriber for.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget that you want to subscribe to. Budget names must be unique\n      within an account.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget that you want to subscribe to. Budget names must be unique\n      within an account.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification that you want to create a subscriber for.</simpara>\n      ",
            "documentation": "\n         <p>The notification that you want to create a subscriber for.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "Subscriber": {
            "type": "structure",
            "members": {
              "SubscriptionType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                "enum": [
                  "SNS",
                  "EMAIL"
                ],
                "required": true,
                "shape_name": "SubscriptionType"
              },
              "Address": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                "pattern": ".*",
                "sensitive": true,
                "required": true,
                "shape_name": "SubscriberAddress",
                "min_length": 1,
                "max_length": 2147483647
              }
            },
            "zonbookDocumentation": "\n         <simpara>The subscriber that you want to associate with a budget notification.</simpara>\n      ",
            "documentation": "\n         <p>The subscriber that you want to associate with a budget notification.</p>\n      ",
            "required": true,
            "shape_name": "Subscriber"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of CreateSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Request of CreateSubscriber </p>\n      ",
        "shape_name": "CreateSubscriberRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of CreateSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Response of CreateSubscriber </p>\n      ",
        "shape_name": "CreateSubscriberResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>You've exceeded the notification or subscriber limit.</para>\n      ",
          "documentation": "\n         <p>You've exceeded the notification or subscriber limit.</p>\n      ",
          "shape_name": "CreationLimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The budget name already exists. Budget names must be unique within an account.</para>\n      ",
          "documentation": "\n         <p>The budget name already exists. Budget names must be unique within an account.</p>\n      ",
          "shape_name": "DuplicateRecordException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Creates a subscriber. You must create the associated budget and notification before you\n      create the subscriber.</p>\n    \n      "
    },
    "DeleteBudget": {
      "name": "DeleteBudget",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget that you want to\n      delete.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget that you want to\n      delete.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget that you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget that you want to delete.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DeleteBudget </simpara>\n      ",
        "documentation": "\n         <p> Request of DeleteBudget </p>\n      ",
        "shape_name": "DeleteBudgetRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of DeleteBudget </simpara>\n      ",
        "documentation": "\n         <p> Response of DeleteBudget </p>\n      ",
        "shape_name": "DeleteBudgetResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a budget. You can delete your budget at any time.</p>\n         <important>\n            <p>Deleting a budget also deletes the notifications and subscribers that are associated\n        with that budget.</p>\n         </important>\n    \n      "
    },
    "DeleteNotification": {
      "name": "DeleteNotification",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose notification you\n      want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose notification you\n      want to delete.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose notification you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose notification you want to delete.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification that you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The notification that you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DeleteNotification </simpara>\n      ",
        "documentation": "\n         <p> Request of DeleteNotification </p>\n      ",
        "shape_name": "DeleteNotificationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of DeleteNotification </simpara>\n      ",
        "documentation": "\n         <p> Response of DeleteNotification </p>\n      ",
        "shape_name": "DeleteNotificationResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a notification.</p>\n         <important>\n            <p>Deleting a notification also deletes the subscribers that are associated with the\n        notification.</p>\n         </important>\n    \n      "
    },
    "DeleteSubscriber": {
      "name": "DeleteSubscriber",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose subscriber you want\n      to delete.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose subscriber you want\n      to delete.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose subscriber you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose subscriber you want to delete.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification whose subscriber you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The notification whose subscriber you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "Subscriber": {
            "type": "structure",
            "members": {
              "SubscriptionType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                "enum": [
                  "SNS",
                  "EMAIL"
                ],
                "required": true,
                "shape_name": "SubscriptionType"
              },
              "Address": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                "pattern": ".*",
                "sensitive": true,
                "required": true,
                "shape_name": "SubscriberAddress",
                "min_length": 1,
                "max_length": 2147483647
              }
            },
            "zonbookDocumentation": "\n         <simpara>The subscriber that you want to delete.</simpara>\n      ",
            "documentation": "\n         <p>The subscriber that you want to delete.</p>\n      ",
            "required": true,
            "shape_name": "Subscriber"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DeleteSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Request of DeleteSubscriber </p>\n      ",
        "shape_name": "DeleteSubscriberRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of DeleteSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Response of DeleteSubscriber </p>\n      ",
        "shape_name": "DeleteSubscriberResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Deletes a subscriber.</p>\n         <important>\n            <p>Deleting the last subscriber to a notification also deletes the\n        notification.</p>\n         </important>\n    \n      "
    },
    "DescribeBudget": {
      "name": "DescribeBudget",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget that you want a\n      description of.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget that you want a\n      description of.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget that you want a description of.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget that you want a description of.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DescribeBudget </simpara>\n      ",
        "documentation": "\n         <p> Request of DescribeBudget </p>\n      ",
        "shape_name": "DescribeBudgetRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "Budget": {
            "type": "structure",
            "members": {
              "BudgetName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</simpara>\n      ",
                "documentation": "\n         <p>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</p>\n      ",
                "pattern": "[^:\\\\]+",
                "required": true,
                "shape_name": "BudgetName",
                "min_length": 1,
                "max_length": 100
              },
              "BudgetLimit": {
                "type": "structure",
                "members": {
                  "Amount": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                    "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                    "pattern": "([0-9]*\\.)?[0-9]+",
                    "required": true,
                    "shape_name": "NumericValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  },
                  "Unit": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                    "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                    "pattern": ".*",
                    "required": true,
                    "shape_name": "UnitValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</simpara>\n         <simpara>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</simpara>\n      ",
                "documentation": "\n         <p>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</p>\n         <p>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</p>\n      ",
                "shape_name": "Spend"
              },
              "CostFilters": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The cost filters, such as service or region, that are applied to a budget.</simpara>\n      ",
                "documentation": "\n         <p>The cost filters, such as service or region, that are applied to a budget.</p>\n      ",
                "shape_name": "CostFilters",
                "keys": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                  "documentation": "\n         <p> A generic string.</p>\n      ",
                  "pattern": ".*",
                  "shape_name": "GenericString",
                  "min_length": 0,
                  "max_length": 2147483647
                },
                "members": {
                  "type": "list",
                  "shape_name": "DimensionValues",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                    "documentation": "\n         <p> A generic string.</p>\n      ",
                    "pattern": ".*",
                    "shape_name": "GenericString",
                    "min_length": 0,
                    "max_length": 2147483647
                  }
                }
              },
              "CostTypes": {
                "type": "structure",
                "members": {
                  "IncludeTax": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes taxes.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes taxes.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes subscriptions.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes subscriptions.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseBlended": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses a blended rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses a blended rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRefund": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes refunds.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes refunds.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeCredit": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes credits.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes credits.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeUpfront": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes upfront RI costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes upfront RI costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRecurring": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes recurring fees such as monthly RI fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeOtherSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes non-RI subscription\n      costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes non-RI subscription\n      costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSupport": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes support subscription fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes support subscription fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeDiscount": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes discounts.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes discounts.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseAmortized": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses the amortized rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses the amortized rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The types of costs that are included in this <code>COST</code> budget.</simpara>\n         <simpara>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</simpara>\n      ",
                "documentation": "\n         <p>The types of costs that are included in this <code>COST</code> budget.</p>\n         <p>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>\n      ",
                "shape_name": "CostTypes"
              },
              "TimeUnit": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</simpara>\n      ",
                "documentation": "\n         <p>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</p>\n      ",
                "enum": [
                  "DAILY",
                  "MONTHLY",
                  "QUARTERLY",
                  "ANNUALLY"
                ],
                "required": true,
                "shape_name": "TimeUnit"
              },
              "TimePeriod": {
                "type": "structure",
                "members": {
                  "Start": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                    "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  },
                  "End": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                    "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </simpara>\n         <simpara>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </simpara>\n         <simpara>You can change either date with the <code>UpdateBudget</code> operation.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</simpara>\n      ",
                "documentation": "\n         <p>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </p>\n         <p>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </p>\n         <p>You can change either date with the <code>UpdateBudget</code> operation.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</p>\n      ",
                "shape_name": "TimePeriod"
              },
              "CalculatedSpend": {
                "type": "structure",
                "members": {
                  "ActualSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you have used.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you have used.</p>\n      ",
                    "required": true,
                    "shape_name": "Spend"
                  },
                  "ForecastedSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you are forecasted to use.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you are forecasted to use.</p>\n      ",
                    "shape_name": "Spend"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The actual and forecasted cost or usage that the budget tracks.</simpara>\n      ",
                "documentation": "\n         <p>The actual and forecasted cost or usage that the budget tracks.</p>\n      ",
                "shape_name": "CalculatedSpend"
              },
              "BudgetType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</simpara>\n      ",
                "documentation": "\n         <p>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</p>\n      ",
                "enum": [
                  "USAGE",
                  "COST",
                  "RI_UTILIZATION",
                  "RI_COVERAGE"
                ],
                "required": true,
                "shape_name": "BudgetType"
              },
              "LastUpdatedTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The last time that you updated this budget.</simpara>\n      ",
                "documentation": "\n         <p>The last time that you updated this budget.</p>\n      ",
                "shape_name": "GenericTimestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The description of the budget.</simpara>\n      ",
            "documentation": "\n         <p>The description of the budget.</p>\n      ",
            "shape_name": "Budget"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Response of DescribeBudget </simpara>\n      ",
        "documentation": "\n         <p> Response of DescribeBudget </p>\n      ",
        "shape_name": "DescribeBudgetResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Describes a budget.</p>\n    \n      "
    },
    "DescribeBudgetPerformanceHistory": {
      "name": "DescribeBudgetPerformanceHistory",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The account ID of the user. It should be a 12-digit number.</simpara>\n      ",
            "documentation": "\n         <p>The account ID of the user. It should be a 12-digit number.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara> A string that represents the budget name. The \":\" and \"\\\" characters aren't\n      allowed.</simpara>\n      ",
            "documentation": "\n         <p> A string that represents the budget name. The \":\" and \"\\\" characters aren't\n      allowed.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "TimePeriod": {
            "type": "structure",
            "members": {
              "Start": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                "shape_name": "GenericTimestamp"
              },
              "End": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                "shape_name": "GenericTimestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>Retrieves how often the budget went into an <code>ALARM</code> state for the specified\n      time period.</simpara>\n      ",
            "documentation": "\n         <p>Retrieves how often the budget went into an <code>ALARM</code> state for the specified\n      time period.</p>\n      ",
            "shape_name": "TimePeriod"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara> An integer that represents how many entries a paginated response contains. The maximum is\n      100.</simpara>\n      ",
            "documentation": "\n         <p> An integer that represents how many entries a paginated response contains. The maximum is\n      100.</p>\n      ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
            "documentation": "\n         <p> A generic string.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "shape_name": "DescribeBudgetPerformanceHistoryRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "BudgetPerformanceHistory": {
            "type": "structure",
            "members": {
              "BudgetName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara> A string that represents the budget name. The \":\" and \"\\\" characters aren't\n      allowed.</simpara>\n      ",
                "documentation": "\n         <p> A string that represents the budget name. The \":\" and \"\\\" characters aren't\n      allowed.</p>\n      ",
                "pattern": "[^:\\\\]+",
                "shape_name": "BudgetName",
                "min_length": 1,
                "max_length": 100
              },
              "BudgetType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara> The type of a budget. It must be one of the following types: </simpara>\n         <simpara>\n            <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, or\n        <code>RI_COVERAGE</code>.</simpara>\n      ",
                "documentation": "\n         <p> The type of a budget. It must be one of the following types: </p>\n         <p>\n            <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>, or\n        <code>RI_COVERAGE</code>.</p>\n      ",
                "enum": [
                  "USAGE",
                  "COST",
                  "RI_UTILIZATION",
                  "RI_COVERAGE"
                ],
                "shape_name": "BudgetType"
              },
              "CostFilters": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The history of the cost filters for a budget during the specified time period.</simpara>\n      ",
                "documentation": "\n         <p>The history of the cost filters for a budget during the specified time period.</p>\n      ",
                "shape_name": "CostFilters",
                "keys": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                  "documentation": "\n         <p> A generic string.</p>\n      ",
                  "pattern": ".*",
                  "shape_name": "GenericString",
                  "min_length": 0,
                  "max_length": 2147483647
                },
                "members": {
                  "type": "list",
                  "shape_name": "DimensionValues",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                    "documentation": "\n         <p> A generic string.</p>\n      ",
                    "pattern": ".*",
                    "shape_name": "GenericString",
                    "min_length": 0,
                    "max_length": 2147483647
                  }
                }
              },
              "CostTypes": {
                "type": "structure",
                "members": {
                  "IncludeTax": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes taxes.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes taxes.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes subscriptions.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes subscriptions.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseBlended": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses a blended rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses a blended rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRefund": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes refunds.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes refunds.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeCredit": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes credits.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes credits.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeUpfront": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes upfront RI costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes upfront RI costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRecurring": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes recurring fees such as monthly RI fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeOtherSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes non-RI subscription\n      costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes non-RI subscription\n      costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSupport": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes support subscription fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes support subscription fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeDiscount": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes discounts.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes discounts.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseAmortized": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses the amortized rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses the amortized rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The history of the cost types for a budget during the specified time period.</simpara>\n      ",
                "documentation": "\n         <p>The history of the cost types for a budget during the specified time period.</p>\n      ",
                "shape_name": "CostTypes"
              },
              "TimeUnit": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara> The time unit of the budget, such as MONTHLY or QUARTERLY.</simpara>\n      ",
                "documentation": "\n         <p> The time unit of the budget, such as MONTHLY or QUARTERLY.</p>\n      ",
                "enum": [
                  "DAILY",
                  "MONTHLY",
                  "QUARTERLY",
                  "ANNUALLY"
                ],
                "shape_name": "TimeUnit"
              },
              "BudgetedAndActualAmountsList": {
                "type": "list",
                "zonbookDocumentation": "\n         <simpara>A list of amounts of cost or usage that you created budgets for, compared to your actual costs or usage.</simpara>\n      ",
                "documentation": "\n         <p>A list of amounts of cost or usage that you created budgets for, compared to your actual costs or usage.</p>\n      ",
                "shape_name": "BudgetedAndActualAmountsList",
                "members": {
                  "type": "structure",
                  "members": {
                    "BudgetedAmount": {
                      "type": "structure",
                      "members": {
                        "Amount": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                          "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                          "pattern": "([0-9]*\\.)?[0-9]+",
                          "required": true,
                          "shape_name": "NumericValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        },
                        "Unit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                          "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                          "pattern": ".*",
                          "required": true,
                          "shape_name": "UnitValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The amount of cost or usage that you created the budget for.</simpara>\n      ",
                      "documentation": "\n         <p>The amount of cost or usage that you created the budget for.</p>\n      ",
                      "shape_name": "Spend"
                    },
                    "ActualAmount": {
                      "type": "structure",
                      "members": {
                        "Amount": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                          "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                          "pattern": "([0-9]*\\.)?[0-9]+",
                          "required": true,
                          "shape_name": "NumericValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        },
                        "Unit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                          "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                          "pattern": ".*",
                          "required": true,
                          "shape_name": "UnitValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>Your actual costs or usage for a budget period.</simpara>\n      ",
                      "documentation": "\n         <p>Your actual costs or usage for a budget period.</p>\n      ",
                      "shape_name": "Spend"
                    },
                    "TimePeriod": {
                      "type": "structure",
                      "members": {
                        "Start": {
                          "type": "timestamp",
                          "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                          "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                          "shape_name": "GenericTimestamp"
                        },
                        "End": {
                          "type": "timestamp",
                          "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                          "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                          "shape_name": "GenericTimestamp"
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The time period covered by this budget comparison.</simpara>\n      ",
                      "documentation": "\n         <p>The time period covered by this budget comparison.</p>\n      ",
                      "shape_name": "TimePeriod"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The amount of cost or usage that you created the budget for, compared to your actual costs or usage.</simpara>\n      ",
                  "documentation": "\n         <p>The amount of cost or usage that you created the budget for, compared to your actual costs or usage.</p>\n      ",
                  "shape_name": "BudgetedAndActualAmounts"
                }
              }
            },
            "zonbookDocumentation": "\n         <simpara>The history of how often the budget has gone into an <code>ALARM</code> state.</simpara>\n         <simpara>For <code>DAILY</code> budgets, the history saves the state of the budget for the last\n      60 days. For <code>MONTHLY</code> budgets, the history saves the state of the budget for the\n      last 12 months. For <code>QUARTERLY</code> budgets, the history saves the state of the budget\n      for the last four quarters.</simpara>\n      ",
            "documentation": "\n         <p>The history of how often the budget has gone into an <code>ALARM</code> state.</p>\n         <p>For <code>DAILY</code> budgets, the history saves the state of the budget for the last\n      60 days. For <code>MONTHLY</code> budgets, the history saves the state of the budget for the\n      last 12 months. For <code>QUARTERLY</code> budgets, the history saves the state of the budget\n      for the last four quarters.</p>\n      ",
            "shape_name": "BudgetPerformanceHistory"
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
            "documentation": "\n         <p> A generic string.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "shape_name": "DescribeBudgetPerformanceHistoryResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token is invalid.</para>\n      ",
          "documentation": "\n         <p>The pagination token is invalid.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token expired.</para>\n      ",
          "documentation": "\n         <p>The pagination token expired.</p>\n      ",
          "shape_name": "ExpiredNextTokenException"
        }
      ],
      "documentation": "\n         <p>Describes the history for <code>DAILY</code>, <code>MONTHLY</code>, and\n        <code>QUARTERLY</code> budgets. Budget history isn't available for <code>ANNUAL</code>\n      budgets.</p>\n    \n\n      "
    },
    "DescribeBudgets": {
      "name": "DescribeBudgets",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budgets that you want\n      descriptions of.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budgets that you want\n      descriptions of.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</simpara>\n      ",
            "documentation": "\n         <p>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</p>\n      ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DescribeBudgets </simpara>\n      ",
        "documentation": "\n         <p> Request of DescribeBudgets </p>\n      ",
        "shape_name": "DescribeBudgetsRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "Budgets": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of budgets.</simpara>\n      ",
            "documentation": "\n         <p>A list of budgets.</p>\n      ",
            "shape_name": "Budgets",
            "members": {
              "type": "structure",
              "members": {
                "BudgetName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</p>\n      ",
                  "pattern": "[^:\\\\]+",
                  "required": true,
                  "shape_name": "BudgetName",
                  "min_length": 1,
                  "max_length": 100
                },
                "BudgetLimit": {
                  "type": "structure",
                  "members": {
                    "Amount": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                      "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                      "pattern": "([0-9]*\\.)?[0-9]+",
                      "required": true,
                      "shape_name": "NumericValue",
                      "min_length": 1,
                      "max_length": 2147483647
                    },
                    "Unit": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                      "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                      "pattern": ".*",
                      "required": true,
                      "shape_name": "UnitValue",
                      "min_length": 1,
                      "max_length": 2147483647
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</simpara>\n         <simpara>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</simpara>\n      ",
                  "documentation": "\n         <p>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</p>\n         <p>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</p>\n      ",
                  "shape_name": "Spend"
                },
                "CostFilters": {
                  "type": "map",
                  "zonbookDocumentation": "\n         <simpara>The cost filters, such as service or region, that are applied to a budget.</simpara>\n      ",
                  "documentation": "\n         <p>The cost filters, such as service or region, that are applied to a budget.</p>\n      ",
                  "shape_name": "CostFilters",
                  "keys": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                    "documentation": "\n         <p> A generic string.</p>\n      ",
                    "pattern": ".*",
                    "shape_name": "GenericString",
                    "min_length": 0,
                    "max_length": 2147483647
                  },
                  "members": {
                    "type": "list",
                    "shape_name": "DimensionValues",
                    "documentation": null,
                    "members": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                      "documentation": "\n         <p> A generic string.</p>\n      ",
                      "pattern": ".*",
                      "shape_name": "GenericString",
                      "min_length": 0,
                      "max_length": 2147483647
                    }
                  }
                },
                "CostTypes": {
                  "type": "structure",
                  "members": {
                    "IncludeTax": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes taxes.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes taxes.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeSubscription": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes subscriptions.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes subscriptions.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "UseBlended": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses a blended rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget uses a blended rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeRefund": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes refunds.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes refunds.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeCredit": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes credits.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes credits.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeUpfront": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes upfront RI costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes upfront RI costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeRecurring": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes recurring fees such as monthly RI fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeOtherSubscription": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes non-RI subscription\n      costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes non-RI subscription\n      costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeSupport": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes support subscription fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes support subscription fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "IncludeDiscount": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes discounts.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget includes discounts.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    },
                    "UseAmortized": {
                      "type": "boolean",
                      "box": true,
                      "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses the amortized rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                      "documentation": "\n         <p>Specifies whether a budget uses the amortized rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                      "shape_name": "NullableBoolean"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The types of costs that are included in this <code>COST</code> budget.</simpara>\n         <simpara>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</simpara>\n      ",
                  "documentation": "\n         <p>The types of costs that are included in this <code>COST</code> budget.</p>\n         <p>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>\n      ",
                  "shape_name": "CostTypes"
                },
                "TimeUnit": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</simpara>\n      ",
                  "documentation": "\n         <p>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</p>\n      ",
                  "enum": [
                    "DAILY",
                    "MONTHLY",
                    "QUARTERLY",
                    "ANNUALLY"
                  ],
                  "required": true,
                  "shape_name": "TimeUnit"
                },
                "TimePeriod": {
                  "type": "structure",
                  "members": {
                    "Start": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                      "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                      "shape_name": "GenericTimestamp"
                    },
                    "End": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                      "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                      "shape_name": "GenericTimestamp"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </simpara>\n         <simpara>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </simpara>\n         <simpara>You can change either date with the <code>UpdateBudget</code> operation.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</simpara>\n      ",
                  "documentation": "\n         <p>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </p>\n         <p>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </p>\n         <p>You can change either date with the <code>UpdateBudget</code> operation.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</p>\n      ",
                  "shape_name": "TimePeriod"
                },
                "CalculatedSpend": {
                  "type": "structure",
                  "members": {
                    "ActualSpend": {
                      "type": "structure",
                      "members": {
                        "Amount": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                          "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                          "pattern": "([0-9]*\\.)?[0-9]+",
                          "required": true,
                          "shape_name": "NumericValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        },
                        "Unit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                          "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                          "pattern": ".*",
                          "required": true,
                          "shape_name": "UnitValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you have used.</simpara>\n      ",
                      "documentation": "\n         <p>The amount of cost, usage, or RI units that you have used.</p>\n      ",
                      "required": true,
                      "shape_name": "Spend"
                    },
                    "ForecastedSpend": {
                      "type": "structure",
                      "members": {
                        "Amount": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                          "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                          "pattern": "([0-9]*\\.)?[0-9]+",
                          "required": true,
                          "shape_name": "NumericValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        },
                        "Unit": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                          "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                          "pattern": ".*",
                          "required": true,
                          "shape_name": "UnitValue",
                          "min_length": 1,
                          "max_length": 2147483647
                        }
                      },
                      "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you are forecasted to use.</simpara>\n      ",
                      "documentation": "\n         <p>The amount of cost, usage, or RI units that you are forecasted to use.</p>\n      ",
                      "shape_name": "Spend"
                    }
                  },
                  "zonbookDocumentation": "\n         <simpara>The actual and forecasted cost or usage that the budget tracks.</simpara>\n      ",
                  "documentation": "\n         <p>The actual and forecasted cost or usage that the budget tracks.</p>\n      ",
                  "shape_name": "CalculatedSpend"
                },
                "BudgetType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</simpara>\n      ",
                  "documentation": "\n         <p>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</p>\n      ",
                  "enum": [
                    "USAGE",
                    "COST",
                    "RI_UTILIZATION",
                    "RI_COVERAGE"
                  ],
                  "required": true,
                  "shape_name": "BudgetType"
                },
                "LastUpdatedTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <simpara>The last time that you updated this budget.</simpara>\n      ",
                  "documentation": "\n         <p>The last time that you updated this budget.</p>\n      ",
                  "shape_name": "GenericTimestamp"
                }
              },
              "zonbookDocumentation": "\n         <simpara>Represents the output of the <code>CreateBudget</code> operation. The content consists\n      of the detailed metadata and data file information, and the current status of the\n        <code>budget</code> object.</simpara>\n         <simpara>This is the ARN pattern for a budget: </simpara>\n         <simpara>\n            <code>arn:aws:budgetservice::AccountId:budget/budgetName</code>\n         </simpara>\n      ",
              "documentation": "\n         <p>Represents the output of the <code>CreateBudget</code> operation. The content consists\n      of the detailed metadata and data file information, and the current status of the\n        <code>budget</code> object.</p>\n         <p>This is the ARN pattern for a budget: </p>\n         <p>\n            <code>arn:aws:budgetservice::AccountId:budget/budgetName</code>\n         </p>\n      ",
              "shape_name": "Budget"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Response of DescribeBudgets </simpara>\n      ",
        "documentation": "\n         <p> Response of DescribeBudgets </p>\n      ",
        "shape_name": "DescribeBudgetsResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token is invalid.</para>\n      ",
          "documentation": "\n         <p>The pagination token is invalid.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token expired.</para>\n      ",
          "documentation": "\n         <p>The pagination token expired.</p>\n      ",
          "shape_name": "ExpiredNextTokenException"
        }
      ],
      "documentation": "\n         <p>Lists the budgets that are associated with an account.</p>\n    \n      "
    },
    "DescribeNotificationsForBudget": {
      "name": "DescribeNotificationsForBudget",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose notifications you\n      want descriptions of.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose notifications you\n      want descriptions of.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose notifications you want descriptions of.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose notifications you want descriptions of.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</simpara>\n      ",
            "documentation": "\n         <p>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</p>\n      ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DescribeNotificationsForBudget </simpara>\n      ",
        "documentation": "\n         <p> Request of DescribeNotificationsForBudget </p>\n      ",
        "shape_name": "DescribeNotificationsForBudgetRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "Notifications": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of notifications that are associated with a budget.</simpara>\n      ",
            "documentation": "\n         <p>A list of notifications that are associated with a budget.</p>\n      ",
            "shape_name": "Notifications",
            "members": {
              "type": "structure",
              "members": {
                "NotificationType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                  "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                  "enum": [
                    "ACTUAL",
                    "FORECASTED"
                  ],
                  "required": true,
                  "shape_name": "NotificationType"
                },
                "ComparisonOperator": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                  "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                  "enum": [
                    "GREATER_THAN",
                    "LESS_THAN",
                    "EQUAL_TO"
                  ],
                  "required": true,
                  "shape_name": "ComparisonOperator"
                },
                "Threshold": {
                  "type": "double",
                  "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                  "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                  "required": true,
                  "shape_name": "NotificationThreshold",
                  "min_length": 0,
                  "max_length": 1000000000
                },
                "ThresholdType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                  "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                  "enum": [
                    "PERCENTAGE",
                    "ABSOLUTE_VALUE"
                  ],
                  "shape_name": "ThresholdType"
                },
                "NotificationState": {
                  "type": "string",
                  "enum": [
                    "OK",
                    "ALARM"
                  ],
                  "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                  "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                  "shape_name": "NotificationState"
                }
              },
              "zonbookDocumentation": "\n         <simpara>A notification that is associated with a budget. A budget can have up to five\n      notifications. </simpara>\n         <simpara>Each notification must have at least one subscriber. A notification can have one SNS\n      subscriber and up to 10 email subscribers, for a total of 11 subscribers.</simpara>\n         <simpara>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160\n      dollars, create a notification with the following parameters:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>A notificationType of <code>ACTUAL</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>A\n            <code>thresholdType</code> of\n          <code>PERCENTAGE</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>A <code>comparisonOperator</code> of <code>GREATER_THAN</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>A notification <code>threshold</code> of <code>80</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
              "documentation": "\n         <p>A notification that is associated with a budget. A budget can have up to five\n      notifications. </p>\n         <p>Each notification must have at least one subscriber. A notification can have one SNS\n      subscriber and up to 10 email subscribers, for a total of 11 subscribers.</p>\n         <p>For example, if you have a budget for 200 dollars and you want to be notified when you go over 160\n      dollars, create a notification with the following parameters:</p>\n         <ul>\n            <li>\n               <p>A notificationType of <code>ACTUAL</code>\n               </p>\n            </li>\n            <li>\n               <p>A\n            <code>thresholdType</code> of\n          <code>PERCENTAGE</code>\n               </p>\n            </li>\n            <li>\n               <p>A <code>comparisonOperator</code> of <code>GREATER_THAN</code>\n               </p>\n            </li>\n            <li>\n               <p>A notification <code>threshold</code> of <code>80</code>\n               </p>\n            </li>\n         </ul>\n      ",
              "shape_name": "Notification"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Response of GetNotificationsForBudget </simpara>\n      ",
        "documentation": "\n         <p> Response of GetNotificationsForBudget </p>\n      ",
        "shape_name": "DescribeNotificationsForBudgetResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token is invalid.</para>\n      ",
          "documentation": "\n         <p>The pagination token is invalid.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token expired.</para>\n      ",
          "documentation": "\n         <p>The pagination token expired.</p>\n      ",
          "shape_name": "ExpiredNextTokenException"
        }
      ],
      "documentation": "\n         <p>Lists the notifications that are associated with a budget.</p>\n    \n      "
    },
    "DescribeSubscribersForNotification": {
      "name": "DescribeSubscribersForNotification",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose subscribers you\n      want descriptions of.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose subscribers you\n      want descriptions of.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose subscribers you want descriptions of.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose subscribers you want descriptions of.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification whose subscribers you want to list.</simpara>\n      ",
            "documentation": "\n         <p>The notification whose subscribers you want to list.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <simpara>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</simpara>\n      ",
            "documentation": "\n         <p>An optional integer that represents how many entries a paginated response contains. The maximum is\n      100.</p>\n      ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token that you include in your request to indicate the next set of\n      results that you want to retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of DescribeSubscribersForNotification </simpara>\n      ",
        "documentation": "\n         <p> Request of DescribeSubscribersForNotification </p>\n      ",
        "shape_name": "DescribeSubscribersForNotificationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
          "Subscribers": {
            "type": "list",
            "zonbookDocumentation": "\n         <simpara>A list of subscribers that are associated with a notification.</simpara>\n      ",
            "documentation": "\n         <p>A list of subscribers that are associated with a notification.</p>\n      ",
            "shape_name": "Subscribers",
            "min_length": 1,
            "max_length": 11,
            "members": {
              "type": "structure",
              "members": {
                "SubscriptionType": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                  "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                  "enum": [
                    "SNS",
                    "EMAIL"
                  ],
                  "required": true,
                  "shape_name": "SubscriptionType"
                },
                "Address": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                  "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                  "pattern": ".*",
                  "sensitive": true,
                  "required": true,
                  "shape_name": "SubscriberAddress",
                  "min_length": 1,
                  "max_length": 2147483647
                }
              },
              "zonbookDocumentation": "\n         <simpara>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</simpara>\n         <simpara>For example, an email subscriber would have the following parameters:</simpara>\n         <itemizedlist>\n            <listitem>\n               <simpara>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </simpara>\n            </listitem>\n            <listitem>\n               <simpara>An <code>address</code> of <code>example@example.com</code>\n               </simpara>\n            </listitem>\n         </itemizedlist>\n      ",
              "documentation": "\n         <p>The subscriber to a budget notification. The subscriber consists of a subscription type\n      and either an Amazon SNS topic or an email address.</p>\n         <p>For example, an email subscriber would have the following parameters:</p>\n         <ul>\n            <li>\n               <p>A <code>subscriptionType</code> of <code>EMAIL</code>\n               </p>\n            </li>\n            <li>\n               <p>An <code>address</code> of <code>example@example.com</code>\n               </p>\n            </li>\n         </ul>\n      ",
              "shape_name": "Subscriber"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</simpara>\n      ",
            "documentation": "\n         <p>The pagination token in the service response that indicates the next set of results\n      that you can retrieve.</p>\n      ",
            "pattern": ".*",
            "shape_name": "GenericString",
            "min_length": 0,
            "max_length": 2147483647
          }
        },
        "zonbookDocumentation": "\n         <simpara> Response of DescribeSubscribersForNotification </simpara>\n      ",
        "documentation": "\n         <p> Response of DescribeSubscribersForNotification </p>\n      ",
        "shape_name": "DescribeSubscribersForNotificationResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token is invalid.</para>\n      ",
          "documentation": "\n         <p>The pagination token is invalid.</p>\n      ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The pagination token expired.</para>\n      ",
          "documentation": "\n         <p>The pagination token expired.</p>\n      ",
          "shape_name": "ExpiredNextTokenException"
        }
      ],
      "documentation": "\n         <p>Lists the subscribers that are associated with a notification.</p>\n    \n      "
    },
    "UpdateBudget": {
      "name": "UpdateBudget",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget that you want to\n      update.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget that you want to\n      update.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "NewBudget": {
            "type": "structure",
            "members": {
              "BudgetName": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</simpara>\n      ",
                "documentation": "\n         <p>The name of a budget. The name must be unique within accounts. The <code>:</code> and\n        <code>\\</code> characters aren't allowed in <code>BudgetName</code>.</p>\n      ",
                "pattern": "[^:\\\\]+",
                "required": true,
                "shape_name": "BudgetName",
                "min_length": 1,
                "max_length": 100
              },
              "BudgetLimit": {
                "type": "structure",
                "members": {
                  "Amount": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                    "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                    "pattern": "([0-9]*\\.)?[0-9]+",
                    "required": true,
                    "shape_name": "NumericValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  },
                  "Unit": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                    "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                    "pattern": ".*",
                    "required": true,
                    "shape_name": "UnitValue",
                    "min_length": 1,
                    "max_length": 2147483647
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</simpara>\n         <simpara>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</simpara>\n      ",
                "documentation": "\n         <p>The total amount of cost, usage, RI utilization, or RI coverage that you want to track with your budget.</p>\n         <p>\n            <code>BudgetLimit</code> is required for cost or usage budgets, but optional for RI\n      utilization or coverage budgets. RI utilization or coverage budgets default to\n        <code>100</code>, which is the only valid value for RI utilization or coverage\n      budgets.</p>\n      ",
                "shape_name": "Spend"
              },
              "CostFilters": {
                "type": "map",
                "zonbookDocumentation": "\n         <simpara>The cost filters, such as service or region, that are applied to a budget.</simpara>\n      ",
                "documentation": "\n         <p>The cost filters, such as service or region, that are applied to a budget.</p>\n      ",
                "shape_name": "CostFilters",
                "keys": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                  "documentation": "\n         <p> A generic string.</p>\n      ",
                  "pattern": ".*",
                  "shape_name": "GenericString",
                  "min_length": 0,
                  "max_length": 2147483647
                },
                "members": {
                  "type": "list",
                  "shape_name": "DimensionValues",
                  "documentation": null,
                  "members": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <simpara> A generic string.</simpara>\n      ",
                    "documentation": "\n         <p> A generic string.</p>\n      ",
                    "pattern": ".*",
                    "shape_name": "GenericString",
                    "min_length": 0,
                    "max_length": 2147483647
                  }
                }
              },
              "CostTypes": {
                "type": "structure",
                "members": {
                  "IncludeTax": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes taxes.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes taxes.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes subscriptions.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes subscriptions.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseBlended": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses a blended rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses a blended rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRefund": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes refunds.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes refunds.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeCredit": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes credits.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes credits.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeUpfront": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes upfront RI costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes upfront RI costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeRecurring": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes recurring fees such as monthly RI fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes recurring fees such as monthly RI fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeOtherSubscription": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes non-RI subscription\n      costs.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes non-RI subscription\n      costs.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeSupport": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes support subscription fees.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes support subscription fees.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "IncludeDiscount": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget includes discounts.</simpara>\n         <simpara>The default value is <code>true</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget includes discounts.</p>\n         <p>The default value is <code>true</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  },
                  "UseAmortized": {
                    "type": "boolean",
                    "box": true,
                    "zonbookDocumentation": "\n         <simpara>Specifies whether a budget uses the amortized rate.</simpara>\n         <simpara>The default value is <code>false</code>.</simpara>\n      ",
                    "documentation": "\n         <p>Specifies whether a budget uses the amortized rate.</p>\n         <p>The default value is <code>false</code>.</p>\n      ",
                    "shape_name": "NullableBoolean"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The types of costs that are included in this <code>COST</code> budget.</simpara>\n         <simpara>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</simpara>\n      ",
                "documentation": "\n         <p>The types of costs that are included in this <code>COST</code> budget.</p>\n         <p>\n            <code>USAGE</code>, <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not have <code>CostTypes</code>.</p>\n      ",
                "shape_name": "CostTypes"
              },
              "TimeUnit": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</simpara>\n      ",
                "documentation": "\n         <p>The length of time until a budget resets the actual and forecasted spend.\n        <code>DAILY</code> is available only for <code>RI_UTILIZATION</code> and\n        <code>RI_COVERAGE</code> budgets.</p>\n      ",
                "enum": [
                  "DAILY",
                  "MONTHLY",
                  "QUARTERLY",
                  "ANNUALLY"
                ],
                "required": true,
                "shape_name": "TimeUnit"
              },
              "TimePeriod": {
                "type": "structure",
                "members": {
                  "Start": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</simpara>\n\t        <simpara>You can change your start date with the\n      <code>UpdateBudget</code> operation.</simpara>\n      ",
                    "documentation": "\n         <p>The start date for a budget. If you created your budget and didn't specify a start\n      date, AWS defaults to the start of your chosen time period (DAILY, MONTHLY, QUARTERLY, or\n      ANNUALLY). For example, if you created your budget on January 24, 2018, chose\n        <code>DAILY</code>, and didn't set a start date, AWS set your start date to <code>01/24/18\n        00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS set your start date to\n        <code>01/01/18 00:00 UTC</code>. The defaults are the same for the AWS Billing and Cost\n      Management console and the API.</p>\n\t        <p>You can change your start date with the\n      <code>UpdateBudget</code> operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  },
                  "End": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <simpara>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</simpara>\n      ",
                    "documentation": "\n         <p>The end date for a budget. If you didn't specify an end date, AWS set your end date to\n      <code>06/15/87 00:00 UTC</code>. The defaults are the same for the\n      AWS Billing and Cost Management console and the API.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers. You can change your end date with the <code>UpdateBudget</code> \n      operation.</p>\n      ",
                    "shape_name": "GenericTimestamp"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </simpara>\n         <simpara>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </simpara>\n         <simpara>You can change either date with the <code>UpdateBudget</code> operation.</simpara>\n         <simpara>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</simpara>\n      ",
                "documentation": "\n         <p>The period of time that is covered by a budget. The period has a start date and an end\n      date. The start date must come before the end date. The end date must come before <code>06/15/87 00:00 UTC</code>. </p>\n         <p>If you create your budget and don't specify a start date, AWS defaults to the start of\n      your chosen time period (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For example, if you created\n      your budget on January 24, 2018, chose <code>DAILY</code>, and didn't set a start date, AWS\n      set your start date to <code>01/24/18 00:00 UTC</code>. If you chose <code>MONTHLY</code>, AWS\n      set your start date to <code>01/01/18 00:00 UTC</code>. If you didn't specify an end date, AWS\n      set your end date to <code>06/15/87 00:00 UTC</code>. The defaults are the same for the AWS\n      Billing and Cost Management console and the API. </p>\n         <p>You can change either date with the <code>UpdateBudget</code> operation.</p>\n         <p>After the end date, AWS deletes the budget and all associated\n      notifications and subscribers.</p>\n      ",
                "shape_name": "TimePeriod"
              },
              "CalculatedSpend": {
                "type": "structure",
                "members": {
                  "ActualSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you have used.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you have used.</p>\n      ",
                    "required": true,
                    "shape_name": "Spend"
                  },
                  "ForecastedSpend": {
                    "type": "structure",
                    "members": {
                      "Amount": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</simpara>\n      ",
                        "documentation": "\n         <p>The cost or usage amount that is associated with a budget forecast, actual spend, or\n      budget threshold.</p>\n      ",
                        "pattern": "([0-9]*\\.)?[0-9]+",
                        "required": true,
                        "shape_name": "NumericValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      },
                      "Unit": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <simpara>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</simpara>\n      ",
                        "documentation": "\n         <p>The unit of measurement that is used for the budget forecast, actual spend, or budget\n      threshold, such as dollars or GB.</p>\n      ",
                        "pattern": ".*",
                        "required": true,
                        "shape_name": "UnitValue",
                        "min_length": 1,
                        "max_length": 2147483647
                      }
                    },
                    "zonbookDocumentation": "\n         <simpara>The amount of cost, usage, or RI units that you are forecasted to use.</simpara>\n      ",
                    "documentation": "\n         <p>The amount of cost, usage, or RI units that you are forecasted to use.</p>\n      ",
                    "shape_name": "Spend"
                  }
                },
                "zonbookDocumentation": "\n         <simpara>The actual and forecasted cost or usage that the budget tracks.</simpara>\n      ",
                "documentation": "\n         <p>The actual and forecasted cost or usage that the budget tracks.</p>\n      ",
                "shape_name": "CalculatedSpend"
              },
              "BudgetType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</simpara>\n      ",
                "documentation": "\n         <p>Whether this budget tracks monetary costs, usage, RI utilization, or RI coverage.</p>\n      ",
                "enum": [
                  "USAGE",
                  "COST",
                  "RI_UTILIZATION",
                  "RI_COVERAGE"
                ],
                "required": true,
                "shape_name": "BudgetType"
              },
              "LastUpdatedTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <simpara>The last time that you updated this budget.</simpara>\n      ",
                "documentation": "\n         <p>The last time that you updated this budget.</p>\n      ",
                "shape_name": "GenericTimestamp"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The budget that you want to update your budget to.</simpara>\n      ",
            "documentation": "\n         <p>The budget that you want to update your budget to.</p>\n      ",
            "required": true,
            "shape_name": "Budget"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of UpdateBudget </simpara>\n      ",
        "documentation": "\n         <p> Request of UpdateBudget </p>\n      ",
        "shape_name": "UpdateBudgetRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of UpdateBudget </simpara>\n      ",
        "documentation": "\n         <p> Response of UpdateBudget </p>\n      ",
        "shape_name": "UpdateBudgetResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        }
      ],
      "documentation": "\n         <p>Updates a budget. You can change every part of a budget except for the\n        <code>budgetName</code> and the <code>calculatedSpend</code>. When you modify a budget, the\n        <code>calculatedSpend</code> drops to zero until AWS has new usage data to use for\n      forecasting.</p>\n    \n      "
    },
    "UpdateNotification": {
      "name": "UpdateNotification",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose notification you\n      want to update.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose notification you\n      want to update.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose notification you want to update.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose notification you want to update.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "OldNotification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The previous notification that is associated with a budget.</simpara>\n      ",
            "documentation": "\n         <p>The previous notification that is associated with a budget.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "NewNotification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The updated notification to be associated with a budget.</simpara>\n      ",
            "documentation": "\n         <p>The updated notification to be associated with a budget.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of UpdateNotification </simpara>\n      ",
        "documentation": "\n         <p> Request of UpdateNotification </p>\n      ",
        "shape_name": "UpdateNotificationRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of UpdateNotification </simpara>\n      ",
        "documentation": "\n         <p> Response of UpdateNotification </p>\n      ",
        "shape_name": "UpdateNotificationResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The budget name already exists. Budget names must be unique within an account.</para>\n      ",
          "documentation": "\n         <p>The budget name already exists. Budget names must be unique within an account.</p>\n      ",
          "shape_name": "DuplicateRecordException"
        }
      ],
      "documentation": "\n         <p>Updates a notification.</p>\n    \n      "
    },
    "UpdateSubscriber": {
      "name": "UpdateSubscriber",
      "input": {
        "type": "structure",
        "members": {
          "AccountId": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The <code>accountId</code> that is associated with the budget whose subscriber you want\n      to update.</simpara>\n      ",
            "documentation": "\n         <p>The <code>accountId</code> that is associated with the budget whose subscriber you want\n      to update.</p>\n      ",
            "pattern": "\\d{12}",
            "required": true,
            "shape_name": "AccountId",
            "min_length": 12,
            "max_length": 12
          },
          "BudgetName": {
            "type": "string",
            "zonbookDocumentation": "\n         <simpara>The name of the budget whose subscriber you want to update.</simpara>\n      ",
            "documentation": "\n         <p>The name of the budget whose subscriber you want to update.</p>\n      ",
            "pattern": "[^:\\\\]+",
            "required": true,
            "shape_name": "BudgetName",
            "min_length": 1,
            "max_length": 100
          },
          "Notification": {
            "type": "structure",
            "members": {
              "NotificationType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</simpara>\n      ",
                "documentation": "\n         <p>Whether the notification is for how much you have spent (<code>ACTUAL</code>) or for\n      how much you're forecasted to spend (<code>FORECASTED</code>).</p>\n      ",
                "enum": [
                  "ACTUAL",
                  "FORECASTED"
                ],
                "required": true,
                "shape_name": "NotificationType"
              },
              "ComparisonOperator": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The comparison that is used for this notification.</simpara>\n      ",
                "documentation": "\n         <p>The comparison that is used for this notification.</p>\n      ",
                "enum": [
                  "GREATER_THAN",
                  "LESS_THAN",
                  "EQUAL_TO"
                ],
                "required": true,
                "shape_name": "ComparisonOperator"
              },
              "Threshold": {
                "type": "double",
                "zonbookDocumentation": "\n         <simpara>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</simpara>\n      ",
                "documentation": "\n         <p>The threshold that is associated with a notification. Thresholds are always a\n      percentage.</p>\n      ",
                "required": true,
                "shape_name": "NotificationThreshold",
                "min_length": 0,
                "max_length": 1000000000
              },
              "ThresholdType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</simpara>\n      ",
                "documentation": "\n         <p>The type of threshold for a notification. For <code>ABSOLUTE_VALUE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over your total cost threshold. For \n      <code>PERCENTAGE</code> thresholds, \n      AWS notifies you when you go\n      over or are forecasted to go over a certain percentage of your forecasted spend. For example, \n      if you have a budget for 200 dollars and you have a <code>PERCENTAGE</code> threshold of 80%,\n      AWS notifies you when you go over 160 dollars.</p>\n      ",
                "enum": [
                  "PERCENTAGE",
                  "ABSOLUTE_VALUE"
                ],
                "shape_name": "ThresholdType"
              },
              "NotificationState": {
                "type": "string",
                "enum": [
                  "OK",
                  "ALARM"
                ],
                "zonbookDocumentation": "\n         <simpara>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</simpara>\n      ",
                "documentation": "\n         <p>Whether this notification is in alarm. If a budget notification is in the\n        <code>ALARM</code> state, you have passed the set threshold for the budget.</p>\n      ",
                "shape_name": "NotificationState"
              }
            },
            "zonbookDocumentation": "\n         <simpara>The notification whose subscriber you want to update.</simpara>\n      ",
            "documentation": "\n         <p>The notification whose subscriber you want to update.</p>\n      ",
            "required": true,
            "shape_name": "Notification"
          },
          "OldSubscriber": {
            "type": "structure",
            "members": {
              "SubscriptionType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                "enum": [
                  "SNS",
                  "EMAIL"
                ],
                "required": true,
                "shape_name": "SubscriptionType"
              },
              "Address": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                "pattern": ".*",
                "sensitive": true,
                "required": true,
                "shape_name": "SubscriberAddress",
                "min_length": 1,
                "max_length": 2147483647
              }
            },
            "zonbookDocumentation": "\n         <simpara>The previous subscriber that is associated with a budget notification.</simpara>\n      ",
            "documentation": "\n         <p>The previous subscriber that is associated with a budget notification.</p>\n      ",
            "required": true,
            "shape_name": "Subscriber"
          },
          "NewSubscriber": {
            "type": "structure",
            "members": {
              "SubscriptionType": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The type of notification that AWS sends to a subscriber.</simpara>\n      ",
                "documentation": "\n         <p>The type of notification that AWS sends to a subscriber.</p>\n      ",
                "enum": [
                  "SNS",
                  "EMAIL"
                ],
                "required": true,
                "shape_name": "SubscriptionType"
              },
              "Address": {
                "type": "string",
                "zonbookDocumentation": "\n         <simpara>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</simpara>\n      ",
                "documentation": "\n         <p>The address that AWS sends budget notifications to, either an SNS topic or an\n      email.</p>\n      ",
                "pattern": ".*",
                "sensitive": true,
                "required": true,
                "shape_name": "SubscriberAddress",
                "min_length": 1,
                "max_length": 2147483647
              }
            },
            "zonbookDocumentation": "\n         <simpara>The updated subscriber that is associated with a budget notification.</simpara>\n      ",
            "documentation": "\n         <p>The updated subscriber that is associated with a budget notification.</p>\n      ",
            "required": true,
            "shape_name": "Subscriber"
          }
        },
        "zonbookDocumentation": "\n         <simpara> Request of UpdateSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Request of UpdateSubscriber </p>\n      ",
        "shape_name": "UpdateSubscriberRequest"
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "zonbookDocumentation": "\n         <simpara> Response of UpdateSubscriber </simpara>\n      ",
        "documentation": "\n         <p> Response of UpdateSubscriber </p>\n      ",
        "shape_name": "UpdateSubscriberResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the server occurred during the processing of your request. Try again later.</para>\n      ",
          "documentation": "\n         <p>An error on the server occurred during the processing of your request. Try again later.</p>\n      ",
          "shape_name": "InternalErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>An error on the client occurred. Typically, the cause is an invalid input value.</para>\n      ",
          "documentation": "\n         <p>An error on the client occurred. Typically, the cause is an invalid input value.</p>\n      ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>We can’t locate the resource that you specified.</para>\n      ",
          "documentation": "\n         <p>We can’t locate the resource that you specified.</p>\n      ",
          "shape_name": "NotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The error message the exception carries.</para>\n      ",
              "documentation": "\n         <p>The error message the exception carries.</p>\n      ",
              "shape_name": "errorMessage"
            }
          },
          "zonbookDocumentation": "\n         <para>The budget name already exists. Budget names must be unique within an account.</para>\n      ",
          "documentation": "\n         <p>The budget name already exists. Budget names must be unique within an account.</p>\n      ",
          "shape_name": "DuplicateRecordException"
        }
      ],
      "documentation": "\n         <p>Updates a subscriber.</p>\n    \n      "
    }
  }
}
