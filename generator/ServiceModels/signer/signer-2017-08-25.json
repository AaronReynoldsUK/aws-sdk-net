{
  "version": "1.0",
  "type": "rest-json",
  "json_version": 1.1,
  "signature_version": "v4",
  "service_full_name": "AWS Signer",
  "service_abbreviation": "signer",
  "signing_name": "signer",
  "service_id": "signer",
  "api_version": "2017-08-25",
  "endpoint_prefix": "signer",
  "uid": "signer-2017-08-25",
  "documentation": "\n\t\t       <p>You can use Code Signing for Amazon FreeRTOS (AWS Signer) to sign code that you created for any of the IoT\n\t\t\tdevices that Amazon Web Services supports. AWS Signer is integrated with Amazon FreeRTOS, AWS Certificate Manager,\n\t\t\tand AWS CloudTrail. Amazon FreeRTOS customers can use AWS Signer to sign code images before making\n\t\t\tthem available for microcontrollers. You can use ACM to import third-party\n\t\t\tcertificates to be used by AWS Signer. For general information about using AWS Signer, see\n\t\t\tthe <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">Code Signing for Amazon FreeRTOS Developer\n\t\t\tGuide</a>.</p>\n\t     ",
  "operations": {
    "StartSigningJob": {
      "name": "StartSigningJob",
      "http": {
        "method": "POST",
        "uri": "/signing-jobs"
      },
      "input": {
        "type": "structure",
        "members": {
          "source": {
            "type": "structure",
            "members": {
              "s3": {
                "type": "structure",
                "members": {
                  "bucketName": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                    "required": true,
                    "shape_name": "BucketName"
                  },
                  "key": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Key name of the bucket object that contains your unsigned code.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Key name of the bucket object that contains your unsigned code.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Key"
                  },
                  "version": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Version of your source image in your version enabled S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Version of your source image in your version enabled S3 bucket.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Version"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The <code>S3Source</code> object.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The <code>S3Source</code> object.</p>\n\t     ",
                "shape_name": "S3Source"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The S3 bucket that contains the object to sign or a BLOB that contains your raw\n\t\t\tcode.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The S3 bucket that contains the object to sign or a BLOB that contains your raw\n\t\t\tcode.</p>\n\t     ",
            "required": true,
            "shape_name": "Source"
          },
          "destination": {
            "type": "structure",
            "members": {
              "s3": {
                "type": "structure",
                "members": {
                  "bucketName": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                    "shape_name": "BucketName"
                  },
                  "prefix": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>An Amazon S3 prefix that you can use to limit responses to those that begin with the\n\t\t\tspecified prefix.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>An Amazon S3 prefix that you can use to limit responses to those that begin with the\n\t\t\tspecified prefix.</p>\n\t     ",
                    "shape_name": "Prefix"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The <code>S3Destination</code> object.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The <code>S3Destination</code> object.</p>\n\t     ",
                "shape_name": "S3Destination"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The S3 bucket in which to save your signed object. The destination contains the name\n\t\t\tof your bucket and an optional prefix.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The S3 bucket in which to save your signed object. The destination contains the name\n\t\t\tof your bucket and an optional prefix.</p>\n\t     ",
            "required": true,
            "shape_name": "Destination"
          },
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <para>The name of the signing profile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the signing profile.</p>\n\t     ",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          },
          "clientRequestToken": {
            "type": "string",
            "idempotencyToken": true,
            "zonbookDocumentation": "\n\t\t       <para>String that identifies the signing request. All calls after the first that use this\n\t\t\ttoken return the same response as the first call.</para>\n\t     ",
            "documentation": "\n\t\t       <p>String that identifies the signing request. All calls after the first that use this\n\t\t\ttoken return the same response as the first call.</p>\n\t     ",
            "required": true,
            "shape_name": "ClientRequestToken"
          }
        },
        "shape_name": "StartSigningJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of your signing job.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of your signing job.</p>\n\t     ",
            "shape_name": "JobId"
          }
        },
        "shape_name": "StartSigningJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Initiates a signing job to be performed on the code provided. Signing jobs are\n\t\t\tviewable by the <code>ListSigningJobs</code> operation for two years after they are\n\t\t\tperformed. Note the following requirements: </p>\n\n\t\t       <ul>\n            <li>\n\t\t\t\t           <p> You must create an Amazon S3 source bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\">Create a Bucket</a> in the\n\t\t\t\t\t\t<i>Amazon S3 Getting Started Guide</i>. </p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>Your S3 source bucket must be version enabled.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>You must create an S3 destination bucket. AWS Signer uses your S3 destination\n\t\t\t\t\tbucket to write your signed code.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>You specify the name of the source and destination buckets when calling the\n\t\t\t\t\t\t<code>StartSigningJob</code> operation.</p>\n\t\t\t         </li>\n            <li>\n\t\t\t\t           <p>You must also specify a request token that identifies your request to\n\t\t\t\t\tAWS Signer. </p>\n\t\t\t         </li>\n         </ul>\n\n\t\t       <p>You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions after you call\n\t\t\t<code>StartSigningJob</code>.</p>\n\n\t\t       <p>For a Java example that shows how to use this action, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">http://docs.aws.amazon.com/acm/latest/userguide/</a>\n         </p>\n\n\t\t\n\t     "
    },
    "ListSigningJobs": {
      "name": "ListSigningJobs",
      "http": {
        "method": "GET",
        "uri": "/signing-jobs?status={status}&platformId={platformId}&requestedBy={requestedBy}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "status": {
            "type": "string",
            "enum": [
              "InProgress",
              "Failed",
              "Succeeded"
            ],
            "zonbookDocumentation": "\n\t\t       <para>A status value with which to filter your results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A status value with which to filter your results.</p>\n\t     ",
            "location": "uri",
            "shape_name": "SigningStatus"
          },
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of microcontroller platform that you specified for the distribution of your\n\t\t\tcode image.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of microcontroller platform that you specified for the distribution of your\n\t\t\tcode image.</p>\n\t     ",
            "location": "uri",
            "shape_name": "PlatformId"
          },
          "requestedBy": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The IAM principal that requested the signing job.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IAM principal that requested the signing job.</p>\n\t     ",
            "location": "uri",
            "shape_name": "RequestedBy"
          },
          "maxResults": {
            "type": "integer",
            "box": true,
            "zonbookDocumentation": "\n\t\t       <para>Specifies the maximum number of items to return in the response. Use this parameter\n\t\t\twhen paginating results. If additional items exist beyond the number you specify, the\n\t\t\t\t<code>nextToken</code> element is set in the response. Use the\n\t\t\t\t<code>nextToken</code> value in a subsequent request to retrieve additional items.\n\t\t</para>\n\t     ",
            "documentation": "\n\t\t       <p>Specifies the maximum number of items to return in the response. Use this parameter\n\t\t\twhen paginating results. If additional items exist beyond the number you specify, the\n\t\t\t\t<code>nextToken</code> element is set in the response. Use the\n\t\t\t\t<code>nextToken</code> value in a subsequent request to retrieve additional items.\n\t\t</p>\n\t     ",
            "pageSize": true,
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 25
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>String for specifying the next set of paginated results to return. After you receive a\n\t\t\tresponse with truncated results, use this parameter in a subsequent request. Set it to\n\t\t\tthe value of <code>nextToken</code> from the response that you just received.</para>\n\t     ",
            "documentation": "\n\t\t       <p>String for specifying the next set of paginated results to return. After you receive a\n\t\t\tresponse with truncated results, use this parameter in a subsequent request. Set it to\n\t\t\tthe value of <code>nextToken</code> from the response that you just received.</p>\n\t     ",
            "paginationToken": true,
            "location": "uri",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSigningJobsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobs": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of your signing jobs.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of your signing jobs.</p>\n\t     ",
            "shape_name": "SigningJobs",
            "members": {
              "type": "structure",
              "members": {
                "jobId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the signing job.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the signing job.</p>\n\t     ",
                  "shape_name": "JobId"
                },
                "source": {
                  "type": "structure",
                  "members": {
                    "s3": {
                      "type": "structure",
                      "members": {
                        "bucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                          "required": true,
                          "shape_name": "BucketName"
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>Key name of the bucket object that contains your unsigned code.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Key name of the bucket object that contains your unsigned code.</p>\n\t     ",
                          "required": true,
                          "shape_name": "Key"
                        },
                        "version": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>Version of your source image in your version enabled S3 bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Version of your source image in your version enabled S3 bucket.</p>\n\t     ",
                          "required": true,
                          "shape_name": "Version"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The <code>S3Source</code> object.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The <code>S3Source</code> object.</p>\n\t     ",
                      "shape_name": "S3Source"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>A <code>Source</code> that contains information about a signing job's code image\n\t\t\tsource.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A <code>Source</code> that contains information about a signing job's code image\n\t\t\tsource.</p>\n\t     ",
                  "shape_name": "Source"
                },
                "signedObject": {
                  "type": "structure",
                  "members": {
                    "s3": {
                      "type": "structure",
                      "members": {
                        "bucketName": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                          "shape_name": "BucketName"
                        },
                        "key": {
                          "type": "string",
                          "zonbookDocumentation": "\n\t\t       <para>Key name that uniquely identifies a signed code image in your bucket.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>Key name that uniquely identifies a signed code image in your bucket.</p>\n\t     ",
                          "shape_name": "key"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The <code>S3SignedObject</code>.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The <code>S3SignedObject</code>.</p>\n\t     ",
                      "shape_name": "S3SignedObject"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>A <code>SignedObject</code> structure that contains information about a signing job's\n\t\t\tsigned code image.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A <code>SignedObject</code> structure that contains information about a signing job's\n\t\t\tsigned code image.</p>\n\t     ",
                  "shape_name": "SignedObject"
                },
                "signingMaterial": {
                  "type": "structure",
                  "members": {
                    "certificateArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</p>\n\t     ",
                      "required": true,
                      "shape_name": "CertificateArn"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of\n\t\t\tthe certificate used for the signing job.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of\n\t\t\tthe certificate used for the signing job.</p>\n\t     ",
                  "shape_name": "SigningMaterial"
                },
                "createdAt": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n\t\t       <para>The date and time that the signing job was created.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date and time that the signing job was created.</p>\n\t     ",
                  "shape_name": "CreatedAt"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "InProgress",
                    "Failed",
                    "Succeeded"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>The status of the signing job.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The status of the signing job.</p>\n\t     ",
                  "shape_name": "SigningStatus"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Contains information about a signing job.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Contains information about a signing job.</p>\n\t     ",
              "shape_name": "SigningJob"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>String for specifying the next set of paginated results.</para>\n\t     ",
            "documentation": "\n\t\t       <p>String for specifying the next set of paginated results.</p>\n\t     ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSigningJobsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists all your signing jobs. You can use the <code>maxResults</code> parameter to\n\t\t\tlimit the number of signing jobs that are returned in the response. If additional jobs\n\t\t\tremain to be listed, AWS Signer returns a <code>nextToken</code> value. Use this value in\n\t\t\tsubsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can\n\t\t\tcontinue calling <code>ListSigningJobs</code> with your <code>maxResults</code>\n\t\t\tparameter and with new values that AWS Signer returns in the <code>nextToken</code>\n\t\t\tparameter until all of your signing jobs have been returned. </p>\n\n\t\t\n\t     "
    },
    "DescribeSigningJob": {
      "name": "DescribeSigningJob",
      "http": {
        "method": "GET",
        "uri": "/signing-jobs/{jobId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the signing job on input.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the signing job on input.</p>\n\t     ",
            "location": "uri",
            "required": true,
            "shape_name": "JobId"
          }
        },
        "shape_name": "DescribeSigningJobRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "jobId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the signing job on output.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the signing job on output.</p>\n\t     ",
            "shape_name": "JobId"
          },
          "source": {
            "type": "structure",
            "members": {
              "s3": {
                "type": "structure",
                "members": {
                  "bucketName": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                    "required": true,
                    "shape_name": "BucketName"
                  },
                  "key": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Key name of the bucket object that contains your unsigned code.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Key name of the bucket object that contains your unsigned code.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Key"
                  },
                  "version": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Version of your source image in your version enabled S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Version of your source image in your version enabled S3 bucket.</p>\n\t     ",
                    "required": true,
                    "shape_name": "Version"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The <code>S3Source</code> object.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The <code>S3Source</code> object.</p>\n\t     ",
                "shape_name": "S3Source"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The object that contains the name of your S3 bucket or your raw code.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The object that contains the name of your S3 bucket or your raw code.</p>\n\t     ",
            "shape_name": "Source"
          },
          "signingMaterial": {
            "type": "structure",
            "members": {
              "certificateArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</p>\n\t     ",
                "required": true,
                "shape_name": "CertificateArn"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Amazon Resource Name (ARN) of your code signing certificate.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Amazon Resource Name (ARN) of your code signing certificate.</p>\n\t     ",
            "shape_name": "SigningMaterial"
          },
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The microcontroller platform to which your signed code image will be\n\t\t\tdistributed.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The microcontroller platform to which your signed code image will be\n\t\t\tdistributed.</p>\n\t     ",
            "shape_name": "PlatformId"
          },
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <para>The name of the profile that initiated the signing operation.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the profile that initiated the signing operation.</p>\n\t     ",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          },
          "overrides": {
            "type": "structure",
            "members": {
              "signingConfiguration": {
                "type": "structure",
                "members": {
                  "encryptionAlgorithm": {
                    "type": "string",
                    "enum": [
                      "RSA",
                      "ECDSA"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "EncryptionAlgorithm"
                  },
                  "hashAlgorithm": {
                    "type": "string",
                    "enum": [
                      "SHA1",
                      "SHA256"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "HashAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</p>\n\t     ",
                "shape_name": "SigningConfigurationOverrides"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>A list of any overrides that were applied to the signing operation.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of any overrides that were applied to the signing operation.</p>\n\t     ",
            "shape_name": "SigningPlatformOverrides"
          },
          "signingParameters": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <para>Map of user-assigned key-value pairs used during signing. These values contain any\n\t\t\tinformation that you specified for use in your signing job. </para>\n\t     ",
            "documentation": "\n\t\t       <p>Map of user-assigned key-value pairs used during signing. These values contain any\n\t\t\tinformation that you specified for use in your signing job. </p>\n\t     ",
            "shape_name": "SigningParameters",
            "keys": {
              "type": "string",
              "shape_name": "SigningParameterKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "SigningParameterValue",
              "documentation": null
            }
          },
          "createdAt": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <para>Date and time that the signing job was created.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Date and time that the signing job was created.</p>\n\t     ",
            "shape_name": "CreatedAt"
          },
          "completedAt": {
            "type": "timestamp",
            "zonbookDocumentation": "\n\t\t       <para>Date and time that the signing job was completed.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Date and time that the signing job was completed.</p>\n\t     ",
            "shape_name": "CompletedAt"
          },
          "requestedBy": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The IAM principal that requested the signing job.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IAM principal that requested the signing job.</p>\n\t     ",
            "shape_name": "RequestedBy"
          },
          "status": {
            "type": "string",
            "enum": [
              "InProgress",
              "Failed",
              "Succeeded"
            ],
            "zonbookDocumentation": "\n\t\t       <para>Status of the signing job.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Status of the signing job.</p>\n\t     ",
            "shape_name": "SigningStatus"
          },
          "statusReason": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>String value that contains the status reason.</para>\n\t     ",
            "documentation": "\n\t\t       <p>String value that contains the status reason.</p>\n\t     ",
            "shape_name": "StatusReason"
          },
          "signedObject": {
            "type": "structure",
            "members": {
              "s3": {
                "type": "structure",
                "members": {
                  "bucketName": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Name of the S3 bucket.</p>\n\t     ",
                    "shape_name": "BucketName"
                  },
                  "key": {
                    "type": "string",
                    "zonbookDocumentation": "\n\t\t       <para>Key name that uniquely identifies a signed code image in your bucket.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>Key name that uniquely identifies a signed code image in your bucket.</p>\n\t     ",
                    "shape_name": "key"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The <code>S3SignedObject</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The <code>S3SignedObject</code>.</p>\n\t     ",
                "shape_name": "S3SignedObject"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Name of the S3 bucket where the signed code image is saved by AWS Signer.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Name of the S3 bucket where the signed code image is saved by AWS Signer.</p>\n\t     ",
            "shape_name": "SignedObject"
          }
        },
        "shape_name": "DescribeSigningJobResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Returns information about a specific code signing job. You specify the job by using\n\t\t\tthe <code>jobId</code> value that is returned by the <a>StartSigningJob</a>\n\t\t\toperation. </p>\n\n\t\t\n\t     "
    },
    "GetSigningPlatform": {
      "name": "GetSigningPlatform",
      "http": {
        "method": "GET",
        "uri": "/signing-platforms/{platformId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the target signing platform.</p>\n\t     ",
            "location": "uri",
            "required": true,
            "shape_name": "PlatformId"
          }
        },
        "shape_name": "GetSigningPlatformRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the target signing platform.</p>\n\t     ",
            "shape_name": "PlatformId"
          },
          "displayName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The display name of the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The display name of the target signing platform.</p>\n\t     ",
            "shape_name": "DisplayName"
          },
          "partner": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A list of partner entities that use the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of partner entities that use the target signing platform.</p>\n\t     ",
            "shape_name": "String"
          },
          "target": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The validation template that is used by the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The validation template that is used by the target signing platform.</p>\n\t     ",
            "shape_name": "String"
          },
          "category": {
            "type": "string",
            "enum": [
              "AWSIoT"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The category type of the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The category type of the target signing platform.</p>\n\t     ",
            "shape_name": "Category"
          },
          "signingConfiguration": {
            "type": "structure",
            "members": {
              "encryptionAlgorithmOptions": {
                "type": "structure",
                "members": {
                  "allowedValues": {
                    "type": "list",
                    "zonbookDocumentation": "\n\t\t       <para>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "EncryptionAlgorithms",
                    "members": {
                      "type": "string",
                      "enum": [
                        "RSA",
                        "ECDSA"
                      ],
                      "shape_name": "EncryptionAlgorithm",
                      "documentation": null
                    }
                  },
                  "defaultValue": {
                    "type": "string",
                    "enum": [
                      "RSA",
                      "ECDSA"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>The default encryption algorithm that is used by an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The default encryption algorithm that is used by an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "EncryptionAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The encryption algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The encryption algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                "required": true,
                "shape_name": "EncryptionAlgorithmOptions"
              },
              "hashAlgorithmOptions": {
                "type": "structure",
                "members": {
                  "allowedValues": {
                    "type": "list",
                    "zonbookDocumentation": "\n\t\t       <para>The set of accepted hash algorithms allowed in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The set of accepted hash algorithms allowed in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "HashAlgorithms",
                    "members": {
                      "type": "string",
                      "enum": [
                        "SHA1",
                        "SHA256"
                      ],
                      "shape_name": "HashAlgorithm",
                      "documentation": null
                    }
                  },
                  "defaultValue": {
                    "type": "string",
                    "enum": [
                      "SHA1",
                      "SHA256"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>The default hash algorithm that is used in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The default hash algorithm that is used in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "HashAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The hash algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The hash algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                "required": true,
                "shape_name": "HashAlgorithmOptions"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>A list of configurations applied to the target platform at signing.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of configurations applied to the target platform at signing.</p>\n\t     ",
            "shape_name": "SigningConfiguration"
          },
          "signingImageFormat": {
            "type": "structure",
            "members": {
              "supportedFormats": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The supported formats of an AWS Signer signing image.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The supported formats of an AWS Signer signing image.</p>\n\t     ",
                "required": true,
                "shape_name": "ImageFormats",
                "members": {
                  "type": "string",
                  "enum": [
                    "JSON"
                  ],
                  "shape_name": "ImageFormat",
                  "documentation": null
                }
              },
              "defaultFormat": {
                "type": "string",
                "enum": [
                  "JSON"
                ],
                "zonbookDocumentation": "\n\t\t       <para>The default format of an AWS Signer signing image.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The default format of an AWS Signer signing image.</p>\n\t     ",
                "required": true,
                "shape_name": "ImageFormat"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The format of the target platform's signing image.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The format of the target platform's signing image.</p>\n\t     ",
            "shape_name": "SigningImageFormat"
          },
          "maxSizeInMB": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum size (in MB) of the payload that can be signed by the target\n\t\t\tplatform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum size (in MB) of the payload that can be signed by the target\n\t\t\tplatform.</p>\n\t     ",
            "shape_name": "MaxSizeInMB"
          }
        },
        "shape_name": "GetSigningPlatformResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Returns information on a specific signing platform.</p>\n\t     "
    },
    "CreateSigningPlatform": {
      "name": "CreateSigningPlatform",
      "http": {
        "method": "POST",
        "uri": "/signing-platforms"
      },
      "input": {
        "type": "structure",
        "members": {
          "platformId": {
            "type": "string",
            "shape_name": "PlatformId",
            "documentation": null
          },
          "displayName": {
            "type": "string",
            "required": true,
            "shape_name": "DisplayName",
            "documentation": null
          },
          "partner": {
            "type": "string",
            "required": true,
            "shape_name": "String",
            "documentation": null
          },
          "target": {
            "type": "string",
            "required": true,
            "shape_name": "String",
            "documentation": null
          },
          "category": {
            "type": "string",
            "enum": [
              "AWSIoT"
            ],
            "required": true,
            "shape_name": "Category",
            "documentation": null
          },
          "signingConfiguration": {
            "type": "structure",
            "members": {
              "encryptionAlgorithmOptions": {
                "type": "structure",
                "members": {
                  "allowedValues": {
                    "type": "list",
                    "zonbookDocumentation": "\n\t\t       <para>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "EncryptionAlgorithms",
                    "members": {
                      "type": "string",
                      "enum": [
                        "RSA",
                        "ECDSA"
                      ],
                      "shape_name": "EncryptionAlgorithm",
                      "documentation": null
                    }
                  },
                  "defaultValue": {
                    "type": "string",
                    "enum": [
                      "RSA",
                      "ECDSA"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>The default encryption algorithm that is used by an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The default encryption algorithm that is used by an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "EncryptionAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The encryption algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The encryption algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                "required": true,
                "shape_name": "EncryptionAlgorithmOptions"
              },
              "hashAlgorithmOptions": {
                "type": "structure",
                "members": {
                  "allowedValues": {
                    "type": "list",
                    "zonbookDocumentation": "\n\t\t       <para>The set of accepted hash algorithms allowed in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The set of accepted hash algorithms allowed in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "HashAlgorithms",
                    "members": {
                      "type": "string",
                      "enum": [
                        "SHA1",
                        "SHA256"
                      ],
                      "shape_name": "HashAlgorithm",
                      "documentation": null
                    }
                  },
                  "defaultValue": {
                    "type": "string",
                    "enum": [
                      "SHA1",
                      "SHA256"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>The default hash algorithm that is used in an AWS Signer job.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>The default hash algorithm that is used in an AWS Signer job.</p>\n\t     ",
                    "required": true,
                    "shape_name": "HashAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>The hash algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The hash algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                "required": true,
                "shape_name": "HashAlgorithmOptions"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The configuration of an AWS Signer operation.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The configuration of an AWS Signer operation.</p>\n\t     ",
            "required": true,
            "shape_name": "SigningConfiguration"
          },
          "signingImageFormat": {
            "type": "structure",
            "members": {
              "supportedFormats": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The supported formats of an AWS Signer signing image.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The supported formats of an AWS Signer signing image.</p>\n\t     ",
                "required": true,
                "shape_name": "ImageFormats",
                "members": {
                  "type": "string",
                  "enum": [
                    "JSON"
                  ],
                  "shape_name": "ImageFormat",
                  "documentation": null
                }
              },
              "defaultFormat": {
                "type": "string",
                "enum": [
                  "JSON"
                ],
                "zonbookDocumentation": "\n\t\t       <para>The default format of an AWS Signer signing image.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The default format of an AWS Signer signing image.</p>\n\t     ",
                "required": true,
                "shape_name": "ImageFormat"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The image format of an AWS Signer platform or profile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The image format of an AWS Signer platform or profile.</p>\n\t     ",
            "required": true,
            "shape_name": "SigningImageFormat"
          },
          "maxSizeInMB": {
            "type": "integer",
            "shape_name": "MaxSizeInMB",
            "documentation": null
          }
        },
        "shape_name": "CreateSigningPlatformRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "platformId": {
            "type": "string",
            "shape_name": "PlatformId",
            "documentation": null
          }
        },
        "shape_name": "CreateSigningPlatformResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": null
    },
    "DeleteSigningPlatform": {
      "name": "DeleteSigningPlatform",
      "http": {
        "method": "DELETE",
        "uri": "/signing-platforms/{platformId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "platformId": {
            "type": "string",
            "location": "uri",
            "required": true,
            "shape_name": "PlatformId",
            "documentation": null
          }
        },
        "shape_name": "DeleteSigningPlatformRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": null
    },
    "PutSigningProfile": {
      "name": "PutSigningProfile",
      "http": {
        "method": "PUT",
        "uri": "/signing-profiles/{profileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <para>The name of the signing profile to be created.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the signing profile to be created.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          },
          "signingMaterial": {
            "type": "structure",
            "members": {
              "certificateArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</p>\n\t     ",
                "required": true,
                "shape_name": "CertificateArn"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The AWS Certificate Manager certificate that will be used to sign code with the new signing\n\t\t\tprofile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The AWS Certificate Manager certificate that will be used to sign code with the new signing\n\t\t\tprofile.</p>\n\t     ",
            "required": true,
            "shape_name": "SigningMaterial"
          },
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the signing profile to be created.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the signing profile to be created.</p>\n\t     ",
            "required": true,
            "shape_name": "PlatformId"
          },
          "overrides": {
            "type": "structure",
            "members": {
              "signingConfiguration": {
                "type": "structure",
                "members": {
                  "encryptionAlgorithm": {
                    "type": "string",
                    "enum": [
                      "RSA",
                      "ECDSA"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "EncryptionAlgorithm"
                  },
                  "hashAlgorithm": {
                    "type": "string",
                    "enum": [
                      "SHA1",
                      "SHA256"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "HashAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</p>\n\t     ",
                "shape_name": "SigningConfigurationOverrides"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>A subfield of <code>platform</code>. This specifies any different configuration\n\t\t\toptions that you want to apply to the chosen platform (such as a different\n\t\t\t\t<code>hash-algorithm</code> or <code>signing-algorithm</code>).</para>\n\t     ",
            "documentation": "\n\t\t       <p>A subfield of <code>platform</code>. This specifies any different configuration\n\t\t\toptions that you want to apply to the chosen platform (such as a different\n\t\t\t\t<code>hash-algorithm</code> or <code>signing-algorithm</code>).</p>\n\t     ",
            "shape_name": "SigningPlatformOverrides"
          },
          "signingParameters": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <para>Map of key-value pairs for signing. These can include any information that you want to\n\t\t\tuse during signing.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Map of key-value pairs for signing. These can include any information that you want to\n\t\t\tuse during signing.</p>\n\t     ",
            "shape_name": "SigningParameters",
            "keys": {
              "type": "string",
              "shape_name": "SigningParameterKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "SigningParameterValue",
              "documentation": null
            }
          }
        },
        "shape_name": "PutSigningProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "arn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the signing profile created.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the signing profile created.</p>\n\t     ",
            "shape_name": "string"
          }
        },
        "shape_name": "PutSigningProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a signing profile. A signing profile is an AWS Signer template that can be used\n\t\t\tto carry out a pre-defined signing job. For more information, see <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html\">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a>\n         </p>\n\t     "
    },
    "GetSigningProfile": {
      "name": "GetSigningProfile",
      "http": {
        "method": "GET",
        "uri": "/signing-profiles/{profileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <para>The name of the target signing profile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the target signing profile.</p>\n\t     ",
            "required": true,
            "location": "uri",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          }
        },
        "shape_name": "GetSigningProfileRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <simpara>The name of the target signing profile.</simpara>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the target signing profile.</p>\n\t     ",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          },
          "signingMaterial": {
            "type": "structure",
            "members": {
              "certificateArn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</p>\n\t     ",
                "required": true,
                "shape_name": "CertificateArn"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The ARN of the certificate that the target profile uses for signing operations.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ARN of the certificate that the target profile uses for signing operations.</p>\n\t     ",
            "shape_name": "SigningMaterial"
          },
          "platformId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the platform that is used by the target signing profile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the platform that is used by the target signing profile.</p>\n\t     ",
            "shape_name": "PlatformId"
          },
          "overrides": {
            "type": "structure",
            "members": {
              "signingConfiguration": {
                "type": "structure",
                "members": {
                  "encryptionAlgorithm": {
                    "type": "string",
                    "enum": [
                      "RSA",
                      "ECDSA"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default encryption algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "EncryptionAlgorithm"
                  },
                  "hashAlgorithm": {
                    "type": "string",
                    "enum": [
                      "SHA1",
                      "SHA256"
                    ],
                    "zonbookDocumentation": "\n\t\t       <para>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>A specified override of the default hash algorithm that is used in an AWS Signer\n\t\t\tjob.</p>\n\t     ",
                    "shape_name": "HashAlgorithm"
                  }
                },
                "zonbookDocumentation": "\n\t\t       <para>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A signing configuration that overrides the default encryption or hash algorithm of a\n\t\t\tsigning job.</p>\n\t     ",
                "shape_name": "SigningConfigurationOverrides"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>A list of overrides applied by the target signing profile for signing\n\t\t\toperations.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of overrides applied by the target signing profile for signing\n\t\t\toperations.</p>\n\t     ",
            "shape_name": "SigningPlatformOverrides"
          },
          "signingParameters": {
            "type": "map",
            "zonbookDocumentation": "\n\t\t       <para>A map of key-value pairs for signing operations that is attached to the target signing\n\t\t\tprofile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A map of key-value pairs for signing operations that is attached to the target signing\n\t\t\tprofile.</p>\n\t     ",
            "shape_name": "SigningParameters",
            "keys": {
              "type": "string",
              "shape_name": "SigningParameterKey",
              "documentation": null
            },
            "members": {
              "type": "string",
              "shape_name": "SigningParameterValue",
              "documentation": null
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Canceled"
            ],
            "zonbookDocumentation": "\n\t\t       <para>The status of the target signing profile.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The status of the target signing profile.</p>\n\t     ",
            "shape_name": "SigningProfileStatus"
          }
        },
        "shape_name": "GetSigningProfileResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Returns information on a specific signing profile.</p>\n\t     "
    },
    "ListSigningProfiles": {
      "name": "ListSigningProfiles",
      "http": {
        "method": "GET",
        "uri": "/signing-profiles?includeCanceled={includeCanceled}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "includeCanceled": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>Designates whether to include profiles with the status of\n\t\t\t<code>CANCELED</code>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Designates whether to include profiles with the status of\n\t\t\t<code>CANCELED</code>.</p>\n\t     ",
            "location": "uri",
            "shape_name": "bool"
          },
          "maxResults": {
            "type": "integer",
            "box": true,
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of profiles to be returned.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of profiles to be returned.</p>\n\t     ",
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 25
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Value for specifying the next set of paginated results to return. After you receive a\n\t\t\tresponse with truncated results, use this parameter in a subsequent request. Set it to\n\t\t\tthe value of <code>nextToken</code> from the response that you just received.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Value for specifying the next set of paginated results to return. After you receive a\n\t\t\tresponse with truncated results, use this parameter in a subsequent request. Set it to\n\t\t\tthe value of <code>nextToken</code> from the response that you just received.</p>\n\t     ",
            "location": "uri",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSigningProfilesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "profiles": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of profiles that are available in the AWS account. This includes profiles with\n\t\t\tthe status of <code>CANCELED</code> if the <code>includeCanceled</code> parameter is set\n\t\t\tto <code>true</code>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of profiles that are available in the AWS account. This includes profiles with\n\t\t\tthe status of <code>CANCELED</code> if the <code>includeCanceled</code> parameter is set\n\t\t\tto <code>true</code>.</p>\n\t     ",
            "shape_name": "SigningProfiles",
            "members": {
              "type": "structure",
              "members": {
                "profileName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]{2,}",
                  "zonbookDocumentation": "\n\t\t       <para>The name of the AWS Signer profile.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of the AWS Signer profile.</p>\n\t     ",
                  "shape_name": "ProfileName",
                  "min_length": 2,
                  "max_length": 20
                },
                "signingMaterial": {
                  "type": "structure",
                  "members": {
                    "certificateArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the certificates that is used to sign your\n\t\t\tcode.</p>\n\t     ",
                      "required": true,
                      "shape_name": "CertificateArn"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The ACM certificate that is available for use by a signing profile.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ACM certificate that is available for use by a signing profile.</p>\n\t     ",
                  "shape_name": "SigningMaterial"
                },
                "platformId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of a platform that is available for use by a signing profile.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of a platform that is available for use by a signing profile.</p>\n\t     ",
                  "shape_name": "PlatformId"
                },
                "signingParameters": {
                  "type": "map",
                  "zonbookDocumentation": "\n\t\t       <para>The parameters that are available for use by an AWS Signer user.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The parameters that are available for use by an AWS Signer user.</p>\n\t     ",
                  "shape_name": "SigningParameters",
                  "keys": {
                    "type": "string",
                    "shape_name": "SigningParameterKey",
                    "documentation": null
                  },
                  "members": {
                    "type": "string",
                    "shape_name": "SigningParameterValue",
                    "documentation": null
                  }
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Active",
                    "Canceled"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>The status of an AWS Signer profile.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The status of an AWS Signer profile.</p>\n\t     ",
                  "shape_name": "SigningProfileStatus"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Contains information about the ACM certificates and AWS Signer configuration\n\t\t\tparameters that can be used by a given AWS Signer user.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Contains information about the ACM certificates and AWS Signer configuration\n\t\t\tparameters that can be used by a given AWS Signer user.</p>\n\t     ",
              "shape_name": "SigningProfile"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Value for specifying the next set of paginated results to return.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Value for specifying the next set of paginated results to return.</p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListSigningProfilesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists all available signing profiles in your AWS account. Returns only profiles with\n\t\t\tan <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field is\n\t\t\tset to <code>true</code>. If additional jobs remain to be listed, AWS Signer returns a\n\t\t\t\t<code>nextToken</code> value. Use this value in subsequent calls to\n\t\t\t\t<code>ListSigningJobs</code> to fetch the remaining values. You can continue calling\n\t\t\t\t<code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with\n\t\t\tnew values that AWS Signer returns in the <code>nextToken</code> parameter until all of\n\t\t\tyour signing jobs have been returned.</p>\n\t     "
    },
    "CancelSigningProfile": {
      "name": "CancelSigningProfile",
      "http": {
        "method": "DELETE",
        "uri": "/signing-profiles/{profileName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "profileName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]{2,}",
            "zonbookDocumentation": "\n\t\t       <para>The name of the signing profile to be canceled.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the signing profile to be canceled.</p>\n\t     ",
            "location": "uri",
            "shape_name": "ProfileName",
            "min_length": 2,
            "max_length": 20
          }
        },
        "shape_name": "CancelSigningProfileRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>A specified resource could not be found.</para>\n\t     ",
          "documentation": "\n\t\t       <p>A specified resource could not be found.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>.\n\t\t\tA canceled profile is still viewable with the <code>ListSigningProfiles</code>\n\t\t\toperation, but it cannot perform new signing jobs, and is deleted two years after\n\t\t\tcancelation.</p>\n\t     "
    },
    "ListSigningPlatforms": {
      "name": "ListSigningPlatforms",
      "http": {
        "method": "GET",
        "uri": "/signing-platforms?category={category}&partner={partner}&target={target}&maxResults={maxResults}&nextToken={nextToken}"
      },
      "input": {
        "type": "structure",
        "members": {
          "category": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The category type of a signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The category type of a signing platform.</p>\n\t     ",
            "location": "uri",
            "shape_name": "String"
          },
          "partner": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Any partner entities connected to a signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Any partner entities connected to a signing platform.</p>\n\t     ",
            "location": "uri",
            "shape_name": "String"
          },
          "target": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The validation template that is used by the target signing platform.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The validation template that is used by the target signing platform.</p>\n\t     ",
            "location": "uri",
            "shape_name": "String"
          },
          "maxResults": {
            "type": "integer",
            "box": true,
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of results to be returned by this operation.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of results to be returned by this operation.</p>\n\t     ",
            "pageSize": true,
            "location": "uri",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 25
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Value\n\t\t\tfor specifying the next set of paginated results to return. After you receive a response\n\t\t\twith truncated results, use this parameter in a subsequent request. Set it to the value\n\t\t\tof <code>nextToken</code> from the response that you just\n\t\treceived.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Value\n\t\t\tfor specifying the next set of paginated results to return. After you receive a response\n\t\t\twith truncated results, use this parameter in a subsequent request. Set it to the value\n\t\t\tof <code>nextToken</code> from the response that you just\n\t\treceived.</p>\n\t     ",
            "paginationToken": true,
            "location": "uri",
            "shape_name": "String"
          }
        },
        "shape_name": "ListSigningPlatformsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "platforms": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of all platforms that match the request parameters.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of all platforms that match the request parameters.</p>\n\t     ",
            "shape_name": "SigningPlatforms",
            "members": {
              "type": "structure",
              "members": {
                "platformId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "String"
                },
                "displayName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The display name of an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The display name of an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "String"
                },
                "partner": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>Any partner entities linked to an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Any partner entities linked to an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "String"
                },
                "target": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The types of targets that can be signed by an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The types of targets that can be signed by an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "String"
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "AWSIoT"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>The category of an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The category of an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "Category"
                },
                "signingConfiguration": {
                  "type": "structure",
                  "members": {
                    "encryptionAlgorithmOptions": {
                      "type": "structure",
                      "members": {
                        "allowedValues": {
                          "type": "list",
                          "zonbookDocumentation": "\n\t\t       <para>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The set of accepted encryption algorithms that are allowed in an AWS Signer job.</p>\n\t     ",
                          "required": true,
                          "shape_name": "EncryptionAlgorithms",
                          "members": {
                            "type": "string",
                            "enum": [
                              "RSA",
                              "ECDSA"
                            ],
                            "shape_name": "EncryptionAlgorithm",
                            "documentation": null
                          }
                        },
                        "defaultValue": {
                          "type": "string",
                          "enum": [
                            "RSA",
                            "ECDSA"
                          ],
                          "zonbookDocumentation": "\n\t\t       <para>The default encryption algorithm that is used by an AWS Signer job.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The default encryption algorithm that is used by an AWS Signer job.</p>\n\t     ",
                          "required": true,
                          "shape_name": "EncryptionAlgorithm"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The encryption algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The encryption algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                      "required": true,
                      "shape_name": "EncryptionAlgorithmOptions"
                    },
                    "hashAlgorithmOptions": {
                      "type": "structure",
                      "members": {
                        "allowedValues": {
                          "type": "list",
                          "zonbookDocumentation": "\n\t\t       <para>The set of accepted hash algorithms allowed in an AWS Signer job.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The set of accepted hash algorithms allowed in an AWS Signer job.</p>\n\t     ",
                          "required": true,
                          "shape_name": "HashAlgorithms",
                          "members": {
                            "type": "string",
                            "enum": [
                              "SHA1",
                              "SHA256"
                            ],
                            "shape_name": "HashAlgorithm",
                            "documentation": null
                          }
                        },
                        "defaultValue": {
                          "type": "string",
                          "enum": [
                            "SHA1",
                            "SHA256"
                          ],
                          "zonbookDocumentation": "\n\t\t       <para>The default hash algorithm that is used in an AWS Signer job.</para>\n\t     ",
                          "documentation": "\n\t\t       <p>The default hash algorithm that is used in an AWS Signer job.</p>\n\t     ",
                          "required": true,
                          "shape_name": "HashAlgorithm"
                        }
                      },
                      "zonbookDocumentation": "\n\t\t       <para>The hash algorithm options that are available for an AWS Signer job.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The hash algorithm options that are available for an AWS Signer job.</p>\n\t     ",
                      "required": true,
                      "shape_name": "HashAlgorithmOptions"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The configuration of an AWS Signer platform. This includes the designated hash algorithm\n\t\t\tand encryption algorithm of a signing platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The configuration of an AWS Signer platform. This includes the designated hash algorithm\n\t\t\tand encryption algorithm of a signing platform.</p>\n\t     ",
                  "shape_name": "SigningConfiguration"
                },
                "signingImageFormat": {
                  "type": "structure",
                  "members": {
                    "supportedFormats": {
                      "type": "list",
                      "zonbookDocumentation": "\n\t\t       <para>The supported formats of an AWS Signer signing image.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The supported formats of an AWS Signer signing image.</p>\n\t     ",
                      "required": true,
                      "shape_name": "ImageFormats",
                      "members": {
                        "type": "string",
                        "enum": [
                          "JSON"
                        ],
                        "shape_name": "ImageFormat",
                        "documentation": null
                      }
                    },
                    "defaultFormat": {
                      "type": "string",
                      "enum": [
                        "JSON"
                      ],
                      "zonbookDocumentation": "\n\t\t       <para>The default format of an AWS Signer signing image.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The default format of an AWS Signer signing image.</p>\n\t     ",
                      "required": true,
                      "shape_name": "ImageFormat"
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>The signing image format that is used by an AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The signing image format that is used by an AWS Signer platform.</p>\n\t     ",
                  "shape_name": "SigningImageFormat"
                },
                "maxSizeInMB": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The maximum size (in MB) of code that can be signed by a AWS Signer platform.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The maximum size (in MB) of code that can be signed by a AWS Signer platform.</p>\n\t     ",
                  "shape_name": "MaxSizeInMB"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>Contains information about the signing configurations and parameters that is used to\n\t\t\tperform an AWS Signer job.</para>\n\t     ",
              "documentation": "\n\t\t       <p>Contains information about the signing configurations and parameters that is used to\n\t\t\tperform an AWS Signer job.</p>\n\t     ",
              "shape_name": "SigningPlatform"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Value for specifying the next set of paginated results to return.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Value for specifying the next set of paginated results to return.</p>\n\t     ",
            "paginationToken": true,
            "shape_name": "String"
          }
        },
        "shape_name": "ListSigningPlatformsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You signing certificate could not be validated.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You signing certificate could not be validated.</p>\n\t     ",
          "shape_name": "ValidationException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>You do not have sufficient access to perform this action.</para>\n\t     ",
          "documentation": "\n\t\t       <p>You do not have sufficient access to perform this action.</p>\n\t     ",
          "shape_name": "AccessDeniedException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The signing job has been throttled.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The signing job has been throttled.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "ErrorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>An internal error occurred.</para>\n\t     ",
          "documentation": "\n\t\t       <p>An internal error occurred.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists all signing platforms available in AWS Signer that match the request parameters.\n\t\t\tIf additional jobs remain to be listed, AWS Signer returns a <code>nextToken</code> value.\n\t\t\tUse this value in subsequent calls to <code>ListSigningJobs</code> to fetch the\n\t\t\tremaining values. You can continue calling <code>ListSigningJobs</code> with your\n\t\t\t\t<code>maxResults</code> parameter and with new values that AWS Signer returns in the\n\t\t\t\t<code>nextToken</code> parameter until all of your signing jobs have been\n\t\t\treturned.</p>\n\t     "
    }
  }
}
