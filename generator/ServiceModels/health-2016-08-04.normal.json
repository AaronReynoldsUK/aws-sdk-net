{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2016-08-04",
    "endpointPrefix":"health",
    "jsonVersion":"1.1",
    "protocol":"json",
    "serviceAbbreviation":"AWSHealth",
    "serviceFullName":"AWS Health APIs and Notifications",
    "signatureVersion":"v4",
    "targetPrefix":"AWSHealth_20160804",
    "uid":"health-2016-08-04"
  },
  "operations":{
    "DescribeAffectedEntities":{
      "name":"DescribeAffectedEntities",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAffectedEntitiesRequest"},
      "output":{"shape":"DescribeAffectedEntitiesResponse"},
      "errors":[
        {"shape":"InvalidPaginationToken"},
        {"shape":"UnsupportedLocale"}
      ],
      "documentation":"<p>Gets a list of entities that have been attached to events, based on the specified filter criteria. Entities can refer to individual customer resources, groups of customer resources, or any other construct, depending on the AWS service. Events that have impact beyond that of the attached entities, or where the extent of impact is unknown, include at least one entity indicating this. If no filter criteria are specified, all entities are returned. Results are sorted by the <code>lastUpdatedTime</code> of the entity, starting with the most recent.</p>",
      "idempotent":true
    },
    "DescribeEntityAggregates":{
      "name":"DescribeEntityAggregates",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEntityAggregatesRequest"},
      "output":{"shape":"DescribeEntityAggregatesResponse"},
      "documentation":"<p></p>",
      "idempotent":true
    },
    "DescribeEventAggregates":{
      "name":"DescribeEventAggregates",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEventAggregatesRequest"},
      "output":{"shape":"DescribeEventAggregatesResponse"},
      "errors":[
        {"shape":"InvalidPaginationToken"}
      ],
      "documentation":"<p></p>",
      "idempotent":true
    },
    "DescribeEventDetails":{
      "name":"DescribeEventDetails",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEventDetailsRequest"},
      "output":{"shape":"DescribeEventDetailsResponse"},
      "errors":[
        {"shape":"UnsupportedLocale"}
      ],
      "documentation":"<p>Gets detailed event information (excluding AffectedEntities) of an event that is affecting/has affected the caller. This will include a detailed description pertaining to the event, as well as any public metadata provided by the service-team that created the event.</p>",
      "idempotent":true
    },
    "DescribeEventTypes":{
      "name":"DescribeEventTypes",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEventTypesRequest"},
      "output":{"shape":"DescribeEventTypesResponse"},
      "errors":[
        {"shape":"InvalidPaginationToken"},
        {"shape":"UnsupportedLocale"}
      ],
      "documentation":"<p>Gets a list of the event types that can be reported by Silvermine, based on the specified filter criteria. If no filter criteria are specified, all event types are returned, in no particular order.</p>",
      "idempotent":true
    },
    "DescribeEvents":{
      "name":"DescribeEvents",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeEventsRequest"},
      "output":{"shape":"DescribeEventsResponse"},
      "errors":[
        {"shape":"InvalidPaginationToken"},
        {"shape":"UnsupportedLocale"}
      ],
      "documentation":"<p>Gets a list of events, based on the specified filter criteria. Events are returned in a summary form and do not include attached resources (if they exist) nor publicly exposed metadata included by the service-team that posted the event. Filters allow for a single event to be retrieved, or multiple events matching the provided criteria. If no filter criteria are specified, all events are returned. Results are sorted by <code>lastModifiedTime</code>, starting with the the most recent.</p>",
      "idempotent":true
    }
  },
  "shapes":{
    "AffectedEntity":{
      "type":"structure",
      "members":{
        "entityArn":{
          "shape":"entityArn",
          "documentation":"<p></p>"
        },
        "eventArn":{
          "shape":"eventArn",
          "documentation":"<p>The unique identifier for the event. Format: <code>arn:aws:silvermine:<i>event-region</i>::event/<i>EVENT_ID</i> </code>. Example: <code>arn:aws:silvermine:us-east-1::event/EC2_MAINTENANCE_5331</code> </p>"
        },
        "entityValue":{
          "shape":"entityValue",
          "documentation":"<p></p>"
        },
        "awsAccountId":{
          "shape":"accountId",
          "documentation":"<p></p>"
        },
        "lastUpdatedTime":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        },
        "statusCode":{
          "shape":"entityStatusCode",
          "documentation":"<p>The most recent status of this entity with respect to the given event. Valid return values: IMPAIRED, UNIMPAIRED, UNKNOWN</p>"
        },
        "tags":{
          "shape":"tagSet",
          "documentation":"<p>A map of entity tags attached to the affected entity.</p>"
        }
      },
      "documentation":"<p>Affected Entity Information.</p>"
    },
    "DateTimeRange":{
      "type":"structure",
      "members":{
        "from":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        },
        "to":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>The date and time range for the timestamp field. If \"from\" is set and \"to\" is set: match records where the timestmp between \"from\" and \"to\" inclusive. If \"from\" is set and \"to\" is not set: match records which the timestamp value after is equal or after \"from\". If \"from\" is not set and \"to\" is set: match records where the timestamp value is equal or before \"to\".</p>"
    },
    "DescribeAffectedEntitiesRequest":{
      "type":"structure",
      "required":["filter"],
      "members":{
        "filter":{
          "shape":"EntityFilter",
          "documentation":"<p></p>"
        },
        "locale":{
          "shape":"locale",
          "documentation":"<p>The locale (language) to return information in.</p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        },
        "maxResults":{
          "shape":"maxResults",
          "documentation":"<p>The maximum number of items to return in one batch.</p>"
        }
      }
    },
    "DescribeAffectedEntitiesResponse":{
      "type":"structure",
      "members":{
        "entities":{
          "shape":"EntityList",
          "documentation":"<p></p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        }
      }
    },
    "DescribeEntityAggregatesRequest":{
      "type":"structure",
      "members":{
        "eventArns":{
          "shape":"EventArnsList",
          "documentation":"<p>A list of event ARNs (unique identifiers). For example: <code>arn:aws:silvermine:<i>region</i>:<i>service</i>:event/<i>123453434</i> </code>.)</p>"
        }
      }
    },
    "DescribeEntityAggregatesResponse":{
      "type":"structure",
      "members":{
        "entityAggregates":{
          "shape":"EntityAggregateList",
          "documentation":"<p></p>"
        }
      }
    },
    "DescribeEventAggregatesRequest":{
      "type":"structure",
      "required":["aggregateField"],
      "members":{
        "filter":{
          "shape":"EventFilter",
          "documentation":"<p></p>"
        },
        "aggregateField":{
          "shape":"eventAggregateField",
          "documentation":"<p></p>"
        },
        "maxResults":{
          "shape":"maxResults",
          "documentation":"<p>The maximum number of items to return in one batch.</p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        }
      }
    },
    "DescribeEventAggregatesResponse":{
      "type":"structure",
      "members":{
        "eventAggregates":{
          "shape":"EventAggregateList",
          "documentation":"<p></p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        }
      }
    },
    "DescribeEventDetailsFailedSet":{
      "type":"list",
      "member":{"shape":"EventDetailsErrorItem"}
    },
    "DescribeEventDetailsRequest":{
      "type":"structure",
      "required":["eventArns"],
      "members":{
        "eventArns":{
          "shape":"eventArnList",
          "documentation":"<p>A list of event ARNs (unique identifiers). For example: <code>arn:aws:silvermine:<i>region</i>:<i>service</i>:event/<i>123453434</i> </code>.)</p>"
        },
        "locale":{
          "shape":"locale",
          "documentation":"<p>The locale (language) to return information in.</p>"
        }
      }
    },
    "DescribeEventDetailsResponse":{
      "type":"structure",
      "members":{
        "successfulSet":{
          "shape":"DescribeEventDetailsSuccessfulSet",
          "documentation":"<p></p>"
        },
        "failedSet":{
          "shape":"DescribeEventDetailsFailedSet",
          "documentation":"<p></p>"
        }
      }
    },
    "DescribeEventDetailsSuccessfulSet":{
      "type":"list",
      "member":{"shape":"EventDetails"}
    },
    "DescribeEventTypesRequest":{
      "type":"structure",
      "members":{
        "filter":{
          "shape":"EventTypeFilter",
          "documentation":"<p></p>"
        },
        "locale":{
          "shape":"locale",
          "documentation":"<p>The locale (language) to return information in.</p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        },
        "maxResults":{
          "shape":"maxResults",
          "documentation":"<p>The maximum number of items to return in one batch.</p>"
        }
      }
    },
    "DescribeEventTypesResponse":{
      "type":"structure",
      "members":{
        "eventTypes":{
          "shape":"EventTypeList",
          "documentation":"<p>List of event types to be matched with.</p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        }
      }
    },
    "DescribeEventsRequest":{
      "type":"structure",
      "members":{
        "filter":{
          "shape":"EventFilter",
          "documentation":"<p></p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        },
        "maxResults":{
          "shape":"maxResults",
          "documentation":"<p>The maximum number of items to return in one batch.</p>"
        },
        "locale":{
          "shape":"locale",
          "documentation":"<p>The locale (language) to return information in.</p>"
        }
      }
    },
    "DescribeEventsResponse":{
      "type":"structure",
      "members":{
        "events":{
          "shape":"EventList",
          "documentation":"<p>The events that match the specified filter criteria.</p>"
        },
        "nextToken":{
          "shape":"nextToken",
          "documentation":"<p>If the results of a search are large, only a portion of the results are returned, and a <code>nextToken</code> pagination token is returned in the response. To retrieve the next batch of results, reissue the search request and include the returned token. When all results have been returned, the response does not contain a pagination token value.</p>"
        }
      }
    },
    "EntityAggregate":{
      "type":"structure",
      "members":{
        "eventArn":{
          "shape":"eventArn",
          "documentation":"<p>The unique identifier for the event. Format: <code>arn:aws:silvermine:<i>event-region</i>::event/<i>EVENT_ID</i> </code>. Example: <code>arn:aws:silvermine:us-east-1::event/EC2_MAINTENANCE_5331</code> </p>"
        },
        "count":{
          "shape":"count",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p></p>"
    },
    "EntityAggregateList":{
      "type":"list",
      "member":{"shape":"EntityAggregate"}
    },
    "EntityFilter":{
      "type":"structure",
      "required":["eventArns"],
      "members":{
        "eventArns":{
          "shape":"eventArnList",
          "documentation":"<p>A list of event ARNs (unique identifiers). For example: <code>arn:aws:silvermine:<i>region</i>:<i>service</i>:event/<i>123453434</i> </code>.)</p>"
        },
        "entityArns":{
          "shape":"entityArnList",
          "documentation":"<p></p>"
        },
        "entityValues":{
          "shape":"entityValueList",
          "documentation":"<p></p>"
        },
        "lastUpdatedTimes":{
          "shape":"dateTimeRangeList",
          "documentation":"<p></p>"
        },
        "tags":{
          "shape":"tagFilter",
          "documentation":"<p>A map of entity tags attached to the affected entity.</p>"
        },
        "statusCodes":{
          "shape":"entityStatusCodeList",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>Entity filter record.</p>"
    },
    "EntityList":{
      "type":"list",
      "member":{"shape":"AffectedEntity"}
    },
    "Event":{
      "type":"structure",
      "members":{
        "arn":{
          "shape":"eventArn",
          "documentation":"<p>The unique identifier for the event. Format: <code>arn:aws:silvermine:<i>event-region</i>::event/<i>EVENT_ID</i> </code>. Example: <code>arn:aws:silvermine:us-east-1::event/EC2_MAINTENANCE_5331</code> </p>"
        },
        "service":{
          "shape":"service",
          "documentation":"<p>Service that is affected by the event. E.g., EC2,RDS, max length 30 characters and min length 2 characters.</p>"
        },
        "eventTypeCode":{
          "shape":"eventTypeCode",
          "documentation":"<p>On-boarded event type code ex. AWS_EC2_SYSTEM_MAINTENANCE_EVENT. This uniquely identifies an event type. We will be following the convention: \"AWS_{service}_*\".</p>"
        },
        "eventTypeCategory":{
          "shape":"eventTypeCategory",
          "documentation":"<p></p>"
        },
        "region":{
          "shape":"region",
          "documentation":"<p>The AWS region of the event. Internal AWS region names are the only valid values we expect here E.g., IAD. External regions will raise validation error. You can find a list of valid regions here: https://w.amazon.com/index.php/AWS/Regions</p>"
        },
        "availabilityZone":{
          "shape":"availabilityZone",
          "documentation":"<p>The AWS availability zone of the event. External AWS availability zone names are the only valid values we expect here E.g., us-east-1a.</p>"
        },
        "startTime":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        },
        "endTime":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        },
        "lastUpdatedTime":{
          "shape":"timestamp",
          "documentation":"<p></p>"
        },
        "statusCode":{
          "shape":"eventStatusCode",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>Event record.</p>"
    },
    "EventAggregate":{
      "type":"structure",
      "members":{
        "aggregateValue":{
          "shape":"aggregateValue",
          "documentation":"<p></p>"
        },
        "count":{
          "shape":"count",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p></p>"
    },
    "EventAggregateList":{
      "type":"list",
      "member":{"shape":"EventAggregate"}
    },
    "EventArnsList":{
      "type":"list",
      "member":{"shape":"eventArn"},
      "max":50,
      "min":1
    },
    "EventDescription":{
      "type":"structure",
      "members":{
        "latestDescription":{
          "shape":"eventDescription",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p></p>"
    },
    "EventDetails":{
      "type":"structure",
      "members":{
        "event":{
          "shape":"Event",
          "documentation":"<p></p>"
        },
        "eventDescription":{
          "shape":"EventDescription",
          "documentation":"<p></p>"
        },
        "eventMetadata":{
          "shape":"eventMetadata",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p></p>"
    },
    "EventDetailsErrorItem":{
      "type":"structure",
      "members":{
        "eventArn":{
          "shape":"eventArn",
          "documentation":"<p>The unique identifier for the event. Format: <code>arn:aws:silvermine:<i>event-region</i>::event/<i>EVENT_ID</i> </code>. Example: <code>arn:aws:silvermine:us-east-1::event/EC2_MAINTENANCE_5331</code> </p>"
        },
        "errorName":{
          "shape":"string",
          "documentation":"<p></p>"
        },
        "errorMessage":{
          "shape":"string",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p></p>"
    },
    "EventFilter":{
      "type":"structure",
      "members":{
        "eventArns":{
          "shape":"eventArnList",
          "documentation":"<p>A list of event ARNs (unique identifiers). For example: <code>arn:aws:silvermine:<i>region</i>:<i>service</i>:event/<i>123453434</i> </code>.)</p>"
        },
        "eventTypeCodes":{
          "shape":"eventTypeList",
          "documentation":"<p></p>"
        },
        "services":{
          "shape":"serviceList",
          "documentation":"<p></p>"
        },
        "regions":{
          "shape":"regionList",
          "documentation":"<p></p>"
        },
        "availabilityZones":{
          "shape":"availabilityZones",
          "documentation":"<p></p>"
        },
        "startTimes":{
          "shape":"dateTimeRangeList",
          "documentation":"<p></p>"
        },
        "endTimes":{
          "shape":"dateTimeRangeList",
          "documentation":"<p></p>"
        },
        "lastUpdatedTimes":{
          "shape":"dateTimeRangeList",
          "documentation":"<p></p>"
        },
        "entityArns":{
          "shape":"entityArnList",
          "documentation":"<p></p>"
        },
        "entityValues":{
          "shape":"entityValueList",
          "documentation":"<p></p>"
        },
        "eventTypeCategories":{
          "shape":"eventTypeCategoryList",
          "documentation":"<p></p>"
        },
        "tags":{
          "shape":"tagFilter",
          "documentation":"<p>A map of entity tags attached to the affected entity.</p>"
        },
        "eventStatusCodes":{
          "shape":"eventStatusCodeList",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>Event filter record.</p>"
    },
    "EventList":{
      "type":"list",
      "member":{"shape":"Event"}
    },
    "EventType":{
      "type":"structure",
      "members":{
        "service":{
          "shape":"service",
          "documentation":"<p>Service that is affected by the event. E.g., EC2,RDS, max length 30 characters and min length 2 characters.</p>"
        },
        "code":{
          "shape":"eventTypeCode",
          "documentation":"<p>On-boarded event type code ex. AWS_EC2_SYSTEM_MAINTENANCE_EVENT. This uniquely identifies an event type. We will be following the convention: \"AWS_{service}_*\".</p>"
        },
        "category":{
          "shape":"eventTypeCategory",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>On-boarded event type code ex. AWS_EC2_SYSTEM_MAINTENANCE_EVENT. This uniquely identifies an event type. We will be following the convention: \"AWS_{service}_*\".</p>"
    },
    "EventTypeCategoryList":{
      "type":"list",
      "member":{"shape":"eventTypeCategory"},
      "max":10,
      "min":1
    },
    "EventTypeCodeList":{
      "type":"list",
      "member":{"shape":"eventTypeCode"},
      "max":10,
      "min":1
    },
    "EventTypeFilter":{
      "type":"structure",
      "members":{
        "eventTypeCodes":{
          "shape":"EventTypeCodeList",
          "documentation":"<p></p>"
        },
        "services":{
          "shape":"serviceList",
          "documentation":"<p></p>"
        },
        "eventTypeCategories":{
          "shape":"EventTypeCategoryList",
          "documentation":"<p></p>"
        }
      },
      "documentation":"<p>Event Type filter record.</p>"
    },
    "EventTypeList":{
      "type":"list",
      "member":{"shape":"EventType"}
    },
    "InvalidPaginationToken":{
      "type":"structure",
      "members":{
        "message":{"shape":"string"}
      },
      "documentation":"<p></p>",
      "exception":true
    },
    "UnsupportedLocale":{
      "type":"structure",
      "members":{
        "message":{"shape":"string"}
      },
      "documentation":"<p></p>",
      "exception":true
    },
    "accountId":{
      "type":"string",
      "pattern":"[0-9]{12}"
    },
    "aggregateValue":{"type":"string"},
    "availabilityZone":{
      "type":"string",
      "pattern":"[a-z]{2}\\-[0-9a-z\\-]{4,16}"
    },
    "availabilityZones":{
      "type":"list",
      "member":{"shape":"availabilityZone"}
    },
    "count":{"type":"integer"},
    "dateTimeRangeList":{
      "type":"list",
      "member":{"shape":"DateTimeRange"},
      "max":10,
      "min":1
    },
    "entityArn":{
      "type":"string",
      "max":1600
    },
    "entityArnList":{
      "type":"list",
      "member":{"shape":"entityArn"},
      "max":100,
      "min":1
    },
    "entityStatusCode":{
      "type":"string",
      "enum":[
        "IMPAIRED",
        "UNIMPAIRED",
        "UNKNOWN"
      ]
    },
    "entityStatusCodeList":{
      "type":"list",
      "member":{"shape":"entityStatusCode"},
      "max":3,
      "min":1
    },
    "entityValue":{
      "type":"string",
      "max":256
    },
    "entityValueList":{
      "type":"list",
      "member":{"shape":"entityValue"},
      "max":100,
      "min":1
    },
    "eventAggregateField":{
      "type":"string",
      "enum":["eventTypeCategory"]
    },
    "eventArn":{
      "type":"string",
      "max":1600,
      "pattern":"arn:aws:health:[^:]*:[^:]*:event/[\\w-]+"
    },
    "eventArnList":{
      "type":"list",
      "member":{"shape":"eventArn"},
      "max":10,
      "min":1
    },
    "eventDescription":{
      "type":"string",
      "max":1024
    },
    "eventMetadata":{
      "type":"map",
      "key":{"shape":"metadataKey"},
      "value":{"shape":"metadataValue"}
    },
    "eventStatusCode":{
      "type":"string",
      "enum":[
        "open",
        "closed",
        "upcoming"
      ]
    },
    "eventStatusCodeList":{
      "type":"list",
      "member":{"shape":"eventStatusCode"},
      "max":6,
      "min":1
    },
    "eventType":{
      "type":"string",
      "max":100,
      "min":3
    },
    "eventTypeCategory":{
      "type":"string",
      "enum":[
        "issue",
        "accountNotification",
        "scheduledChange"
      ],
      "max":255,
      "min":3
    },
    "eventTypeCategoryList":{
      "type":"list",
      "member":{"shape":"eventTypeCategory"},
      "max":10,
      "min":1
    },
    "eventTypeCode":{
      "type":"string",
      "max":100,
      "min":3
    },
    "eventTypeList":{
      "type":"list",
      "member":{"shape":"eventType"},
      "max":10,
      "min":1
    },
    "locale":{
      "type":"string",
      "max":256,
      "min":2
    },
    "maxResults":{
      "type":"integer",
      "max":100,
      "min":10
    },
    "metadataKey":{"type":"string"},
    "metadataValue":{
      "type":"string",
      "max":10240
    },
    "nextToken":{
      "type":"string",
      "pattern":"[a-zA-Z0-9=/+_.-]{4,512}"
    },
    "region":{
      "type":"string",
      "pattern":"[^:/]{2,25}"
    },
    "regionList":{
      "type":"list",
      "member":{"shape":"region"},
      "max":10,
      "min":1
    },
    "service":{
      "type":"string",
      "max":30,
      "min":2
    },
    "serviceList":{
      "type":"list",
      "member":{"shape":"service"},
      "max":10,
      "min":1
    },
    "string":{"type":"string"},
    "tagFilter":{
      "type":"list",
      "member":{"shape":"tagSet"},
      "max":50
    },
    "tagKey":{
      "type":"string",
      "max":127
    },
    "tagSet":{
      "type":"map",
      "key":{"shape":"tagKey"},
      "value":{"shape":"tagValue"},
      "max":50
    },
    "tagValue":{
      "type":"string",
      "max":255
    },
    "timestamp":{"type":"timestamp"}
  },
  "documentation":"<fullname>AWS Health</fullname> <p>Welcome to the AWS Health API documentation.</p>"
}
