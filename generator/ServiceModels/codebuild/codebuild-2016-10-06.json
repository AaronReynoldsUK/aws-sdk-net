{
  "version": "1.0",
  "type": "json",
  "json_version": "1.1",
  "signature_version": "v4",
  "service_full_name": "AWS CodeBuild",
  "service_id": "CodeBuild",
  "uid": "codebuild-2016-10-06",
  "endpoint_prefix": "codebuild",
  "api_version": "2016-10-06",
  "target_prefix": "CodeBuild_20161006",
  "documentation": "\n         <fullname>AWS CodeBuild</fullname>\n         <p>AWS CodeBuild is a fully managed build service in the cloud. AWS CodeBuild compiles your source code,\n         runs unit tests, and produces artifacts that are ready to deploy. AWS CodeBuild eliminates the need\n         to provision, manage, and scale your own build servers. It provides prepackaged build\n         environments for the most popular programming languages and build tools, such as Apache\n         Maven, Gradle, and more. You can also fully customize build environments in AWS CodeBuild to use\n         your own build tools. AWS CodeBuild scales automatically to meet peak build requests. You pay only\n         for the build time you consume. For more information about AWS CodeBuild, see the <i>AWS CodeBuild\n            User Guide</i>.</p>\n         <p>AWS CodeBuild supports these operations:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BatchDeleteBuilds</code>: Deletes one or more builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BatchGetProjects</code>: Gets information about one or more build projects.\n               A <i>build project</i> defines how AWS CodeBuild runs a build. This includes\n               information such as where to get the source code to build, the build environment to\n               use, the build commands to run, and where to store the build output. A\n                  <i>build environment</i> is a representation of operating system,\n               programming language runtime, and tools that AWS CodeBuild uses to run a build. You can add\n               tags to build projects to help manage your resources and costs.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CreateProject</code>: Creates a build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CreateWebhook</code>: For an existing AWS CodeBuild build project that has its\n               source code stored in a GitHub or Bitbucket repository, enables AWS CodeBuild to start\n               rebuilding the source code every time a code change is pushed to the\n               repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UpdateWebhook</code>: Changes the settings of an existing webhook.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DeleteProject</code>: Deletes a build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DeleteWebhook</code>: For an existing AWS CodeBuild build project that has its\n               source code stored in a GitHub or Bitbucket repository, stops AWS CodeBuild from rebuilding\n               the source code every time a code change is pushed to the repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ListProjects</code>: Gets a list of build project names, with each build\n               project name representing a single build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UpdateProject</code>: Changes the settings of an existing build\n               project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BatchGetBuilds</code>: Gets information about one or more builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ListBuilds</code>: Gets a list of build IDs, with each build ID representing\n               a single build.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ListBuildsForProject</code>: Gets a list of build IDs for the specified\n               build project, with each build ID representing a single build.</p>\n            </li>\n            <li>\n               <p>\n                  <code>StartBuild</code>: Starts running a build.</p>\n            </li>\n            <li>\n               <p>\n                  <code>StopBuild</code>: Attempts to stop running a build.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ListCuratedEnvironmentImages</code>: Gets information about Docker images\n               that are managed by AWS CodeBuild.</p>\n            </li>\n         </ul>\n      ",
  "operations": {
    "ListCuratedEnvironmentImages": {
      "name": "ListCuratedEnvironmentImages",
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "ListCuratedEnvironmentImagesInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "platforms": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Information about supported platforms for Docker images that are managed by\n         AWS CodeBuild.</para>\n      ",
            "documentation": "\n         <p>Information about supported platforms for Docker images that are managed by\n         AWS CodeBuild.</p>\n      ",
            "shape_name": "EnvironmentPlatforms",
            "members": {
              "type": "structure",
              "members": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "DEBIAN",
                    "AMAZON_LINUX",
                    "UBUNTU",
                    "WINDOWS_SERVER"
                  ],
                  "zonbookDocumentation": "\n         <para>The platform's name.</para>\n      ",
                  "documentation": "\n         <p>The platform's name.</p>\n      ",
                  "shape_name": "PlatformType"
                },
                "languages": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>The list of programming languages that are available for the specified platform.</para>\n      ",
                  "documentation": "\n         <p>The list of programming languages that are available for the specified platform.</p>\n      ",
                  "shape_name": "EnvironmentLanguages",
                  "members": {
                    "type": "structure",
                    "members": {
                      "language": {
                        "type": "string",
                        "enum": [
                          "JAVA",
                          "PYTHON",
                          "NODE_JS",
                          "RUBY",
                          "GOLANG",
                          "DOCKER",
                          "ANDROID",
                          "DOTNET",
                          "BASE",
                          "PHP"
                        ],
                        "zonbookDocumentation": "\n         <para>The programming language for the Docker images.</para>\n      ",
                        "documentation": "\n         <p>The programming language for the Docker images.</p>\n      ",
                        "shape_name": "LanguageType"
                      },
                      "images": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <para>The list of Docker images that are related by the specified programming language.</para>\n      ",
                        "documentation": "\n         <p>The list of Docker images that are related by the specified programming language.</p>\n      ",
                        "shape_name": "EnvironmentImages",
                        "members": {
                          "type": "structure",
                          "members": {
                            "name": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The name of the Docker image.</para>\n      ",
                              "documentation": "\n         <p>The name of the Docker image.</p>\n      ",
                              "shape_name": "String"
                            },
                            "description": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The description of the Docker image.</para>\n      ",
                              "documentation": "\n         <p>The description of the Docker image.</p>\n      ",
                              "shape_name": "String"
                            },
                            "versions": {
                              "type": "list",
                              "zonbookDocumentation": "\n         <para>A list of environment image versions.</para>\n      ",
                              "documentation": "\n         <p>A list of environment image versions.</p>\n      ",
                              "shape_name": "ImageVersions",
                              "members": {
                                "type": "string",
                                "shape_name": "String",
                                "documentation": null
                              }
                            }
                          },
                          "zonbookDocumentation": "\n         <para>Information about a Docker image that is managed by AWS CodeBuild.</para>\n      ",
                          "documentation": "\n         <p>Information about a Docker image that is managed by AWS CodeBuild.</p>\n      ",
                          "shape_name": "EnvironmentImage"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <para>A set of Docker images that are related by programming language and are managed by\n         AWS CodeBuild.</para>\n      ",
                    "documentation": "\n         <p>A set of Docker images that are related by programming language and are managed by\n         AWS CodeBuild.</p>\n      ",
                    "shape_name": "EnvironmentLanguage"
                  }
                }
              },
              "zonbookDocumentation": "\n         <para>A set of Docker images that are related by platform and are managed by AWS CodeBuild.</para>\n      ",
              "documentation": "\n         <p>A set of Docker images that are related by platform and are managed by AWS CodeBuild.</p>\n      ",
              "shape_name": "EnvironmentPlatform"
            }
          }
        },
        "shape_name": "ListCuratedEnvironmentImagesOutput",
        "documentation": null
      },
      "errors": [

      ],
      "documentation": "\n         <p>Gets information about Docker images that are managed by AWS CodeBuild.</p>\n      "
    },
    "CreateProject": {
      "name": "CreateProject",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
            "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n      ",
            "documentation": "\n         <p>The name of the build project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectName",
            "min_length": 2,
            "max_length": 255
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A description that makes the build project easy to identify.</para>\n      ",
            "documentation": "\n         <p>A description that makes the build project easy to identify.</p>\n      ",
            "shape_name": "ProjectDescription",
            "min_length": 0,
            "max_length": 255
          },
          "source": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "CODECOMMIT",
                  "CODEPIPELINE",
                  "GITHUB",
                  "S3",
                  "BITBUCKET",
                  "GITHUB_ENTERPRISE",
                  "NO_SOURCE"
                ],
                "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "SourceType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "gitCloneDepth": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                "shape_name": "GitCloneDepth",
                "min_length": 0
              },
              "buildspec": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                "shape_name": "String"
              },
              "auth": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "OAUTH"
                    ],
                    "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                    "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                    "required": true,
                    "shape_name": "SourceAuthType"
                  },
                  "resource": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                    "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                "shape_name": "SourceAuth"
              },
              "reportBuildStatus": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "insecureSsl": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "sourceIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
            "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectSource"
          },
          "secondarySources": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
            "shape_name": "ProjectSources",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODECOMMIT",
                    "CODEPIPELINE",
                    "GITHUB",
                    "S3",
                    "BITBUCKET",
                    "GITHUB_ENTERPRISE",
                    "NO_SOURCE"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "SourceType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "gitCloneDepth": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                  "shape_name": "GitCloneDepth",
                  "min_length": 0
                },
                "buildspec": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                  "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                  "shape_name": "String"
                },
                "auth": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OAUTH"
                      ],
                      "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                      "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                      "required": true,
                      "shape_name": "SourceAuthType"
                    },
                    "resource": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                      "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                  "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                  "shape_name": "SourceAuth"
                },
                "reportBuildStatus": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "insecureSsl": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                  "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "sourceIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
              "shape_name": "ProjectSource"
            }
          },
          "artifacts": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "CODEPIPELINE",
                  "S3",
                  "NO_ARTIFACTS"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "ArtifactsType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "path": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "String"
              },
              "namespaceType": {
                "type": "string",
                "enum": [
                  "NONE",
                  "BUILD_ID"
                ],
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "ArtifactNamespace"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "packaging": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ZIP"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "shape_name": "ArtifactPackaging"
              },
              "overrideArtifactName": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "encryptionDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "artifactIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
            "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectArtifacts"
          },
          "secondaryArtifacts": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
            "shape_name": "ProjectArtifactsList",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODEPIPELINE",
                    "S3",
                    "NO_ARTIFACTS"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "ArtifactsType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "path": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "String"
                },
                "namespaceType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "BUILD_ID"
                  ],
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "ArtifactNamespace"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "packaging": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ZIP"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ArtifactPackaging"
                },
                "overrideArtifactName": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                  "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "encryptionDisabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "artifactIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
              "shape_name": "ProjectArtifacts"
            }
          },
          "cache": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "NO_CACHE",
                  "S3"
                ],
                "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "CacheType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Stores recently used information so that it can be quickly accessed at a later\n         time.</para>\n      ",
            "documentation": "\n         <p>Stores recently used information so that it can be quickly accessed at a later\n         time.</p>\n      ",
            "shape_name": "ProjectCache"
          },
          "environment": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "WINDOWS_CONTAINER",
                  "LINUX_CONTAINER"
                ],
                "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                "required": true,
                "shape_name": "EnvironmentType"
              },
              "image": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                "required": true,
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "computeType": {
                "type": "string",
                "enum": [
                  "BUILD_GENERAL1_SMALL",
                  "BUILD_GENERAL1_MEDIUM",
                  "BUILD_GENERAL1_LARGE"
                ],
                "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "ComputeType"
              },
              "environmentVariables": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                "shape_name": "EnvironmentVariables",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                      "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                      "required": true,
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "value": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                      "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "PLAINTEXT",
                        "PARAMETER_STORE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "EnvironmentVariableType"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                  "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                  "shape_name": "EnvironmentVariable"
                }
              },
              "privilegedMode": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "certificate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build environment for the build project.</para>\n      ",
            "documentation": "\n         <p>Information about the build environment for the build project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectEnvironment"
          },
          "serviceRole": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</para>\n      ",
            "documentation": "\n         <p>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "timeoutInMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before it times out any\n         build that has not been marked as completed. The default is 60 minutes.</para>\n      ",
            "documentation": "\n         <p>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before it times out any\n         build that has not been marked as completed. The default is 60 minutes.</p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "queuedTimeoutInMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
            "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "encryptionKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the\n         format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
            "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the\n         format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A set of tags for this build project.</para>\n         <para>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</para>\n      ",
            "documentation": "\n         <p>A set of tags for this build project.</p>\n         <p>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 0,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "shape_name": "KeyInput",
                  "min_length": 1,
                  "max_length": 127
                },
                "value": {
                  "type": "string",
                  "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "shape_name": "ValueInput",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n         <para>A tag, consisting of a key and a value.</para>\n         <para>This tag is available for use by AWS services that support tags in AWS CodeBuild.</para>\n      ",
              "documentation": "\n         <p>A tag, consisting of a key and a value.</p>\n         <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>\n      ",
              "shape_name": "Tag"
            }
          },
          "vpcConfig": {
            "type": "structure",
            "members": {
              "vpcId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "subnets": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                "shape_name": "Subnets",
                "max_length": 16,
                "members": {
                  "type": "string",
                  "shape_name": "NonEmptyString",
                  "documentation": null,
                  "min_length": 1
                }
              },
              "securityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                "shape_name": "SecurityGroupIds",
                "max_length": 5,
                "members": {
                  "type": "string",
                  "shape_name": "NonEmptyString",
                  "documentation": null,
                  "min_length": 1
                }
              }
            },
            "zonbookDocumentation": "\n         <para>VpcConfig enables AWS CodeBuild to access resources in an Amazon VPC.</para>\n      ",
            "documentation": "\n         <p>VpcConfig enables AWS CodeBuild to access resources in an Amazon VPC.</p>\n      ",
            "shape_name": "VpcConfig"
          },
          "badgeEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</para>\n      ",
            "documentation": "\n         <p>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</p>\n      ",
            "shape_name": "WrapperBoolean"
          },
          "logsConfig": {
            "type": "structure",
            "members": {
              "cloudWatchLogs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "groupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  },
                  "streamName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                "shape_name": "CloudWatchLogsConfig"
              },
              "s3Logs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                    "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                "shape_name": "S3LogsConfig"
              }
            },
            "zonbookDocumentation": "\n         <para> Information about logs for the build project. These can be logs in Amazon CloudWatch Logs, logs uploaded\n         to a specified S3 bucket, or both. </para>\n      ",
            "documentation": "\n         <p> Information about logs for the build project. These can be logs in Amazon CloudWatch Logs, logs uploaded\n         to a specified S3 bucket, or both. </p>\n      ",
            "shape_name": "LogsConfig"
          }
        },
        "shape_name": "CreateProjectInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "project": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
                "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n      ",
                "documentation": "\n         <p>The name of the build project.</p>\n      ",
                "shape_name": "ProjectName",
                "min_length": 2,
                "max_length": 255
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build project.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build project.</p>\n      ",
                "shape_name": "String"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A description that makes the build project easy to identify.</para>\n      ",
                "documentation": "\n         <p>A description that makes the build project easy to identify.</p>\n      ",
                "shape_name": "ProjectDescription",
                "min_length": 0,
                "max_length": 255
              },
              "source": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODECOMMIT",
                      "CODEPIPELINE",
                      "GITHUB",
                      "S3",
                      "BITBUCKET",
                      "GITHUB_ENTERPRISE",
                      "NO_SOURCE"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "SourceType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "gitCloneDepth": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                    "shape_name": "GitCloneDepth",
                    "min_length": 0
                  },
                  "buildspec": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                    "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "auth": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OAUTH"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                        "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                        "required": true,
                        "shape_name": "SourceAuthType"
                      },
                      "resource": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                        "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                    "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                    "shape_name": "SourceAuth"
                  },
                  "reportBuildStatus": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "insecureSsl": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                    "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "sourceIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build input source code for this build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build input source code for this build project.</p>\n      ",
                "shape_name": "ProjectSource"
              },
              "secondarySources": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                "shape_name": "ProjectSources",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                  "shape_name": "ProjectSource"
                }
              },
              "artifacts": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODEPIPELINE",
                      "S3",
                      "NO_ARTIFACTS"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ArtifactsType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "path": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                    "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                    "shape_name": "String"
                  },
                  "namespaceType": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "BUILD_ID"
                    ],
                    "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                    "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                    "shape_name": "ArtifactNamespace"
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "packaging": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "ZIP"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                    "shape_name": "ArtifactPackaging"
                  },
                  "overrideArtifactName": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                    "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "encryptionDisabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "artifactIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                "shape_name": "ProjectArtifacts"
              },
              "secondaryArtifacts": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                "shape_name": "ProjectArtifactsList",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODEPIPELINE",
                        "S3",
                        "NO_ARTIFACTS"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "ArtifactsType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "path": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "namespaceType": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "BUILD_ID"
                      ],
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "ArtifactNamespace"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "packaging": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "ZIP"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                      "shape_name": "ArtifactPackaging"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                  "shape_name": "ProjectArtifacts"
                }
              },
              "cache": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "NO_CACHE",
                      "S3"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "CacheType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the cache for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the cache for the build project.</p>\n      ",
                "shape_name": "ProjectCache"
              },
              "environment": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "WINDOWS_CONTAINER",
                      "LINUX_CONTAINER"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                    "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                    "required": true,
                    "shape_name": "EnvironmentType"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                    "required": true,
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "computeType": {
                    "type": "string",
                    "enum": [
                      "BUILD_GENERAL1_SMALL",
                      "BUILD_GENERAL1_MEDIUM",
                      "BUILD_GENERAL1_LARGE"
                    ],
                    "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ComputeType"
                  },
                  "environmentVariables": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                    "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                    "shape_name": "EnvironmentVariables",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                          "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                          "required": true,
                          "shape_name": "NonEmptyString",
                          "min_length": 1
                        },
                        "value": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                          "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "PLAINTEXT",
                            "PARAMETER_STORE"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "EnvironmentVariableType"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                      "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                      "shape_name": "EnvironmentVariable"
                    }
                  },
                  "privilegedMode": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                    "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "certificate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                    "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build environment for this build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build environment for this build project.</p>\n      ",
                "shape_name": "ProjectEnvironment"
              },
              "serviceRole": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</para>\n      ",
                "documentation": "\n         <p>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "timeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</para>\n      ",
                "documentation": "\n         <p>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</p>\n      ",
                "shape_name": "TimeOut",
                "min_length": 5,
                "max_length": 480
              },
              "queuedTimeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                "shape_name": "TimeOut",
                "min_length": 5,
                "max_length": 480
              },
              "encryptionKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "tags": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The tags for this build project.</para>\n         <para>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</para>\n      ",
                "documentation": "\n         <p>The tags for this build project.</p>\n         <p>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</p>\n      ",
                "shape_name": "TagList",
                "min_length": 0,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                      "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                      "documentation": "\n         <p>The tag's key.</p>\n      ",
                      "shape_name": "KeyInput",
                      "min_length": 1,
                      "max_length": 127
                    },
                    "value": {
                      "type": "string",
                      "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                      "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                      "documentation": "\n         <p>The tag's value.</p>\n      ",
                      "shape_name": "ValueInput",
                      "min_length": 1,
                      "max_length": 255
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A tag, consisting of a key and a value.</para>\n         <para>This tag is available for use by AWS services that support tags in AWS CodeBuild.</para>\n      ",
                  "documentation": "\n         <p>A tag, consisting of a key and a value.</p>\n         <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>\n      ",
                  "shape_name": "Tag"
                }
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build project was created, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build project was created, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastModified": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build project's settings were last modified, expressed in Unix time\n         format.</para>\n      ",
                "documentation": "\n         <p>When the build project's settings were last modified, expressed in Unix time\n         format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "webhook": {
                "type": "structure",
                "members": {
                  "url": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The URL to the webhook.</para>\n      ",
                    "documentation": "\n         <p>The URL to the webhook.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "payloadUrl": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The AWS CodeBuild endpoint where webhook events are sent.</para>\n      ",
                    "documentation": "\n         <p> The AWS CodeBuild endpoint where webhook events are sent.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "secret": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The secret token of the associated repository. </para>\n         <note>\n            <para> A Bitbucket webhook does not support <code>secret</code>. </para>\n         </note>\n      ",
                    "documentation": "\n         <p> The secret token of the associated repository. </p>\n         <note>\n            <p> A Bitbucket webhook does not support <code>secret</code>. </p>\n         </note>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "branchFilter": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
                    "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "lastModifiedSecret": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <para> A timestamp that indicates the last time a repository's secret token was modified.\n      </para>\n      ",
                    "documentation": "\n         <p> A timestamp that indicates the last time a repository's secret token was modified.\n      </p>\n      ",
                    "shape_name": "Timestamp"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</para>\n      ",
                "documentation": "\n         <p>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</p>\n      ",
                "shape_name": "Webhook"
              },
              "vpcConfig": {
                "type": "structure",
                "members": {
                  "vpcId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "subnets": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "Subnets",
                    "max_length": 16,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  },
                  "securityGroupIds": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "SecurityGroupIds",
                    "max_length": 5,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the VPC configuration that AWS CodeBuild accesses.</para>\n      ",
                "documentation": "\n         <p>Information about the VPC configuration that AWS CodeBuild accesses.</p>\n      ",
                "shape_name": "VpcConfig"
              },
              "badge": {
                "type": "structure",
                "members": {
                  "badgeEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</para>\n      ",
                    "documentation": "\n         <p>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "badgeRequestUrl": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The publicly-accessible URL through which you can access the build badge for your\n         project. </para>\n         <para>The publicly accessible URL through which you can access the build badge for your\n         project. </para>\n      ",
                    "documentation": "\n         <p>The publicly-accessible URL through which you can access the build badge for your\n         project. </p>\n         <p>The publicly accessible URL through which you can access the build badge for your\n         project. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build badge for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build badge for the build project.</p>\n      ",
                "shape_name": "ProjectBadge"
              },
              "logsConfig": {
                "type": "structure",
                "members": {
                  "cloudWatchLogs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "groupName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                    "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                    "shape_name": "CloudWatchLogsConfig"
                  },
                  "s3Logs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                        "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                    "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                    "shape_name": "S3LogsConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </para>\n      ",
                "documentation": "\n         <p> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </p>\n      ",
                "shape_name": "LogsConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build project that was created.</para>\n      ",
            "documentation": "\n         <p>Information about the build project that was created.</p>\n      ",
            "shape_name": "Project"
          }
        },
        "shape_name": "CreateProjectOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be created, because an AWS resource with the same\n         settings already exists.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be created, because an AWS resource with the same\n         settings already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>An AWS service limit was exceeded for the calling AWS account.</para>\n      ",
          "documentation": "\n         <p>An AWS service limit was exceeded for the calling AWS account.</p>\n      ",
          "shape_name": "AccountLimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a build project.</p>\n      "
    },
    "UpdateProject": {
      "name": "UpdateProject",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n         <note>\n            <para>You cannot change a build project's name.</para>\n         </note>\n      ",
            "documentation": "\n         <p>The name of the build project.</p>\n         <note>\n            <p>You cannot change a build project's name.</p>\n         </note>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "description": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A new or replacement description of the build project.</para>\n      ",
            "documentation": "\n         <p>A new or replacement description of the build project.</p>\n      ",
            "shape_name": "ProjectDescription",
            "min_length": 0,
            "max_length": 255
          },
          "source": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "CODECOMMIT",
                  "CODEPIPELINE",
                  "GITHUB",
                  "S3",
                  "BITBUCKET",
                  "GITHUB_ENTERPRISE",
                  "NO_SOURCE"
                ],
                "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "SourceType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "gitCloneDepth": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                "shape_name": "GitCloneDepth",
                "min_length": 0
              },
              "buildspec": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                "shape_name": "String"
              },
              "auth": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "OAUTH"
                    ],
                    "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                    "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                    "required": true,
                    "shape_name": "SourceAuthType"
                  },
                  "resource": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                    "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                "shape_name": "SourceAuth"
              },
              "reportBuildStatus": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "insecureSsl": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "sourceIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information to be changed about the build input source code for the build\n         project.</para>\n      ",
            "documentation": "\n         <p>Information to be changed about the build input source code for the build\n         project.</p>\n      ",
            "shape_name": "ProjectSource"
          },
          "secondarySources": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
            "shape_name": "ProjectSources",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODECOMMIT",
                    "CODEPIPELINE",
                    "GITHUB",
                    "S3",
                    "BITBUCKET",
                    "GITHUB_ENTERPRISE",
                    "NO_SOURCE"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "SourceType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "gitCloneDepth": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                  "shape_name": "GitCloneDepth",
                  "min_length": 0
                },
                "buildspec": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                  "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                  "shape_name": "String"
                },
                "auth": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OAUTH"
                      ],
                      "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                      "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                      "required": true,
                      "shape_name": "SourceAuthType"
                    },
                    "resource": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                      "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                  "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                  "shape_name": "SourceAuth"
                },
                "reportBuildStatus": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "insecureSsl": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                  "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "sourceIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
              "shape_name": "ProjectSource"
            }
          },
          "artifacts": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "CODEPIPELINE",
                  "S3",
                  "NO_ARTIFACTS"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "ArtifactsType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "path": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "String"
              },
              "namespaceType": {
                "type": "string",
                "enum": [
                  "NONE",
                  "BUILD_ID"
                ],
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "ArtifactNamespace"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "packaging": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ZIP"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "shape_name": "ArtifactPackaging"
              },
              "overrideArtifactName": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "encryptionDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "artifactIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information to be changed about the build output artifacts for the build project.</para>\n      ",
            "documentation": "\n         <p>Information to be changed about the build output artifacts for the build project.</p>\n      ",
            "shape_name": "ProjectArtifacts"
          },
          "secondaryArtifacts": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
            "shape_name": "ProjectArtifactsList",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODEPIPELINE",
                    "S3",
                    "NO_ARTIFACTS"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "ArtifactsType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "path": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "String"
                },
                "namespaceType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "BUILD_ID"
                  ],
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "ArtifactNamespace"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "packaging": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ZIP"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ArtifactPackaging"
                },
                "overrideArtifactName": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                  "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "encryptionDisabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "artifactIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
              "shape_name": "ProjectArtifacts"
            }
          },
          "cache": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "NO_CACHE",
                  "S3"
                ],
                "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "CacheType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Stores recently used information so that it can be quickly accessed at a later\n         time.</para>\n      ",
            "documentation": "\n         <p>Stores recently used information so that it can be quickly accessed at a later\n         time.</p>\n      ",
            "shape_name": "ProjectCache"
          },
          "environment": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "WINDOWS_CONTAINER",
                  "LINUX_CONTAINER"
                ],
                "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                "required": true,
                "shape_name": "EnvironmentType"
              },
              "image": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                "required": true,
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "computeType": {
                "type": "string",
                "enum": [
                  "BUILD_GENERAL1_SMALL",
                  "BUILD_GENERAL1_MEDIUM",
                  "BUILD_GENERAL1_LARGE"
                ],
                "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "ComputeType"
              },
              "environmentVariables": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                "shape_name": "EnvironmentVariables",
                "members": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                      "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                      "required": true,
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "value": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                      "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "PLAINTEXT",
                        "PARAMETER_STORE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "EnvironmentVariableType"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                  "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                  "shape_name": "EnvironmentVariable"
                }
              },
              "privilegedMode": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "certificate": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Information to be changed about the build environment for the build project.</para>\n      ",
            "documentation": "\n         <p>Information to be changed about the build environment for the build project.</p>\n      ",
            "shape_name": "ProjectEnvironment"
          },
          "serviceRole": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The replacement ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS\n         services on behalf of the AWS account.</para>\n      ",
            "documentation": "\n         <p>The replacement ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS\n         services on behalf of the AWS account.</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "timeoutInMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The replacement value in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before\n         timing out any related build that did not get marked as completed.</para>\n      ",
            "documentation": "\n         <p>The replacement value in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before\n         timing out any related build that did not get marked as completed.</p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "queuedTimeoutInMinutes": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
            "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "encryptionKey": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The replacement AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build\n         output artifacts.</para>\n         <para>You can specify either the Amazon Resource Name (ARN)of the CMK or, if available, the CMK's alias (using the\n         format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
            "documentation": "\n         <p>The replacement AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build\n         output artifacts.</p>\n         <p>You can specify either the Amazon Resource Name (ARN)of the CMK or, if available, the CMK's alias (using the\n         format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The replacement set of tags for this build project.</para>\n         <para>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</para>\n      ",
            "documentation": "\n         <p>The replacement set of tags for this build project.</p>\n         <p>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 0,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "shape_name": "KeyInput",
                  "min_length": 1,
                  "max_length": 127
                },
                "value": {
                  "type": "string",
                  "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "shape_name": "ValueInput",
                  "min_length": 1,
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n         <para>A tag, consisting of a key and a value.</para>\n         <para>This tag is available for use by AWS services that support tags in AWS CodeBuild.</para>\n      ",
              "documentation": "\n         <p>A tag, consisting of a key and a value.</p>\n         <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>\n      ",
              "shape_name": "Tag"
            }
          },
          "vpcConfig": {
            "type": "structure",
            "members": {
              "vpcId": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "subnets": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                "shape_name": "Subnets",
                "max_length": 16,
                "members": {
                  "type": "string",
                  "shape_name": "NonEmptyString",
                  "documentation": null,
                  "min_length": 1
                }
              },
              "securityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                "shape_name": "SecurityGroupIds",
                "max_length": 5,
                "members": {
                  "type": "string",
                  "shape_name": "NonEmptyString",
                  "documentation": null,
                  "min_length": 1
                }
              }
            },
            "zonbookDocumentation": "\n         <para>VpcConfig enables AWS CodeBuild to access resources in an Amazon VPC.</para>\n      ",
            "documentation": "\n         <p>VpcConfig enables AWS CodeBuild to access resources in an Amazon VPC.</p>\n      ",
            "shape_name": "VpcConfig"
          },
          "badgeEnabled": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</para>\n      ",
            "documentation": "\n         <p>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</p>\n      ",
            "shape_name": "WrapperBoolean"
          },
          "logsConfig": {
            "type": "structure",
            "members": {
              "cloudWatchLogs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "groupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  },
                  "streamName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                "shape_name": "CloudWatchLogsConfig"
              },
              "s3Logs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                    "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                "shape_name": "S3LogsConfig"
              }
            },
            "zonbookDocumentation": "\n         <para> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, logs\n         in an S3 bucket, or both. </para>\n      ",
            "documentation": "\n         <p> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, logs\n         in an S3 bucket, or both. </p>\n      ",
            "shape_name": "LogsConfig"
          }
        },
        "shape_name": "UpdateProjectInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "project": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
                "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n      ",
                "documentation": "\n         <p>The name of the build project.</p>\n      ",
                "shape_name": "ProjectName",
                "min_length": 2,
                "max_length": 255
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build project.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build project.</p>\n      ",
                "shape_name": "String"
              },
              "description": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A description that makes the build project easy to identify.</para>\n      ",
                "documentation": "\n         <p>A description that makes the build project easy to identify.</p>\n      ",
                "shape_name": "ProjectDescription",
                "min_length": 0,
                "max_length": 255
              },
              "source": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODECOMMIT",
                      "CODEPIPELINE",
                      "GITHUB",
                      "S3",
                      "BITBUCKET",
                      "GITHUB_ENTERPRISE",
                      "NO_SOURCE"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "SourceType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "gitCloneDepth": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                    "shape_name": "GitCloneDepth",
                    "min_length": 0
                  },
                  "buildspec": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                    "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "auth": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OAUTH"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                        "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                        "required": true,
                        "shape_name": "SourceAuthType"
                      },
                      "resource": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                        "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                    "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                    "shape_name": "SourceAuth"
                  },
                  "reportBuildStatus": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "insecureSsl": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                    "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "sourceIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build input source code for this build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build input source code for this build project.</p>\n      ",
                "shape_name": "ProjectSource"
              },
              "secondarySources": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                "shape_name": "ProjectSources",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                  "shape_name": "ProjectSource"
                }
              },
              "artifacts": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODEPIPELINE",
                      "S3",
                      "NO_ARTIFACTS"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ArtifactsType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "path": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                    "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                    "shape_name": "String"
                  },
                  "namespaceType": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "BUILD_ID"
                    ],
                    "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                    "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                    "shape_name": "ArtifactNamespace"
                  },
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "packaging": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "ZIP"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                    "shape_name": "ArtifactPackaging"
                  },
                  "overrideArtifactName": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                    "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "encryptionDisabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "artifactIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                "shape_name": "ProjectArtifacts"
              },
              "secondaryArtifacts": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                "shape_name": "ProjectArtifactsList",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODEPIPELINE",
                        "S3",
                        "NO_ARTIFACTS"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "ArtifactsType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "path": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "namespaceType": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "BUILD_ID"
                      ],
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "ArtifactNamespace"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "packaging": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "ZIP"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                      "shape_name": "ArtifactPackaging"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                  "shape_name": "ProjectArtifacts"
                }
              },
              "cache": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "NO_CACHE",
                      "S3"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "CacheType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the cache for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the cache for the build project.</p>\n      ",
                "shape_name": "ProjectCache"
              },
              "environment": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "WINDOWS_CONTAINER",
                      "LINUX_CONTAINER"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                    "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                    "required": true,
                    "shape_name": "EnvironmentType"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                    "required": true,
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "computeType": {
                    "type": "string",
                    "enum": [
                      "BUILD_GENERAL1_SMALL",
                      "BUILD_GENERAL1_MEDIUM",
                      "BUILD_GENERAL1_LARGE"
                    ],
                    "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ComputeType"
                  },
                  "environmentVariables": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                    "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                    "shape_name": "EnvironmentVariables",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                          "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                          "required": true,
                          "shape_name": "NonEmptyString",
                          "min_length": 1
                        },
                        "value": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                          "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "PLAINTEXT",
                            "PARAMETER_STORE"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "EnvironmentVariableType"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                      "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                      "shape_name": "EnvironmentVariable"
                    }
                  },
                  "privilegedMode": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                    "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "certificate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                    "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build environment for this build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build environment for this build project.</p>\n      ",
                "shape_name": "ProjectEnvironment"
              },
              "serviceRole": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</para>\n      ",
                "documentation": "\n         <p>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "timeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</para>\n      ",
                "documentation": "\n         <p>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</p>\n      ",
                "shape_name": "TimeOut",
                "min_length": 5,
                "max_length": 480
              },
              "queuedTimeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                "shape_name": "TimeOut",
                "min_length": 5,
                "max_length": 480
              },
              "encryptionKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "tags": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The tags for this build project.</para>\n         <para>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</para>\n      ",
                "documentation": "\n         <p>The tags for this build project.</p>\n         <p>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</p>\n      ",
                "shape_name": "TagList",
                "min_length": 0,
                "max_length": 50,
                "members": {
                  "type": "structure",
                  "members": {
                    "key": {
                      "type": "string",
                      "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                      "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                      "documentation": "\n         <p>The tag's key.</p>\n      ",
                      "shape_name": "KeyInput",
                      "min_length": 1,
                      "max_length": 127
                    },
                    "value": {
                      "type": "string",
                      "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                      "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                      "documentation": "\n         <p>The tag's value.</p>\n      ",
                      "shape_name": "ValueInput",
                      "min_length": 1,
                      "max_length": 255
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A tag, consisting of a key and a value.</para>\n         <para>This tag is available for use by AWS services that support tags in AWS CodeBuild.</para>\n      ",
                  "documentation": "\n         <p>A tag, consisting of a key and a value.</p>\n         <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>\n      ",
                  "shape_name": "Tag"
                }
              },
              "created": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build project was created, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build project was created, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastModified": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build project's settings were last modified, expressed in Unix time\n         format.</para>\n      ",
                "documentation": "\n         <p>When the build project's settings were last modified, expressed in Unix time\n         format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "webhook": {
                "type": "structure",
                "members": {
                  "url": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The URL to the webhook.</para>\n      ",
                    "documentation": "\n         <p>The URL to the webhook.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "payloadUrl": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The AWS CodeBuild endpoint where webhook events are sent.</para>\n      ",
                    "documentation": "\n         <p> The AWS CodeBuild endpoint where webhook events are sent.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "secret": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The secret token of the associated repository. </para>\n         <note>\n            <para> A Bitbucket webhook does not support <code>secret</code>. </para>\n         </note>\n      ",
                    "documentation": "\n         <p> The secret token of the associated repository. </p>\n         <note>\n            <p> A Bitbucket webhook does not support <code>secret</code>. </p>\n         </note>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "branchFilter": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
                    "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "lastModifiedSecret": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <para> A timestamp that indicates the last time a repository's secret token was modified.\n      </para>\n      ",
                    "documentation": "\n         <p> A timestamp that indicates the last time a repository's secret token was modified.\n      </p>\n      ",
                    "shape_name": "Timestamp"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</para>\n      ",
                "documentation": "\n         <p>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</p>\n      ",
                "shape_name": "Webhook"
              },
              "vpcConfig": {
                "type": "structure",
                "members": {
                  "vpcId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "subnets": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "Subnets",
                    "max_length": 16,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  },
                  "securityGroupIds": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "SecurityGroupIds",
                    "max_length": 5,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the VPC configuration that AWS CodeBuild accesses.</para>\n      ",
                "documentation": "\n         <p>Information about the VPC configuration that AWS CodeBuild accesses.</p>\n      ",
                "shape_name": "VpcConfig"
              },
              "badge": {
                "type": "structure",
                "members": {
                  "badgeEnabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</para>\n      ",
                    "documentation": "\n         <p>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</p>\n      ",
                    "shape_name": "Boolean"
                  },
                  "badgeRequestUrl": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The publicly-accessible URL through which you can access the build badge for your\n         project. </para>\n         <para>The publicly accessible URL through which you can access the build badge for your\n         project. </para>\n      ",
                    "documentation": "\n         <p>The publicly-accessible URL through which you can access the build badge for your\n         project. </p>\n         <p>The publicly accessible URL through which you can access the build badge for your\n         project. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build badge for the build project.</para>\n      ",
                "documentation": "\n         <p>Information about the build badge for the build project.</p>\n      ",
                "shape_name": "ProjectBadge"
              },
              "logsConfig": {
                "type": "structure",
                "members": {
                  "cloudWatchLogs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "groupName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                    "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                    "shape_name": "CloudWatchLogsConfig"
                  },
                  "s3Logs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                        "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                    "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                    "shape_name": "S3LogsConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </para>\n      ",
                "documentation": "\n         <p> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </p>\n      ",
                "shape_name": "LogsConfig"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build project that was changed.</para>\n      ",
            "documentation": "\n         <p>Information about the build project that was changed.</p>\n      ",
            "shape_name": "Project"
          }
        },
        "shape_name": "UpdateProjectOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Changes the settings of a build project.</p>\n      "
    },
    "BatchGetProjects": {
      "name": "BatchGetProjects",
      "input": {
        "type": "structure",
        "members": {
          "names": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The names of the build projects.</para>\n      ",
            "documentation": "\n         <p>The names of the build projects.</p>\n      ",
            "required": true,
            "shape_name": "ProjectNames",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "BatchGetProjectsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "projects": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Information about the requested build projects.</para>\n      ",
            "documentation": "\n         <p>Information about the requested build projects.</p>\n      ",
            "shape_name": "Projects",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
                  "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n      ",
                  "documentation": "\n         <p>The name of the build project.</p>\n      ",
                  "shape_name": "ProjectName",
                  "min_length": 2,
                  "max_length": 255
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build project.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build project.</p>\n      ",
                  "shape_name": "String"
                },
                "description": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>A description that makes the build project easy to identify.</para>\n      ",
                  "documentation": "\n         <p>A description that makes the build project easy to identify.</p>\n      ",
                  "shape_name": "ProjectDescription",
                  "min_length": 0,
                  "max_length": 255
                },
                "source": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build input source code for this build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build input source code for this build project.</p>\n      ",
                  "shape_name": "ProjectSource"
                },
                "secondarySources": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                  "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                  "shape_name": "ProjectSources",
                  "min_length": 0,
                  "max_length": 12,
                  "members": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CODECOMMIT",
                          "CODEPIPELINE",
                          "GITHUB",
                          "S3",
                          "BITBUCKET",
                          "GITHUB_ENTERPRISE",
                          "NO_SOURCE"
                        ],
                        "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "SourceType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "String"
                      },
                      "gitCloneDepth": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                        "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                        "shape_name": "GitCloneDepth",
                        "min_length": 0
                      },
                      "buildspec": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                        "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                        "shape_name": "String"
                      },
                      "auth": {
                        "type": "structure",
                        "members": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "OAUTH"
                            ],
                            "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                            "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                            "required": true,
                            "shape_name": "SourceAuthType"
                          },
                          "resource": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                            "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                        "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                        "shape_name": "SourceAuth"
                      },
                      "reportBuildStatus": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                        "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "insecureSsl": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                        "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "sourceIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                        "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                    "shape_name": "ProjectSource"
                  }
                },
                "artifacts": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODEPIPELINE",
                        "S3",
                        "NO_ARTIFACTS"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "ArtifactsType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "path": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "String"
                    },
                    "namespaceType": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "BUILD_ID"
                      ],
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                      "shape_name": "ArtifactNamespace"
                    },
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "packaging": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "ZIP"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                      "shape_name": "ArtifactPackaging"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                  "shape_name": "ProjectArtifacts"
                },
                "secondaryArtifacts": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                  "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                  "shape_name": "ProjectArtifactsList",
                  "min_length": 0,
                  "max_length": 12,
                  "members": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CODEPIPELINE",
                          "S3",
                          "NO_ARTIFACTS"
                        ],
                        "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "ArtifactsType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "String"
                      },
                      "path": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                        "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                        "shape_name": "String"
                      },
                      "namespaceType": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "BUILD_ID"
                        ],
                        "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                        "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                        "shape_name": "ArtifactNamespace"
                      },
                      "name": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "String"
                      },
                      "packaging": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ZIP"
                        ],
                        "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                        "shape_name": "ArtifactPackaging"
                      },
                      "overrideArtifactName": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                        "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "encryptionDisabled": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                        "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "artifactIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                        "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
                    "shape_name": "ProjectArtifacts"
                  }
                },
                "cache": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "NO_CACHE",
                        "S3"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "CacheType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the cache for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the cache for the build project.</p>\n      ",
                  "shape_name": "ProjectCache"
                },
                "environment": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "WINDOWS_CONTAINER",
                        "LINUX_CONTAINER"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                      "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                      "required": true,
                      "shape_name": "EnvironmentType"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                      "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                      "required": true,
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "computeType": {
                      "type": "string",
                      "enum": [
                        "BUILD_GENERAL1_SMALL",
                        "BUILD_GENERAL1_MEDIUM",
                        "BUILD_GENERAL1_LARGE"
                      ],
                      "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "ComputeType"
                    },
                    "environmentVariables": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                      "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                      "shape_name": "EnvironmentVariables",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                            "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                            "required": true,
                            "shape_name": "NonEmptyString",
                            "min_length": 1
                          },
                          "value": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                            "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                            "required": true,
                            "shape_name": "String"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "PLAINTEXT",
                              "PARAMETER_STORE"
                            ],
                            "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                            "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "EnvironmentVariableType"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                        "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                        "shape_name": "EnvironmentVariable"
                      }
                    },
                    "privilegedMode": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                      "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "certificate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                      "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build environment for this build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build environment for this build project.</p>\n      ",
                  "shape_name": "ProjectEnvironment"
                },
                "serviceRole": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</para>\n      ",
                  "documentation": "\n         <p>The ARN of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on\n         behalf of the AWS account.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "timeoutInMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</para>\n      ",
                  "documentation": "\n         <p>How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any\n         related build that did not get marked as completed. The default is 60 minutes.</p>\n      ",
                  "shape_name": "TimeOut",
                  "min_length": 5,
                  "max_length": 480
                },
                "queuedTimeoutInMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                  "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                  "shape_name": "TimeOut",
                  "min_length": 5,
                  "max_length": 480
                },
                "encryptionKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                  "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "tags": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>The tags for this build project.</para>\n         <para>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</para>\n      ",
                  "documentation": "\n         <p>The tags for this build project.</p>\n         <p>These tags are available for use by AWS services that support AWS CodeBuild build project\n         tags.</p>\n      ",
                  "shape_name": "TagList",
                  "min_length": 0,
                  "max_length": 50,
                  "members": {
                    "type": "structure",
                    "members": {
                      "key": {
                        "type": "string",
                        "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                        "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                        "documentation": "\n         <p>The tag's key.</p>\n      ",
                        "shape_name": "KeyInput",
                        "min_length": 1,
                        "max_length": 127
                      },
                      "value": {
                        "type": "string",
                        "pattern": "^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=@+\\\\-]*)$",
                        "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                        "documentation": "\n         <p>The tag's value.</p>\n      ",
                        "shape_name": "ValueInput",
                        "min_length": 1,
                        "max_length": 255
                      }
                    },
                    "zonbookDocumentation": "\n         <para>A tag, consisting of a key and a value.</para>\n         <para>This tag is available for use by AWS services that support tags in AWS CodeBuild.</para>\n      ",
                    "documentation": "\n         <p>A tag, consisting of a key and a value.</p>\n         <p>This tag is available for use by AWS services that support tags in AWS CodeBuild.</p>\n      ",
                    "shape_name": "Tag"
                  }
                },
                "created": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the build project was created, expressed in Unix time format.</para>\n      ",
                  "documentation": "\n         <p>When the build project was created, expressed in Unix time format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastModified": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the build project's settings were last modified, expressed in Unix time\n         format.</para>\n      ",
                  "documentation": "\n         <p>When the build project's settings were last modified, expressed in Unix time\n         format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "webhook": {
                  "type": "structure",
                  "members": {
                    "url": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The URL to the webhook.</para>\n      ",
                      "documentation": "\n         <p>The URL to the webhook.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "payloadUrl": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> The AWS CodeBuild endpoint where webhook events are sent.</para>\n      ",
                      "documentation": "\n         <p> The AWS CodeBuild endpoint where webhook events are sent.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "secret": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> The secret token of the associated repository. </para>\n         <note>\n            <para> A Bitbucket webhook does not support <code>secret</code>. </para>\n         </note>\n      ",
                      "documentation": "\n         <p> The secret token of the associated repository. </p>\n         <note>\n            <p> A Bitbucket webhook does not support <code>secret</code>. </p>\n         </note>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "branchFilter": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
                      "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "lastModifiedSecret": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para> A timestamp that indicates the last time a repository's secret token was modified.\n      </para>\n      ",
                      "documentation": "\n         <p> A timestamp that indicates the last time a repository's secret token was modified.\n      </p>\n      ",
                      "shape_name": "Timestamp"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</para>\n      ",
                  "documentation": "\n         <p>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</p>\n      ",
                  "shape_name": "Webhook"
                },
                "vpcConfig": {
                  "type": "structure",
                  "members": {
                    "vpcId": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "subnets": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                      "shape_name": "Subnets",
                      "max_length": 16,
                      "members": {
                        "type": "string",
                        "shape_name": "NonEmptyString",
                        "documentation": null,
                        "min_length": 1
                      }
                    },
                    "securityGroupIds": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                      "shape_name": "SecurityGroupIds",
                      "max_length": 5,
                      "members": {
                        "type": "string",
                        "shape_name": "NonEmptyString",
                        "documentation": null,
                        "min_length": 1
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the VPC configuration that AWS CodeBuild accesses.</para>\n      ",
                  "documentation": "\n         <p>Information about the VPC configuration that AWS CodeBuild accesses.</p>\n      ",
                  "shape_name": "VpcConfig"
                },
                "badge": {
                  "type": "structure",
                  "members": {
                    "badgeEnabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</para>\n      ",
                      "documentation": "\n         <p>Set this to true to generate a publicly accessible URL for your project's build\n         badge.</p>\n      ",
                      "shape_name": "Boolean"
                    },
                    "badgeRequestUrl": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The publicly-accessible URL through which you can access the build badge for your\n         project. </para>\n         <para>The publicly accessible URL through which you can access the build badge for your\n         project. </para>\n      ",
                      "documentation": "\n         <p>The publicly-accessible URL through which you can access the build badge for your\n         project. </p>\n         <p>The publicly accessible URL through which you can access the build badge for your\n         project. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build badge for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build badge for the build project.</p>\n      ",
                  "shape_name": "ProjectBadge"
                },
                "logsConfig": {
                  "type": "structure",
                  "members": {
                    "cloudWatchLogs": {
                      "type": "structure",
                      "members": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED"
                          ],
                          "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                          "required": true,
                          "shape_name": "LogsConfigStatusType"
                        },
                        "groupName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                          "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                          "shape_name": "String"
                        },
                        "streamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                          "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                      "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                      "shape_name": "CloudWatchLogsConfig"
                    },
                    "s3Logs": {
                      "type": "structure",
                      "members": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED"
                          ],
                          "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                          "required": true,
                          "shape_name": "LogsConfigStatusType"
                        },
                        "location": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                          "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                      "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                      "shape_name": "S3LogsConfig"
                    }
                  },
                  "zonbookDocumentation": "\n         <para> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </para>\n      ",
                  "documentation": "\n         <p> Information about logs for the build project. A project can create logs in Amazon CloudWatch Logs, an S3\n         bucket, or both. </p>\n      ",
                  "shape_name": "LogsConfig"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about a build project.</para>\n      ",
              "documentation": "\n         <p>Information about a build project.</p>\n      ",
              "shape_name": "Project"
            }
          },
          "projectsNotFound": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The names of build projects for which information could not be found.</para>\n      ",
            "documentation": "\n         <p>The names of build projects for which information could not be found.</p>\n      ",
            "shape_name": "ProjectNames",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "BatchGetProjectsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Gets information about build projects.</p>\n      "
    },
    "ListProjects": {
      "name": "ListProjects",
      "input": {
        "type": "structure",
        "members": {
          "sortBy": {
            "type": "string",
            "enum": [
              "NAME",
              "CREATED_TIME",
              "LAST_MODIFIED_TIME"
            ],
            "zonbookDocumentation": "\n         <para>The criterion to be used to list build project names. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CREATED_TIME</code>: List based on when each build project was\n               created.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>LAST_MODIFIED_TIME</code>: List based on when information about each build\n               project was last changed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NAME</code>: List based on each build project's name.</para>\n            </listitem>\n         </itemizedlist>\n         <para>Use <code>sortOrder</code> to specify in what order to list the build project names\n         based on the preceding criteria.</para>\n      ",
            "documentation": "\n         <p>The criterion to be used to list build project names. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CREATED_TIME</code>: List based on when each build project was\n               created.</p>\n            </li>\n            <li>\n               <p>\n                  <code>LAST_MODIFIED_TIME</code>: List based on when information about each build\n               project was last changed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NAME</code>: List based on each build project's name.</p>\n            </li>\n         </ul>\n         <p>Use <code>sortOrder</code> to specify in what order to list the build project names\n         based on the preceding criteria.</p>\n      ",
            "shape_name": "ProjectSortByType"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "zonbookDocumentation": "\n         <para>The order in which to list build projects. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ASCENDING</code>: List in ascending order.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DESCENDING</code>: List in descending order.</para>\n            </listitem>\n         </itemizedlist>\n         <para>Use <code>sortBy</code> to specify the criterion to be used to list build project\n         names.</para>\n      ",
            "documentation": "\n         <p>The order in which to list build projects. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ASCENDING</code>: List in ascending order.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DESCENDING</code>: List in descending order.</p>\n            </li>\n         </ul>\n         <p>Use <code>sortBy</code> to specify the criterion to be used to list build project\n         names.</p>\n      ",
            "shape_name": "SortOrderType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <emphasis>next token</emphasis>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</para>\n      ",
            "documentation": "\n         <p>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <i>next token</i>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          }
        },
        "shape_name": "ListProjectsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <emphasis>next token</emphasis>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</para>\n      ",
            "documentation": "\n         <p>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <i>next token</i>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</p>\n      ",
            "shape_name": "String"
          },
          "projects": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The list of build project names, with each build project name representing a single\n         build project.</para>\n      ",
            "documentation": "\n         <p>The list of build project names, with each build project name representing a single\n         build project.</p>\n      ",
            "shape_name": "ProjectNames",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "ListProjectsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Gets a list of build project names, with each build project name representing a single\n         build project.</p>\n      "
    },
    "DeleteProject": {
      "name": "DeleteProject",
      "input": {
        "type": "structure",
        "members": {
          "name": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the build project.</para>\n      ",
            "documentation": "\n         <p>The name of the build project.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          }
        },
        "shape_name": "DeleteProjectInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteProjectOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Deletes a build project.</p>\n      "
    },
    "InvalidateProjectCache": {
      "name": "InvalidateProjectCache",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild build project that the cache is reset for.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild build project that the cache is reset for.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          }
        },
        "shape_name": "InvalidateProjectCacheInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "InvalidateProjectCacheOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Resets the cache for a project.</p>\n      "
    },
    "CreateWebhook": {
      "name": "CreateWebhook",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectName",
            "min_length": 2,
            "max_length": 255
          },
          "branchFilter": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
            "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "CreateWebhookInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "webhook": {
            "type": "structure",
            "members": {
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The URL to the webhook.</para>\n      ",
                "documentation": "\n         <p>The URL to the webhook.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "payloadUrl": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> The AWS CodeBuild endpoint where webhook events are sent.</para>\n      ",
                "documentation": "\n         <p> The AWS CodeBuild endpoint where webhook events are sent.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "secret": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> The secret token of the associated repository. </para>\n         <note>\n            <para> A Bitbucket webhook does not support <code>secret</code>. </para>\n         </note>\n      ",
                "documentation": "\n         <p> The secret token of the associated repository. </p>\n         <note>\n            <p> A Bitbucket webhook does not support <code>secret</code>. </p>\n         </note>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "branchFilter": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
                "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
                "shape_name": "String"
              },
              "lastModifiedSecret": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para> A timestamp that indicates the last time a repository's secret token was modified.\n      </para>\n      ",
                "documentation": "\n         <p> A timestamp that indicates the last time a repository's secret token was modified.\n      </p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</para>\n      ",
            "documentation": "\n         <p>Information about a webhook that connects repository events to a build project in\n         AWS CodeBuild.</p>\n      ",
            "shape_name": "Webhook"
          }
        },
        "shape_name": "CreateWebhookOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>There was a problem with the underlying OAuth provider.</para>\n      ",
          "documentation": "\n         <p>There was a problem with the underlying OAuth provider.</p>\n      ",
          "shape_name": "OAuthProviderException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be created, because an AWS resource with the same\n         settings already exists.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be created, because an AWS resource with the same\n         settings already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>For an existing AWS CodeBuild build project that has its source code stored in a GitHub or\n         Bitbucket repository, enables AWS CodeBuild to start rebuilding the source code every time a code\n         change is pushed to the repository.</p>\n         <important>\n            <p>If you enable webhooks for an AWS CodeBuild project, and the project is used as a build step\n            in AWS CodePipeline, then two identical builds are created for each commit. One build is triggered\n            through webhooks, and one through AWS CodePipeline. Because billing is on a per-build basis, you\n            are billed for both builds. Therefore, if you are using AWS CodePipeline, we recommend that you\n            disable webhooks in AWS CodeBuild. In the AWS CodeBuild console, clear the Webhook box. For more\n            information, see step 5 in <a href=\"http://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console\">Change a\n               Build Project's Settings</a>.</p>\n         </important>\n      "
    },
    "DeleteWebhook": {
      "name": "DeleteWebhook",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectName",
            "min_length": 2,
            "max_length": 255
          }
        },
        "shape_name": "DeleteWebhookInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DeleteWebhookOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>There was a problem with the underlying OAuth provider.</para>\n      ",
          "documentation": "\n         <p>There was a problem with the underlying OAuth provider.</p>\n      ",
          "shape_name": "OAuthProviderException"
        }
      ],
      "documentation": "\n         <p>For an existing AWS CodeBuild build project that has its source code stored in a GitHub or\n         Bitbucket repository, stops AWS CodeBuild from rebuilding the source code every time a code change\n         is pushed to the repository.</p>\n      "
    },
    "UpdateWebhook": {
      "name": "UpdateWebhook",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "pattern": "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
            "required": true,
            "shape_name": "ProjectName",
            "min_length": 2,
            "max_length": 255
          },
          "branchFilter": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
            "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
            "shape_name": "String"
          },
          "rotateSecret": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para> A boolean value that specifies whether the associated GitHub repository's secret token\n         should be updated. If you use Bitbucket for your repository, <code>rotateSecret</code> is\n         ignored. </para>\n      ",
            "documentation": "\n         <p> A boolean value that specifies whether the associated GitHub repository's secret token\n         should be updated. If you use Bitbucket for your repository, <code>rotateSecret</code> is\n         ignored. </p>\n      ",
            "shape_name": "Boolean"
          }
        },
        "shape_name": "UpdateWebhookInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "webhook": {
            "type": "structure",
            "members": {
              "url": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The URL to the webhook.</para>\n      ",
                "documentation": "\n         <p>The URL to the webhook.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "payloadUrl": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> The AWS CodeBuild endpoint where webhook events are sent.</para>\n      ",
                "documentation": "\n         <p> The AWS CodeBuild endpoint where webhook events are sent.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "secret": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> The secret token of the associated repository. </para>\n         <note>\n            <para> A Bitbucket webhook does not support <code>secret</code>. </para>\n         </note>\n      ",
                "documentation": "\n         <p> The secret token of the associated repository. </p>\n         <note>\n            <p> A Bitbucket webhook does not support <code>secret</code>. </p>\n         </note>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "branchFilter": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</para>\n      ",
                "documentation": "\n         <p>A regular expression used to determine which repository branches are built when a\n         webhook is triggered. If the name of a branch matches the regular expression, then it is\n         built. If <code>branchFilter</code> is empty, then all branches are built.</p>\n      ",
                "shape_name": "String"
              },
              "lastModifiedSecret": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para> A timestamp that indicates the last time a repository's secret token was modified.\n      </para>\n      ",
                "documentation": "\n         <p> A timestamp that indicates the last time a repository's secret token was modified.\n      </p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <para> Information about a repository's webhook that is associated with a project in AWS CodeBuild.\n      </para>\n      ",
            "documentation": "\n         <p> Information about a repository's webhook that is associated with a project in AWS CodeBuild.\n      </p>\n      ",
            "shape_name": "Webhook"
          }
        },
        "shape_name": "UpdateWebhookOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>There was a problem with the underlying OAuth provider.</para>\n      ",
          "documentation": "\n         <p>There was a problem with the underlying OAuth provider.</p>\n      ",
          "shape_name": "OAuthProviderException"
        }
      ],
      "documentation": "\n         <p> Updates the webhook associated with an AWS CodeBuild build project. </p>\n         <note>\n            <p> If you use Bitbucket for your repository, <code>rotateSecret</code> is ignored.\n         </p>\n         </note>\n      "
    },
    "StartBuild": {
      "name": "StartBuild",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild build project to start running a build.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild build project to start running a build.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "secondarySourcesOverride": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
            "shape_name": "ProjectSources",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODECOMMIT",
                    "CODEPIPELINE",
                    "GITHUB",
                    "S3",
                    "BITBUCKET",
                    "GITHUB_ENTERPRISE",
                    "NO_SOURCE"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "SourceType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "gitCloneDepth": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                  "shape_name": "GitCloneDepth",
                  "min_length": 0
                },
                "buildspec": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                  "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                  "shape_name": "String"
                },
                "auth": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "OAUTH"
                      ],
                      "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                      "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                      "required": true,
                      "shape_name": "SourceAuthType"
                    },
                    "resource": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                      "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                  "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                  "shape_name": "SourceAuth"
                },
                "reportBuildStatus": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "insecureSsl": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                  "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "sourceIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
              "shape_name": "ProjectSource"
            }
          },
          "secondarySourcesVersionOverride": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectSourceVersion</code> objects that specify one or more versions\n         of the project's secondary sources to be used for this build only. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectSourceVersion</code> objects that specify one or more versions\n         of the project's secondary sources to be used for this build only. </p>\n      ",
            "shape_name": "ProjectSecondarySourceVersions",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "sourceIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>An identifier for a source in the build project.</para>\n      ",
                  "documentation": "\n         <p>An identifier for a source in the build project.</p>\n      ",
                  "required": true,
                  "shape_name": "String"
                },
                "sourceVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The source version for the corresponding source identifier. If specified, must be one\n         of:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The source version for the corresponding source identifier. If specified, must be one\n         of:</p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>A source identifier and its corresponding version.</para>\n      ",
              "documentation": "\n         <p>A source identifier and its corresponding version.</p>\n      ",
              "shape_name": "ProjectSourceVersion"
            }
          },
          "sourceVersion": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A version of the build input to be built, for this build only. If not specified, the\n         latest version is used. If specified, must be one of:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>A version of the build input to be built, for this build only. If not specified, the\n         latest version is used. If specified, must be one of:</p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "String"
          },
          "artifactsOverride": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "CODEPIPELINE",
                  "S3",
                  "NO_ARTIFACTS"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "ArtifactsType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "path": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "String"
              },
              "namespaceType": {
                "type": "string",
                "enum": [
                  "NONE",
                  "BUILD_ID"
                ],
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                "shape_name": "ArtifactNamespace"
              },
              "name": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "packaging": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ZIP"
                ],
                "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                "shape_name": "ArtifactPackaging"
              },
              "overrideArtifactName": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "encryptionDisabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                "shape_name": "WrapperBoolean"
              },
              "artifactIdentifier": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>Build output artifact settings that override, for this build only, the latest ones\n         already defined in the build project.</para>\n      ",
            "documentation": "\n         <p>Build output artifact settings that override, for this build only, the latest ones\n         already defined in the build project.</p>\n      ",
            "shape_name": "ProjectArtifacts"
          },
          "secondaryArtifactsOverride": {
            "type": "list",
            "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
            "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
            "shape_name": "ProjectArtifactsList",
            "min_length": 0,
            "max_length": 12,
            "members": {
              "type": "structure",
              "members": {
                "type": {
                  "type": "string",
                  "enum": [
                    "CODEPIPELINE",
                    "S3",
                    "NO_ARTIFACTS"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The build project has build output generated through\n               AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_ARTIFACTS</code>: The build project does not produce any build\n               output.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project stores build output in Amazon Simple Storage Service (Amazon S3).</p>\n            </li>\n         </ul>\n      ",
                  "required": true,
                  "shape_name": "ArtifactsType"
                },
                "location": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Information about the build output artifact location:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Information about the build output artifact location:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output locations instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               bucket.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "path": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>namespaceType</code> and <code>name</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the path to the output\n               artifact. If <code>path</code> is not specified, <code>path</code> is not\n               used.</p>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>NONE</code>, and <code>name</code> is set to\n            <code>MyArtifact.zip</code>, the output artifact is stored in the output bucket at\n            <code>MyArtifacts/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "String"
                },
                "namespaceType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "BUILD_ID"
                  ],
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n         <para>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>.</para>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>name</code>, the pattern that AWS CodeBuild uses to\n         determine the name and location to store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>BUILD_ID</code>: Include the build ID in the location of the build\n                     output artifact.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>NONE</code>: Do not include the build ID. This is the default if\n                        <code>namespaceType</code> is not specified.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n         <p>For example, if <code>path</code> is set to <code>MyArtifacts</code>,\n            <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code> is set\n         to <code>MyArtifact.zip</code>, the output artifact is stored in\n               <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>.</p>\n      ",
                  "shape_name": "ArtifactNamespace"
                },
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</para>\n            </listitem>\n         </itemizedlist>\n         <para>For example:</para>\n         <itemizedlist>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>/MyArtifact.zip</code>. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </para>\n            </listitem>\n            <listitem>\n               <para> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<emphasis>build-ID</emphasis>\n                  </code>. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>Along with <code>path</code> and <code>namespaceType</code>, the pattern that AWS CodeBuild uses\n         to name and store the output artifact:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output names instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, this is the name of the output\n               artifact object. If you set the name to be a forward slash (\"/\"), the artifact is\n               stored in the root of the output bucket.</p>\n            </li>\n         </ul>\n         <p>For example:</p>\n         <ul>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to <code>MyArtifact.zip</code>, then the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>/MyArtifact.zip</code>. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is empty, <code>namespaceType</code> is set to\n                  <code>NONE</code>, and <code>name</code> is set to \"<code>/</code>\", the output\n               artifact is stored in the root of the output bucket. </p>\n            </li>\n            <li>\n               <p> If <code>path</code> is set to <code>MyArtifacts</code>,\n                  <code>namespaceType</code> is set to <code>BUILD_ID</code>, and <code>name</code>\n               is set to \"<code>/</code>\", the output artifact is stored in\n                     <code>MyArtifacts/<i>build-ID</i>\n                  </code>. </p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "packaging": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ZIP"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of build output artifact to create:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</para>\n            </listitem>\n            <listitem>\n               <para>If <code>type</code> is set to <code>S3</code>, valid values include:</para>\n               <itemizedlist>\n                  <listitem>\n                     <para>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</para>\n                  </listitem>\n                  <listitem>\n                     <para>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of build output artifact to create:</p>\n         <ul>\n            <li>\n               <p>If <code>type</code> is set to <code>CODEPIPELINE</code>, AWS CodePipeline ignores this value\n               if specified. This is because AWS CodePipeline manages its build output artifacts instead of\n               AWS CodeBuild.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>NO_ARTIFACTS</code>, this value is ignored if\n               specified, because no build output is produced.</p>\n            </li>\n            <li>\n               <p>If <code>type</code> is set to <code>S3</code>, valid values include:</p>\n               <ul>\n                  <li>\n                     <p>\n                        <code>NONE</code>: AWS CodeBuild creates in the output bucket a folder that contains\n                     the build output. This is the default if <code>packaging</code> is not\n                     specified.</p>\n                  </li>\n                  <li>\n                     <p>\n                        <code>ZIP</code>: AWS CodeBuild creates in the output bucket a ZIP file that\n                     contains the build output.</p>\n                  </li>\n               </ul>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ArtifactPackaging"
                },
                "overrideArtifactName": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                  "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "encryptionDisabled": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </para>\n      ",
                  "documentation": "\n         <p> Set to true if you do not want your output artifacts encrypted. This option is valid\n         only if your artifacts type is Amazon Simple Storage Service (Amazon S3). If this is set with another artifacts type, an\n         invalidInputException is thrown. </p>\n      ",
                  "shape_name": "WrapperBoolean"
                },
                "artifactIdentifier": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                  "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about the build output artifacts for the build project.</para>\n      ",
              "documentation": "\n         <p>Information about the build output artifacts for the build project.</p>\n      ",
              "shape_name": "ProjectArtifacts"
            }
          },
          "environmentVariablesOverride": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A set of environment variables that overrides, for this build only, the latest ones\n         already defined in the build project.</para>\n      ",
            "documentation": "\n         <p>A set of environment variables that overrides, for this build only, the latest ones\n         already defined in the build project.</p>\n      ",
            "shape_name": "EnvironmentVariables",
            "members": {
              "type": "structure",
              "members": {
                "name": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                  "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                  "required": true,
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                  "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                  "required": true,
                  "shape_name": "String"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PLAINTEXT",
                    "PARAMETER_STORE"
                  ],
                  "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "EnvironmentVariableType"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
              "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
              "shape_name": "EnvironmentVariable"
            }
          },
          "sourceTypeOverride": {
            "type": "string",
            "enum": [
              "CODECOMMIT",
              "CODEPIPELINE",
              "GITHUB",
              "S3",
              "BITBUCKET",
              "GITHUB_ENTERPRISE",
              "NO_SOURCE"
            ],
            "zonbookDocumentation": "\n         <para>A source input type, for this build, that overrides the source input defined in the\n         build project.</para>\n      ",
            "documentation": "\n         <p>A source input type, for this build, that overrides the source input defined in the\n         build project.</p>\n      ",
            "shape_name": "SourceType"
          },
          "sourceLocationOverride": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A location that overrides, for this build, the source location for the one defined in\n         the build project.</para>\n      ",
            "documentation": "\n         <p>A location that overrides, for this build, the source location for the one defined in\n         the build project.</p>\n      ",
            "shape_name": "String"
          },
          "sourceAuthOverride": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "OAUTH"
                ],
                "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                "required": true,
                "shape_name": "SourceAuthType"
              },
              "resource": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>An authorization type for this build that overrides the one defined in the build\n         project. This override applies only if the build project's source is BitBucket or\n         GitHub.</para>\n      ",
            "documentation": "\n         <p>An authorization type for this build that overrides the one defined in the build\n         project. This override applies only if the build project's source is BitBucket or\n         GitHub.</p>\n      ",
            "shape_name": "SourceAuth"
          },
          "gitCloneDepthOverride": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The user-defined depth of history, with a minimum value of 0, that overrides, for this\n         build only, any previous depth of history defined in the build project.</para>\n      ",
            "documentation": "\n         <p>The user-defined depth of history, with a minimum value of 0, that overrides, for this\n         build only, any previous depth of history defined in the build project.</p>\n      ",
            "shape_name": "GitCloneDepth",
            "min_length": 0
          },
          "buildspecOverride": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A build spec declaration that overrides, for this build only, the latest one already\n         defined in the build project.</para>\n      ",
            "documentation": "\n         <p>A build spec declaration that overrides, for this build only, the latest one already\n         defined in the build project.</p>\n      ",
            "shape_name": "String"
          },
          "insecureSslOverride": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>Enable this flag to override the insecure SSL setting that is specified in the build\n         project. The insecure SSL setting determines whether to ignore SSL warnings while\n         connecting to the project source code. This override applies only if the build's source is\n         GitHub Enterprise.</para>\n      ",
            "documentation": "\n         <p>Enable this flag to override the insecure SSL setting that is specified in the build\n         project. The insecure SSL setting determines whether to ignore SSL warnings while\n         connecting to the project source code. This override applies only if the build's source is\n         GitHub Enterprise.</p>\n      ",
            "shape_name": "WrapperBoolean"
          },
          "reportBuildStatusOverride": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para> Set to true to report to your source provider the status of a build's start and\n         completion. If you use this option with a source provider other than GitHub, GitHub\n         Enterprise, or Bitbucket, an invalidInputException is thrown. </para>\n      ",
            "documentation": "\n         <p> Set to true to report to your source provider the status of a build's start and\n         completion. If you use this option with a source provider other than GitHub, GitHub\n         Enterprise, or Bitbucket, an invalidInputException is thrown. </p>\n      ",
            "shape_name": "WrapperBoolean"
          },
          "environmentTypeOverride": {
            "type": "string",
            "enum": [
              "WINDOWS_CONTAINER",
              "LINUX_CONTAINER"
            ],
            "zonbookDocumentation": "\n         <para>A container type for this build that overrides the one specified in the build\n         project.</para>\n      ",
            "documentation": "\n         <p>A container type for this build that overrides the one specified in the build\n         project.</p>\n      ",
            "shape_name": "EnvironmentType"
          },
          "imageOverride": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of an image for this build that overrides the one specified in the build\n         project.</para>\n      ",
            "documentation": "\n         <p>The name of an image for this build that overrides the one specified in the build\n         project.</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "computeTypeOverride": {
            "type": "string",
            "enum": [
              "BUILD_GENERAL1_SMALL",
              "BUILD_GENERAL1_MEDIUM",
              "BUILD_GENERAL1_LARGE"
            ],
            "zonbookDocumentation": "\n         <para>The name of a compute type for this build that overrides the one specified in the build\n         project.</para>\n      ",
            "documentation": "\n         <p>The name of a compute type for this build that overrides the one specified in the build\n         project.</p>\n      ",
            "shape_name": "ComputeType"
          },
          "certificateOverride": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of a certificate for this build that overrides the one specified in the build\n         project.</para>\n      ",
            "documentation": "\n         <p>The name of a certificate for this build that overrides the one specified in the build\n         project.</p>\n      ",
            "shape_name": "String"
          },
          "cacheOverride": {
            "type": "structure",
            "members": {
              "type": {
                "type": "string",
                "enum": [
                  "NO_CACHE",
                  "S3"
                ],
                "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                "required": true,
                "shape_name": "CacheType"
              },
              "location": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              }
            },
            "zonbookDocumentation": "\n         <para>A ProjectCache object specified for this build that overrides the one defined in the\n         build project.</para>\n      ",
            "documentation": "\n         <p>A ProjectCache object specified for this build that overrides the one defined in the\n         build project.</p>\n      ",
            "shape_name": "ProjectCache"
          },
          "serviceRoleOverride": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of a service role for this build that overrides the one specified in the build\n         project.</para>\n      ",
            "documentation": "\n         <p>The name of a service role for this build that overrides the one specified in the build\n         project.</p>\n      ",
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "privilegedModeOverride": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>Enable this flag to override privileged mode in the build project.</para>\n      ",
            "documentation": "\n         <p>Enable this flag to override privileged mode in the build project.</p>\n      ",
            "shape_name": "WrapperBoolean"
          },
          "timeoutInMinutesOverride": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The number of build timeout minutes, from 5 to 480 (8 hours), that overrides, for this\n         build only, the latest setting already defined in the build project.</para>\n      ",
            "documentation": "\n         <p>The number of build timeout minutes, from 5 to 480 (8 hours), that overrides, for this\n         build only, the latest setting already defined in the build project.</p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "queuedTimeoutInMinutesOverride": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
            "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
            "shape_name": "TimeOut",
            "min_length": 5,
            "max_length": 480
          },
          "idempotencyToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>A unique, case sensitive identifier you provide to ensure the idempotency of the\n         StartBuild request. The token is included in the StartBuild request and is valid for 12\n         hours. If you repeat the StartBuild request with the same token, but change a parameter,\n         AWS CodeBuild returns a parameter mismatch error. </para>\n      ",
            "documentation": "\n         <p>A unique, case sensitive identifier you provide to ensure the idempotency of the\n         StartBuild request. The token is included in the StartBuild request and is valid for 12\n         hours. If you repeat the StartBuild request with the same token, but change a parameter,\n         AWS CodeBuild returns a parameter mismatch error. </p>\n      ",
            "shape_name": "String"
          },
          "logsConfigOverride": {
            "type": "structure",
            "members": {
              "cloudWatchLogs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "groupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  },
                  "streamName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                    "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. Amazon CloudWatch Logs are enabled by default. </p>\n      ",
                "shape_name": "CloudWatchLogsConfig"
              },
              "s3Logs": {
                "type": "structure",
                "members": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "LogsConfigStatusType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                    "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </para>\n      ",
                "documentation": "\n         <p> Information about logs built to an S3 bucket for a build project. S3 logs are not\n         enabled by default. </p>\n      ",
                "shape_name": "S3LogsConfig"
              }
            },
            "zonbookDocumentation": "\n         <para> Log settings for this build that override the log settings defined in the build\n         project. </para>\n      ",
            "documentation": "\n         <p> Log settings for this build that override the log settings defined in the build\n         project. </p>\n      ",
            "shape_name": "LogsConfig"
          }
        },
        "shape_name": "StartBuildInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "build": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The unique ID for the build.</para>\n      ",
                "documentation": "\n         <p>The unique ID for the build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "startTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build process started, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build process started, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "endTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build process ended, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build process ended, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "currentPhase": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The current build phase.</para>\n      ",
                "documentation": "\n         <p>The current build phase.</p>\n      ",
                "shape_name": "String"
              },
              "buildStatus": {
                "type": "string",
                "enum": [
                  "SUCCEEDED",
                  "FAILED",
                  "FAULT",
                  "TIMED_OUT",
                  "IN_PROGRESS",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n         <para>The current status of the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The current status of the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build timed out.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "StatusType"
              },
              "sourceVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Any version identifier for the version of the source code to be built.</para>\n      ",
                "documentation": "\n         <p>Any version identifier for the version of the source code to be built.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "resolvedSourceVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for the version of this build's source code. </para>\n         <itemizedlist>\n            <listitem>\n               <para> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </para>\n            </listitem>\n            <listitem>\n               <para> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </para>\n            </listitem>\n            <listitem>\n               <para> For Amazon Simple Storage Service (Amazon S3), this does not apply. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p> An identifier for the version of this build's source code. </p>\n         <ul>\n            <li>\n               <p> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </p>\n            </li>\n            <li>\n               <p> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </p>\n            </li>\n            <li>\n               <p> For Amazon Simple Storage Service (Amazon S3), this does not apply. </p>\n            </li>\n         </ul>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "projectName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
                "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "phases": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</para>\n      ",
                "documentation": "\n         <p>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</p>\n      ",
                "shape_name": "BuildPhases",
                "members": {
                  "type": "structure",
                  "members": {
                    "phaseType": {
                      "type": "string",
                      "enum": [
                        "SUBMITTED",
                        "QUEUED",
                        "PROVISIONING",
                        "DOWNLOAD_SOURCE",
                        "INSTALL",
                        "PRE_BUILD",
                        "BUILD",
                        "POST_BUILD",
                        "UPLOAD_ARTIFACTS",
                        "FINALIZING",
                        "COMPLETED"
                      ],
                      "zonbookDocumentation": "\n         <para>The name of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>COMPLETED</code>: The build has been completed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PROVISIONING</code>: The build environment is being set up.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUBMITTED</code>: The build has been submitted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The name of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLETED</code>: The build has been completed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PROVISIONING</code>: The build environment is being set up.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUBMITTED</code>: The build has been submitted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "BuildPhaseType"
                    },
                    "phaseStatus": {
                      "type": "string",
                      "enum": [
                        "SUCCEEDED",
                        "FAILED",
                        "FAULT",
                        "TIMED_OUT",
                        "IN_PROGRESS",
                        "STOPPED"
                      ],
                      "zonbookDocumentation": "\n         <para>The current status of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build phase failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build phase faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build phase stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build phase timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The current status of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build phase failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build phase faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build phase stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build phase timed out.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "StatusType"
                    },
                    "startTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para>When the build phase started, expressed in Unix time format.</para>\n      ",
                      "documentation": "\n         <p>When the build phase started, expressed in Unix time format.</p>\n      ",
                      "shape_name": "Timestamp"
                    },
                    "endTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para>When the build phase ended, expressed in Unix time format.</para>\n      ",
                      "documentation": "\n         <p>When the build phase ended, expressed in Unix time format.</p>\n      ",
                      "shape_name": "Timestamp"
                    },
                    "durationInSeconds": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <para>How long, in seconds, between the starting and ending times of the build's phase.</para>\n      ",
                      "documentation": "\n         <p>How long, in seconds, between the starting and ending times of the build's phase.</p>\n      ",
                      "shape_name": "WrapperLong"
                    },
                    "contexts": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</para>\n      ",
                      "documentation": "\n         <p>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</p>\n      ",
                      "shape_name": "PhaseContexts",
                      "members": {
                        "type": "structure",
                        "members": {
                          "statusCode": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The status code for the context of the build phase.</para>\n      ",
                            "documentation": "\n         <p>The status code for the context of the build phase.</p>\n      ",
                            "shape_name": "String"
                          },
                          "message": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</para>\n      ",
                            "documentation": "\n         <p>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</para>\n      ",
                        "documentation": "\n         <p>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</p>\n      ",
                        "shape_name": "PhaseContext"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about a stage for a build.</para>\n      ",
                  "documentation": "\n         <p>Information about a stage for a build.</p>\n      ",
                  "shape_name": "BuildPhase"
                }
              },
              "source": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODECOMMIT",
                      "CODEPIPELINE",
                      "GITHUB",
                      "S3",
                      "BITBUCKET",
                      "GITHUB_ENTERPRISE",
                      "NO_SOURCE"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "SourceType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "gitCloneDepth": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                    "shape_name": "GitCloneDepth",
                    "min_length": 0
                  },
                  "buildspec": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                    "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "auth": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OAUTH"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                        "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                        "required": true,
                        "shape_name": "SourceAuthType"
                      },
                      "resource": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                        "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                    "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                    "shape_name": "SourceAuth"
                  },
                  "reportBuildStatus": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "insecureSsl": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                    "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "sourceIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the source code to be built.</para>\n      ",
                "documentation": "\n         <p>Information about the source code to be built.</p>\n      ",
                "shape_name": "ProjectSource"
              },
              "secondarySources": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                "shape_name": "ProjectSources",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                  "shape_name": "ProjectSource"
                }
              },
              "secondarySourceVersions": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ProjectSecondarySourceVersions",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An identifier for a source in the build project.</para>\n      ",
                      "documentation": "\n         <p>An identifier for a source in the build project.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "sourceVersion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The source version for the corresponding source identifier. If specified, must be one\n         of:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The source version for the corresponding source identifier. If specified, must be one\n         of:</p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A source identifier and its corresponding version.</para>\n      ",
                  "documentation": "\n         <p>A source identifier and its corresponding version.</p>\n      ",
                  "shape_name": "ProjectSourceVersion"
                }
              },
              "artifacts": {
                "type": "structure",
                "members": {
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                    "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                    "shape_name": "String"
                  },
                  "sha256sum": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                    "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                    "shape_name": "String"
                  },
                  "md5sum": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                    "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                    "shape_name": "String"
                  },
                  "overrideArtifactName": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                    "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "encryptionDisabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                    "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "artifactIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the output artifacts for the build.</para>\n      ",
                "documentation": "\n         <p>Information about the output artifacts for the build.</p>\n      ",
                "shape_name": "BuildArtifacts"
              },
              "secondaryArtifacts": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                "shape_name": "BuildArtifactsList",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                      "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                      "shape_name": "String"
                    },
                    "sha256sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "md5sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                      "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about build output artifacts.</para>\n      ",
                  "documentation": "\n         <p>Information about build output artifacts.</p>\n      ",
                  "shape_name": "BuildArtifacts"
                }
              },
              "cache": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "NO_CACHE",
                      "S3"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "CacheType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the cache for the build.</para>\n      ",
                "documentation": "\n         <p>Information about the cache for the build.</p>\n      ",
                "shape_name": "ProjectCache"
              },
              "environment": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "WINDOWS_CONTAINER",
                      "LINUX_CONTAINER"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                    "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                    "required": true,
                    "shape_name": "EnvironmentType"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                    "required": true,
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "computeType": {
                    "type": "string",
                    "enum": [
                      "BUILD_GENERAL1_SMALL",
                      "BUILD_GENERAL1_MEDIUM",
                      "BUILD_GENERAL1_LARGE"
                    ],
                    "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ComputeType"
                  },
                  "environmentVariables": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                    "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                    "shape_name": "EnvironmentVariables",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                          "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                          "required": true,
                          "shape_name": "NonEmptyString",
                          "min_length": 1
                        },
                        "value": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                          "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "PLAINTEXT",
                            "PARAMETER_STORE"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "EnvironmentVariableType"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                      "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                      "shape_name": "EnvironmentVariable"
                    }
                  },
                  "privilegedMode": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                    "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "certificate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                    "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build environment for this build.</para>\n      ",
                "documentation": "\n         <p>Information about the build environment for this build.</p>\n      ",
                "shape_name": "ProjectEnvironment"
              },
              "serviceRole": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of a service role used for this build.</para>\n      ",
                "documentation": "\n         <p>The name of a service role used for this build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "logs": {
                "type": "structure",
                "members": {
                  "groupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs group for the build logs.</para>\n      ",
                    "documentation": "\n         <p>The name of the Amazon CloudWatch Logs group for the build logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "streamName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs stream for the build logs.</para>\n      ",
                    "documentation": "\n         <p>The name of the Amazon CloudWatch Logs stream for the build logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "deepLink": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The URL to an individual build log in Amazon CloudWatch Logs.</para>\n      ",
                    "documentation": "\n         <p>The URL to an individual build log in Amazon CloudWatch Logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "s3DeepLink": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The URL to a build log in an S3 bucket. </para>\n      ",
                    "documentation": "\n         <p> The URL to a build log in an S3 bucket. </p>\n      ",
                    "shape_name": "String"
                  },
                  "cloudWatchLogs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "groupName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. </para>\n      ",
                    "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. </p>\n      ",
                    "shape_name": "CloudWatchLogsConfig"
                  },
                  "s3Logs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                        "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about S3 logs for a build project. </para>\n      ",
                    "documentation": "\n         <p> Information about S3 logs for a build project. </p>\n      ",
                    "shape_name": "S3LogsConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build's logs in Amazon CloudWatch Logs.</para>\n      ",
                "documentation": "\n         <p>Information about the build's logs in Amazon CloudWatch Logs.</p>\n      ",
                "shape_name": "LogsLocation"
              },
              "timeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</para>\n      ",
                "documentation": "\n         <p>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</p>\n      ",
                "shape_name": "WrapperInt"
              },
              "queuedTimeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                "shape_name": "WrapperInt"
              },
              "buildComplete": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Whether the build is complete. True if complete; otherwise, false.</para>\n      ",
                "documentation": "\n         <p>Whether the build is complete. True if complete; otherwise, false.</p>\n      ",
                "shape_name": "Boolean"
              },
              "initiator": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The entity that started the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The entity that started the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</p>\n            </li>\n            <li>\n               <p>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</p>\n            </li>\n            <li>\n               <p>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "vpcConfig": {
                "type": "structure",
                "members": {
                  "vpcId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "subnets": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "Subnets",
                    "max_length": 16,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  },
                  "securityGroupIds": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "SecurityGroupIds",
                    "max_length": 5,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</para>\n      ",
                "documentation": "\n         <p>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</p>\n      ",
                "shape_name": "VpcConfig"
              },
              "networkInterface": {
                "type": "structure",
                "members": {
                  "subnetId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the subnet.</para>\n      ",
                    "documentation": "\n         <p>The ID of the subnet.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "networkInterfaceId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the network interface.</para>\n      ",
                    "documentation": "\n         <p>The ID of the network interface.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  }
                },
                "zonbookDocumentation": "\n         <para>Describes a network interface.</para>\n      ",
                "documentation": "\n         <p>Describes a network interface.</p>\n      ",
                "shape_name": "NetworkInterface"
              },
              "encryptionKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build to be run.</para>\n      ",
            "documentation": "\n         <p>Information about the build to be run.</p>\n      ",
            "shape_name": "Build"
          }
        },
        "shape_name": "StartBuildOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>An AWS service limit was exceeded for the calling AWS account.</para>\n      ",
          "documentation": "\n         <p>An AWS service limit was exceeded for the calling AWS account.</p>\n      ",
          "shape_name": "AccountLimitExceededException"
        }
      ],
      "documentation": "\n         <p>Starts running a build.</p>\n      "
    },
    "StopBuild": {
      "name": "StopBuild",
      "input": {
        "type": "structure",
        "members": {
          "id": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID of the build.</para>\n      ",
            "documentation": "\n         <p>The ID of the build.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          }
        },
        "shape_name": "StopBuildInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "build": {
            "type": "structure",
            "members": {
              "id": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The unique ID for the build.</para>\n      ",
                "documentation": "\n         <p>The unique ID for the build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build.</para>\n      ",
                "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "startTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build process started, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build process started, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "endTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the build process ended, expressed in Unix time format.</para>\n      ",
                "documentation": "\n         <p>When the build process ended, expressed in Unix time format.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "currentPhase": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The current build phase.</para>\n      ",
                "documentation": "\n         <p>The current build phase.</p>\n      ",
                "shape_name": "String"
              },
              "buildStatus": {
                "type": "string",
                "enum": [
                  "SUCCEEDED",
                  "FAILED",
                  "FAULT",
                  "TIMED_OUT",
                  "IN_PROGRESS",
                  "STOPPED"
                ],
                "zonbookDocumentation": "\n         <para>The current status of the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The current status of the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build timed out.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "StatusType"
              },
              "sourceVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>Any version identifier for the version of the source code to be built.</para>\n      ",
                "documentation": "\n         <p>Any version identifier for the version of the source code to be built.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "resolvedSourceVersion": {
                "type": "string",
                "zonbookDocumentation": "\n         <para> An identifier for the version of this build's source code. </para>\n         <itemizedlist>\n            <listitem>\n               <para> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </para>\n            </listitem>\n            <listitem>\n               <para> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </para>\n            </listitem>\n            <listitem>\n               <para> For Amazon Simple Storage Service (Amazon S3), this does not apply. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p> An identifier for the version of this build's source code. </p>\n         <ul>\n            <li>\n               <p> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </p>\n            </li>\n            <li>\n               <p> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </p>\n            </li>\n            <li>\n               <p> For Amazon Simple Storage Service (Amazon S3), this does not apply. </p>\n            </li>\n         </ul>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "projectName": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
                "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "phases": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</para>\n      ",
                "documentation": "\n         <p>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</p>\n      ",
                "shape_name": "BuildPhases",
                "members": {
                  "type": "structure",
                  "members": {
                    "phaseType": {
                      "type": "string",
                      "enum": [
                        "SUBMITTED",
                        "QUEUED",
                        "PROVISIONING",
                        "DOWNLOAD_SOURCE",
                        "INSTALL",
                        "PRE_BUILD",
                        "BUILD",
                        "POST_BUILD",
                        "UPLOAD_ARTIFACTS",
                        "FINALIZING",
                        "COMPLETED"
                      ],
                      "zonbookDocumentation": "\n         <para>The name of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>COMPLETED</code>: The build has been completed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PROVISIONING</code>: The build environment is being set up.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUBMITTED</code>: The build has been submitted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The name of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLETED</code>: The build has been completed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PROVISIONING</code>: The build environment is being set up.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUBMITTED</code>: The build has been submitted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "BuildPhaseType"
                    },
                    "phaseStatus": {
                      "type": "string",
                      "enum": [
                        "SUCCEEDED",
                        "FAILED",
                        "FAULT",
                        "TIMED_OUT",
                        "IN_PROGRESS",
                        "STOPPED"
                      ],
                      "zonbookDocumentation": "\n         <para>The current status of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build phase failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build phase faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build phase stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build phase timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The current status of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build phase failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build phase faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build phase stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build phase timed out.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "StatusType"
                    },
                    "startTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para>When the build phase started, expressed in Unix time format.</para>\n      ",
                      "documentation": "\n         <p>When the build phase started, expressed in Unix time format.</p>\n      ",
                      "shape_name": "Timestamp"
                    },
                    "endTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para>When the build phase ended, expressed in Unix time format.</para>\n      ",
                      "documentation": "\n         <p>When the build phase ended, expressed in Unix time format.</p>\n      ",
                      "shape_name": "Timestamp"
                    },
                    "durationInSeconds": {
                      "type": "long",
                      "zonbookDocumentation": "\n         <para>How long, in seconds, between the starting and ending times of the build's phase.</para>\n      ",
                      "documentation": "\n         <p>How long, in seconds, between the starting and ending times of the build's phase.</p>\n      ",
                      "shape_name": "WrapperLong"
                    },
                    "contexts": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</para>\n      ",
                      "documentation": "\n         <p>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</p>\n      ",
                      "shape_name": "PhaseContexts",
                      "members": {
                        "type": "structure",
                        "members": {
                          "statusCode": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The status code for the context of the build phase.</para>\n      ",
                            "documentation": "\n         <p>The status code for the context of the build phase.</p>\n      ",
                            "shape_name": "String"
                          },
                          "message": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</para>\n      ",
                            "documentation": "\n         <p>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</para>\n      ",
                        "documentation": "\n         <p>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</p>\n      ",
                        "shape_name": "PhaseContext"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about a stage for a build.</para>\n      ",
                  "documentation": "\n         <p>Information about a stage for a build.</p>\n      ",
                  "shape_name": "BuildPhase"
                }
              },
              "source": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CODECOMMIT",
                      "CODEPIPELINE",
                      "GITHUB",
                      "S3",
                      "BITBUCKET",
                      "GITHUB_ENTERPRISE",
                      "NO_SOURCE"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "SourceType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  },
                  "gitCloneDepth": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                    "shape_name": "GitCloneDepth",
                    "min_length": 0
                  },
                  "buildspec": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                    "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                    "shape_name": "String"
                  },
                  "auth": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OAUTH"
                        ],
                        "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                        "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                        "required": true,
                        "shape_name": "SourceAuthType"
                      },
                      "resource": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                        "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                    "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                    "shape_name": "SourceAuth"
                  },
                  "reportBuildStatus": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                    "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "insecureSsl": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                    "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "sourceIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the source code to be built.</para>\n      ",
                "documentation": "\n         <p>Information about the source code to be built.</p>\n      ",
                "shape_name": "ProjectSource"
              },
              "secondarySources": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                "shape_name": "ProjectSources",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                  "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                  "shape_name": "ProjectSource"
                }
              },
              "secondarySourceVersions": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "ProjectSecondarySourceVersions",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An identifier for a source in the build project.</para>\n      ",
                      "documentation": "\n         <p>An identifier for a source in the build project.</p>\n      ",
                      "required": true,
                      "shape_name": "String"
                    },
                    "sourceVersion": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The source version for the corresponding source identifier. If specified, must be one\n         of:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The source version for the corresponding source identifier. If specified, must be one\n         of:</p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A source identifier and its corresponding version.</para>\n      ",
                  "documentation": "\n         <p>A source identifier and its corresponding version.</p>\n      ",
                  "shape_name": "ProjectSourceVersion"
                }
              },
              "artifacts": {
                "type": "structure",
                "members": {
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                    "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                    "shape_name": "String"
                  },
                  "sha256sum": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                    "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                    "shape_name": "String"
                  },
                  "md5sum": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                    "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                    "shape_name": "String"
                  },
                  "overrideArtifactName": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                    "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "encryptionDisabled": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                    "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "artifactIdentifier": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                    "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the output artifacts for the build.</para>\n      ",
                "documentation": "\n         <p>Information about the output artifacts for the build.</p>\n      ",
                "shape_name": "BuildArtifacts"
              },
              "secondaryArtifacts": {
                "type": "list",
                "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                "shape_name": "BuildArtifactsList",
                "min_length": 0,
                "max_length": 12,
                "members": {
                  "type": "structure",
                  "members": {
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                      "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                      "shape_name": "String"
                    },
                    "sha256sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "md5sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                      "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about build output artifacts.</para>\n      ",
                  "documentation": "\n         <p>Information about build output artifacts.</p>\n      ",
                  "shape_name": "BuildArtifacts"
                }
              },
              "cache": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "NO_CACHE",
                      "S3"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "CacheType"
                  },
                  "location": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the cache for the build.</para>\n      ",
                "documentation": "\n         <p>Information about the cache for the build.</p>\n      ",
                "shape_name": "ProjectCache"
              },
              "environment": {
                "type": "structure",
                "members": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "WINDOWS_CONTAINER",
                      "LINUX_CONTAINER"
                    ],
                    "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                    "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                    "required": true,
                    "shape_name": "EnvironmentType"
                  },
                  "image": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                    "required": true,
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "computeType": {
                    "type": "string",
                    "enum": [
                      "BUILD_GENERAL1_SMALL",
                      "BUILD_GENERAL1_MEDIUM",
                      "BUILD_GENERAL1_LARGE"
                    ],
                    "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                    "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                    "required": true,
                    "shape_name": "ComputeType"
                  },
                  "environmentVariables": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                    "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                    "shape_name": "EnvironmentVariables",
                    "members": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                          "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                          "required": true,
                          "shape_name": "NonEmptyString",
                          "min_length": 1
                        },
                        "value": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                          "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                          "required": true,
                          "shape_name": "String"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "PLAINTEXT",
                            "PARAMETER_STORE"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                          "shape_name": "EnvironmentVariableType"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                      "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                      "shape_name": "EnvironmentVariable"
                    }
                  },
                  "privilegedMode": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                    "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                    "shape_name": "WrapperBoolean"
                  },
                  "certificate": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                    "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                    "shape_name": "String"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build environment for this build.</para>\n      ",
                "documentation": "\n         <p>Information about the build environment for this build.</p>\n      ",
                "shape_name": "ProjectEnvironment"
              },
              "serviceRole": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The name of a service role used for this build.</para>\n      ",
                "documentation": "\n         <p>The name of a service role used for this build.</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              },
              "logs": {
                "type": "structure",
                "members": {
                  "groupName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs group for the build logs.</para>\n      ",
                    "documentation": "\n         <p>The name of the Amazon CloudWatch Logs group for the build logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "streamName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs stream for the build logs.</para>\n      ",
                    "documentation": "\n         <p>The name of the Amazon CloudWatch Logs stream for the build logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "deepLink": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The URL to an individual build log in Amazon CloudWatch Logs.</para>\n      ",
                    "documentation": "\n         <p>The URL to an individual build log in Amazon CloudWatch Logs.</p>\n      ",
                    "shape_name": "String"
                  },
                  "s3DeepLink": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para> The URL to a build log in an S3 bucket. </para>\n      ",
                    "documentation": "\n         <p> The URL to a build log in an S3 bucket. </p>\n      ",
                    "shape_name": "String"
                  },
                  "cloudWatchLogs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "groupName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      },
                      "streamName": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                        "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. </para>\n      ",
                    "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. </p>\n      ",
                    "shape_name": "CloudWatchLogsConfig"
                  },
                  "s3Logs": {
                    "type": "structure",
                    "members": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "LogsConfigStatusType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                        "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para> Information about S3 logs for a build project. </para>\n      ",
                    "documentation": "\n         <p> Information about S3 logs for a build project. </p>\n      ",
                    "shape_name": "S3LogsConfig"
                  }
                },
                "zonbookDocumentation": "\n         <para>Information about the build's logs in Amazon CloudWatch Logs.</para>\n      ",
                "documentation": "\n         <p>Information about the build's logs in Amazon CloudWatch Logs.</p>\n      ",
                "shape_name": "LogsLocation"
              },
              "timeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</para>\n      ",
                "documentation": "\n         <p>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</p>\n      ",
                "shape_name": "WrapperInt"
              },
              "queuedTimeoutInMinutes": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                "shape_name": "WrapperInt"
              },
              "buildComplete": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>Whether the build is complete. True if complete; otherwise, false.</para>\n      ",
                "documentation": "\n         <p>Whether the build is complete. True if complete; otherwise, false.</p>\n      ",
                "shape_name": "Boolean"
              },
              "initiator": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The entity that started the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                "documentation": "\n         <p>The entity that started the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</p>\n            </li>\n            <li>\n               <p>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</p>\n            </li>\n            <li>\n               <p>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</p>\n            </li>\n         </ul>\n      ",
                "shape_name": "String"
              },
              "vpcConfig": {
                "type": "structure",
                "members": {
                  "vpcId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "subnets": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "Subnets",
                    "max_length": 16,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  },
                  "securityGroupIds": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                    "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                    "shape_name": "SecurityGroupIds",
                    "max_length": 5,
                    "members": {
                      "type": "string",
                      "shape_name": "NonEmptyString",
                      "documentation": null,
                      "min_length": 1
                    }
                  }
                },
                "zonbookDocumentation": "\n         <para>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</para>\n      ",
                "documentation": "\n         <p>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</p>\n      ",
                "shape_name": "VpcConfig"
              },
              "networkInterface": {
                "type": "structure",
                "members": {
                  "subnetId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the subnet.</para>\n      ",
                    "documentation": "\n         <p>The ID of the subnet.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  },
                  "networkInterfaceId": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ID of the network interface.</para>\n      ",
                    "documentation": "\n         <p>The ID of the network interface.</p>\n      ",
                    "shape_name": "NonEmptyString",
                    "min_length": 1
                  }
                },
                "zonbookDocumentation": "\n         <para>Describes a network interface.</para>\n      ",
                "documentation": "\n         <p>Describes a network interface.</p>\n      ",
                "shape_name": "NetworkInterface"
              },
              "encryptionKey": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                "shape_name": "NonEmptyString",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the build.</para>\n      ",
            "documentation": "\n         <p>Information about the build.</p>\n      ",
            "shape_name": "Build"
          }
        },
        "shape_name": "StopBuildOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Attempts to stop running a build.</p>\n      "
    },
    "ListBuilds": {
      "name": "ListBuilds",
      "input": {
        "type": "structure",
        "members": {
          "sortOrder": {
            "type": "string",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "zonbookDocumentation": "\n         <para>The order to list build IDs. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ASCENDING</code>: List the build IDs in ascending order by build ID.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DESCENDING</code>: List the build IDs in descending order by build\n               ID.</para>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The order to list build IDs. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ASCENDING</code>: List the build IDs in ascending order by build ID.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DESCENDING</code>: List the build IDs in descending order by build\n               ID.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "SortOrderType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <emphasis>next token</emphasis>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</para>\n      ",
            "documentation": "\n         <p>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <i>next token</i>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListBuildsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ids": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of build IDs, with each build ID representing a single build.</para>\n      ",
            "documentation": "\n         <p>A list of build IDs, with each build ID representing a single build.</p>\n      ",
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <emphasis>next token</emphasis>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</para>\n      ",
            "documentation": "\n         <p>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <i>next token</i>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListBuildsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Gets a list of build IDs, with each build ID representing a single build.</p>\n      "
    },
    "ListBuildsForProject": {
      "name": "ListBuildsForProject",
      "input": {
        "type": "structure",
        "members": {
          "projectName": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
            "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
            "required": true,
            "shape_name": "NonEmptyString",
            "min_length": 1
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "ASCENDING",
              "DESCENDING"
            ],
            "zonbookDocumentation": "\n         <para>The order to list build IDs. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ASCENDING</code>: List the build IDs in ascending order by build ID.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DESCENDING</code>: List the build IDs in descending order by build\n               ID.</para>\n            </listitem>\n         </itemizedlist>\n      ",
            "documentation": "\n         <p>The order to list build IDs. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ASCENDING</code>: List the build IDs in ascending order by build ID.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DESCENDING</code>: List the build IDs in descending order by build\n               ID.</p>\n            </li>\n         </ul>\n      ",
            "shape_name": "SortOrderType"
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <emphasis>next token</emphasis>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</para>\n      ",
            "documentation": "\n         <p>During a previous call, if there are more than 100 items in the list, only the first 100\n         items are returned, along with a unique string called a <i>next token</i>. To\n         get the next batch of items in the list, call this operation again, adding the next token\n         to the call. To get all of the items in the list, keep calling this operation with each\n         subsequent next token that is returned, until no more next tokens are returned.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListBuildsForProjectInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ids": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of build IDs for the specified build project, with each build ID representing a\n         single build.</para>\n      ",
            "documentation": "\n         <p>A list of build IDs for the specified build project, with each build ID representing a\n         single build.</p>\n      ",
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <emphasis>next token</emphasis>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</para>\n      ",
            "documentation": "\n         <p>If there are more than 100 items in the list, only the first 100 items are returned,\n         along with a unique string called a <i>next token</i>. To get the next batch\n         of items in the list, call this operation again, adding the next token to the call.</p>\n      ",
            "shape_name": "String"
          }
        },
        "shape_name": "ListBuildsForProjectOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        },
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The specified AWS resource cannot be found.</para>\n      ",
          "documentation": "\n         <p>The specified AWS resource cannot be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Gets a list of build IDs for the specified build project, with each build ID\n         representing a single build.</p>\n      "
    },
    "BatchGetBuilds": {
      "name": "BatchGetBuilds",
      "input": {
        "type": "structure",
        "members": {
          "ids": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The IDs of the builds.</para>\n      ",
            "documentation": "\n         <p>The IDs of the builds.</p>\n      ",
            "required": true,
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "BatchGetBuildsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "builds": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Information about the requested builds.</para>\n      ",
            "documentation": "\n         <p>Information about the requested builds.</p>\n      ",
            "shape_name": "Builds",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The unique ID for the build.</para>\n      ",
                  "documentation": "\n         <p>The unique ID for the build.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The Amazon Resource Name (ARN) of the build.</para>\n      ",
                  "documentation": "\n         <p>The Amazon Resource Name (ARN) of the build.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "startTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the build process started, expressed in Unix time format.</para>\n      ",
                  "documentation": "\n         <p>When the build process started, expressed in Unix time format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "endTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the build process ended, expressed in Unix time format.</para>\n      ",
                  "documentation": "\n         <p>When the build process ended, expressed in Unix time format.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "currentPhase": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The current build phase.</para>\n      ",
                  "documentation": "\n         <p>The current build phase.</p>\n      ",
                  "shape_name": "String"
                },
                "buildStatus": {
                  "type": "string",
                  "enum": [
                    "SUCCEEDED",
                    "FAILED",
                    "FAULT",
                    "TIMED_OUT",
                    "IN_PROGRESS",
                    "STOPPED"
                  ],
                  "zonbookDocumentation": "\n         <para>The current status of the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The current status of the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build timed out.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "StatusType"
                },
                "sourceVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Any version identifier for the version of the source code to be built.</para>\n      ",
                  "documentation": "\n         <p>Any version identifier for the version of the source code to be built.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "resolvedSourceVersion": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para> An identifier for the version of this build's source code. </para>\n         <itemizedlist>\n            <listitem>\n               <para> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </para>\n            </listitem>\n            <listitem>\n               <para> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </para>\n            </listitem>\n            <listitem>\n               <para> For Amazon Simple Storage Service (Amazon S3), this does not apply. </para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p> An identifier for the version of this build's source code. </p>\n         <ul>\n            <li>\n               <p> For AWS CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID. </p>\n            </li>\n            <li>\n               <p> For AWS CodePipeline, the source revision provided by AWS CodePipeline. </p>\n            </li>\n            <li>\n               <p> For Amazon Simple Storage Service (Amazon S3), this does not apply. </p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "projectName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of the AWS CodeBuild project.</para>\n      ",
                  "documentation": "\n         <p>The name of the AWS CodeBuild project.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "phases": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</para>\n      ",
                  "documentation": "\n         <p>Information about all previous build phases that are complete and information about any\n         current build phase that is not yet complete.</p>\n      ",
                  "shape_name": "BuildPhases",
                  "members": {
                    "type": "structure",
                    "members": {
                      "phaseType": {
                        "type": "string",
                        "enum": [
                          "SUBMITTED",
                          "QUEUED",
                          "PROVISIONING",
                          "DOWNLOAD_SOURCE",
                          "INSTALL",
                          "PRE_BUILD",
                          "BUILD",
                          "POST_BUILD",
                          "UPLOAD_ARTIFACTS",
                          "FINALIZING",
                          "COMPLETED"
                        ],
                        "zonbookDocumentation": "\n         <para>The name of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>COMPLETED</code>: The build has been completed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PROVISIONING</code>: The build environment is being set up.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUBMITTED</code>: The build has been submitted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The name of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD</code>: Core build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLETED</code>: The build has been completed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DOWNLOAD_SOURCE</code>: Source code is being downloaded in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FINALIZING</code>: The build process is completing in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>INSTALL</code>: Installation activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>POST_BUILD</code>: Post-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PRE_BUILD</code>: Pre-build activities typically occur in this build\n               phase.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PROVISIONING</code>: The build environment is being set up.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUBMITTED</code>: The build has been submitted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>UPLOAD_ARTIFACTS</code>: Build output artifacts are being uploaded to the\n               output location.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "BuildPhaseType"
                      },
                      "phaseStatus": {
                        "type": "string",
                        "enum": [
                          "SUCCEEDED",
                          "FAILED",
                          "FAULT",
                          "TIMED_OUT",
                          "IN_PROGRESS",
                          "STOPPED"
                        ],
                        "zonbookDocumentation": "\n         <para>The current status of the build phase. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>FAILED</code>: The build phase failed.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>FAULT</code>: The build phase faulted.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>STOPPED</code>: The build phase stopped.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>TIMED_OUT</code>: The build phase timed out.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The current status of the build phase. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>FAILED</code>: The build phase failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAULT</code>: The build phase faulted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code>: The build phase is still in progress.</p>\n            </li>\n            <li>\n               <p>\n                  <code>QUEUED</code>: The build has been submitted and is queued behind other\n               submitted builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>STOPPED</code>: The build phase stopped.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCEEDED</code>: The build phase succeeded.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TIMED_OUT</code>: The build phase timed out.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "StatusType"
                      },
                      "startTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <para>When the build phase started, expressed in Unix time format.</para>\n      ",
                        "documentation": "\n         <p>When the build phase started, expressed in Unix time format.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "endTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <para>When the build phase ended, expressed in Unix time format.</para>\n      ",
                        "documentation": "\n         <p>When the build phase ended, expressed in Unix time format.</p>\n      ",
                        "shape_name": "Timestamp"
                      },
                      "durationInSeconds": {
                        "type": "long",
                        "zonbookDocumentation": "\n         <para>How long, in seconds, between the starting and ending times of the build's phase.</para>\n      ",
                        "documentation": "\n         <p>How long, in seconds, between the starting and ending times of the build's phase.</p>\n      ",
                        "shape_name": "WrapperLong"
                      },
                      "contexts": {
                        "type": "list",
                        "zonbookDocumentation": "\n         <para>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</para>\n      ",
                        "documentation": "\n         <p>Additional information about a build phase, especially to help troubleshoot a failed\n         build.</p>\n      ",
                        "shape_name": "PhaseContexts",
                        "members": {
                          "type": "structure",
                          "members": {
                            "statusCode": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>The status code for the context of the build phase.</para>\n      ",
                              "documentation": "\n         <p>The status code for the context of the build phase.</p>\n      ",
                              "shape_name": "String"
                            },
                            "message": {
                              "type": "string",
                              "zonbookDocumentation": "\n         <para>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</para>\n      ",
                              "documentation": "\n         <p>An explanation of the build phase's context. This might include a command ID and an exit\n         code.</p>\n      ",
                              "shape_name": "String"
                            }
                          },
                          "zonbookDocumentation": "\n         <para>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</para>\n      ",
                          "documentation": "\n         <p>Additional information about a build phase that has an error. You can use this\n         information for troubleshooting.</p>\n      ",
                          "shape_name": "PhaseContext"
                        }
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about a stage for a build.</para>\n      ",
                    "documentation": "\n         <p>Information about a stage for a build.</p>\n      ",
                    "shape_name": "BuildPhase"
                  }
                },
                "source": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "CODECOMMIT",
                        "CODEPIPELINE",
                        "GITHUB",
                        "S3",
                        "BITBUCKET",
                        "GITHUB_ENTERPRISE",
                        "NO_SOURCE"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "SourceType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    },
                    "gitCloneDepth": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                      "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                      "shape_name": "GitCloneDepth",
                      "min_length": 0
                    },
                    "buildspec": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                      "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                      "shape_name": "String"
                    },
                    "auth": {
                      "type": "structure",
                      "members": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "OAUTH"
                          ],
                          "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                          "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                          "required": true,
                          "shape_name": "SourceAuthType"
                        },
                        "resource": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                          "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                      "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                      "shape_name": "SourceAuth"
                    },
                    "reportBuildStatus": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                      "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "insecureSsl": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                      "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "sourceIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the source code to be built.</para>\n      ",
                  "documentation": "\n         <p>Information about the source code to be built.</p>\n      ",
                  "shape_name": "ProjectSource"
                },
                "secondarySources": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para> An array of <code>ProjectSource</code> objects. </para>\n      ",
                  "documentation": "\n         <p> An array of <code>ProjectSource</code> objects. </p>\n      ",
                  "shape_name": "ProjectSources",
                  "min_length": 0,
                  "max_length": 12,
                  "members": {
                    "type": "structure",
                    "members": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "CODECOMMIT",
                          "CODEPIPELINE",
                          "GITHUB",
                          "S3",
                          "BITBUCKET",
                          "GITHUB_ENTERPRISE",
                          "NO_SOURCE"
                        ],
                        "zonbookDocumentation": "\n         <para>The type of repository that contains the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The type of repository that contains the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BITBUCKET</code>: The source code is in a Bitbucket repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODECOMMIT</code>: The source code is in an AWS CodeCommit repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CODEPIPELINE</code>: The source code settings are specified in the source\n               action of a pipeline in AWS CodePipeline.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GITHUB</code>: The source code is in a GitHub repository.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NO_SOURCE</code>: The project does not have input source code.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The source code is in an Amazon Simple Storage Service (Amazon S3) input bucket.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "SourceType"
                      },
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Information about the location of the source code to be built. Valid values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<emphasis>region-ID</emphasis>.amazonaws.com/v1/repos/<emphasis>repo-name</emphasis>\n                  </code>).</para>\n            </listitem>\n            <listitem>\n               <para>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </para>\n               <itemizedlist>\n                  <listitem>\n                     <para> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>object-name</emphasis>.zip</code>).\n                  </para>\n                  </listitem>\n                  <listitem>\n                     <para> The path to the folder that contains the source code (for example,\n                           <code>\n                           <emphasis>bucket-name</emphasis>/<emphasis>path</emphasis>/<emphasis>to</emphasis>/<emphasis>source-code</emphasis>/<emphasis>folder</emphasis>/</code>).\n                  </para>\n                  </listitem>\n               </itemizedlist>\n            </listitem>\n            <listitem>\n               <para>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <emphasis role=\"bold\">Authorize application</emphasis> page, for <emphasis role=\"bold\">Organization access</emphasis>, choose <emphasis role=\"bold\">Request\n                  access</emphasis> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <emphasis role=\"bold\">Authorize application</emphasis>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</para>\n            </listitem>\n            <listitem>\n               <para>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <emphasis role=\"bold\">Confirm access to your account</emphasis> page, choose\n                  <emphasis role=\"bold\">Grant access</emphasis>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>Information about the location of the source code to be built. Valid values\n         include:</p>\n         <ul>\n            <li>\n               <p>For source code settings that are specified in the source action of a pipeline in\n               AWS CodePipeline, <code>location</code> should not be specified. If it is specified, AWS CodePipeline\n               ignores it. This is because AWS CodePipeline uses the settings in a pipeline's source action\n               instead of this value.</p>\n            </li>\n            <li>\n               <p>For source code in an AWS CodeCommit repository, the HTTPS clone URL to the repository that\n               contains the source code and the build spec (for example,\n                     <code>https://git-codecommit.<i>region-ID</i>.amazonaws.com/v1/repos/<i>repo-name</i>\n                  </code>).</p>\n            </li>\n            <li>\n               <p>For source code in an Amazon Simple Storage Service (Amazon S3) input bucket, one of the following. </p>\n               <ul>\n                  <li>\n                     <p> The path to the ZIP file that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>object-name</i>.zip</code>).\n                  </p>\n                  </li>\n                  <li>\n                     <p> The path to the folder that contains the source code (for example,\n                           <code>\n                           <i>bucket-name</i>/<i>path</i>/<i>to</i>/<i>source-code</i>/<i>folder</i>/</code>).\n                  </p>\n                  </li>\n               </ul>\n            </li>\n            <li>\n               <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that\n               contains the source and the build spec. You must connect your AWS account to your\n               GitHub account. Use the AWS CodeBuild console to start creating a build project. When you use\n               the console to connect (or reconnect) with GitHub, on the GitHub <b>Authorize application</b> page, for <b>Organization access</b>, choose <b>Request\n                  access</b> next to each repository you want to allow AWS CodeBuild to have access\n               to, and then choose <b>Authorize application</b>. (After\n               you have connected to your GitHub account, you do not need to finish creating the\n               build project. You can leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this\n               connection, in the <code>source</code> object, set the <code>auth</code> object's\n                  <code>type</code> value to <code>OAUTH</code>.</p>\n            </li>\n            <li>\n               <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository\n               that contains the source and the build spec. You must connect your AWS account to\n               your Bitbucket account. Use the AWS CodeBuild console to start creating a build project. When\n               you use the console to connect (or reconnect) with Bitbucket, on the Bitbucket\n                  <b>Confirm access to your account</b> page, choose\n                  <b>Grant access</b>. (After you have connected to your\n               Bitbucket account, you do not need to finish creating the build project. You can\n               leave the AWS CodeBuild console.) To instruct AWS CodeBuild to use this connection, in the\n                  <code>source</code> object, set the <code>auth</code> object's <code>type</code>\n               value to <code>OAUTH</code>.</p>\n            </li>\n         </ul>\n      ",
                        "shape_name": "String"
                      },
                      "gitCloneDepth": {
                        "type": "integer",
                        "zonbookDocumentation": "\n         <para>Information about the git clone depth for the build project.</para>\n      ",
                        "documentation": "\n         <p>Information about the git clone depth for the build project.</p>\n      ",
                        "shape_name": "GitCloneDepth",
                        "min_length": 0
                      },
                      "buildspec": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The build spec declaration to use for the builds in this build project.</para>\n         <para>If this value is not specified, a build spec must be included along with the source code\n         to be built.</para>\n      ",
                        "documentation": "\n         <p>The build spec declaration to use for the builds in this build project.</p>\n         <p>If this value is not specified, a build spec must be included along with the source code\n         to be built.</p>\n      ",
                        "shape_name": "String"
                      },
                      "auth": {
                        "type": "structure",
                        "members": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "OAUTH"
                            ],
                            "zonbookDocumentation": "\n         <para>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</para>\n      ",
                            "documentation": "\n         <p>The authorization type to use. The only valid value is <code>OAUTH</code>, which\n         represents the OAuth authorization type.</p>\n      ",
                            "required": true,
                            "shape_name": "SourceAuthType"
                          },
                          "resource": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The resource value that applies to the specified authorization type.</para>\n      ",
                            "documentation": "\n         <p>The resource value that applies to the specified authorization type.</p>\n      ",
                            "shape_name": "String"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</para>\n         <para>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</para>\n      ",
                        "documentation": "\n         <p>Information about the authorization settings for AWS CodeBuild to access the source code to be\n         built.</p>\n         <p>This information is for the AWS CodeBuild console's use only. Your code should not get or set\n         this information directly (unless the build project's source <code>type</code> value is\n            <code>BITBUCKET</code> or <code>GITHUB</code>).</p>\n      ",
                        "shape_name": "SourceAuth"
                      },
                      "reportBuildStatus": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </para>\n      ",
                        "documentation": "\n         <p> Set to true to report the status of a build's start and finish to your source provider.\n         This option is valid only when your source provider is GitHub, GitHub Enterprise, or\n         Bitbucket. If this is set and you use a different source provider, an invalidInputException\n         is thrown. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "insecureSsl": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</para>\n      ",
                        "documentation": "\n         <p>Enable this flag to ignore SSL warnings while connecting to the project source\n         code.</p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "sourceIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> An identifier for this project source. </para>\n      ",
                        "documentation": "\n         <p> An identifier for this project source. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about the build input source code for the build project.</para>\n      ",
                    "documentation": "\n         <p>Information about the build input source code for the build project.</p>\n      ",
                    "shape_name": "ProjectSource"
                  }
                },
                "secondarySourceVersions": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p> An array of <code>ProjectSourceVersion</code> objects. Each\n            <code>ProjectSourceVersion</code> must be one of: </p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "ProjectSecondarySourceVersions",
                  "min_length": 0,
                  "max_length": 12,
                  "members": {
                    "type": "structure",
                    "members": {
                      "sourceIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>An identifier for a source in the build project.</para>\n      ",
                        "documentation": "\n         <p>An identifier for a source in the build project.</p>\n      ",
                        "required": true,
                        "shape_name": "String"
                      },
                      "sourceVersion": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The source version for the corresponding source identifier. If specified, must be one\n         of:</para>\n         <itemizedlist>\n            <listitem>\n               <para>For AWS CodeCommit: the commit ID to use.</para>\n            </listitem>\n            <listitem>\n               <para>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</para>\n            </listitem>\n            <listitem>\n               <para>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                        "documentation": "\n         <p>The source version for the corresponding source identifier. If specified, must be one\n         of:</p>\n         <ul>\n            <li>\n               <p>For AWS CodeCommit: the commit ID to use.</p>\n            </li>\n            <li>\n               <p>For GitHub: the commit ID, pull request ID, branch name, or tag name that\n               corresponds to the version of the source code you want to build. If a pull request ID\n               is specified, it must use the format <code>pr/pull-request-ID</code> (for example,\n                  <code>pr/25</code>). If a branch name is specified, the branch's HEAD commit ID is\n               used. If not specified, the default branch's HEAD commit ID is used.</p>\n            </li>\n            <li>\n               <p>For Bitbucket: the commit ID, branch name, or tag name that corresponds to the\n               version of the source code you want to build. If a branch name is specified, the\n               branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit\n               ID is used.</p>\n            </li>\n            <li>\n               <p>For Amazon Simple Storage Service (Amazon S3): the version ID of the object that represents the build input ZIP file to\n               use.</p>\n            </li>\n         </ul>\n      ",
                        "required": true,
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>A source identifier and its corresponding version.</para>\n      ",
                    "documentation": "\n         <p>A source identifier and its corresponding version.</p>\n      ",
                    "shape_name": "ProjectSourceVersion"
                  }
                },
                "artifacts": {
                  "type": "structure",
                  "members": {
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                      "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                      "shape_name": "String"
                    },
                    "sha256sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "md5sum": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                      "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                      "shape_name": "String"
                    },
                    "overrideArtifactName": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                      "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "encryptionDisabled": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                      "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "artifactIdentifier": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                      "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the output artifacts for the build.</para>\n      ",
                  "documentation": "\n         <p>Information about the output artifacts for the build.</p>\n      ",
                  "shape_name": "BuildArtifacts"
                },
                "secondaryArtifacts": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para> An array of <code>ProjectArtifacts</code> objects. </para>\n      ",
                  "documentation": "\n         <p> An array of <code>ProjectArtifacts</code> objects. </p>\n      ",
                  "shape_name": "BuildArtifactsList",
                  "min_length": 0,
                  "max_length": 12,
                  "members": {
                    "type": "structure",
                    "members": {
                      "location": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>Information about the location of the build artifacts.</para>\n      ",
                        "documentation": "\n         <p>Information about the location of the build artifacts.</p>\n      ",
                        "shape_name": "String"
                      },
                      "sha256sum": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The SHA-256 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                        "documentation": "\n         <p>The SHA-256 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                        "shape_name": "String"
                      },
                      "md5sum": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The MD5 hash of the build artifact.</para>\n         <para>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</para>\n         <note>\n            <para>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</para>\n         </note>\n      ",
                        "documentation": "\n         <p>The MD5 hash of the build artifact.</p>\n         <p>You can use this hash along with a checksum tool to confirm file integrity and\n         authenticity.</p>\n         <note>\n            <p>This value is available only if the build project's <code>packaging</code> value is\n            set to <code>ZIP</code>.</p>\n         </note>\n      ",
                        "shape_name": "String"
                      },
                      "overrideArtifactName": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </para>\n      ",
                        "documentation": "\n         <p> If this flag is set, a name specified in the build spec file overrides the artifact\n         name. The name specified in a build spec file is calculated at build time and uses the\n         Shell Command Language. For example, you can append a date and time to your artifact name\n         so that it is always unique. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "encryptionDisabled": {
                        "type": "boolean",
                        "zonbookDocumentation": "\n         <para> Information that tells you if encryption for build artifacts is disabled. </para>\n      ",
                        "documentation": "\n         <p> Information that tells you if encryption for build artifacts is disabled. </p>\n      ",
                        "shape_name": "WrapperBoolean"
                      },
                      "artifactIdentifier": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para> An identifier for this artifact definition. </para>\n      ",
                        "documentation": "\n         <p> An identifier for this artifact definition. </p>\n      ",
                        "shape_name": "String"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about build output artifacts.</para>\n      ",
                    "documentation": "\n         <p>Information about build output artifacts.</p>\n      ",
                    "shape_name": "BuildArtifacts"
                  }
                },
                "cache": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "NO_CACHE",
                        "S3"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of cache used by the build project. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: The build project reads and writes from and to S3.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>The type of cache used by the build project. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: The build project does not use any cache.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: The build project reads and writes from and to S3.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "CacheType"
                    },
                    "location": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>Information about the cache location: </para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>NO_CACHE</code>: This value is ignored.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the cache location: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>NO_CACHE</code>: This value is ignored.</p>\n            </li>\n            <li>\n               <p>\n                  <code>S3</code>: This is the S3 bucket name/prefix.</p>\n            </li>\n         </ul>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the cache for the build.</para>\n      ",
                  "documentation": "\n         <p>Information about the cache for the build.</p>\n      ",
                  "shape_name": "ProjectCache"
                },
                "environment": {
                  "type": "structure",
                  "members": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "WINDOWS_CONTAINER",
                        "LINUX_CONTAINER"
                      ],
                      "zonbookDocumentation": "\n         <para>The type of build environment to use for related builds.</para>\n      ",
                      "documentation": "\n         <p>The type of build environment to use for related builds.</p>\n      ",
                      "required": true,
                      "shape_name": "EnvironmentType"
                    },
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the Docker image to use for this build project.</para>\n      ",
                      "documentation": "\n         <p>The ID of the Docker image to use for this build project.</p>\n      ",
                      "required": true,
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "computeType": {
                      "type": "string",
                      "enum": [
                        "BUILD_GENERAL1_SMALL",
                        "BUILD_GENERAL1_MEDIUM",
                        "BUILD_GENERAL1_LARGE"
                      ],
                      "zonbookDocumentation": "\n         <para>Information about the compute resources the build project uses. Available values\n         include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                      "documentation": "\n         <p>Information about the compute resources the build project uses. Available values\n         include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_SMALL</code>: Use up to 3 GB memory and 2 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_MEDIUM</code>: Use up to 7 GB memory and 4 vCPUs for\n               builds.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BUILD_GENERAL1_LARGE</code>: Use up to 15 GB memory and 8 vCPUs for\n               builds.</p>\n            </li>\n         </ul>\n      ",
                      "required": true,
                      "shape_name": "ComputeType"
                    },
                    "environmentVariables": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A set of environment variables to make available to builds for this build\n         project.</para>\n      ",
                      "documentation": "\n         <p>A set of environment variables to make available to builds for this build\n         project.</p>\n      ",
                      "shape_name": "EnvironmentVariables",
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The name or key of the environment variable.</para>\n      ",
                            "documentation": "\n         <p>The name or key of the environment variable.</p>\n      ",
                            "required": true,
                            "shape_name": "NonEmptyString",
                            "min_length": 1
                          },
                          "value": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The value of the environment variable.</para>\n         <important>\n            <para>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</para>\n         </important>\n      ",
                            "documentation": "\n         <p>The value of the environment variable.</p>\n         <important>\n            <p>We strongly discourage the use of environment variables to store sensitive values,\n            especially AWS secret key IDs and secret access keys. Environment variables can be\n            displayed in plain text using the AWS CodeBuild console and the AWS Command Line Interface (AWS CLI).</p>\n         </important>\n      ",
                            "required": true,
                            "shape_name": "String"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "PLAINTEXT",
                              "PARAMETER_STORE"
                            ],
                            "zonbookDocumentation": "\n         <para>The type of environment variable. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                            "documentation": "\n         <p>The type of environment variable. Valid values include:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PARAMETER_STORE</code>: An environment variable stored in Amazon EC2 Systems Manager Parameter\n               Store.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PLAINTEXT</code>: An environment variable in plaintext format.</p>\n            </li>\n         </ul>\n      ",
                            "shape_name": "EnvironmentVariableType"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information about an environment variable for a build project or a build.</para>\n      ",
                        "documentation": "\n         <p>Information about an environment variable for a build project or a build.</p>\n      ",
                        "shape_name": "EnvironmentVariable"
                      }
                    },
                    "privilegedMode": {
                      "type": "boolean",
                      "zonbookDocumentation": "\n         <para>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</para>\n         <para>If the operating system's base image is Ubuntu Linux:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n         <para>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</para>\n         <para>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </para>\n      ",
                      "documentation": "\n         <p>Enables running the Docker daemon inside a Docker container. Set to true only if the\n         build project is be used to build Docker images, and the specified build environment image\n         is not provided by AWS CodeBuild with Docker support. Otherwise, all associated builds that attempt\n         to interact with the Docker daemon fail. You must also start the Docker daemon so that\n         builds can interact with it. One way to do this is to initialize the Docker daemon during\n         the install phase of your build spec by running the following build commands. (Do not run\n         these commands if the specified build environment image is provided by AWS CodeBuild with Docker\n         support.)</p>\n         <p>If the operating system's base image is Ubuntu Linux:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n         <p>If the operating system's base image is Alpine Linux, add the <code>-t</code> argument\n         to <code>timeout</code>:</p>\n         <p>\n            <code>- nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&amp;\n\n- timeout 15 -t sh -c \"until docker info; do echo .; sleep 1; done\"</code>\n         </p>\n      ",
                      "shape_name": "WrapperBoolean"
                    },
                    "certificate": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The certificate to use with this build project.</para>\n      ",
                      "documentation": "\n         <p>The certificate to use with this build project.</p>\n      ",
                      "shape_name": "String"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build environment for this build.</para>\n      ",
                  "documentation": "\n         <p>Information about the build environment for this build.</p>\n      ",
                  "shape_name": "ProjectEnvironment"
                },
                "serviceRole": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of a service role used for this build.</para>\n      ",
                  "documentation": "\n         <p>The name of a service role used for this build.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "logs": {
                  "type": "structure",
                  "members": {
                    "groupName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs group for the build logs.</para>\n      ",
                      "documentation": "\n         <p>The name of the Amazon CloudWatch Logs group for the build logs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "streamName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the Amazon CloudWatch Logs stream for the build logs.</para>\n      ",
                      "documentation": "\n         <p>The name of the Amazon CloudWatch Logs stream for the build logs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "deepLink": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The URL to an individual build log in Amazon CloudWatch Logs.</para>\n      ",
                      "documentation": "\n         <p>The URL to an individual build log in Amazon CloudWatch Logs.</p>\n      ",
                      "shape_name": "String"
                    },
                    "s3DeepLink": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para> The URL to a build log in an S3 bucket. </para>\n      ",
                      "documentation": "\n         <p> The URL to a build log in an S3 bucket. </p>\n      ",
                      "shape_name": "String"
                    },
                    "cloudWatchLogs": {
                      "type": "structure",
                      "members": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED"
                          ],
                          "zonbookDocumentation": "\n         <para>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The current status of the logs in Amazon CloudWatch Logs for a build project. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: Amazon CloudWatch Logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: Amazon CloudWatch Logs are not enabled for this build project.</p>\n            </li>\n         </ul>\n      ",
                          "required": true,
                          "shape_name": "LogsConfigStatusType"
                        },
                        "groupName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The group name of the logs in Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                          "documentation": "\n         <p> The group name of the logs in Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                          "shape_name": "String"
                        },
                        "streamName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <ulink type=\"documentation\" url=\"AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</ulink>. </para>\n      ",
                          "documentation": "\n         <p> The prefix of the stream name of the Amazon CloudWatch Logs. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Working-with-log-groups-and-streams.html\">Working with\n            Log Groups and Log Streams</a>. </p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para> Information about Amazon CloudWatch Logs for a build project. </para>\n      ",
                      "documentation": "\n         <p> Information about Amazon CloudWatch Logs for a build project. </p>\n      ",
                      "shape_name": "CloudWatchLogsConfig"
                    },
                    "s3Logs": {
                      "type": "structure",
                      "members": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED"
                          ],
                          "zonbookDocumentation": "\n         <para>The current status of the S3 build logs. Valid values are:</para>\n         <itemizedlist>\n            <listitem>\n               <para>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</para>\n            </listitem>\n            <listitem>\n               <para>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                          "documentation": "\n         <p>The current status of the S3 build logs. Valid values are:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code>: S3 build logs are enabled for this build project.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code>: S3 build logs are not enabled for this build\n               project.</p>\n            </li>\n         </ul>\n      ",
                          "required": true,
                          "shape_name": "LogsConfigStatusType"
                        },
                        "location": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </para>\n      ",
                          "documentation": "\n         <p> The ARN of an S3 bucket and the path prefix for S3 logs. If your Amazon S3 bucket name\n         is <code>my-bucket</code>, and your path prefix is <code>build-log</code>, then acceptable\n         formats are <code>my-bucket/build-log</code> or\n            <code>arn:aws:s3:::my-bucket/build-log</code>. </p>\n      ",
                          "shape_name": "String"
                        }
                      },
                      "zonbookDocumentation": "\n         <para> Information about S3 logs for a build project. </para>\n      ",
                      "documentation": "\n         <p> Information about S3 logs for a build project. </p>\n      ",
                      "shape_name": "S3LogsConfig"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about the build's logs in Amazon CloudWatch Logs.</para>\n      ",
                  "documentation": "\n         <p>Information about the build's logs in Amazon CloudWatch Logs.</p>\n      ",
                  "shape_name": "LogsLocation"
                },
                "timeoutInMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</para>\n      ",
                  "documentation": "\n         <p>How long, in minutes, for AWS CodeBuild to wait before timing out this build if it does not get\n         marked as completed.</p>\n      ",
                  "shape_name": "WrapperInt"
                },
                "queuedTimeoutInMinutes": {
                  "type": "integer",
                  "zonbookDocumentation": "\n         <para> The number of minutes a build is allowed to be queued before it times out. </para>\n      ",
                  "documentation": "\n         <p> The number of minutes a build is allowed to be queued before it times out. </p>\n      ",
                  "shape_name": "WrapperInt"
                },
                "buildComplete": {
                  "type": "boolean",
                  "zonbookDocumentation": "\n         <para>Whether the build is complete. True if complete; otherwise, false.</para>\n      ",
                  "documentation": "\n         <p>Whether the build is complete. True if complete; otherwise, false.</p>\n      ",
                  "shape_name": "Boolean"
                },
                "initiator": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The entity that started the build. Valid values include:</para>\n         <itemizedlist>\n            <listitem>\n               <para>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</para>\n            </listitem>\n            <listitem>\n               <para>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</para>\n            </listitem>\n         </itemizedlist>\n      ",
                  "documentation": "\n         <p>The entity that started the build. Valid values include:</p>\n         <ul>\n            <li>\n               <p>If AWS CodePipeline started the build, the pipeline's name (for example,\n                  <code>codepipeline/my-demo-pipeline</code>).</p>\n            </li>\n            <li>\n               <p>If an AWS Identity and Access Management (IAM) user started the build, the user's name (for example,\n                  <code>MyUserName</code>).</p>\n            </li>\n            <li>\n               <p>If the Jenkins plugin for AWS CodeBuild started the build, the string\n                  <code>CodeBuild-Jenkins-Plugin</code>.</p>\n            </li>\n         </ul>\n      ",
                  "shape_name": "String"
                },
                "vpcConfig": {
                  "type": "structure",
                  "members": {
                    "vpcId": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>The ID of the Amazon VPC.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "subnets": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of one or more subnet IDs in your Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>A list of one or more subnet IDs in your Amazon VPC.</p>\n      ",
                      "shape_name": "Subnets",
                      "max_length": 16,
                      "members": {
                        "type": "string",
                        "shape_name": "NonEmptyString",
                        "documentation": null,
                        "min_length": 1
                      }
                    },
                    "securityGroupIds": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of one or more security groups IDs in your Amazon VPC.</para>\n      ",
                      "documentation": "\n         <p>A list of one or more security groups IDs in your Amazon VPC.</p>\n      ",
                      "shape_name": "SecurityGroupIds",
                      "max_length": 5,
                      "members": {
                        "type": "string",
                        "shape_name": "NonEmptyString",
                        "documentation": null,
                        "min_length": 1
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</para>\n      ",
                  "documentation": "\n         <p>If your AWS CodeBuild project accesses resources in an Amazon VPC, you provide this parameter\n         that identifies the VPC ID and the list of security group IDs and subnet IDs. The security\n         groups and subnets must belong to the same VPC. You must provide at least one security\n         group and one subnet ID.</p>\n      ",
                  "shape_name": "VpcConfig"
                },
                "networkInterface": {
                  "type": "structure",
                  "members": {
                    "subnetId": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the subnet.</para>\n      ",
                      "documentation": "\n         <p>The ID of the subnet.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    },
                    "networkInterfaceId": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ID of the network interface.</para>\n      ",
                      "documentation": "\n         <p>The ID of the network interface.</p>\n      ",
                      "shape_name": "NonEmptyString",
                      "min_length": 1
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Describes a network interface.</para>\n      ",
                  "documentation": "\n         <p>Describes a network interface.</p>\n      ",
                  "shape_name": "NetworkInterface"
                },
                "encryptionKey": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</para>\n         <para>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<emphasis>alias-name</emphasis>\n            </code>).</para>\n      ",
                  "documentation": "\n         <p>The AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build output\n         artifacts.</p>\n         <p>This is expressed either as the Amazon Resource Name (ARN) of the CMK or, if specified, the CMK's alias\n         (using the format <code>alias/<i>alias-name</i>\n            </code>).</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                }
              },
              "zonbookDocumentation": "\n         <para>Information about a build.</para>\n      ",
              "documentation": "\n         <p>Information about a build.</p>\n      ",
              "shape_name": "Build"
            }
          },
          "buildsNotFound": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The IDs of builds for which information could not be found.</para>\n      ",
            "documentation": "\n         <p>The IDs of builds for which information could not be found.</p>\n      ",
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "BatchGetBuildsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Gets information about builds.</p>\n      "
    },
    "BatchDeleteBuilds": {
      "name": "BatchDeleteBuilds",
      "input": {
        "type": "structure",
        "members": {
          "ids": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The IDs of the builds to delete.</para>\n      ",
            "documentation": "\n         <p>The IDs of the builds to delete.</p>\n      ",
            "required": true,
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          }
        },
        "shape_name": "BatchDeleteBuildsInput",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "buildsDeleted": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The IDs of the builds that were successfully deleted.</para>\n      ",
            "documentation": "\n         <p>The IDs of the builds that were successfully deleted.</p>\n      ",
            "shape_name": "BuildIds",
            "min_length": 1,
            "max_length": 100,
            "members": {
              "type": "string",
              "shape_name": "NonEmptyString",
              "documentation": null,
              "min_length": 1
            }
          },
          "buildsNotDeleted": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Information about any builds that could not be successfully deleted.</para>\n      ",
            "documentation": "\n         <p>Information about any builds that could not be successfully deleted.</p>\n      ",
            "shape_name": "BuildsNotDeleted",
            "members": {
              "type": "structure",
              "members": {
                "id": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ID of the build that could not be successfully deleted.</para>\n      ",
                  "documentation": "\n         <p>The ID of the build that could not be successfully deleted.</p>\n      ",
                  "shape_name": "NonEmptyString",
                  "min_length": 1
                },
                "statusCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>Additional information about the build that could not be successfully deleted.</para>\n      ",
                  "documentation": "\n         <p>Additional information about the build that could not be successfully deleted.</p>\n      ",
                  "shape_name": "String"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about a build that could not be successfully deleted.</para>\n      ",
              "documentation": "\n         <p>Information about a build that could not be successfully deleted.</p>\n      ",
              "shape_name": "BuildNotDeleted"
            }
          }
        },
        "shape_name": "BatchDeleteBuildsOutput",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
          },
          "zonbookDocumentation": "\n         <para>The input value that was provided is not valid.</para>\n      ",
          "documentation": "\n         <p>The input value that was provided is not valid.</p>\n      ",
          "shape_name": "InvalidInputException"
        }
      ],
      "documentation": "\n         <p>Deletes one or more builds.</p>\n      "
    }
  }
}
