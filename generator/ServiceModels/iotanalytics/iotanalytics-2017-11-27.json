{
  "version": "1.0",
  "type": "rest-json",
  "signature_version": "v4",
  "signing_name": "iotanalytics",
  "service_full_name": "AWS IoT Analytics",
  "service_id": "IoTAnalytics",
  "uid": "iotanalytics-2017-11-27",
  "endpoint_prefix": "iotanalytics",
  "api_version": "2017-11-27",
  "documentation": "\n\n         <p>AWS IoT Analytics allows you to collect large amounts of device data, process messages, and store them. \n    You can then query the data and run sophisticated analytics on it.  AWS IoT Analytics enables advanced \n    data exploration through integration with Jupyter Notebooks and data visualization through integration \n    with Amazon QuickSight.</p>\n\n         <p>Traditional analytics and business intelligence tools are designed to process structured data. IoT data \n    often comes from devices that record noisy processes (such as temperature, motion, or sound). As a result \n    the data from these devices can have significant gaps, corrupted messages, and false readings that must be \n    cleaned up before analysis can occur. Also, IoT data is often only meaningful in the context of other data \n    from external sources. </p>\n\n         <p>AWS IoT Analytics automates the steps required to analyze data from IoT devices. AWS IoT Analytics \n    filters, transforms, and enriches IoT data before storing it in a time-series data store for analysis. You \n    can set up the service to collect only the data you need from your devices, apply mathematical transforms \n    to process the data, and enrich the data with device-specific metadata such as device type and location \n    before storing it. Then, you can analyze your data by running queries using the built-in SQL query engine, \n    or perform more complex analytics and machine learning inference. AWS IoT Analytics includes pre-built models \n    for common IoT use cases so you can answer questions like which devices are about to fail or which customers \n    are at risk of abandoning their wearable devices.</p>\n\n      ",
  "operations": {
    "CreateChannel": {
      "name": "CreateChannel",
      "http": {
        "method": "POST",
        "uri": "/channels",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel.</para>\n      ",
            "documentation": "\n         <p>The name of the channel.</p>\n      ",
            "required": true,
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the channel.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      ",
            "shape_name": "RetentionPeriod"
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Metadata which can be used to manage the channel.</para>\n      ",
            "documentation": "\n         <p>Metadata which can be used to manage the channel.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateChannelRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel.</para>\n      ",
            "documentation": "\n         <p>The name of the channel.</p>\n      ",
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "channelArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the channel.</para>\n      ",
            "documentation": "\n         <p>The ARN of the channel.</p>\n      ",
            "shape_name": "ChannelArn"
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the channel.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "CreateChannelResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ID of the resource.</para>\n      ",
              "documentation": "\n         <p>The ID of the resource.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ARN of the resource.</para>\n      ",
              "documentation": "\n         <p>The ARN of the resource.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the same name already exists.</para>\n      ",
          "documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a channel. A channel collects data from an MQTT topic and archives the\n          raw, unprocessed messages before publishing the data to a pipeline.</p>\n      "
    },
    "DescribeChannel": {
      "name": "DescribeChannel",
      "http": {
        "method": "GET",
        "uri": "/channels/{channelName}?includeStatistics={includeStatistics}"
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel whose information is retrieved.</para>\n      ",
            "documentation": "\n         <p>The name of the channel whose information is retrieved.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "includeStatistics": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>If true, additional statistical information about the channel is included in the response.</para>\n      ",
            "documentation": "\n         <p>If true, additional statistical information about the channel is included in the response.</p>\n      ",
            "location": "uri",
            "shape_name": "IncludeStatisticsFlag"
          }
        },
        "shape_name": "DescribeChannelRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "channel": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_]+$",
                "zonbookDocumentation": "\n         <para>The name of the channel.</para>\n      ",
                "documentation": "\n         <p>The name of the channel.</p>\n      ",
                "shape_name": "ChannelName",
                "min_length": 1,
                "max_length": 128
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the channel.</para>\n      ",
                "documentation": "\n         <p>The ARN of the channel.</p>\n      ",
                "shape_name": "ChannelArn"
              },
              "status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "ACTIVE",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n         <para>The status of the channel.</para>\n      ",
                "documentation": "\n         <p>The status of the channel.</p>\n      ",
                "shape_name": "ChannelStatus"
              },
              "retentionPeriod": {
                "type": "structure",
                "members": {
                  "unlimited": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                    "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                    "shape_name": "UnlimitedRetentionPeriod"
                  },
                  "numberOfDays": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                    "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                    "shape_name": "RetentionPeriodInDays",
                    "min_length": 1
                  }
                },
                "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the channel.</para>\n      ",
                "documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      ",
                "shape_name": "RetentionPeriod"
              },
              "creationTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the channel was created.</para>\n      ",
                "documentation": "\n         <p>When the channel was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastUpdateTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the channel was last updated.</para>\n      ",
                "documentation": "\n         <p>When the channel was last updated.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <para>An object that contains information about the channel.</para>\n      ",
            "documentation": "\n         <p>An object that contains information about the channel.</p>\n      ",
            "shape_name": "Channel"
          },
          "statistics": {
            "type": "structure",
            "members": {
              "size": {
                "type": "structure",
                "members": {
                  "estimatedSizeInBytes": {
                    "type": "double",
                    "zonbookDocumentation": "\n         <para>The estimated size of the resource in bytes.</para>\n      ",
                    "documentation": "\n         <p>The estimated size of the resource in bytes.</p>\n      ",
                    "shape_name": "SizeInBytes"
                  },
                  "estimatedOn": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <para>The time when the estimate of the size of the resource was made.</para>\n      ",
                    "documentation": "\n         <p>The time when the estimate of the size of the resource was made.</p>\n      ",
                    "shape_name": "Timestamp"
                  }
                },
                "zonbookDocumentation": "\n         <para>The estimated size of the channel.</para>\n      ",
                "documentation": "\n         <p>The estimated size of the channel.</p>\n      ",
                "shape_name": "EstimatedResourceSize"
              }
            },
            "zonbookDocumentation": "\n         <para>Statistics about the channel. Included if the 'includeStatistics' parameter is set\n         to true in the request.</para>\n      ",
            "documentation": "\n         <p>Statistics about the channel. Included if the 'includeStatistics' parameter is set\n         to true in the request.</p>\n      ",
            "shape_name": "ChannelStatistics"
          }
        },
        "shape_name": "DescribeChannelResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about a channel.</p>\n      "
    },
    "UpdateChannel": {
      "name": "UpdateChannel",
      "http": {
        "method": "PUT",
        "uri": "/channels/{channelName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel to be updated.</para>\n      ",
            "documentation": "\n         <p>The name of the channel to be updated.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the channel.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the channel.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "UpdateChannelRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Updates the settings of a channel.</p>\n      "
    },
    "DeleteChannel": {
      "name": "DeleteChannel",
      "http": {
        "method": "DELETE",
        "uri": "/channels/{channelName}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel to delete.</para>\n      ",
            "documentation": "\n         <p>The name of the channel to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteChannelRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified channel.</p>\n      "
    },
    "ListChannels": {
      "name": "ListChannels",
      "http": {
        "method": "GET",
        "uri": "/channels?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "paginationToken": true,
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return in this request.</para>\n         <para>The default value is 100.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "location": "uri",
            "pageSize": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListChannelsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "channelSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"ChannelSummary\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"ChannelSummary\" objects.</p>\n      ",
            "shape_name": "ChannelSummaries",
            "members": {
              "type": "structure",
              "members": {
                "channelName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the channel.</para>\n      ",
                  "documentation": "\n         <p>The name of the channel.</p>\n      ",
                  "shape_name": "ChannelName",
                  "min_length": 1,
                  "max_length": 128
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                  ],
                  "zonbookDocumentation": "\n         <para>The status of the channel.</para>\n      ",
                  "documentation": "\n         <p>The status of the channel.</p>\n      ",
                  "shape_name": "ChannelStatus"
                },
                "creationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the channel was created.</para>\n      ",
                  "documentation": "\n         <p>When the channel was created.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastUpdateTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The last time the channel was updated.</para>\n      ",
                  "documentation": "\n         <p>The last time the channel was updated.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <para>A summary of information about a channel.</para>\n      ",
              "documentation": "\n         <p>A summary of information about a channel.</p>\n      ",
              "shape_name": "ChannelSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListChannelsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves a list of channels.</p>\n      "
    },
    "SampleChannelData": {
      "name": "SampleChannelData",
      "http": {
        "method": "GET",
        "uri": "/channels/{channelName}/sample?maxMessages={maxMessages}&startTime={startTime}&endTime={endTime}"
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel whose message samples are retrieved.</para>\n      ",
            "documentation": "\n         <p>The name of the channel whose message samples are retrieved.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "maxMessages": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The number of sample messages to be retrieved. The limit is 10, the default\n          is also 10.</para>\n      ",
            "documentation": "\n         <p>The number of sample messages to be retrieved. The limit is 10, the default\n          is also 10.</p>\n      ",
            "location": "uri",
            "shape_name": "MaxMessages",
            "min_length": 1,
            "max_length": 10
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The start of the time window from which sample messages are retrieved.</para>\n      ",
            "documentation": "\n         <p>The start of the time window from which sample messages are retrieved.</p>\n      ",
            "location": "uri",
            "shape_name": "StartTime"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The end of the time window from which sample messages are retrieved.</para>\n      ",
            "documentation": "\n         <p>The end of the time window from which sample messages are retrieved.</p>\n      ",
            "location": "uri",
            "shape_name": "EndTime"
          }
        },
        "shape_name": "SampleChannelDataRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "payloads": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The list of message samples.  Each sample message is returned as a base64-encoded\n          string.</para>\n      ",
            "documentation": "\n         <p>The list of message samples.  Each sample message is returned as a base64-encoded\n          string.</p>\n      ",
            "shape_name": "MessagePayloads",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "blob",
              "shape_name": "MessagePayload",
              "documentation": null
            }
          }
        },
        "shape_name": "SampleChannelDataResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves a sample of messages from the specified channel ingested during the specified\n          timeframe. Up to 10 messages can be retrieved.</p>\n      "
    },
    "CreatePipeline": {
      "name": "CreatePipeline",
      "http": {
        "method": "POST",
        "uri": "/pipelines",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline.</p>\n      ",
            "required": true,
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          },
          "pipelineActivities": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of pipeline activities.</para>\n         <para>The list can be 1-25 <emphasis role=\"bold\">PipelineActivity</emphasis> objects.\n    Activities perform transformations on your messages, such as removing, renaming,\n    or adding message attributes; filtering messages based on attribute values;\n    invoking your Lambda functions on messages for advanced processing; or performing\n      mathematical transformations to normalize device data.</para>\n      ",
            "documentation": "\n         <p>A list of pipeline activities.</p>\n         <p>The list can be 1-25 <b>PipelineActivity</b> objects.\n    Activities perform transformations on your messages, such as removing, renaming,\n    or adding message attributes; filtering messages based on attribute values;\n    invoking your Lambda functions on messages for advanced processing; or performing\n      mathematical transformations to normalize device data.</p>\n      ",
            "required": true,
            "shape_name": "PipelineActivities",
            "min_length": 1,
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "channel": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'channel' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'channel' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "channelName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the channel from which the messages are processed.</para>\n      ",
                      "documentation": "\n         <p>The name of the channel from which the messages are processed.</p>\n      ",
                      "required": true,
                      "shape_name": "ChannelName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Determines the source of the messages to be processed.</para>\n      ",
                  "documentation": "\n         <p>Determines the source of the messages to be processed.</p>\n      ",
                  "shape_name": "ChannelActivity"
                },
                "lambda": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'lambda' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'lambda' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "lambdaName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "zonbookDocumentation": "\n         <para>The name of the Lambda function that is run on the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the Lambda function that is run on the message.</p>\n      ",
                      "required": true,
                      "shape_name": "LambdaName",
                      "min_length": 1,
                      "max_length": 64
                    },
                    "batchSize": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>The number of messages passed to the Lambda function for processing.</para>\n         <para>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</para>\n      ",
                      "documentation": "\n         <p>The number of messages passed to the Lambda function for processing.</p>\n         <p>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityBatchSize",
                      "min_length": 1,
                      "max_length": 1000
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Runs a Lambda function to modify the message.</para>\n      ",
                  "documentation": "\n         <p>Runs a Lambda function to modify the message.</p>\n      ",
                  "shape_name": "LambdaActivity"
                },
                "datastore": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'datastore' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'datastore' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "datastoreName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the data store where processed messages are stored.</para>\n      ",
                      "documentation": "\n         <p>The name of the data store where processed messages are stored.</p>\n      ",
                      "required": true,
                      "shape_name": "DatastoreName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies where to store the processed message data.</para>\n      ",
                  "documentation": "\n         <p>Specifies where to store the processed message data.</p>\n      ",
                  "shape_name": "DatastoreActivity"
                },
                "addAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'addAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'addAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <para>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</para>\n         <note>\n            <para>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</para>\n         </note>\n      ",
                      "documentation": "\n         <p>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</p>\n         <note>\n            <p>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</p>\n         </note>\n      ",
                      "required": true,
                      "shape_name": "AttributeNameMapping",
                      "min_length": 1,
                      "max_length": 50,
                      "keys": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds other attributes based on existing attributes in the message.</para>\n      ",
                  "documentation": "\n         <p>Adds other attributes based on existing attributes in the message.</p>\n      ",
                  "shape_name": "AddAttributesActivity"
                },
                "removeAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'removeAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'removeAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of 1-50 attributes to remove from the message.</para>\n      ",
                      "documentation": "\n         <p>A list of 1-50 attributes to remove from the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeNames",
                      "min_length": 1,
                      "max_length": 50,
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Removes attributes from a message.</para>\n      ",
                  "documentation": "\n         <p>Removes attributes from a message.</p>\n      ",
                  "shape_name": "RemoveAttributesActivity"
                },
                "selectAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'selectAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'selectAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of the attributes to select from the message.</para>\n      ",
                      "documentation": "\n         <p>A list of the attributes to select from the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeNames",
                      "min_length": 1,
                      "max_length": 50,
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Creates a new message using only the specified attributes from the original message.\n     </para>\n      ",
                  "documentation": "\n         <p>Creates a new message using only the specified attributes from the original message.\n     </p>\n      ",
                  "shape_name": "SelectAttributesActivity"
                },
                "filter": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'filter' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'filter' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "filter": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An expression that looks like a SQL WHERE clause that must return a Boolean value.</para>\n      ",
                      "documentation": "\n         <p>An expression that looks like a SQL WHERE clause that must return a Boolean value.</p>\n      ",
                      "required": true,
                      "shape_name": "FilterExpression",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Filters a message based on its attributes.</para>\n      ",
                  "documentation": "\n         <p>Filters a message based on its attributes.</p>\n      ",
                  "shape_name": "FilterActivity"
                },
                "math": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'math' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'math' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that will contain the result of the math operation.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that will contain the result of the math operation.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "math": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An expression that uses one or more existing attributes and must return an integer value.</para>\n      ",
                      "documentation": "\n         <p>An expression that uses one or more existing attributes and must return an integer value.</p>\n      ",
                      "required": true,
                      "shape_name": "MathExpression",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</para>\n      ",
                  "documentation": "\n         <p>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</p>\n      ",
                  "shape_name": "MathActivity"
                },
                "deviceRegistryEnrich": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'deviceRegistryEnrich' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'deviceRegistryEnrich' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "thingName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the IoT device whose registry information is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the IoT device whose registry information is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "roleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's registry information.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role that allows access to the device's registry information.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds data from the AWS IoT device registry to your message.</para>\n      ",
                  "documentation": "\n         <p>Adds data from the AWS IoT device registry to your message.</p>\n      ",
                  "shape_name": "DeviceRegistryEnrichActivity"
                },
                "deviceShadowEnrich": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'deviceShadowEnrich' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'deviceShadowEnrich' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "thingName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the IoT device whose shadow information is added to \n          the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the IoT device whose shadow information is added to \n          the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "roleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's shadow.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role that allows access to the device's shadow.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds information from the AWS IoT Device Shadows service to a message.</para>\n      ",
                  "documentation": "\n         <p>Adds information from the AWS IoT Device Shadows service to a message.</p>\n      ",
                  "shape_name": "DeviceShadowEnrichActivity"
                }
              },
              "zonbookDocumentation": "\n         <para>An activity that performs a transformation on a message.</para>\n      ",
              "documentation": "\n         <p>An activity that performs a transformation on a message.</p>\n      ",
              "shape_name": "PipelineActivity"
            }
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Metadata which can be used to manage the pipeline.</para>\n      ",
            "documentation": "\n         <p>Metadata which can be used to manage the pipeline.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreatePipelineRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline.</p>\n      ",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          },
          "pipelineArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the pipeline.</para>\n      ",
            "documentation": "\n         <p>The ARN of the pipeline.</p>\n      ",
            "shape_name": "PipelineArn"
          }
        },
        "shape_name": "CreatePipelineResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ID of the resource.</para>\n      ",
              "documentation": "\n         <p>The ID of the resource.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ARN of the resource.</para>\n      ",
              "documentation": "\n         <p>The ARN of the resource.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the same name already exists.</para>\n      ",
          "documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a pipeline. A pipeline consumes messages from one or more channels\n         and allows you to process the messages before storing them in a\n         data store.</p>\n      "
    },
    "DescribePipeline": {
      "name": "DescribePipeline",
      "http": {
        "method": "GET",
        "uri": "/pipelines/{pipelineName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline whose information is retrieved.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline whose information is retrieved.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribePipelineRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "pipeline": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_]+$",
                "zonbookDocumentation": "\n         <para>The name of the pipeline.</para>\n      ",
                "documentation": "\n         <p>The name of the pipeline.</p>\n      ",
                "shape_name": "PipelineName",
                "min_length": 1,
                "max_length": 128
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the pipeline.</para>\n      ",
                "documentation": "\n         <p>The ARN of the pipeline.</p>\n      ",
                "shape_name": "PipelineArn"
              },
              "activities": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The activities that perform transformations on the messages.</para>\n      ",
                "documentation": "\n         <p>The activities that perform transformations on the messages.</p>\n      ",
                "shape_name": "PipelineActivities",
                "min_length": 1,
                "max_length": 25,
                "members": {
                  "type": "structure",
                  "members": {
                    "channel": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'channel' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'channel' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "channelName": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_]+$",
                          "zonbookDocumentation": "\n         <para>The name of the channel from which the messages are processed.</para>\n      ",
                          "documentation": "\n         <p>The name of the channel from which the messages are processed.</p>\n      ",
                          "required": true,
                          "shape_name": "ChannelName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Determines the source of the messages to be processed.</para>\n      ",
                      "documentation": "\n         <p>Determines the source of the messages to be processed.</p>\n      ",
                      "shape_name": "ChannelActivity"
                    },
                    "lambda": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'lambda' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'lambda' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "lambdaName": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_-]+$",
                          "zonbookDocumentation": "\n         <para>The name of the Lambda function that is run on the message.</para>\n      ",
                          "documentation": "\n         <p>The name of the Lambda function that is run on the message.</p>\n      ",
                          "required": true,
                          "shape_name": "LambdaName",
                          "min_length": 1,
                          "max_length": 64
                        },
                        "batchSize": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The number of messages passed to the Lambda function for processing.</para>\n         <para>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</para>\n      ",
                          "documentation": "\n         <p>The number of messages passed to the Lambda function for processing.</p>\n         <p>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityBatchSize",
                          "min_length": 1,
                          "max_length": 1000
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Runs a Lambda function to modify the message.</para>\n      ",
                      "documentation": "\n         <p>Runs a Lambda function to modify the message.</p>\n      ",
                      "shape_name": "LambdaActivity"
                    },
                    "datastore": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'datastore' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'datastore' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "datastoreName": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_]+$",
                          "zonbookDocumentation": "\n         <para>The name of the data store where processed messages are stored.</para>\n      ",
                          "documentation": "\n         <p>The name of the data store where processed messages are stored.</p>\n      ",
                          "required": true,
                          "shape_name": "DatastoreName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Specifies where to store the processed message data.</para>\n      ",
                      "documentation": "\n         <p>Specifies where to store the processed message data.</p>\n      ",
                      "shape_name": "DatastoreActivity"
                    },
                    "addAttributes": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'addAttributes' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'addAttributes' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attributes": {
                          "type": "map",
                          "zonbookDocumentation": "\n         <para>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</para>\n         <note>\n            <para>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</para>\n         </note>\n      ",
                          "documentation": "\n         <p>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</p>\n         <note>\n            <p>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</p>\n         </note>\n      ",
                          "required": true,
                          "shape_name": "AttributeNameMapping",
                          "min_length": 1,
                          "max_length": 50,
                          "keys": {
                            "type": "string",
                            "shape_name": "AttributeName",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 256
                          },
                          "members": {
                            "type": "string",
                            "shape_name": "AttributeName",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 256
                          }
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Adds other attributes based on existing attributes in the message.</para>\n      ",
                      "documentation": "\n         <p>Adds other attributes based on existing attributes in the message.</p>\n      ",
                      "shape_name": "AddAttributesActivity"
                    },
                    "removeAttributes": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'removeAttributes' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'removeAttributes' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attributes": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>A list of 1-50 attributes to remove from the message.</para>\n      ",
                          "documentation": "\n         <p>A list of 1-50 attributes to remove from the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeNames",
                          "min_length": 1,
                          "max_length": 50,
                          "members": {
                            "type": "string",
                            "shape_name": "AttributeName",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 256
                          }
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Removes attributes from a message.</para>\n      ",
                      "documentation": "\n         <p>Removes attributes from a message.</p>\n      ",
                      "shape_name": "RemoveAttributesActivity"
                    },
                    "selectAttributes": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'selectAttributes' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'selectAttributes' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attributes": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>A list of the attributes to select from the message.</para>\n      ",
                          "documentation": "\n         <p>A list of the attributes to select from the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeNames",
                          "min_length": 1,
                          "max_length": 50,
                          "members": {
                            "type": "string",
                            "shape_name": "AttributeName",
                            "documentation": null,
                            "min_length": 1,
                            "max_length": 256
                          }
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Creates a new message using only the specified attributes from the original message.\n     </para>\n      ",
                      "documentation": "\n         <p>Creates a new message using only the specified attributes from the original message.\n     </p>\n      ",
                      "shape_name": "SelectAttributesActivity"
                    },
                    "filter": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'filter' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'filter' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "filter": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>An expression that looks like a SQL WHERE clause that must return a Boolean value.</para>\n      ",
                          "documentation": "\n         <p>An expression that looks like a SQL WHERE clause that must return a Boolean value.</p>\n      ",
                          "required": true,
                          "shape_name": "FilterExpression",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Filters a message based on its attributes.</para>\n      ",
                      "documentation": "\n         <p>Filters a message based on its attributes.</p>\n      ",
                      "shape_name": "FilterActivity"
                    },
                    "math": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'math' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'math' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attribute": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the attribute that will contain the result of the math operation.</para>\n      ",
                          "documentation": "\n         <p>The name of the attribute that will contain the result of the math operation.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeName",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "math": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>An expression that uses one or more existing attributes and must return an integer value.</para>\n      ",
                          "documentation": "\n         <p>An expression that uses one or more existing attributes and must return an integer value.</p>\n      ",
                          "required": true,
                          "shape_name": "MathExpression",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</para>\n      ",
                      "documentation": "\n         <p>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</p>\n      ",
                      "shape_name": "MathActivity"
                    },
                    "deviceRegistryEnrich": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'deviceRegistryEnrich' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'deviceRegistryEnrich' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attribute": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                          "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeName",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "thingName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the IoT device whose registry information is added to the message.</para>\n      ",
                          "documentation": "\n         <p>The name of the IoT device whose registry information is added to the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeName",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's registry information.</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role that allows access to the device's registry information.</p>\n      ",
                          "required": true,
                          "shape_name": "RoleArn",
                          "min_length": 20,
                          "max_length": 2048
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Adds data from the AWS IoT device registry to your message.</para>\n      ",
                      "documentation": "\n         <p>Adds data from the AWS IoT device registry to your message.</p>\n      ",
                      "shape_name": "DeviceRegistryEnrichActivity"
                    },
                    "deviceShadowEnrich": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the 'deviceShadowEnrich' activity.</para>\n      ",
                          "documentation": "\n         <p>The name of the 'deviceShadowEnrich' activity.</p>\n      ",
                          "required": true,
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        },
                        "attribute": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                          "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeName",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "thingName": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The name of the IoT device whose shadow information is added to \n          the message.</para>\n      ",
                          "documentation": "\n         <p>The name of the IoT device whose shadow information is added to \n          the message.</p>\n      ",
                          "required": true,
                          "shape_name": "AttributeName",
                          "min_length": 1,
                          "max_length": 256
                        },
                        "roleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's shadow.</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role that allows access to the device's shadow.</p>\n      ",
                          "required": true,
                          "shape_name": "RoleArn",
                          "min_length": 20,
                          "max_length": 2048
                        },
                        "next": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                          "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                          "shape_name": "ActivityName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Adds information from the AWS IoT Device Shadows service to a message.</para>\n      ",
                      "documentation": "\n         <p>Adds information from the AWS IoT Device Shadows service to a message.</p>\n      ",
                      "shape_name": "DeviceShadowEnrichActivity"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>An activity that performs a transformation on a message.</para>\n      ",
                  "documentation": "\n         <p>An activity that performs a transformation on a message.</p>\n      ",
                  "shape_name": "PipelineActivity"
                }
              },
              "reprocessingSummaries": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>A summary of information about the pipeline reprocessing.</para>\n      ",
                "documentation": "\n         <p>A summary of information about the pipeline reprocessing.</p>\n      ",
                "shape_name": "ReprocessingSummaries",
                "members": {
                  "type": "structure",
                  "members": {
                    "id": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The 'reprocessingId' returned by \"StartPipelineReprocessing\".</para>\n      ",
                      "documentation": "\n         <p>The 'reprocessingId' returned by \"StartPipelineReprocessing\".</p>\n      ",
                      "shape_name": "ReprocessingId"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "RUNNING",
                        "SUCCEEDED",
                        "CANCELLED",
                        "FAILED"
                      ],
                      "zonbookDocumentation": "\n         <para>The status of the pipeline reprocessing.</para>\n      ",
                      "documentation": "\n         <p>The status of the pipeline reprocessing.</p>\n      ",
                      "shape_name": "ReprocessingStatus"
                    },
                    "creationTime": {
                      "type": "timestamp",
                      "zonbookDocumentation": "\n         <para>The time the pipeline reprocessing was created.</para>\n      ",
                      "documentation": "\n         <p>The time the pipeline reprocessing was created.</p>\n      ",
                      "shape_name": "Timestamp"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information about pipeline reprocessing.</para>\n      ",
                  "documentation": "\n         <p>Information about pipeline reprocessing.</p>\n      ",
                  "shape_name": "ReprocessingSummary"
                }
              },
              "creationTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the pipeline was created.</para>\n      ",
                "documentation": "\n         <p>When the pipeline was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastUpdateTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The last time the pipeline was updated.</para>\n      ",
                "documentation": "\n         <p>The last time the pipeline was updated.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <para>A \"Pipeline\" object\n        that contains information about the pipeline.</para>\n      ",
            "documentation": "\n         <p>A \"Pipeline\" object\n        that contains information about the pipeline.</p>\n      ",
            "shape_name": "Pipeline"
          }
        },
        "shape_name": "DescribePipelineResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about a pipeline.</p>\n      "
    },
    "UpdatePipeline": {
      "name": "UpdatePipeline",
      "http": {
        "method": "PUT",
        "uri": "/pipelines/{pipelineName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline to update.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline to update.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          },
          "pipelineActivities": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"PipelineActivity\" objects.</para>\n         <para>The list can be 1-25 <emphasis role=\"bold\">PipelineActivity</emphasis> objects.\n    Activities perform transformations on your messages, such as removing, renaming\n    or adding message attributes; filtering messages based on attribute values;\n    invoking your Lambda functions on messages for advanced processing; or performing\n      mathematical transformations to normalize device data.</para>\n      ",
            "documentation": "\n         <p>A list of \"PipelineActivity\" objects.</p>\n         <p>The list can be 1-25 <b>PipelineActivity</b> objects.\n    Activities perform transformations on your messages, such as removing, renaming\n    or adding message attributes; filtering messages based on attribute values;\n    invoking your Lambda functions on messages for advanced processing; or performing\n      mathematical transformations to normalize device data.</p>\n      ",
            "required": true,
            "shape_name": "PipelineActivities",
            "min_length": 1,
            "max_length": 25,
            "members": {
              "type": "structure",
              "members": {
                "channel": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'channel' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'channel' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "channelName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the channel from which the messages are processed.</para>\n      ",
                      "documentation": "\n         <p>The name of the channel from which the messages are processed.</p>\n      ",
                      "required": true,
                      "shape_name": "ChannelName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Determines the source of the messages to be processed.</para>\n      ",
                  "documentation": "\n         <p>Determines the source of the messages to be processed.</p>\n      ",
                  "shape_name": "ChannelActivity"
                },
                "lambda": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'lambda' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'lambda' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "lambdaName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_-]+$",
                      "zonbookDocumentation": "\n         <para>The name of the Lambda function that is run on the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the Lambda function that is run on the message.</p>\n      ",
                      "required": true,
                      "shape_name": "LambdaName",
                      "min_length": 1,
                      "max_length": 64
                    },
                    "batchSize": {
                      "type": "integer",
                      "zonbookDocumentation": "\n         <para>The number of messages passed to the Lambda function for processing.</para>\n         <para>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</para>\n      ",
                      "documentation": "\n         <p>The number of messages passed to the Lambda function for processing.</p>\n         <p>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityBatchSize",
                      "min_length": 1,
                      "max_length": 1000
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Runs a Lambda function to modify the message.</para>\n      ",
                  "documentation": "\n         <p>Runs a Lambda function to modify the message.</p>\n      ",
                  "shape_name": "LambdaActivity"
                },
                "datastore": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'datastore' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'datastore' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "datastoreName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the data store where processed messages are stored.</para>\n      ",
                      "documentation": "\n         <p>The name of the data store where processed messages are stored.</p>\n      ",
                      "required": true,
                      "shape_name": "DatastoreName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Specifies where to store the processed message data.</para>\n      ",
                  "documentation": "\n         <p>Specifies where to store the processed message data.</p>\n      ",
                  "shape_name": "DatastoreActivity"
                },
                "addAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'addAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'addAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "map",
                      "zonbookDocumentation": "\n         <para>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</para>\n         <note>\n            <para>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</para>\n         </note>\n      ",
                      "documentation": "\n         <p>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</p>\n         <note>\n            <p>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</p>\n         </note>\n      ",
                      "required": true,
                      "shape_name": "AttributeNameMapping",
                      "min_length": 1,
                      "max_length": 50,
                      "keys": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      },
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds other attributes based on existing attributes in the message.</para>\n      ",
                  "documentation": "\n         <p>Adds other attributes based on existing attributes in the message.</p>\n      ",
                  "shape_name": "AddAttributesActivity"
                },
                "removeAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'removeAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'removeAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of 1-50 attributes to remove from the message.</para>\n      ",
                      "documentation": "\n         <p>A list of 1-50 attributes to remove from the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeNames",
                      "min_length": 1,
                      "max_length": 50,
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Removes attributes from a message.</para>\n      ",
                  "documentation": "\n         <p>Removes attributes from a message.</p>\n      ",
                  "shape_name": "RemoveAttributesActivity"
                },
                "selectAttributes": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'selectAttributes' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'selectAttributes' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attributes": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>A list of the attributes to select from the message.</para>\n      ",
                      "documentation": "\n         <p>A list of the attributes to select from the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeNames",
                      "min_length": 1,
                      "max_length": 50,
                      "members": {
                        "type": "string",
                        "shape_name": "AttributeName",
                        "documentation": null,
                        "min_length": 1,
                        "max_length": 256
                      }
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Creates a new message using only the specified attributes from the original message.\n     </para>\n      ",
                  "documentation": "\n         <p>Creates a new message using only the specified attributes from the original message.\n     </p>\n      ",
                  "shape_name": "SelectAttributesActivity"
                },
                "filter": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'filter' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'filter' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "filter": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An expression that looks like a SQL WHERE clause that must return a Boolean value.</para>\n      ",
                      "documentation": "\n         <p>An expression that looks like a SQL WHERE clause that must return a Boolean value.</p>\n      ",
                      "required": true,
                      "shape_name": "FilterExpression",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Filters a message based on its attributes.</para>\n      ",
                  "documentation": "\n         <p>Filters a message based on its attributes.</p>\n      ",
                  "shape_name": "FilterActivity"
                },
                "math": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'math' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'math' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that will contain the result of the math operation.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that will contain the result of the math operation.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "math": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>An expression that uses one or more existing attributes and must return an integer value.</para>\n      ",
                      "documentation": "\n         <p>An expression that uses one or more existing attributes and must return an integer value.</p>\n      ",
                      "required": true,
                      "shape_name": "MathExpression",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</para>\n      ",
                  "documentation": "\n         <p>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</p>\n      ",
                  "shape_name": "MathActivity"
                },
                "deviceRegistryEnrich": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'deviceRegistryEnrich' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'deviceRegistryEnrich' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "thingName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the IoT device whose registry information is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the IoT device whose registry information is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "roleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's registry information.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role that allows access to the device's registry information.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds data from the AWS IoT device registry to your message.</para>\n      ",
                  "documentation": "\n         <p>Adds data from the AWS IoT device registry to your message.</p>\n      ",
                  "shape_name": "DeviceRegistryEnrichActivity"
                },
                "deviceShadowEnrich": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the 'deviceShadowEnrich' activity.</para>\n      ",
                      "documentation": "\n         <p>The name of the 'deviceShadowEnrich' activity.</p>\n      ",
                      "required": true,
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "attribute": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "thingName": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The name of the IoT device whose shadow information is added to \n          the message.</para>\n      ",
                      "documentation": "\n         <p>The name of the IoT device whose shadow information is added to \n          the message.</p>\n      ",
                      "required": true,
                      "shape_name": "AttributeName",
                      "min_length": 1,
                      "max_length": 256
                    },
                    "roleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's shadow.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role that allows access to the device's shadow.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "next": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                      "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                      "shape_name": "ActivityName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Adds information from the AWS IoT Device Shadows service to a message.</para>\n      ",
                  "documentation": "\n         <p>Adds information from the AWS IoT Device Shadows service to a message.</p>\n      ",
                  "shape_name": "DeviceShadowEnrichActivity"
                }
              },
              "zonbookDocumentation": "\n         <para>An activity that performs a transformation on a message.</para>\n      ",
              "documentation": "\n         <p>An activity that performs a transformation on a message.</p>\n      ",
              "shape_name": "PipelineActivity"
            }
          }
        },
        "shape_name": "UpdatePipelineRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Updates the settings of a pipeline.</p>\n      "
    },
    "DeletePipeline": {
      "name": "DeletePipeline",
      "http": {
        "method": "DELETE",
        "uri": "/pipelines/{pipelineName}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline to delete.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeletePipelineRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified pipeline.</p>\n      "
    },
    "ListPipelines": {
      "name": "ListPipelines",
      "http": {
        "method": "GET",
        "uri": "/pipelines?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "paginationToken": true,
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return in this request.</para>\n         <para>The default value is 100.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "location": "uri",
            "pageSize": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListPipelinesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "pipelineSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"PipelineSummary\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"PipelineSummary\" objects.</p>\n      ",
            "shape_name": "PipelineSummaries",
            "members": {
              "type": "structure",
              "members": {
                "pipelineName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the pipeline.</para>\n      ",
                  "documentation": "\n         <p>The name of the pipeline.</p>\n      ",
                  "shape_name": "PipelineName",
                  "min_length": 1,
                  "max_length": 128
                },
                "reprocessingSummaries": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>A summary of information about the pipeline reprocessing.</para>\n      ",
                  "documentation": "\n         <p>A summary of information about the pipeline reprocessing.</p>\n      ",
                  "shape_name": "ReprocessingSummaries",
                  "members": {
                    "type": "structure",
                    "members": {
                      "id": {
                        "type": "string",
                        "zonbookDocumentation": "\n         <para>The 'reprocessingId' returned by \"StartPipelineReprocessing\".</para>\n      ",
                        "documentation": "\n         <p>The 'reprocessingId' returned by \"StartPipelineReprocessing\".</p>\n      ",
                        "shape_name": "ReprocessingId"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "RUNNING",
                          "SUCCEEDED",
                          "CANCELLED",
                          "FAILED"
                        ],
                        "zonbookDocumentation": "\n         <para>The status of the pipeline reprocessing.</para>\n      ",
                        "documentation": "\n         <p>The status of the pipeline reprocessing.</p>\n      ",
                        "shape_name": "ReprocessingStatus"
                      },
                      "creationTime": {
                        "type": "timestamp",
                        "zonbookDocumentation": "\n         <para>The time the pipeline reprocessing was created.</para>\n      ",
                        "documentation": "\n         <p>The time the pipeline reprocessing was created.</p>\n      ",
                        "shape_name": "Timestamp"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>Information about pipeline reprocessing.</para>\n      ",
                    "documentation": "\n         <p>Information about pipeline reprocessing.</p>\n      ",
                    "shape_name": "ReprocessingSummary"
                  }
                },
                "creationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the pipeline was created.</para>\n      ",
                  "documentation": "\n         <p>When the pipeline was created.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastUpdateTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the pipeline was last updated.</para>\n      ",
                  "documentation": "\n         <p>When the pipeline was last updated.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <para>A summary of information about a pipeline.</para>\n      ",
              "documentation": "\n         <p>A summary of information about a pipeline.</p>\n      ",
              "shape_name": "PipelineSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListPipelinesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves a list of pipelines.</p>\n      "
    },
    "RunPipelineActivity": {
      "name": "RunPipelineActivity",
      "http": {
        "method": "POST",
        "uri": "/pipelineactivities/run"
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineActivity": {
            "type": "structure",
            "members": {
              "channel": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'channel' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'channel' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "channelName": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$",
                    "zonbookDocumentation": "\n         <para>The name of the channel from which the messages are processed.</para>\n      ",
                    "documentation": "\n         <p>The name of the channel from which the messages are processed.</p>\n      ",
                    "required": true,
                    "shape_name": "ChannelName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Determines the source of the messages to be processed.</para>\n      ",
                "documentation": "\n         <p>Determines the source of the messages to be processed.</p>\n      ",
                "shape_name": "ChannelActivity"
              },
              "lambda": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'lambda' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'lambda' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "lambdaName": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_-]+$",
                    "zonbookDocumentation": "\n         <para>The name of the Lambda function that is run on the message.</para>\n      ",
                    "documentation": "\n         <p>The name of the Lambda function that is run on the message.</p>\n      ",
                    "required": true,
                    "shape_name": "LambdaName",
                    "min_length": 1,
                    "max_length": 64
                  },
                  "batchSize": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>The number of messages passed to the Lambda function for processing.</para>\n         <para>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</para>\n      ",
                    "documentation": "\n         <p>The number of messages passed to the Lambda function for processing.</p>\n         <p>The AWS Lambda function must be able to process all of these messages within\n         five minutes, which is the maximum timeout duration for Lambda functions.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityBatchSize",
                    "min_length": 1,
                    "max_length": 1000
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Runs a Lambda function to modify the message.</para>\n      ",
                "documentation": "\n         <p>Runs a Lambda function to modify the message.</p>\n      ",
                "shape_name": "LambdaActivity"
              },
              "datastore": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'datastore' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'datastore' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "datastoreName": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$",
                    "zonbookDocumentation": "\n         <para>The name of the data store where processed messages are stored.</para>\n      ",
                    "documentation": "\n         <p>The name of the data store where processed messages are stored.</p>\n      ",
                    "required": true,
                    "shape_name": "DatastoreName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Specifies where to store the processed message data.</para>\n      ",
                "documentation": "\n         <p>Specifies where to store the processed message data.</p>\n      ",
                "shape_name": "DatastoreActivity"
              },
              "addAttributes": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'addAttributes' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'addAttributes' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attributes": {
                    "type": "map",
                    "zonbookDocumentation": "\n         <para>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</para>\n         <note>\n            <para>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</para>\n         </note>\n      ",
                    "documentation": "\n         <p>A list of 1-50 \"AttributeNameMapping\"\n        objects that map an existing attribute to a new attribute.</p>\n         <note>\n            <p>The existing attributes remain in the message,\n     so if you want to remove the originals,\n     use \"RemoveAttributeActivity\".</p>\n         </note>\n      ",
                    "required": true,
                    "shape_name": "AttributeNameMapping",
                    "min_length": 1,
                    "max_length": 50,
                    "keys": {
                      "type": "string",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 256
                    },
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 256
                    }
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Adds other attributes based on existing attributes in the message.</para>\n      ",
                "documentation": "\n         <p>Adds other attributes based on existing attributes in the message.</p>\n      ",
                "shape_name": "AddAttributesActivity"
              },
              "removeAttributes": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'removeAttributes' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'removeAttributes' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attributes": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of 1-50 attributes to remove from the message.</para>\n      ",
                    "documentation": "\n         <p>A list of 1-50 attributes to remove from the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeNames",
                    "min_length": 1,
                    "max_length": 50,
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 256
                    }
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Removes attributes from a message.</para>\n      ",
                "documentation": "\n         <p>Removes attributes from a message.</p>\n      ",
                "shape_name": "RemoveAttributesActivity"
              },
              "selectAttributes": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'selectAttributes' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'selectAttributes' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attributes": {
                    "type": "list",
                    "zonbookDocumentation": "\n         <para>A list of the attributes to select from the message.</para>\n      ",
                    "documentation": "\n         <p>A list of the attributes to select from the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeNames",
                    "min_length": 1,
                    "max_length": 50,
                    "members": {
                      "type": "string",
                      "shape_name": "AttributeName",
                      "documentation": null,
                      "min_length": 1,
                      "max_length": 256
                    }
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Creates a new message using only the specified attributes from the original message.\n     </para>\n      ",
                "documentation": "\n         <p>Creates a new message using only the specified attributes from the original message.\n     </p>\n      ",
                "shape_name": "SelectAttributesActivity"
              },
              "filter": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'filter' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'filter' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "filter": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>An expression that looks like a SQL WHERE clause that must return a Boolean value.</para>\n      ",
                    "documentation": "\n         <p>An expression that looks like a SQL WHERE clause that must return a Boolean value.</p>\n      ",
                    "required": true,
                    "shape_name": "FilterExpression",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Filters a message based on its attributes.</para>\n      ",
                "documentation": "\n         <p>Filters a message based on its attributes.</p>\n      ",
                "shape_name": "FilterActivity"
              },
              "math": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'math' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'math' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attribute": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the attribute that will contain the result of the math operation.</para>\n      ",
                    "documentation": "\n         <p>The name of the attribute that will contain the result of the math operation.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeName",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "math": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>An expression that uses one or more existing attributes and must return an integer value.</para>\n      ",
                    "documentation": "\n         <p>An expression that uses one or more existing attributes and must return an integer value.</p>\n      ",
                    "required": true,
                    "shape_name": "MathExpression",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</para>\n      ",
                "documentation": "\n         <p>Computes an arithmetic expression using the message's attributes and adds\n       it to the message.</p>\n      ",
                "shape_name": "MathActivity"
              },
              "deviceRegistryEnrich": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'deviceRegistryEnrich' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'deviceRegistryEnrich' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attribute": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                    "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeName",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "thingName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the IoT device whose registry information is added to the message.</para>\n      ",
                    "documentation": "\n         <p>The name of the IoT device whose registry information is added to the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeName",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "roleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's registry information.</para>\n      ",
                    "documentation": "\n         <p>The ARN of the role that allows access to the device's registry information.</p>\n      ",
                    "required": true,
                    "shape_name": "RoleArn",
                    "min_length": 20,
                    "max_length": 2048
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Adds data from the AWS IoT device registry to your message.</para>\n      ",
                "documentation": "\n         <p>Adds data from the AWS IoT device registry to your message.</p>\n      ",
                "shape_name": "DeviceRegistryEnrichActivity"
              },
              "deviceShadowEnrich": {
                "type": "structure",
                "members": {
                  "name": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the 'deviceShadowEnrich' activity.</para>\n      ",
                    "documentation": "\n         <p>The name of the 'deviceShadowEnrich' activity.</p>\n      ",
                    "required": true,
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  },
                  "attribute": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the attribute that is added to the message.</para>\n      ",
                    "documentation": "\n         <p>The name of the attribute that is added to the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeName",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "thingName": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The name of the IoT device whose shadow information is added to \n          the message.</para>\n      ",
                    "documentation": "\n         <p>The name of the IoT device whose shadow information is added to \n          the message.</p>\n      ",
                    "required": true,
                    "shape_name": "AttributeName",
                    "min_length": 1,
                    "max_length": 256
                  },
                  "roleArn": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The ARN of the role that allows access to the device's shadow.</para>\n      ",
                    "documentation": "\n         <p>The ARN of the role that allows access to the device's shadow.</p>\n      ",
                    "required": true,
                    "shape_name": "RoleArn",
                    "min_length": 20,
                    "max_length": 2048
                  },
                  "next": {
                    "type": "string",
                    "zonbookDocumentation": "\n         <para>The next activity in the pipeline.</para>\n      ",
                    "documentation": "\n         <p>The next activity in the pipeline.</p>\n      ",
                    "shape_name": "ActivityName",
                    "min_length": 1,
                    "max_length": 128
                  }
                },
                "zonbookDocumentation": "\n         <para>Adds information from the AWS IoT Device Shadows service to a message.</para>\n      ",
                "documentation": "\n         <p>Adds information from the AWS IoT Device Shadows service to a message.</p>\n      ",
                "shape_name": "DeviceShadowEnrichActivity"
              }
            },
            "zonbookDocumentation": "\n         <para>The pipeline activity that is run. This must not be a 'channel' activity or a \n          'datastore' activity because these activities are used in a pipeline only to load the \n          original message and to store the (possibly) transformed message. If a 'lambda' activity is\n          specified, only short-running Lambda functions (those with a timeout of less than 30 seconds\n          or less) can be used.</para>\n      ",
            "documentation": "\n         <p>The pipeline activity that is run. This must not be a 'channel' activity or a \n          'datastore' activity because these activities are used in a pipeline only to load the \n          original message and to store the (possibly) transformed message. If a 'lambda' activity is\n          specified, only short-running Lambda functions (those with a timeout of less than 30 seconds\n          or less) can be used.</p>\n      ",
            "required": true,
            "shape_name": "PipelineActivity"
          },
          "payloads": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The sample message payloads on which the pipeline activity is run.</para>\n      ",
            "documentation": "\n         <p>The sample message payloads on which the pipeline activity is run.</p>\n      ",
            "required": true,
            "shape_name": "MessagePayloads",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "blob",
              "shape_name": "MessagePayload",
              "documentation": null
            }
          }
        },
        "shape_name": "RunPipelineActivityRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "payloads": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The enriched or transformed sample message payloads as base64-encoded strings. \n          (The results of running the pipeline activity on each input sample message payload,\n          encoded in base64.)</para>\n      ",
            "documentation": "\n         <p>The enriched or transformed sample message payloads as base64-encoded strings. \n          (The results of running the pipeline activity on each input sample message payload,\n          encoded in base64.)</p>\n      ",
            "shape_name": "MessagePayloads",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "blob",
              "shape_name": "MessagePayload",
              "documentation": null
            }
          },
          "logResult": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>In case the pipeline activity fails, the log message that is generated.</para>\n      ",
            "documentation": "\n         <p>In case the pipeline activity fails, the log message that is generated.</p>\n      ",
            "shape_name": "LogResult"
          }
        },
        "shape_name": "RunPipelineActivityResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Simulates the results of running a pipeline activity on a message payload.</p>\n      "
    },
    "StartPipelineReprocessing": {
      "name": "StartPipelineReprocessing",
      "http": {
        "method": "POST",
        "uri": "/pipelines/{pipelineName}/reprocessing"
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the pipeline on which to start reprocessing.</para>\n      ",
            "documentation": "\n         <p>The name of the pipeline on which to start reprocessing.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          },
          "startTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The start time (inclusive) of raw message data that is reprocessed.</para>\n      ",
            "documentation": "\n         <p>The start time (inclusive) of raw message data that is reprocessed.</p>\n      ",
            "shape_name": "StartTime"
          },
          "endTime": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The end time (exclusive) of raw message data that is reprocessed.</para>\n      ",
            "documentation": "\n         <p>The end time (exclusive) of raw message data that is reprocessed.</p>\n      ",
            "shape_name": "EndTime"
          }
        },
        "shape_name": "StartPipelineReprocessingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "reprocessingId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID of the pipeline reprocessing activity that was started.</para>\n      ",
            "documentation": "\n         <p>The ID of the pipeline reprocessing activity that was started.</p>\n      ",
            "shape_name": "ReprocessingId"
          }
        },
        "shape_name": "StartPipelineReprocessingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ID of the resource.</para>\n      ",
              "documentation": "\n         <p>The ID of the resource.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ARN of the resource.</para>\n      ",
              "documentation": "\n         <p>The ARN of the resource.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the same name already exists.</para>\n      ",
          "documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Starts the reprocessing of raw message data through the pipeline.</p>\n      "
    },
    "CancelPipelineReprocessing": {
      "name": "CancelPipelineReprocessing",
      "http": {
        "method": "DELETE",
        "uri": "/pipelines/{pipelineName}/reprocessing/{reprocessingId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "pipelineName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of pipeline for which data reprocessing is canceled.</para>\n      ",
            "documentation": "\n         <p>The name of pipeline for which data reprocessing is canceled.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "PipelineName",
            "min_length": 1,
            "max_length": 128
          },
          "reprocessingId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ID of the reprocessing task (returned by \"StartPipelineReprocessing\").</para>\n      ",
            "documentation": "\n         <p>The ID of the reprocessing task (returned by \"StartPipelineReprocessing\").</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ReprocessingId"
          }
        },
        "shape_name": "CancelPipelineReprocessingRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "CancelPipelineReprocessingResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Cancels the reprocessing of data through the pipeline.</p>\n      "
    },
    "CreateDatastore": {
      "name": "CreateDatastore",
      "http": {
        "method": "POST",
        "uri": "/datastores",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "datastoreName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data store.</para>\n      ",
            "documentation": "\n         <p>The name of the data store.</p>\n      ",
            "required": true,
            "shape_name": "DatastoreName",
            "min_length": 1,
            "max_length": 128
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data store.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the data store.</p>\n      ",
            "shape_name": "RetentionPeriod"
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Metadata which can be used to manage the data store.</para>\n      ",
            "documentation": "\n         <p>Metadata which can be used to manage the data store.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateDatastoreRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datastoreName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data store.</para>\n      ",
            "documentation": "\n         <p>The name of the data store.</p>\n      ",
            "shape_name": "DatastoreName",
            "min_length": 1,
            "max_length": 128
          },
          "datastoreArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the data store.</para>\n      ",
            "documentation": "\n         <p>The ARN of the data store.</p>\n      ",
            "shape_name": "DatastoreArn"
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data store.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the data store.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "CreateDatastoreResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ID of the resource.</para>\n      ",
              "documentation": "\n         <p>The ID of the resource.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ARN of the resource.</para>\n      ",
              "documentation": "\n         <p>The ARN of the resource.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the same name already exists.</para>\n      ",
          "documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a data store, which is a repository for messages.</p>\n      "
    },
    "DescribeDatastore": {
      "name": "DescribeDatastore",
      "http": {
        "method": "GET",
        "uri": "/datastores/{datastoreName}?includeStatistics={includeStatistics}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datastoreName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data store</para>\n      ",
            "documentation": "\n         <p>The name of the data store</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatastoreName",
            "min_length": 1,
            "max_length": 128
          },
          "includeStatistics": {
            "type": "boolean",
            "zonbookDocumentation": "\n         <para>If true, additional statistical information about the datastore is included in the response.</para>\n      ",
            "documentation": "\n         <p>If true, additional statistical information about the datastore is included in the response.</p>\n      ",
            "location": "uri",
            "shape_name": "IncludeStatisticsFlag"
          }
        },
        "shape_name": "DescribeDatastoreRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datastore": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_]+$",
                "zonbookDocumentation": "\n         <para>The name of the data store.</para>\n      ",
                "documentation": "\n         <p>The name of the data store.</p>\n      ",
                "shape_name": "DatastoreName",
                "min_length": 1,
                "max_length": 128
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the data store.</para>\n      ",
                "documentation": "\n         <p>The ARN of the data store.</p>\n      ",
                "shape_name": "DatastoreArn"
              },
              "status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "ACTIVE",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n         <para>The status of a data store:</para>\n         <variablelist>\n            <varlistentry>\n               <term>CREATING</term>\n               <listitem>\n                  <para>The data store is being created.</para>\n               </listitem>\n            </varlistentry>\n            <varlistentry>\n               <term>ACTIVE</term>\n               <listitem>\n                  <para>The data store has been created and can be used.</para>\n               </listitem>\n            </varlistentry>\n            <varlistentry>\n               <term>DELETING</term>\n               <listitem>\n                  <para>The data store is being deleted.</para>\n               </listitem>\n            </varlistentry>\n         </variablelist>\n      ",
                "documentation": "\n         <p>The status of a data store:</p>\n         <dl>\n            <dt>CREATING</dt>\n            <dd>\n               <p>The data store is being created.</p>\n            </dd>\n            <dt>ACTIVE</dt>\n            <dd>\n               <p>The data store has been created and can be used.</p>\n            </dd>\n            <dt>DELETING</dt>\n            <dd>\n               <p>The data store is being deleted.</p>\n            </dd>\n         </dl>\n      ",
                "shape_name": "DatastoreStatus"
              },
              "retentionPeriod": {
                "type": "structure",
                "members": {
                  "unlimited": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                    "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                    "shape_name": "UnlimitedRetentionPeriod"
                  },
                  "numberOfDays": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                    "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                    "shape_name": "RetentionPeriodInDays",
                    "min_length": 1
                  }
                },
                "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data store.</para>\n      ",
                "documentation": "\n         <p>How long, in days, message data is kept for the data store.</p>\n      ",
                "shape_name": "RetentionPeriod"
              },
              "creationTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the data store was created.</para>\n      ",
                "documentation": "\n         <p>When the data store was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastUpdateTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The last time the data store was updated.</para>\n      ",
                "documentation": "\n         <p>The last time the data store was updated.</p>\n      ",
                "shape_name": "Timestamp"
              }
            },
            "zonbookDocumentation": "\n         <para>Information about the data store.</para>\n      ",
            "documentation": "\n         <p>Information about the data store.</p>\n      ",
            "shape_name": "Datastore"
          },
          "statistics": {
            "type": "structure",
            "members": {
              "size": {
                "type": "structure",
                "members": {
                  "estimatedSizeInBytes": {
                    "type": "double",
                    "zonbookDocumentation": "\n         <para>The estimated size of the resource in bytes.</para>\n      ",
                    "documentation": "\n         <p>The estimated size of the resource in bytes.</p>\n      ",
                    "shape_name": "SizeInBytes"
                  },
                  "estimatedOn": {
                    "type": "timestamp",
                    "zonbookDocumentation": "\n         <para>The time when the estimate of the size of the resource was made.</para>\n      ",
                    "documentation": "\n         <p>The time when the estimate of the size of the resource was made.</p>\n      ",
                    "shape_name": "Timestamp"
                  }
                },
                "zonbookDocumentation": "\n         <para>The estimated size of the data store.</para>\n      ",
                "documentation": "\n         <p>The estimated size of the data store.</p>\n      ",
                "shape_name": "EstimatedResourceSize"
              }
            },
            "zonbookDocumentation": "\n         <para>Additional statistical information about the data store. Included if the 'includeStatistics' \n           parameter is set to true in the request.</para>\n      ",
            "documentation": "\n         <p>Additional statistical information about the data store. Included if the 'includeStatistics' \n           parameter is set to true in the request.</p>\n      ",
            "shape_name": "DatastoreStatistics"
          }
        },
        "shape_name": "DescribeDatastoreResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about a data store.</p>\n      "
    },
    "UpdateDatastore": {
      "name": "UpdateDatastore",
      "http": {
        "method": "PUT",
        "uri": "/datastores/{datastoreName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datastoreName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data store to be updated.</para>\n      ",
            "documentation": "\n         <p>The name of the data store to be updated.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatastoreName",
            "min_length": 1,
            "max_length": 128
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data store.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the data store.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "UpdateDatastoreRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Updates the settings of a data store.</p>\n      "
    },
    "DeleteDatastore": {
      "name": "DeleteDatastore",
      "http": {
        "method": "DELETE",
        "uri": "/datastores/{datastoreName}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "datastoreName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data store to delete.</para>\n      ",
            "documentation": "\n         <p>The name of the data store to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatastoreName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteDatastoreRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified data store.</p>\n      "
    },
    "ListDatastores": {
      "name": "ListDatastores",
      "http": {
        "method": "GET",
        "uri": "/datastores?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "paginationToken": true,
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return in this request.</para>\n         <para>The default value is 100.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "location": "uri",
            "pageSize": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListDatastoresRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datastoreSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"DatastoreSummary\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"DatastoreSummary\" objects.</p>\n      ",
            "shape_name": "DatastoreSummaries",
            "members": {
              "type": "structure",
              "members": {
                "datastoreName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the data store.</para>\n      ",
                  "documentation": "\n         <p>The name of the data store.</p>\n      ",
                  "shape_name": "DatastoreName",
                  "min_length": 1,
                  "max_length": 128
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                  ],
                  "zonbookDocumentation": "\n         <para>The status of the data store.</para>\n      ",
                  "documentation": "\n         <p>The status of the data store.</p>\n      ",
                  "shape_name": "DatastoreStatus"
                },
                "creationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>When the data store was created.</para>\n      ",
                  "documentation": "\n         <p>When the data store was created.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastUpdateTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The last time the data store was updated.</para>\n      ",
                  "documentation": "\n         <p>The last time the data store was updated.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <para>A summary of information about a data store.</para>\n      ",
              "documentation": "\n         <p>A summary of information about a data store.</p>\n      ",
              "shape_name": "DatastoreSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListDatastoresResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves a list of data stores.</p>\n      "
    },
    "CreateDataset": {
      "name": "CreateDataset",
      "http": {
        "method": "POST",
        "uri": "/datasets",
        "response_code": 201
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set.</para>\n      ",
            "documentation": "\n         <p>The name of the data set.</p>\n      ",
            "required": true,
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "actions": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of actions that create the data set contents.</para>\n      ",
            "documentation": "\n         <p>A list of actions that create the data set contents.</p>\n      ",
            "required": true,
            "shape_name": "DatasetActions",
            "min_length": 1,
            "max_length": 1,
            "members": {
              "type": "structure",
              "members": {
                "actionName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the data set action by which data set contents are automatically created.</para>\n      ",
                  "documentation": "\n         <p>The name of the data set action by which data set contents are automatically created.</p>\n      ",
                  "shape_name": "DatasetActionName",
                  "min_length": 1,
                  "max_length": 128
                },
                "queryAction": {
                  "type": "structure",
                  "members": {
                    "sqlQuery": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>A SQL query string.</para>\n      ",
                      "documentation": "\n         <p>A SQL query string.</p>\n      ",
                      "required": true,
                      "shape_name": "SqlQuery"
                    },
                    "filters": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>Pre-filters applied to message data.</para>\n      ",
                      "documentation": "\n         <p>Pre-filters applied to message data.</p>\n      ",
                      "shape_name": "QueryFilters",
                      "min_length": 0,
                      "max_length": 1,
                      "members": {
                        "type": "structure",
                        "members": {
                          "deltaTime": {
                            "type": "structure",
                            "members": {
                              "offsetSeconds": {
                                "type": "integer",
                                "zonbookDocumentation": "\n         <para>The number of seconds of estimated \"in flight\" lag time of message data.</para>\n      ",
                                "documentation": "\n         <p>The number of seconds of estimated \"in flight\" lag time of message data.</p>\n      ",
                                "required": true,
                                "shape_name": "OffsetSeconds"
                              },
                              "timeExpression": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</para>\n      ",
                                "documentation": "\n         <p>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</p>\n      ",
                                "required": true,
                                "shape_name": "TimeExpression"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</para>\n      ",
                            "documentation": "\n         <p>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</p>\n      ",
                            "shape_name": "DeltaTime"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</para>\n      ",
                        "documentation": "\n         <p>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</p>\n      ",
                        "shape_name": "QueryFilter"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</para>\n      ",
                  "documentation": "\n         <p>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</p>\n      ",
                  "shape_name": "SqlQueryDatasetAction"
                },
                "containerAction": {
                  "type": "structure",
                  "members": {
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</p>\n      ",
                      "required": true,
                      "shape_name": "Image",
                      "max_length": 255
                    },
                    "executionRoleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "resourceConfiguration": {
                      "type": "structure",
                      "members": {
                        "computeType": {
                          "type": "string",
                          "enum": [
                            "ACU_1",
                            "ACU_2"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</para>\n      ",
                          "documentation": "\n         <p>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</p>\n      ",
                          "required": true,
                          "shape_name": "ComputeType"
                        },
                        "volumeSizeInGB": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</para>\n      ",
                          "documentation": "\n         <p>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</p>\n      ",
                          "required": true,
                          "shape_name": "VolumeSizeInGB",
                          "min_length": 1,
                          "max_length": 50
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Configuration of the resource which executes the \"containerAction\".</para>\n      ",
                      "documentation": "\n         <p>Configuration of the resource which executes the \"containerAction\".</p>\n      ",
                      "required": true,
                      "shape_name": "ResourceConfiguration"
                    },
                    "variables": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</para>\n      ",
                      "documentation": "\n         <p>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</p>\n      ",
                      "shape_name": "Variables",
                      "min_length": 0,
                      "max_length": 50,
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The name of the variable.</para>\n      ",
                            "documentation": "\n         <p>The name of the variable.</p>\n      ",
                            "required": true,
                            "shape_name": "VariableName",
                            "min_length": 1,
                            "max_length": 256
                          },
                          "stringValue": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The value of the variable as a string.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a string.</p>\n      ",
                            "shape_name": "StringValue",
                            "min_length": 0,
                            "max_length": 1024
                          },
                          "doubleValue": {
                            "type": "double",
                            "zonbookDocumentation": "\n         <para>The value of the variable as a double (numeric).</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a double (numeric).</p>\n      ",
                            "box": true,
                            "shape_name": "DoubleValue"
                          },
                          "datasetContentVersionValue": {
                            "type": "structure",
                            "members": {
                              "datasetName": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "zonbookDocumentation": "\n         <para>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</para>\n      ",
                                "documentation": "\n         <p>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</p>\n      ",
                                "required": true,
                                "shape_name": "DatasetName",
                                "min_length": 1,
                                "max_length": 128
                              }
                            },
                            "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies a data set content version.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a structure that specifies a data set content version.</p>\n      ",
                            "shape_name": "DatasetContentVersionValue"
                          },
                          "outputFileUriValue": {
                            "type": "structure",
                            "members": {
                              "fileName": {
                                "type": "string",
                                "pattern": "[\\w\\.-]{1,255}",
                                "zonbookDocumentation": "\n         <para>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</para>\n      ",
                                "documentation": "\n         <p>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</p>\n      ",
                                "required": true,
                                "shape_name": "OutputFileName"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies an output file URI.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a structure that specifies an output file URI.</p>\n      ",
                            "shape_name": "OutputFileUriValue"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</para>\n      ",
                        "documentation": "\n         <p>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</p>\n      ",
                        "shape_name": "Variable"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</para>\n      ",
                  "documentation": "\n         <p>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</p>\n      ",
                  "shape_name": "ContainerDatasetAction"
                }
              },
              "zonbookDocumentation": "\n         <para>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</para>\n      ",
              "documentation": "\n         <p>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</p>\n      ",
              "shape_name": "DatasetAction"
            }
          },
          "triggers": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of triggers. A trigger causes data set contents to be populated at a specified \n          time interval or when another data set's contents are created. The list of triggers can \n          be empty or contain up to five <emphasis role=\"bold\">DataSetTrigger</emphasis> objects.</para>\n      ",
            "documentation": "\n         <p>A list of triggers. A trigger causes data set contents to be populated at a specified \n          time interval or when another data set's contents are created. The list of triggers can \n          be empty or contain up to five <b>DataSetTrigger</b> objects.</p>\n      ",
            "shape_name": "DatasetTriggers",
            "min_length": 0,
            "max_length": 5,
            "members": {
              "type": "structure",
              "members": {
                "schedule": {
                  "type": "structure",
                  "members": {
                    "expression": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The expression that defines when to trigger an update. For more information, see \n          <ulink url=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</ulink> in the Amazon CloudWatch documentation.</para>\n      ",
                      "documentation": "\n         <p>The expression that defines when to trigger an update. For more information, see \n          <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.</p>\n      ",
                      "shape_name": "ScheduleExpression"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The \"Schedule\" when the trigger is initiated.</para>\n      ",
                  "documentation": "\n         <p>The \"Schedule\" when the trigger is initiated.</p>\n      ",
                  "shape_name": "Schedule"
                },
                "dataset": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the data set whose content generation will trigger the new data set content \n          generation.</para>\n      ",
                      "documentation": "\n         <p>The name of the data set whose content generation will trigger the new data set content \n          generation.</p>\n      ",
                      "required": true,
                      "shape_name": "DatasetName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The data set whose content creation will trigger the creation of this data set's contents.</para>\n      ",
                  "documentation": "\n         <p>The data set whose content creation will trigger the creation of this data set's contents.</p>\n      ",
                  "shape_name": "TriggeringDataset"
                }
              },
              "zonbookDocumentation": "\n         <para>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</para>\n      ",
              "documentation": "\n         <p>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</p>\n      ",
              "shape_name": "DatasetTrigger"
            }
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>[Optional] How long, in days, message data is kept for the data set. If not given or set to\n          null, the latest version of the dataset content plus the latest succeeded version (if they are\n          different) are retained for at most 90 days.</para>\n      ",
            "documentation": "\n         <p>[Optional] How long, in days, message data is kept for the data set. If not given or set to\n          null, the latest version of the dataset content plus the latest succeeded version (if they are\n          different) are retained for at most 90 days.</p>\n      ",
            "shape_name": "RetentionPeriod"
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Metadata which can be used to manage the data set.</para>\n      ",
            "documentation": "\n         <p>Metadata which can be used to manage the data set.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateDatasetRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set.</para>\n      ",
            "documentation": "\n         <p>The name of the data set.</p>\n      ",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "datasetArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the data set.</para>\n      ",
            "documentation": "\n         <p>The ARN of the data set.</p>\n      ",
            "shape_name": "DatasetArn"
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data set.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the data set.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "CreateDatasetResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            },
            "resourceId": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ID of the resource.</para>\n      ",
              "documentation": "\n         <p>The ID of the resource.</p>\n      ",
              "shape_name": "resourceId"
            },
            "resourceArn": {
              "type": "string",
              "zonbookDocumentation": "\n         <para>The ARN of the resource.</para>\n      ",
              "documentation": "\n         <p>The ARN of the resource.</p>\n      ",
              "shape_name": "resourceArn"
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the same name already exists.</para>\n      ",
          "documentation": "\n         <p>A resource with the same name already exists.</p>\n      ",
          "shape_name": "ResourceAlreadyExistsException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        }
      ],
      "documentation": "\n         <p>Creates a data set. A data set stores data retrieved from a data store by applying a\n         \"queryAction\" (a SQL query) or a \"containerAction\" (executing a containerized application).\n         This operation creates the skeleton of a data set. The data set can be populated manually\n         by calling \"CreateDatasetContent\" or automatically according to a \"trigger\" you specify.</p>\n      "
    },
    "DescribeDataset": {
      "name": "DescribeDataset",
      "http": {
        "method": "GET",
        "uri": "/datasets/{datasetName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set whose information is retrieved.</para>\n      ",
            "documentation": "\n         <p>The name of the data set whose information is retrieved.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DescribeDatasetRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "dataset": {
            "type": "structure",
            "members": {
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_]+$",
                "zonbookDocumentation": "\n         <para>The name of the data set.</para>\n      ",
                "documentation": "\n         <p>The name of the data set.</p>\n      ",
                "shape_name": "DatasetName",
                "min_length": 1,
                "max_length": 128
              },
              "arn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the data set.</para>\n      ",
                "documentation": "\n         <p>The ARN of the data set.</p>\n      ",
                "shape_name": "DatasetArn"
              },
              "actions": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The \"DatasetAction\" objects that automatically create the data set contents.</para>\n      ",
                "documentation": "\n         <p>The \"DatasetAction\" objects that automatically create the data set contents.</p>\n      ",
                "shape_name": "DatasetActions",
                "min_length": 1,
                "max_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "actionName": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the data set action by which data set contents are automatically created.</para>\n      ",
                      "documentation": "\n         <p>The name of the data set action by which data set contents are automatically created.</p>\n      ",
                      "shape_name": "DatasetActionName",
                      "min_length": 1,
                      "max_length": 128
                    },
                    "queryAction": {
                      "type": "structure",
                      "members": {
                        "sqlQuery": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>A SQL query string.</para>\n      ",
                          "documentation": "\n         <p>A SQL query string.</p>\n      ",
                          "required": true,
                          "shape_name": "SqlQuery"
                        },
                        "filters": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>Pre-filters applied to message data.</para>\n      ",
                          "documentation": "\n         <p>Pre-filters applied to message data.</p>\n      ",
                          "shape_name": "QueryFilters",
                          "min_length": 0,
                          "max_length": 1,
                          "members": {
                            "type": "structure",
                            "members": {
                              "deltaTime": {
                                "type": "structure",
                                "members": {
                                  "offsetSeconds": {
                                    "type": "integer",
                                    "zonbookDocumentation": "\n         <para>The number of seconds of estimated \"in flight\" lag time of message data.</para>\n      ",
                                    "documentation": "\n         <p>The number of seconds of estimated \"in flight\" lag time of message data.</p>\n      ",
                                    "required": true,
                                    "shape_name": "OffsetSeconds"
                                  },
                                  "timeExpression": {
                                    "type": "string",
                                    "zonbookDocumentation": "\n         <para>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</para>\n      ",
                                    "documentation": "\n         <p>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</p>\n      ",
                                    "required": true,
                                    "shape_name": "TimeExpression"
                                  }
                                },
                                "zonbookDocumentation": "\n         <para>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</para>\n      ",
                                "documentation": "\n         <p>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</p>\n      ",
                                "shape_name": "DeltaTime"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</para>\n      ",
                            "documentation": "\n         <p>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</p>\n      ",
                            "shape_name": "QueryFilter"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <para>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</para>\n      ",
                      "documentation": "\n         <p>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</p>\n      ",
                      "shape_name": "SqlQueryDatasetAction"
                    },
                    "containerAction": {
                      "type": "structure",
                      "members": {
                        "image": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</para>\n      ",
                          "documentation": "\n         <p>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</p>\n      ",
                          "required": true,
                          "shape_name": "Image",
                          "max_length": 255
                        },
                        "executionRoleArn": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</para>\n      ",
                          "documentation": "\n         <p>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</p>\n      ",
                          "required": true,
                          "shape_name": "RoleArn",
                          "min_length": 20,
                          "max_length": 2048
                        },
                        "resourceConfiguration": {
                          "type": "structure",
                          "members": {
                            "computeType": {
                              "type": "string",
                              "enum": [
                                "ACU_1",
                                "ACU_2"
                              ],
                              "zonbookDocumentation": "\n         <para>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</para>\n      ",
                              "documentation": "\n         <p>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</p>\n      ",
                              "required": true,
                              "shape_name": "ComputeType"
                            },
                            "volumeSizeInGB": {
                              "type": "integer",
                              "zonbookDocumentation": "\n         <para>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</para>\n      ",
                              "documentation": "\n         <p>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</p>\n      ",
                              "required": true,
                              "shape_name": "VolumeSizeInGB",
                              "min_length": 1,
                              "max_length": 50
                            }
                          },
                          "zonbookDocumentation": "\n         <para>Configuration of the resource which executes the \"containerAction\".</para>\n      ",
                          "documentation": "\n         <p>Configuration of the resource which executes the \"containerAction\".</p>\n      ",
                          "required": true,
                          "shape_name": "ResourceConfiguration"
                        },
                        "variables": {
                          "type": "list",
                          "zonbookDocumentation": "\n         <para>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</para>\n      ",
                          "documentation": "\n         <p>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</p>\n      ",
                          "shape_name": "Variables",
                          "min_length": 0,
                          "max_length": 50,
                          "members": {
                            "type": "structure",
                            "members": {
                              "name": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The name of the variable.</para>\n      ",
                                "documentation": "\n         <p>The name of the variable.</p>\n      ",
                                "required": true,
                                "shape_name": "VariableName",
                                "min_length": 1,
                                "max_length": 256
                              },
                              "stringValue": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>The value of the variable as a string.</para>\n      ",
                                "documentation": "\n         <p>The value of the variable as a string.</p>\n      ",
                                "shape_name": "StringValue",
                                "min_length": 0,
                                "max_length": 1024
                              },
                              "doubleValue": {
                                "type": "double",
                                "zonbookDocumentation": "\n         <para>The value of the variable as a double (numeric).</para>\n      ",
                                "documentation": "\n         <p>The value of the variable as a double (numeric).</p>\n      ",
                                "box": true,
                                "shape_name": "DoubleValue"
                              },
                              "datasetContentVersionValue": {
                                "type": "structure",
                                "members": {
                                  "datasetName": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]+$",
                                    "zonbookDocumentation": "\n         <para>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</para>\n      ",
                                    "documentation": "\n         <p>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</p>\n      ",
                                    "required": true,
                                    "shape_name": "DatasetName",
                                    "min_length": 1,
                                    "max_length": 128
                                  }
                                },
                                "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies a data set content version.</para>\n      ",
                                "documentation": "\n         <p>The value of the variable as a structure that specifies a data set content version.</p>\n      ",
                                "shape_name": "DatasetContentVersionValue"
                              },
                              "outputFileUriValue": {
                                "type": "structure",
                                "members": {
                                  "fileName": {
                                    "type": "string",
                                    "pattern": "[\\w\\.-]{1,255}",
                                    "zonbookDocumentation": "\n         <para>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</para>\n      ",
                                    "documentation": "\n         <p>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</p>\n      ",
                                    "required": true,
                                    "shape_name": "OutputFileName"
                                  }
                                },
                                "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies an output file URI.</para>\n      ",
                                "documentation": "\n         <p>The value of the variable as a structure that specifies an output file URI.</p>\n      ",
                                "shape_name": "OutputFileUriValue"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</para>\n      ",
                            "documentation": "\n         <p>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</p>\n      ",
                            "shape_name": "Variable"
                          }
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</para>\n      ",
                      "documentation": "\n         <p>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</p>\n      ",
                      "shape_name": "ContainerDatasetAction"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</para>\n      ",
                  "documentation": "\n         <p>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</p>\n      ",
                  "shape_name": "DatasetAction"
                }
              },
              "triggers": {
                "type": "list",
                "zonbookDocumentation": "\n         <para>The \"DatasetTrigger\" objects\n     that specify when the data set is automatically updated.</para>\n      ",
                "documentation": "\n         <p>The \"DatasetTrigger\" objects\n     that specify when the data set is automatically updated.</p>\n      ",
                "shape_name": "DatasetTriggers",
                "min_length": 0,
                "max_length": 5,
                "members": {
                  "type": "structure",
                  "members": {
                    "schedule": {
                      "type": "structure",
                      "members": {
                        "expression": {
                          "type": "string",
                          "zonbookDocumentation": "\n         <para>The expression that defines when to trigger an update. For more information, see \n          <ulink url=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</ulink> in the Amazon CloudWatch documentation.</para>\n      ",
                          "documentation": "\n         <p>The expression that defines when to trigger an update. For more information, see \n          <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.</p>\n      ",
                          "shape_name": "ScheduleExpression"
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The \"Schedule\" when the trigger is initiated.</para>\n      ",
                      "documentation": "\n         <p>The \"Schedule\" when the trigger is initiated.</p>\n      ",
                      "shape_name": "Schedule"
                    },
                    "dataset": {
                      "type": "structure",
                      "members": {
                        "name": {
                          "type": "string",
                          "pattern": "^[a-zA-Z0-9_]+$",
                          "zonbookDocumentation": "\n         <para>The name of the data set whose content generation will trigger the new data set content \n          generation.</para>\n      ",
                          "documentation": "\n         <p>The name of the data set whose content generation will trigger the new data set content \n          generation.</p>\n      ",
                          "required": true,
                          "shape_name": "DatasetName",
                          "min_length": 1,
                          "max_length": 128
                        }
                      },
                      "zonbookDocumentation": "\n         <para>The data set whose content creation will trigger the creation of this data set's contents.</para>\n      ",
                      "documentation": "\n         <p>The data set whose content creation will trigger the creation of this data set's contents.</p>\n      ",
                      "shape_name": "TriggeringDataset"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</para>\n      ",
                  "documentation": "\n         <p>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</p>\n      ",
                  "shape_name": "DatasetTrigger"
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "ACTIVE",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n         <para>The status of the data set.</para>\n      ",
                "documentation": "\n         <p>The status of the data set.</p>\n      ",
                "shape_name": "DatasetStatus"
              },
              "creationTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>When the data set was created.</para>\n      ",
                "documentation": "\n         <p>When the data set was created.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "lastUpdateTime": {
                "type": "timestamp",
                "zonbookDocumentation": "\n         <para>The last time the data set was updated.</para>\n      ",
                "documentation": "\n         <p>The last time the data set was updated.</p>\n      ",
                "shape_name": "Timestamp"
              },
              "retentionPeriod": {
                "type": "structure",
                "members": {
                  "unlimited": {
                    "type": "boolean",
                    "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                    "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                    "shape_name": "UnlimitedRetentionPeriod"
                  },
                  "numberOfDays": {
                    "type": "integer",
                    "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                    "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                    "shape_name": "RetentionPeriodInDays",
                    "min_length": 1
                  }
                },
                "zonbookDocumentation": "\n         <para>[Optional] How long, in days, message data is kept for the data set.</para>\n      ",
                "documentation": "\n         <p>[Optional] How long, in days, message data is kept for the data set.</p>\n      ",
                "shape_name": "RetentionPeriod"
              }
            },
            "zonbookDocumentation": "\n         <para>An object that contains information about the data set.</para>\n      ",
            "documentation": "\n         <p>An object that contains information about the data set.</p>\n      ",
            "shape_name": "Dataset"
          }
        },
        "shape_name": "DescribeDatasetResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about a data set.</p>\n      "
    },
    "UpdateDataset": {
      "name": "UpdateDataset",
      "http": {
        "method": "PUT",
        "uri": "/datasets/{datasetName}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set to update.</para>\n      ",
            "documentation": "\n         <p>The name of the data set to update.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "actions": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"DatasetAction\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"DatasetAction\" objects.</p>\n      ",
            "required": true,
            "shape_name": "DatasetActions",
            "min_length": 1,
            "max_length": 1,
            "members": {
              "type": "structure",
              "members": {
                "actionName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the data set action by which data set contents are automatically created.</para>\n      ",
                  "documentation": "\n         <p>The name of the data set action by which data set contents are automatically created.</p>\n      ",
                  "shape_name": "DatasetActionName",
                  "min_length": 1,
                  "max_length": 128
                },
                "queryAction": {
                  "type": "structure",
                  "members": {
                    "sqlQuery": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>A SQL query string.</para>\n      ",
                      "documentation": "\n         <p>A SQL query string.</p>\n      ",
                      "required": true,
                      "shape_name": "SqlQuery"
                    },
                    "filters": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>Pre-filters applied to message data.</para>\n      ",
                      "documentation": "\n         <p>Pre-filters applied to message data.</p>\n      ",
                      "shape_name": "QueryFilters",
                      "min_length": 0,
                      "max_length": 1,
                      "members": {
                        "type": "structure",
                        "members": {
                          "deltaTime": {
                            "type": "structure",
                            "members": {
                              "offsetSeconds": {
                                "type": "integer",
                                "zonbookDocumentation": "\n         <para>The number of seconds of estimated \"in flight\" lag time of message data.</para>\n      ",
                                "documentation": "\n         <p>The number of seconds of estimated \"in flight\" lag time of message data.</p>\n      ",
                                "required": true,
                                "shape_name": "OffsetSeconds"
                              },
                              "timeExpression": {
                                "type": "string",
                                "zonbookDocumentation": "\n         <para>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</para>\n      ",
                                "documentation": "\n         <p>An expression by which the time of the message data may be determined. This may be the name\n          of a timestamp field, or a SQL expression which is used to derive the time the message\n          data was generated.</p>\n      ",
                                "required": true,
                                "shape_name": "TimeExpression"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</para>\n      ",
                            "documentation": "\n         <p>Used to limit data to that which has arrived since the last execution of the action. When you\n          create data set contents using message data from a specified time frame, some message data may\n          still be \"in flight\" when processing begins, and so will not arrive in time to be processed. Use\n          this field to make allowances for the \"in flight\" time of you message data, so that data not \n          processed from a previous time frame will be included with the next time frame. Without this,\n          missed message data would be excluded from processing during the next time frame as well, because\n          its timestamp places it within the previous time frame.</p>\n      ",
                            "shape_name": "DeltaTime"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</para>\n      ",
                        "documentation": "\n         <p>Information which is used to filter message data, to segregate it according to the time\n          frame in which it arrives.</p>\n      ",
                        "shape_name": "QueryFilter"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</para>\n      ",
                  "documentation": "\n         <p>An \"SqlQueryDatasetAction\" object that contains the SQL query to \n         modify the message.</p>\n      ",
                  "shape_name": "SqlQueryDatasetAction"
                },
                "containerAction": {
                  "type": "structure",
                  "members": {
                    "image": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the Docker container stored in your account. The Docker container contains an\n          application and needed support libraries and is used to generate data set contents.</p>\n      ",
                      "required": true,
                      "shape_name": "Image",
                      "max_length": 255
                    },
                    "executionRoleArn": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</para>\n      ",
                      "documentation": "\n         <p>The ARN of the role which gives permission to the system to access needed resources in order\n          to run the \"containerAction\". This includes, at minimum, permission to retrieve the data set\n          contents which are the input to the containerized application.</p>\n      ",
                      "required": true,
                      "shape_name": "RoleArn",
                      "min_length": 20,
                      "max_length": 2048
                    },
                    "resourceConfiguration": {
                      "type": "structure",
                      "members": {
                        "computeType": {
                          "type": "string",
                          "enum": [
                            "ACU_1",
                            "ACU_2"
                          ],
                          "zonbookDocumentation": "\n         <para>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</para>\n      ",
                          "documentation": "\n         <p>The type of the compute resource used to execute the \"containerAction\". Possible values \n          are: ACU_1 (vCPU=4, memory=16GiB) or ACU_2 (vCPU=8, memory=32GiB).</p>\n      ",
                          "required": true,
                          "shape_name": "ComputeType"
                        },
                        "volumeSizeInGB": {
                          "type": "integer",
                          "zonbookDocumentation": "\n         <para>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</para>\n      ",
                          "documentation": "\n         <p>The size (in GB) of the persistent storage available to the resource instance used to\n          execute the \"containerAction\" (min: 1, max: 50).</p>\n      ",
                          "required": true,
                          "shape_name": "VolumeSizeInGB",
                          "min_length": 1,
                          "max_length": 50
                        }
                      },
                      "zonbookDocumentation": "\n         <para>Configuration of the resource which executes the \"containerAction\".</para>\n      ",
                      "documentation": "\n         <p>Configuration of the resource which executes the \"containerAction\".</p>\n      ",
                      "required": true,
                      "shape_name": "ResourceConfiguration"
                    },
                    "variables": {
                      "type": "list",
                      "zonbookDocumentation": "\n         <para>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</para>\n      ",
                      "documentation": "\n         <p>The values of variables used within the context of the execution of the containerized\n          application (basically, parameters passed to the application). Each variable must have a\n          name and a value given by one of \"stringValue\", \"datasetContentVersionValue\",\n          or \"outputFileUriValue\".</p>\n      ",
                      "shape_name": "Variables",
                      "min_length": 0,
                      "max_length": 50,
                      "members": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The name of the variable.</para>\n      ",
                            "documentation": "\n         <p>The name of the variable.</p>\n      ",
                            "required": true,
                            "shape_name": "VariableName",
                            "min_length": 1,
                            "max_length": 256
                          },
                          "stringValue": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The value of the variable as a string.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a string.</p>\n      ",
                            "shape_name": "StringValue",
                            "min_length": 0,
                            "max_length": 1024
                          },
                          "doubleValue": {
                            "type": "double",
                            "zonbookDocumentation": "\n         <para>The value of the variable as a double (numeric).</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a double (numeric).</p>\n      ",
                            "box": true,
                            "shape_name": "DoubleValue"
                          },
                          "datasetContentVersionValue": {
                            "type": "structure",
                            "members": {
                              "datasetName": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]+$",
                                "zonbookDocumentation": "\n         <para>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</para>\n      ",
                                "documentation": "\n         <p>The name of the data set whose latest contents will be used as input to the notebook or \n          application.</p>\n      ",
                                "required": true,
                                "shape_name": "DatasetName",
                                "min_length": 1,
                                "max_length": 128
                              }
                            },
                            "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies a data set content version.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a structure that specifies a data set content version.</p>\n      ",
                            "shape_name": "DatasetContentVersionValue"
                          },
                          "outputFileUriValue": {
                            "type": "structure",
                            "members": {
                              "fileName": {
                                "type": "string",
                                "pattern": "[\\w\\.-]{1,255}",
                                "zonbookDocumentation": "\n         <para>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</para>\n      ",
                                "documentation": "\n         <p>The URI of the location where data set contents are stored, usually the URI of a file in an \n          S3 bucket.</p>\n      ",
                                "required": true,
                                "shape_name": "OutputFileName"
                              }
                            },
                            "zonbookDocumentation": "\n         <para>The value of the variable as a structure that specifies an output file URI.</para>\n      ",
                            "documentation": "\n         <p>The value of the variable as a structure that specifies an output file URI.</p>\n      ",
                            "shape_name": "OutputFileUriValue"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</para>\n      ",
                        "documentation": "\n         <p>An instance of a variable to be passed to the \"containerAction\" execution.  Each variable \n          must have a name and a value given by one of \"stringValue\", \"datasetContentVersionValue\", or \n          \"outputFileUriValue\".</p>\n      ",
                        "shape_name": "Variable"
                      }
                    }
                  },
                  "zonbookDocumentation": "\n         <para>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</para>\n      ",
                  "documentation": "\n         <p>Information which allows the system to run a containerized application in order to create\n          the data set contents. The application must be in a Docker container along with any needed\n          support libraries.</p>\n      ",
                  "shape_name": "ContainerDatasetAction"
                }
              },
              "zonbookDocumentation": "\n         <para>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</para>\n      ",
              "documentation": "\n         <p>A \"DatasetAction\" object specifying the query that creates the \n          data set content.</p>\n      ",
              "shape_name": "DatasetAction"
            }
          },
          "triggers": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"DatasetTrigger\" objects.  The list can be empty or can contain up \n          to five <emphasis role=\"bold\">DataSetTrigger</emphasis> objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"DatasetTrigger\" objects.  The list can be empty or can contain up \n          to five <b>DataSetTrigger</b> objects.</p>\n      ",
            "shape_name": "DatasetTriggers",
            "min_length": 0,
            "max_length": 5,
            "members": {
              "type": "structure",
              "members": {
                "schedule": {
                  "type": "structure",
                  "members": {
                    "expression": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The expression that defines when to trigger an update. For more information, see \n          <ulink url=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</ulink> in the Amazon CloudWatch documentation.</para>\n      ",
                      "documentation": "\n         <p>The expression that defines when to trigger an update. For more information, see \n          <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.</p>\n      ",
                      "shape_name": "ScheduleExpression"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The \"Schedule\" when the trigger is initiated.</para>\n      ",
                  "documentation": "\n         <p>The \"Schedule\" when the trigger is initiated.</p>\n      ",
                  "shape_name": "Schedule"
                },
                "dataset": {
                  "type": "structure",
                  "members": {
                    "name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9_]+$",
                      "zonbookDocumentation": "\n         <para>The name of the data set whose content generation will trigger the new data set content \n          generation.</para>\n      ",
                      "documentation": "\n         <p>The name of the data set whose content generation will trigger the new data set content \n          generation.</p>\n      ",
                      "required": true,
                      "shape_name": "DatasetName",
                      "min_length": 1,
                      "max_length": 128
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The data set whose content creation will trigger the creation of this data set's contents.</para>\n      ",
                  "documentation": "\n         <p>The data set whose content creation will trigger the creation of this data set's contents.</p>\n      ",
                  "shape_name": "TriggeringDataset"
                }
              },
              "zonbookDocumentation": "\n         <para>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</para>\n      ",
              "documentation": "\n         <p>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</p>\n      ",
              "shape_name": "DatasetTrigger"
            }
          },
          "retentionPeriod": {
            "type": "structure",
            "members": {
              "unlimited": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, message data is kept indefinitely.</para>\n      ",
                "documentation": "\n         <p>If true, message data is kept indefinitely.</p>\n      ",
                "shape_name": "UnlimitedRetentionPeriod"
              },
              "numberOfDays": {
                "type": "integer",
                "zonbookDocumentation": "\n         <para>The number of days that message data is kept. The \"unlimited\" parameter must be false.</para>\n      ",
                "documentation": "\n         <p>The number of days that message data is kept. The \"unlimited\" parameter must be false.</p>\n      ",
                "shape_name": "RetentionPeriodInDays",
                "min_length": 1
              }
            },
            "zonbookDocumentation": "\n         <para>How long, in days, message data is kept for the data set.</para>\n      ",
            "documentation": "\n         <p>How long, in days, message data is kept for the data set.</p>\n      ",
            "shape_name": "RetentionPeriod"
          }
        },
        "shape_name": "UpdateDatasetRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Updates the settings of a data set.</p>\n      "
    },
    "DeleteDataset": {
      "name": "DeleteDataset",
      "http": {
        "method": "DELETE",
        "uri": "/datasets/{datasetName}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set to delete.</para>\n      ",
            "documentation": "\n         <p>The name of the data set to delete.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "DeleteDatasetRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Deletes the specified data set.</p>\n         <p>You do not have to delete the content of the data set before you perform this operation.</p>\n      "
    },
    "ListDatasets": {
      "name": "ListDatasets",
      "http": {
        "method": "GET",
        "uri": "/datasets?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "paginationToken": true,
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return in this request.</para>\n         <para>The default value is 100.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return in this request.</p>\n         <p>The default value is 100.</p>\n      ",
            "location": "uri",
            "pageSize": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListDatasetsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datasetSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"DatasetSummary\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"DatasetSummary\" objects.</p>\n      ",
            "shape_name": "DatasetSummaries",
            "members": {
              "type": "structure",
              "members": {
                "datasetName": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9_]+$",
                  "zonbookDocumentation": "\n         <para>The name of the data set.</para>\n      ",
                  "documentation": "\n         <p>The name of the data set.</p>\n      ",
                  "shape_name": "DatasetName",
                  "min_length": 1,
                  "max_length": 128
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "ACTIVE",
                    "DELETING"
                  ],
                  "zonbookDocumentation": "\n         <para>The status of the data set.</para>\n      ",
                  "documentation": "\n         <p>The status of the data set.</p>\n      ",
                  "shape_name": "DatasetStatus"
                },
                "creationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time the data set was created.</para>\n      ",
                  "documentation": "\n         <p>The time the data set was created.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "lastUpdateTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The last time the data set was updated.</para>\n      ",
                  "documentation": "\n         <p>The last time the data set was updated.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "triggers": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>A list of triggers. A trigger causes data set content to be populated at a specified time\n          interval or when another data set is populated. The list of triggers can be empty or contain up\n          to five DataSetTrigger objects</para>\n      ",
                  "documentation": "\n         <p>A list of triggers. A trigger causes data set content to be populated at a specified time\n          interval or when another data set is populated. The list of triggers can be empty or contain up\n          to five DataSetTrigger objects</p>\n      ",
                  "shape_name": "DatasetTriggers",
                  "min_length": 0,
                  "max_length": 5,
                  "members": {
                    "type": "structure",
                    "members": {
                      "schedule": {
                        "type": "structure",
                        "members": {
                          "expression": {
                            "type": "string",
                            "zonbookDocumentation": "\n         <para>The expression that defines when to trigger an update. For more information, see \n          <ulink url=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</ulink> in the Amazon CloudWatch documentation.</para>\n      ",
                            "documentation": "\n         <p>The expression that defines when to trigger an update. For more information, see \n          <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\">\n          Schedule Expressions for Rules</a> in the Amazon CloudWatch documentation.</p>\n      ",
                            "shape_name": "ScheduleExpression"
                          }
                        },
                        "zonbookDocumentation": "\n         <para>The \"Schedule\" when the trigger is initiated.</para>\n      ",
                        "documentation": "\n         <p>The \"Schedule\" when the trigger is initiated.</p>\n      ",
                        "shape_name": "Schedule"
                      },
                      "dataset": {
                        "type": "structure",
                        "members": {
                          "name": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_]+$",
                            "zonbookDocumentation": "\n         <para>The name of the data set whose content generation will trigger the new data set content \n          generation.</para>\n      ",
                            "documentation": "\n         <p>The name of the data set whose content generation will trigger the new data set content \n          generation.</p>\n      ",
                            "required": true,
                            "shape_name": "DatasetName",
                            "min_length": 1,
                            "max_length": 128
                          }
                        },
                        "zonbookDocumentation": "\n         <para>The data set whose content creation will trigger the creation of this data set's contents.</para>\n      ",
                        "documentation": "\n         <p>The data set whose content creation will trigger the creation of this data set's contents.</p>\n      ",
                        "shape_name": "TriggeringDataset"
                      }
                    },
                    "zonbookDocumentation": "\n         <para>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</para>\n      ",
                    "documentation": "\n         <p>The \"DatasetTrigger\"\n     that specifies when the data set is automatically updated.</p>\n      ",
                    "shape_name": "DatasetTrigger"
                  }
                },
                "actions": {
                  "type": "list",
                  "zonbookDocumentation": "\n         <para>A list of \"DataActionSummary\" objects.</para>\n      ",
                  "documentation": "\n         <p>A list of \"DataActionSummary\" objects.</p>\n      ",
                  "shape_name": "DatasetActionSummaries",
                  "min_length": 1,
                  "max_length": 1,
                  "members": {
                    "type": "structure",
                    "members": {
                      "actionName": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9_]+$",
                        "zonbookDocumentation": "\n         <para>The name of the action which automatically creates the data set's contents.</para>\n      ",
                        "documentation": "\n         <p>The name of the action which automatically creates the data set's contents.</p>\n      ",
                        "shape_name": "DatasetActionName",
                        "min_length": 1,
                        "max_length": 128
                      },
                      "actionType": {
                        "type": "string",
                        "enum": [
                          "QUERY",
                          "CONTAINER"
                        ],
                        "zonbookDocumentation": "\n         <para>The type of action by which the data set's contents are automatically created.</para>\n      ",
                        "documentation": "\n         <p>The type of action by which the data set's contents are automatically created.</p>\n      ",
                        "shape_name": "DatasetActionType"
                      }
                    },
                    "zonbookDocumentation": "\n         <para/>\n      ",
                    "documentation": "\n         <p/>\n      ",
                    "shape_name": "DatasetActionSummary"
                  }
                }
              },
              "zonbookDocumentation": "\n         <para>A summary of information about a data set.</para>\n      ",
              "documentation": "\n         <p>A summary of information about a data set.</p>\n      ",
              "shape_name": "DatasetSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n          more results.</p>\n      ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListDatasetsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves information about data sets.</p>\n      "
    },
    "CreateDatasetContent": {
      "name": "CreateDatasetContent",
      "http": {
        "method": "POST",
        "uri": "/datasets/{datasetName}/content"
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set.</para>\n      ",
            "documentation": "\n         <p>The name of the data set.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          }
        },
        "shape_name": "CreateDatasetContentRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "versionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The version ID of the data set contents which are being created.</para>\n      ",
            "documentation": "\n         <p>The version ID of the data set contents which are being created.</p>\n      ",
            "shape_name": "DatasetContentVersion",
            "min_length": 7,
            "max_length": 36
          }
        },
        "shape_name": "CreateDatasetContentResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Creates the content of a data set by applying a SQL action.</p>\n      "
    },
    "GetDatasetContent": {
      "name": "GetDatasetContent",
      "http": {
        "method": "GET",
        "uri": "/datasets/{datasetName}/content?versionId={versionId}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set whose contents are retrieved.</para>\n      ",
            "documentation": "\n         <p>The name of the data set whose contents are retrieved.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "versionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The version of the data set whose contents are retrieved. You can also use\n         the strings \"$LATEST\" or \"$LATEST_SUCCEEDED\" to retrieve the contents of the \n         latest or latest successfully completed data set. If not specified, \"$LATEST_SUCCEEDED\" \n         is the default.</para>\n      ",
            "documentation": "\n         <p>The version of the data set whose contents are retrieved. You can also use\n         the strings \"$LATEST\" or \"$LATEST_SUCCEEDED\" to retrieve the contents of the \n         latest or latest successfully completed data set. If not specified, \"$LATEST_SUCCEEDED\" \n         is the default.</p>\n      ",
            "location": "uri",
            "shape_name": "DatasetContentVersion",
            "min_length": 7,
            "max_length": 36
          }
        },
        "shape_name": "GetDatasetContentRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "entries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of \"DatasetEntry\" objects.</para>\n      ",
            "documentation": "\n         <p>A list of \"DatasetEntry\" objects.</p>\n      ",
            "shape_name": "DatasetEntries",
            "members": {
              "type": "structure",
              "members": {
                "entryName": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The name of the data set item.</para>\n      ",
                  "documentation": "\n         <p>The name of the data set item.</p>\n      ",
                  "shape_name": "EntryName"
                },
                "dataURI": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The pre-signed URI of the data set item.</para>\n      ",
                  "documentation": "\n         <p>The pre-signed URI of the data set item.</p>\n      ",
                  "shape_name": "PresignedURI"
                }
              },
              "zonbookDocumentation": "\n         <para>The reference to a data set entry.</para>\n      ",
              "documentation": "\n         <p>The reference to a data set entry.</p>\n      ",
              "shape_name": "DatasetEntry"
            }
          },
          "timestamp": {
            "type": "timestamp",
            "zonbookDocumentation": "\n         <para>The time when the request was made.</para>\n      ",
            "documentation": "\n         <p>The time when the request was made.</p>\n      ",
            "shape_name": "Timestamp"
          },
          "status": {
            "type": "structure",
            "members": {
              "state": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "SUCCEEDED",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n         <para>The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or\n         \"FAILED\".</para>\n      ",
                "documentation": "\n         <p>The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or\n         \"FAILED\".</p>\n      ",
                "shape_name": "DatasetContentState"
              },
              "reason": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The reason the data set contents are in this state.</para>\n      ",
                "documentation": "\n         <p>The reason the data set contents are in this state.</p>\n      ",
                "shape_name": "Reason"
              }
            },
            "zonbookDocumentation": "\n         <para>The status of the data set content.</para>\n      ",
            "documentation": "\n         <p>The status of the data set content.</p>\n      ",
            "shape_name": "DatasetContentStatus"
          }
        },
        "shape_name": "GetDatasetContentResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves the contents of a data set as pre-signed URIs.</p>\n      "
    },
    "DeleteDatasetContent": {
      "name": "DeleteDatasetContent",
      "http": {
        "method": "DELETE",
        "uri": "/datasets/{datasetName}/content?versionId={versionId}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set whose content is deleted.</para>\n      ",
            "documentation": "\n         <p>The name of the data set whose content is deleted.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "versionId": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The version of the data set whose content is deleted. You can also use the strings\n          \"$LATEST\" or \"$LATEST_SUCCEEDED\" to delete the latest or latest successfully \n          completed data set. If not specified, \"$LATEST_SUCCEEDED\" is the default.</para>\n      ",
            "documentation": "\n         <p>The version of the data set whose content is deleted. You can also use the strings\n          \"$LATEST\" or \"$LATEST_SUCCEEDED\" to delete the latest or latest successfully \n          completed data set. If not specified, \"$LATEST_SUCCEEDED\" is the default.</p>\n      ",
            "location": "uri",
            "shape_name": "DatasetContentVersion",
            "min_length": 7,
            "max_length": 36
          }
        },
        "shape_name": "DeleteDatasetContentRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Deletes the content of the specified data set.</p>\n      "
    },
    "ListDatasetContents": {
      "name": "ListDatasetContents",
      "http": {
        "method": "GET",
        "uri": "/datasets/{datasetName}/contents?nextToken={nextToken}&maxResults={maxResults}"
      },
      "input": {
        "type": "structure",
        "members": {
          "datasetName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the data set whose contents information you want to list.</para>\n      ",
            "documentation": "\n         <p>The name of the data set whose contents information you want to list.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "DatasetName",
            "min_length": 1,
            "max_length": 128
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token for the next set of results.</para>\n      ",
            "documentation": "\n         <p>The token for the next set of results.</p>\n      ",
            "location": "uri",
            "paginationToken": true,
            "shape_name": "NextToken"
          },
          "maxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n         <para>The maximum number of results to return in this request.</para>\n      ",
            "documentation": "\n         <p>The maximum number of results to return in this request.</p>\n      ",
            "location": "uri",
            "pageSize": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 250
          }
        },
        "shape_name": "ListDatasetContentsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "datasetContentSummaries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>Summary information about data set contents that have been created.</para>\n      ",
            "documentation": "\n         <p>Summary information about data set contents that have been created.</p>\n      ",
            "shape_name": "DatasetContentSummaries",
            "members": {
              "type": "structure",
              "members": {
                "version": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The version of the data set contents.</para>\n      ",
                  "documentation": "\n         <p>The version of the data set contents.</p>\n      ",
                  "shape_name": "DatasetContentVersion",
                  "min_length": 7,
                  "max_length": 36
                },
                "status": {
                  "type": "structure",
                  "members": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "CREATING",
                        "SUCCEEDED",
                        "FAILED"
                      ],
                      "zonbookDocumentation": "\n         <para>The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or\n         \"FAILED\".</para>\n      ",
                      "documentation": "\n         <p>The state of the data set contents. Can be one of \"READY\", \"CREATING\", \"SUCCEEDED\" or\n         \"FAILED\".</p>\n      ",
                      "shape_name": "DatasetContentState"
                    },
                    "reason": {
                      "type": "string",
                      "zonbookDocumentation": "\n         <para>The reason the data set contents are in this state.</para>\n      ",
                      "documentation": "\n         <p>The reason the data set contents are in this state.</p>\n      ",
                      "shape_name": "Reason"
                    }
                  },
                  "zonbookDocumentation": "\n         <para>The status of the data set contents.</para>\n      ",
                  "documentation": "\n         <p>The status of the data set contents.</p>\n      ",
                  "shape_name": "DatasetContentStatus"
                },
                "creationTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The actual time the creation of the data set contents was started.</para>\n      ",
                  "documentation": "\n         <p>The actual time the creation of the data set contents was started.</p>\n      ",
                  "shape_name": "Timestamp"
                },
                "scheduleTime": {
                  "type": "timestamp",
                  "zonbookDocumentation": "\n         <para>The time the creation of the data set contents was scheduled to start.</para>\n      ",
                  "documentation": "\n         <p>The time the creation of the data set contents was scheduled to start.</p>\n      ",
                  "shape_name": "Timestamp"
                }
              },
              "zonbookDocumentation": "\n         <para>Summary information about data set contents.</para>\n      ",
              "documentation": "\n         <p>Summary information about data set contents.</p>\n      ",
              "shape_name": "DatasetContentSummary"
            }
          },
          "nextToken": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The token to retrieve the next set of results, or <code>null</code> if there are no\n           more results.</para>\n      ",
            "documentation": "\n         <p>The token to retrieve the next set of results, or <code>null</code> if there are no\n           more results.</p>\n      ",
            "paginationToken": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListDatasetContentsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Lists information about data set contents that have been created.</p>\n      "
    },
    "PutLoggingOptions": {
      "name": "PutLoggingOptions",
      "http": {
        "method": "PUT",
        "uri": "/logging"
      },
      "input": {
        "type": "structure",
        "members": {
          "loggingOptions": {
            "type": "structure",
            "members": {
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to AWS IoT Analytics to\n          perform logging.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role that grants permission to AWS IoT Analytics to\n          perform logging.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              },
              "level": {
                "type": "string",
                "enum": [
                  "ERROR"
                ],
                "zonbookDocumentation": "\n         <para>The logging level.  Currently, only \"ERROR\" is supported.</para>\n      ",
                "documentation": "\n         <p>The logging level.  Currently, only \"ERROR\" is supported.</p>\n      ",
                "required": true,
                "shape_name": "LoggingLevel"
              },
              "enabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, logging is enabled for AWS IoT Analytics.</para>\n      ",
                "documentation": "\n         <p>If true, logging is enabled for AWS IoT Analytics.</p>\n      ",
                "required": true,
                "shape_name": "LoggingEnabled"
              }
            },
            "zonbookDocumentation": "\n         <para>The new values of the AWS IoT Analytics logging options.</para>\n      ",
            "documentation": "\n         <p>The new values of the AWS IoT Analytics logging options.</p>\n      ",
            "required": true,
            "shape_name": "LoggingOptions"
          }
        },
        "shape_name": "PutLoggingOptionsRequest",
        "documentation": null
      },
      "output": null,
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Sets or updates the AWS IoT Analytics logging options.</p>\n         <p>Note that if you update the value of any <code>loggingOptions</code> field, it takes up to one \n          minute for the change to take effect. Also, if you change the policy attached to the role \n          you specified in the roleArn field (for example, to correct an invalid policy) it takes \n          up to 5 minutes for that change to take effect.\n      </p>\n      "
    },
    "DescribeLoggingOptions": {
      "name": "DescribeLoggingOptions",
      "http": {
        "method": "GET",
        "uri": "/logging"
      },
      "input": {
        "type": "structure",
        "members": {
        },
        "shape_name": "DescribeLoggingOptionsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "loggingOptions": {
            "type": "structure",
            "members": {
              "roleArn": {
                "type": "string",
                "zonbookDocumentation": "\n         <para>The ARN of the role that grants permission to AWS IoT Analytics to\n          perform logging.</para>\n      ",
                "documentation": "\n         <p>The ARN of the role that grants permission to AWS IoT Analytics to\n          perform logging.</p>\n      ",
                "required": true,
                "shape_name": "RoleArn",
                "min_length": 20,
                "max_length": 2048
              },
              "level": {
                "type": "string",
                "enum": [
                  "ERROR"
                ],
                "zonbookDocumentation": "\n         <para>The logging level.  Currently, only \"ERROR\" is supported.</para>\n      ",
                "documentation": "\n         <p>The logging level.  Currently, only \"ERROR\" is supported.</p>\n      ",
                "required": true,
                "shape_name": "LoggingLevel"
              },
              "enabled": {
                "type": "boolean",
                "zonbookDocumentation": "\n         <para>If true, logging is enabled for AWS IoT Analytics.</para>\n      ",
                "documentation": "\n         <p>If true, logging is enabled for AWS IoT Analytics.</p>\n      ",
                "required": true,
                "shape_name": "LoggingEnabled"
              }
            },
            "zonbookDocumentation": "\n         <para>The current settings of the AWS IoT Analytics logging options.</para>\n      ",
            "documentation": "\n         <p>The current settings of the AWS IoT Analytics logging options.</p>\n      ",
            "shape_name": "LoggingOptions"
          }
        },
        "shape_name": "DescribeLoggingOptionsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Retrieves the current settings of the AWS IoT Analytics logging options.</p>\n      "
    },
    "BatchPutMessage": {
      "name": "BatchPutMessage",
      "http": {
        "method": "POST",
        "uri": "/messages/batch",
        "response_code": 200
      },
      "input": {
        "type": "structure",
        "members": {
          "channelName": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_]+$",
            "zonbookDocumentation": "\n         <para>The name of the channel where the messages are sent.</para>\n      ",
            "documentation": "\n         <p>The name of the channel where the messages are sent.</p>\n      ",
            "required": true,
            "shape_name": "ChannelName",
            "min_length": 1,
            "max_length": 128
          },
          "messages": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The list of messages to be sent. Each message has format:\n          '{ \"messageId\": \"string\", \"payload\": \"string\"}'.</para>\n      ",
            "documentation": "\n         <p>The list of messages to be sent. Each message has format:\n          '{ \"messageId\": \"string\", \"payload\": \"string\"}'.</p>\n      ",
            "required": true,
            "shape_name": "Messages",
            "members": {
              "type": "structure",
              "members": {
                "messageId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ID you wish to assign to the message. Each \"messageId\" must be unique \n          within each batch sent.</para>\n      ",
                  "documentation": "\n         <p>The ID you wish to assign to the message. Each \"messageId\" must be unique \n          within each batch sent.</p>\n      ",
                  "required": true,
                  "shape_name": "MessageId",
                  "min_length": 1,
                  "max_length": 128
                },
                "payload": {
                  "type": "blob",
                  "zonbookDocumentation": "\n         <para>The payload of the message. This may be a JSON string or a Base64-encoded string \n          representing binary data (in which case you must decode it by means of a pipeline activity).</para>\n      ",
                  "documentation": "\n         <p>The payload of the message. This may be a JSON string or a Base64-encoded string \n          representing binary data (in which case you must decode it by means of a pipeline activity).</p>\n      ",
                  "required": true,
                  "shape_name": "MessagePayload"
                }
              },
              "zonbookDocumentation": "\n         <para>Information about a message.</para>\n      ",
              "documentation": "\n         <p>Information about a message.</p>\n      ",
              "shape_name": "Message"
            }
          }
        },
        "shape_name": "BatchPutMessageRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "batchPutMessageErrorEntries": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>A list of any errors encountered when sending the messages to the channel.</para>\n      ",
            "documentation": "\n         <p>A list of any errors encountered when sending the messages to the channel.</p>\n      ",
            "shape_name": "BatchPutMessageErrorEntries",
            "members": {
              "type": "structure",
              "members": {
                "messageId": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The ID of the message that caused the error. (See the value corresponding to the \n          \"messageId\" key in the message object.)</para>\n      ",
                  "documentation": "\n         <p>The ID of the message that caused the error. (See the value corresponding to the \n          \"messageId\" key in the message object.)</p>\n      ",
                  "shape_name": "MessageId",
                  "min_length": 1,
                  "max_length": 128
                },
                "errorCode": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The code associated with the error.</para>\n      ",
                  "documentation": "\n         <p>The code associated with the error.</p>\n      ",
                  "shape_name": "ErrorCode"
                },
                "errorMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The message associated with the error.</para>\n      ",
                  "documentation": "\n         <p>The message associated with the error.</p>\n      ",
                  "shape_name": "ErrorMessage"
                }
              },
              "zonbookDocumentation": "\n         <para>Contains informations about errors.</para>\n      ",
              "documentation": "\n         <p>Contains informations about errors.</p>\n      ",
              "shape_name": "BatchPutMessageErrorEntry"
            }
          }
        },
        "shape_name": "BatchPutMessageResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n         <p>Sends messages to a channel.</p>\n      "
    },
    "TagResource": {
      "name": "TagResource",
      "http": {
        "method": "POST",
        "uri": "/tags?resourceArn={resourceArn}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the resource whose tags will be modified.</para>\n      ",
            "documentation": "\n         <p>The ARN of the resource whose tags will be modified.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ResourceArn",
            "min_length": 20,
            "max_length": 2048
          },
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The new or modified tags for the resource.</para>\n      ",
            "documentation": "\n         <p>The new or modified tags for the resource.</p>\n      ",
            "required": true,
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "TagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "TagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Adds to or modifies the tags of the given resource.  Tags are metadata \n          which can be used to manage a resource.</p>\n      "
    },
    "UntagResource": {
      "name": "UntagResource",
      "http": {
        "method": "DELETE",
        "uri": "/tags?resourceArn={resourceArn}&tagKeys={tagKeys}",
        "response_code": 204
      },
      "input": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the resource whose tags will be removed.</para>\n      ",
            "documentation": "\n         <p>The ARN of the resource whose tags will be removed.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ResourceArn",
            "min_length": 20,
            "max_length": 2048
          },
          "tagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The keys of those tags which will be removed.</para>\n      ",
            "documentation": "\n         <p>The keys of those tags which will be removed.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "TagKeyList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null,
              "min_length": 1,
              "max_length": 256
            }
          }
        },
        "shape_name": "UntagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UntagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Removes the given tags (metadata) from the resource.</p>\n      "
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "http": {
        "method": "GET",
        "uri": "/tags?resourceArn={resourceArn}"
      },
      "input": {
        "type": "structure",
        "members": {
          "resourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n         <para>The ARN of the resource whose tags you want to list.</para>\n      ",
            "documentation": "\n         <p>The ARN of the resource whose tags you want to list.</p>\n      ",
            "required": true,
            "location": "uri",
            "shape_name": "ResourceArn",
            "min_length": 20,
            "max_length": 2048
          }
        },
        "shape_name": "ListTagsForResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "tags": {
            "type": "list",
            "zonbookDocumentation": "\n         <para>The tags (metadata) which you have assigned to the resource.</para>\n      ",
            "documentation": "\n         <p>The tags (metadata) which you have assigned to the resource.</p>\n      ",
            "shape_name": "TagList",
            "min_length": 1,
            "max_length": 50,
            "members": {
              "type": "structure",
              "members": {
                "key": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's key.</para>\n      ",
                  "documentation": "\n         <p>The tag's key.</p>\n      ",
                  "required": true,
                  "shape_name": "TagKey",
                  "min_length": 1,
                  "max_length": 256
                },
                "value": {
                  "type": "string",
                  "zonbookDocumentation": "\n         <para>The tag's value.</para>\n      ",
                  "documentation": "\n         <p>The tag's value.</p>\n      ",
                  "required": true,
                  "shape_name": "TagValue",
                  "min_length": 1,
                  "max_length": 256
                }
              },
              "zonbookDocumentation": "\n         <para>A set of key/value pairs which are used to manage the resource.</para>\n      ",
              "documentation": "\n         <p>A set of key/value pairs which are used to manage the resource.</p>\n      ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "ListTagsForResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was not valid.</para>\n      ",
          "documentation": "\n         <p>The request was not valid.</p>\n      ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>There was an internal failure.</para>\n      ",
          "documentation": "\n         <p>There was an internal failure.</p>\n      ",
          "shape_name": "InternalFailureException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The service is temporarily unavailable.</para>\n      ",
          "documentation": "\n         <p>The service is temporarily unavailable.</p>\n      ",
          "shape_name": "ServiceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The request was denied due to request throttling.</para>\n      ",
          "documentation": "\n         <p>The request was denied due to request throttling.</p>\n      ",
          "shape_name": "ThrottlingException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>The command caused an internal limit to be exceeded.</para>\n      ",
          "documentation": "\n         <p>The command caused an internal limit to be exceeded.</p>\n      ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "message": {
              "type": "string",
              "shape_name": "errorMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n         <para>A resource with the specified name could not be found.</para>\n      ",
          "documentation": "\n         <p>A resource with the specified name could not be found.</p>\n      ",
          "shape_name": "ResourceNotFoundException"
        }
      ],
      "documentation": "\n         <p>Lists the tags (metadata) which you have assigned to the resource.</p>\n      "
    }
  }
}
