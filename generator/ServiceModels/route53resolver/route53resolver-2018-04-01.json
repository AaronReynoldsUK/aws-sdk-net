{
  "version": "1.0",
  "type": "json",
  "json_version": "1.1",
  "signature_version": "v4",
  "endpoint_prefix": "route53resolver",
  "service_full_name": "Amazon Route 53 Resolver",
  "service_id": "Route53Resolver",
  "service_abbreviation": "Route53Resolver",
  "uid": "route53resolver-2018-04-01",
  "api_version": "2018-04-01",
  "target_prefix": "Route53Resolver",
  "documentation": "\n\t\t       <p>Here's how you set up to query an Amazon Route 53 private hosted zone from your network:</p>\n\t\t\n\t\t       <ol>\n            <li>\n               <p>Connect your network to a VPC using AWS Direct Connect or a VPN.</p>\n            </li>\n            <li>\n               <p>Run the following AWS CLI command to create a Resolver endpoint:</p>\n\t\t\t\t           <p>\n                  <code>create-resolver-endpoint --name [endpoint_name] --direction INBOUND \n\t\t\t\t\t--creator-request-id [unique_string] --security-group-ids [security_group_with_inbound_rules] \n\t\t\t\t\t--ip-addresses SubnetId=[subnet_id] SubnetId=[subnet_id_in_different_AZ]</code>\n               </p>\n\t\t\t\t           <p>Note the resolver endpoint ID that appears in the response. You'll use it in step 3.</p>\n\t\t\t         </li>\n            <li>\n               <p>Get the IP addresses for the Resolver endpoints:</p>\n\t\t\t\t           <p>\n                  <code>get-resolver-endpoint --resolver-endpoint-id [resolver_endpoint_id]</code>\n               </p>\n\t\t\t         </li>\n            <li>\n               <p>In your network configuration, define the IP addresses that you got in step 3 as DNS servers.</p>\n\t\t\t\t           <p>You can now query instance names in your VPCs and the names of records in your private hosted zone.</p>\n\t\t\t         </li>\n         </ol>\n\n\t\t       <p>You can also perform the following operations using the AWS CLI:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>list-resolver-endpoints</code>: List all endpoints. The syntax includes options for pagination and filtering.</p>\n            </li>\n            <li>\n               <p>\n                  <code>update-resolver-endpoints</code>: Add IP addresses to an endpoint or remove IP addresses from an endpoint. </p>\n            </li>\n         </ul>\n\n\t\t       <p>To delete an endpoint, use the following AWS CLI command:</p>\n\t\t       <p>\n            <code>delete-resolver-endpoint --resolver-endpoint-id [resolver_endpoint_id]</code>\n         </p>\n\n\t     ",
  "operations": {
    "CreateResolverRule": {
      "name": "CreateResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "CreatorRequestId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. \n\t\t\t<code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </para>\n\t     ",
            "documentation": "\n\t\t       <p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. \n\t\t\t<code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n\t     ",
            "required": true,
            "shape_name": "CreatorRequestId",
            "min_length": 1,
            "max_length": 255
          },
          "Name": {
            "type": "string",
            "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "zonbookDocumentation": "\n\t\t       <para>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A friendly name that lets you easily find a rule in the Resolver dashboard in the Route 53 console.</p>\n\t     ",
            "shape_name": "Name",
            "max_length": 64
          },
          "RuleType": {
            "type": "string",
            "enum": [
              "FORWARD",
              "SYSTEM",
              "RECURSIVE"
            ],
            "zonbookDocumentation": "\n\t\t       <para>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Specify <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
            "required": true,
            "shape_name": "RuleTypeOption"
          },
          "DomainName": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains \n\t\t\tthe most specific domain name (www.example.com).</para>\n\t     ",
            "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that you specify in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), outbound DNS queries are routed using the resolver rule that contains \n\t\t\tthe most specific domain name (www.example.com).</p>\n\t     ",
            "required": true,
            "shape_name": "DomainName",
            "min_length": 1,
            "max_length": 256
          },
          "TargetIps": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IPs that you want Resolver to forward DNS queries to. You can specify only IPv4 addresses. Separate IP addresses with a comma.</p>\n\t     ",
            "box": true,
            "shape_name": "TargetList",
            "min_length": 1,
            "members": {
              "type": "structure",
              "members": {
                "Ip": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                  "required": true,
                  "shape_name": "Ip",
                  "min_length": 7,
                  "max_length": 36
                },
                "Port": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                  "box": true,
                  "shape_name": "Port",
                  "min_length": 0,
                  "max_length": 65535
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
              "shape_name": "TargetAddress"
            }
          },
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify \n\t\t\tin <code>TargetIps</code>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify \n\t\t\tin <code>TargetIps</code>.</p>\n\t     ",
            "box": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of the tag keys and values that you want to associate with the endpoint.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n\t     ",
            "box": true,
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</p>\n\t     ",
                  "shape_name": "TagKey"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</p>\n\t     ",
                  "shape_name": "TagValue"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</para>\n\t     ",
              "documentation": "\n\t\t       <p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>\n\t     ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRule": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID that Resolver assigned to the resolver rule when you created it.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "DomainName": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</para>\n\t     ",
                "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</p>\n\t     ",
                "shape_name": "DomainName",
                "min_length": 1,
                "max_length": 256
              },
              "Status": {
                "type": "string",
                "enum": [
                  "COMPLETE",
                  "DELETING",
                  "UPDATING",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver rule.</p>\n\t     ",
                "shape_name": "ResolverRuleStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of a resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of a resolver rule.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "RuleType": {
                "type": "string",
                "enum": [
                  "FORWARD",
                  "SYSTEM",
                  "RECURSIVE"
                ],
                "zonbookDocumentation": "\n\t\t       <para>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
                "documentation": "\n\t\t       <p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
                "shape_name": "RuleTypeOption"
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name for the resolver rule, which you specified when you created the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "TargetIps": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>An array that contains the IP addresses and ports that you want to forward </para>\n\t     ",
                "documentation": "\n\t\t       <p>An array that contains the IP addresses and ports that you want to forward </p>\n\t     ",
                "shape_name": "TargetList",
                "min_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Ip": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Ip",
                      "min_length": 7,
                      "max_length": 36
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                      "box": true,
                      "shape_name": "Port",
                      "min_length": 0,
                      "max_length": 65535
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                  "shape_name": "TargetAddress"
                }
              },
              "ResolverEndpointId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the endpoint that the rule is associated with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the endpoint that the rule is associated with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "OwnerId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n\t     ",
                "shape_name": "AccountId",
                "min_length": 12,
                "max_length": 32
              },
              "ShareStatus": {
                "type": "string",
                "enum": [
                  "NOT_SHARED",
                  "SHARED_WITH_ME",
                  "SHARED_BY_ME"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</p>\n\t     ",
                "shape_name": "ShareStatus"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>CreateResolverRule</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>CreateResolverRule</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverRule"
          }
        },
        "shape_name": "CreateResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request caused one or more limits to be exceeded.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request caused one or more limits to be exceeded.</p>\n\t     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to create already exists.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to create already exists.</p>\n\t     ",
          "shape_name": "ResourceExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource isn't available.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource isn't available.</p>\n\t     ",
          "shape_name": "ResourceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>For DNS queries that originate in your VPCs, specifies which resolver endpoint the queries pass through, \n\t\t\tone domain name that you want to forward to your network, and the IP addresses of the DNS resolvers in your network.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "UpdateResolverRule": {
      "name": "UpdateResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "ResolverRuleId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you want to update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule that you want to update.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "Config": {
            "type": "structure",
            "members": {
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </para>\n\t     ",
                "documentation": "\n\t\t       <p>The new name for the resolver rule. The name that you specify appears in the Resolver dashboard in the Route 53 console. </p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "TargetIps": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</para>\n\t     ",
                "documentation": "\n\t\t       <p>For DNS queries that originate in your VPC, the new IP addresses that you want to route outbound DNS queries to.</p>\n\t     ",
                "shape_name": "TargetList",
                "min_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Ip": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Ip",
                      "min_length": 7,
                      "max_length": 36
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                      "box": true,
                      "shape_name": "Port",
                      "min_length": 0,
                      "max_length": 65535
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                  "shape_name": "TargetAddress"
                }
              },
              "ResolverEndpointId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in \n\t\t\t<code>TargetIps</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the new outbound resolver endpoint that you want to use to route DNS queries to the IP addresses that you specify in \n\t\t\t<code>TargetIps</code>.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The new settings for the resolver rule.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The new settings for the resolver rule.</p>\n\t     ",
            "required": true,
            "shape_name": "ResolverRuleConfig"
          }
        },
        "shape_name": "UpdateResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRule": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID that Resolver assigned to the resolver rule when you created it.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "DomainName": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</para>\n\t     ",
                "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</p>\n\t     ",
                "shape_name": "DomainName",
                "min_length": 1,
                "max_length": 256
              },
              "Status": {
                "type": "string",
                "enum": [
                  "COMPLETE",
                  "DELETING",
                  "UPDATING",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver rule.</p>\n\t     ",
                "shape_name": "ResolverRuleStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of a resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of a resolver rule.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "RuleType": {
                "type": "string",
                "enum": [
                  "FORWARD",
                  "SYSTEM",
                  "RECURSIVE"
                ],
                "zonbookDocumentation": "\n\t\t       <para>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
                "documentation": "\n\t\t       <p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
                "shape_name": "RuleTypeOption"
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name for the resolver rule, which you specified when you created the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "TargetIps": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>An array that contains the IP addresses and ports that you want to forward </para>\n\t     ",
                "documentation": "\n\t\t       <p>An array that contains the IP addresses and ports that you want to forward </p>\n\t     ",
                "shape_name": "TargetList",
                "min_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Ip": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Ip",
                      "min_length": 7,
                      "max_length": 36
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                      "box": true,
                      "shape_name": "Port",
                      "min_length": 0,
                      "max_length": 65535
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                  "shape_name": "TargetAddress"
                }
              },
              "ResolverEndpointId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the endpoint that the rule is associated with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the endpoint that the rule is associated with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "OwnerId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n\t     ",
                "shape_name": "AccountId",
                "min_length": 12,
                "max_length": 32
              },
              "ShareStatus": {
                "type": "string",
                "enum": [
                  "NOT_SHARED",
                  "SHARED_WITH_ME",
                  "SHARED_BY_ME"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</p>\n\t     ",
                "shape_name": "ShareStatus"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The response to an <code>UpdateResolverRule</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The response to an <code>UpdateResolverRule</code> request.</p>\n\t     ",
            "shape_name": "ResolverRule"
          }
        },
        "shape_name": "UpdateResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource isn't available.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource isn't available.</p>\n\t     ",
          "shape_name": "ResourceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request caused one or more limits to be exceeded.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request caused one or more limits to be exceeded.</p>\n\t     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates settings for a specified resolver rule. <code>ResolverRuleId</code> is required, and all other parameters are optional. \n\t\t\tIf you don't specify a parameter, it retains its current value.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "DeleteResolverRule": {
      "name": "DeleteResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "ResolverRuleId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you want to delete.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule that you want to delete.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "DeleteResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRule": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID that Resolver assigned to the resolver rule when you created it.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "DomainName": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</para>\n\t     ",
                "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</p>\n\t     ",
                "shape_name": "DomainName",
                "min_length": 1,
                "max_length": 256
              },
              "Status": {
                "type": "string",
                "enum": [
                  "COMPLETE",
                  "DELETING",
                  "UPDATING",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver rule.</p>\n\t     ",
                "shape_name": "ResolverRuleStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of a resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of a resolver rule.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "RuleType": {
                "type": "string",
                "enum": [
                  "FORWARD",
                  "SYSTEM",
                  "RECURSIVE"
                ],
                "zonbookDocumentation": "\n\t\t       <para>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
                "documentation": "\n\t\t       <p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
                "shape_name": "RuleTypeOption"
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name for the resolver rule, which you specified when you created the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "TargetIps": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>An array that contains the IP addresses and ports that you want to forward </para>\n\t     ",
                "documentation": "\n\t\t       <p>An array that contains the IP addresses and ports that you want to forward </p>\n\t     ",
                "shape_name": "TargetList",
                "min_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Ip": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Ip",
                      "min_length": 7,
                      "max_length": 36
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                      "box": true,
                      "shape_name": "Port",
                      "min_length": 0,
                      "max_length": 65535
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                  "shape_name": "TargetAddress"
                }
              },
              "ResolverEndpointId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the endpoint that the rule is associated with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the endpoint that the rule is associated with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "OwnerId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n\t     ",
                "shape_name": "AccountId",
                "min_length": 12,
                "max_length": 32
              },
              "ShareStatus": {
                "type": "string",
                "enum": [
                  "NOT_SHARED",
                  "SHARED_WITH_ME",
                  "SHARED_BY_ME"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</p>\n\t     ",
                "shape_name": "ShareStatus"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>DeleteResolverRule</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverRule"
          }
        },
        "shape_name": "DeleteResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceInUseException</code> error, the type of resource that is currently in use.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to update or delete is currently in use.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to update or delete is currently in use.</p>\n\t     ",
          "shape_name": "ResourceInUseException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes a resolver rule. Before you can delete a resolver rule, you must disassociate it from all the VPCs that you \n\t\t\tassociated the resolver rule with. For more infomation, see <a>DisassociateResolverRule</a>.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "GetResolverRule": {
      "name": "GetResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "ResolverRuleId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you want to get information about.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule that you want to get information about.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "GetResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRule": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID that Resolver assigned to the resolver rule when you created it.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "DomainName": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</para>\n\t     ",
                "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</p>\n\t     ",
                "shape_name": "DomainName",
                "min_length": 1,
                "max_length": 256
              },
              "Status": {
                "type": "string",
                "enum": [
                  "COMPLETE",
                  "DELETING",
                  "UPDATING",
                  "FAILED"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver rule.</p>\n\t     ",
                "shape_name": "ResolverRuleStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of a resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of a resolver rule.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "RuleType": {
                "type": "string",
                "enum": [
                  "FORWARD",
                  "SYSTEM",
                  "RECURSIVE"
                ],
                "zonbookDocumentation": "\n\t\t       <para>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
                "documentation": "\n\t\t       <p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
                "shape_name": "RuleTypeOption"
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name for the resolver rule, which you specified when you created the resolver rule.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "TargetIps": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>An array that contains the IP addresses and ports that you want to forward </para>\n\t     ",
                "documentation": "\n\t\t       <p>An array that contains the IP addresses and ports that you want to forward </p>\n\t     ",
                "shape_name": "TargetList",
                "min_length": 1,
                "members": {
                  "type": "structure",
                  "members": {
                    "Ip": {
                      "type": "string",
                      "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                      "required": true,
                      "shape_name": "Ip",
                      "min_length": 7,
                      "max_length": 36
                    },
                    "Port": {
                      "type": "integer",
                      "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                      "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                      "box": true,
                      "shape_name": "Port",
                      "min_length": 0,
                      "max_length": 65535
                    }
                  },
                  "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                  "shape_name": "TargetAddress"
                }
              },
              "ResolverEndpointId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the endpoint that the rule is associated with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the endpoint that the rule is associated with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "OwnerId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n\t     ",
                "shape_name": "AccountId",
                "min_length": 12,
                "max_length": 32
              },
              "ShareStatus": {
                "type": "string",
                "enum": [
                  "NOT_SHARED",
                  "SHARED_WITH_ME",
                  "SHARED_BY_ME"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</para>\n\t     ",
                "documentation": "\n\t\t       <p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</p>\n\t     ",
                "shape_name": "ShareStatus"
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the resolver rule that you specified in a <code>GetResolverRule</code> request.</p>\n\t     ",
            "shape_name": "ResolverRule"
          }
        },
        "shape_name": "GetResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about a specified resolver rule, such as the domain name that the rule forwards DNS queries for and the ID of the \n\t\t\toutbound resolver endpoint that the rule is associated with.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "ListResolverRules": {
      "name": "ListResolverRules",
      "input": {
        "type": "structure",
        "members": {
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of resolver rules that you want to return in the response to a <code>ListResolverRules</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver rules.</p>\n\t     ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>For the first <code>ListResolverRules</code> request, omit this value.</para>\n\t\t       <para>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request \n\t\t\tto get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>For the first <code>ListResolverRules</code> request, omit this value.</p>\n\t\t       <p>If you have more than <code>MaxResults</code> resolver rules, you can submit another <code>ListResolverRules</code> request \n\t\t\tto get the next group of resolver rules. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "box": true,
            "shape_name": "NextToken"
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</para>\n\t\t       <note>\n            <para>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</para>\n         </note>\n\n\n\t\t\n\t     ",
            "documentation": "\n\t\t       <p>An optional specification to return a subset of resolver rules, such as all resolver rules that are associated with the same resolver endpoint.</p>\n\t\t       <note>\n            <p>If you submit a second or subsequent <code>ListResolverRules</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n         </note>\n\n\n\t\t\n\t     ",
            "box": true,
            "shape_name": "Filters",
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</p>\n\t     ",
                  "shape_name": "FilterName",
                  "min_length": 1,
                  "max_length": 64
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</p>\n\t     ",
                  "shape_name": "FilterValues",
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 64
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</p>\n\t     ",
              "shape_name": "Filter"
            }
          }
        },
        "shape_name": "ListResolverRulesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another \n\t\t\t<code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>If more than <code>MaxResults</code> resolver rules match the specified criteria, you can submit another \n\t\t\t<code>ListResolverRules</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </p>\n\t     ",
            "shape_name": "NextToken"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>MaxResults</code> in the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The value that you specified for <code>MaxResults</code> in the request.</p>\n\t     ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "ResolverRules": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The resolver rules that were created using the current AWS account and that match the specified filters, if any.</p>\n\t     ",
            "shape_name": "ResolverRules",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID that Resolver assigned to the resolver rule when you created it.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID that Resolver assigned to the resolver rule when you created it.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "CreatorRequestId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </para>\n\t     ",
                  "documentation": "\n\t\t       <p>A unique string that you specified when you created the resolver rule. <code>CreatorRequestId</code>identifies the request and allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice. </p>\n\t     ",
                  "shape_name": "CreatorRequestId",
                  "min_length": 1,
                  "max_length": 255
                },
                "Arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver rule specified by <code>Id</code>.</p>\n\t     ",
                  "shape_name": "Arn",
                  "min_length": 1,
                  "max_length": 255
                },
                "DomainName": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</para>\n\t     ",
                  "documentation": "\n\t\t       <p>DNS queries for this domain name are forwarded to the IP addresses that are specified in <code>TargetIps</code>. If a query matches \n\t\t\tmultiple resolver rules (example.com and www.example.com), the query is routed using the resolver rule that contains the most specific domain name \n\t\t\t(www.example.com).</p>\n\t     ",
                  "shape_name": "DomainName",
                  "min_length": 1,
                  "max_length": 256
                },
                "Status": {
                  "type": "string",
                  "enum": [
                    "COMPLETE",
                    "DELETING",
                    "UPDATING",
                    "FAILED"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver rule.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver rule.</p>\n\t     ",
                  "shape_name": "ResolverRuleStatus"
                },
                "StatusMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of a resolver rule.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A detailed description of the status of a resolver rule.</p>\n\t     ",
                  "shape_name": "StatusMessage",
                  "max_length": 255
                },
                "RuleType": {
                  "type": "string",
                  "enum": [
                    "FORWARD",
                    "SYSTEM",
                    "RECURSIVE"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>This value is always <code>FORWARD</code>. Other resolver rule types aren't supported.</p>\n\t     ",
                  "shape_name": "RuleTypeOption"
                },
                "Name": {
                  "type": "string",
                  "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                  "zonbookDocumentation": "\n\t\t       <para>The name for the resolver rule, which you specified when you created the resolver rule.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name for the resolver rule, which you specified when you created the resolver rule.</p>\n\t     ",
                  "shape_name": "Name",
                  "max_length": 64
                },
                "TargetIps": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>An array that contains the IP addresses and ports that you want to forward </para>\n\t     ",
                  "documentation": "\n\t\t       <p>An array that contains the IP addresses and ports that you want to forward </p>\n\t     ",
                  "shape_name": "TargetList",
                  "min_length": 1,
                  "members": {
                    "type": "structure",
                    "members": {
                      "Ip": {
                        "type": "string",
                        "zonbookDocumentation": "\n\t\t       <para>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</para>\n\t     ",
                        "documentation": "\n\t\t       <p>One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses.</p>\n\t     ",
                        "required": true,
                        "shape_name": "Ip",
                        "min_length": 7,
                        "max_length": 36
                      },
                      "Port": {
                        "type": "integer",
                        "zonbookDocumentation": "\n\t\t       <para>The port at <code>Ip</code> that you want to forward DNS queries to.</para>\n\t     ",
                        "documentation": "\n\t\t       <p>The port at <code>Ip</code> that you want to forward DNS queries to.</p>\n\t     ",
                        "box": true,
                        "shape_name": "Port",
                        "min_length": 0,
                        "max_length": 65535
                      }
                    },
                    "zonbookDocumentation": "\n\t\t       <para>In a <xref linkend=\"CreateResolverRule\"/> request, an array of the IPs that you want to forward DNS queries to.</para>\n\t     ",
                    "documentation": "\n\t\t       <p>In a <a>CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.</p>\n\t     ",
                    "shape_name": "TargetAddress"
                  }
                },
                "ResolverEndpointId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the endpoint that the rule is associated with.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the endpoint that the rule is associated with.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "OwnerId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When a rule is shared with another AWS account, the account ID of the account that the rule is shared with.</p>\n\t     ",
                  "shape_name": "AccountId",
                  "min_length": 12,
                  "max_length": 32
                },
                "ShareStatus": {
                  "type": "string",
                  "enum": [
                    "NOT_SHARED",
                    "SHARED_WITH_ME",
                    "SHARED_BY_ME"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>Whether the rules is shared and, if so, whether the current account is sharing the rule with another account, or \n\t\t\tanother account is sharing the rule with the current account.</p>\n\t     ",
                  "shape_name": "ShareStatus"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>For queries that originate in your VPC, detailed information about a resolver rule, which specifies how to route DNS queries \n\t\t\tout of the VPC. The <code>ResolverRule</code> parameter appears in the response to a <xref linkend=\"CreateResolverRule\"/>, \n\t\t\t<xref linkend=\"DeleteResolverRule\"/>, <xref linkend=\"GetResolverRule\"/>, <xref linkend=\"ListResolverRules\"/>, or <xref linkend=\"UpdateResolverRule\"/> \n\t\t\trequest.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For queries that originate in your VPC, detailed information about a resolver rule, which specifies how to route DNS queries \n\t\t\tout of the VPC. The <code>ResolverRule</code> parameter appears in the response to a <a>CreateResolverRule</a>, \n\t\t\t<a>DeleteResolverRule</a>, <a>GetResolverRule</a>, <a>ListResolverRules</a>, or <a>UpdateResolverRule</a> \n\t\t\trequest.</p>\n\t     ",
              "shape_name": "ResolverRule"
            }
          }
        },
        "shape_name": "ListResolverRulesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>\n\t     ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the resolver rules that were created using the current AWS account.</p>\n\n\t\t\n\t\t\n\t     "
    },
    "AssociateResolverRule": {
      "name": "AssociateResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "ResolverRuleId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use \n\t\t\t<xref linkend=\"ListResolverRules\"/>.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule that you want to associate with the VPC. To list the existing resolver rules, use \n\t\t\t<a>ListResolverRules</a>.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "Name": {
            "type": "string",
            "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "zonbookDocumentation": "\n\t\t       <para>A name for the association that you're creating between a resolver rule and a VPC.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A name for the association that you're creating between a resolver rule and a VPC.</p>\n\t     ",
            "shape_name": "Name",
            "max_length": 64
          },
          "VPCId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to associate the resolver rule with.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the VPC that you want to associate the resolver rule with.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "AssociateResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRuleAssociation": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<xref linkend=\"AssociateResolverRule\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<a>AssociateResolverRule</a> request.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "ResolverRuleId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name of an association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name of an association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "VPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you associated the resolver rule with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you associated the resolver rule with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "COMPLETE",
                  "DELETING",
                  "FAILED",
                  "OVERRIDDEN"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "ResolverRuleAssociationStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>AssociateResolverRule</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverRuleAssociation"
          }
        },
        "shape_name": "AssociateResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceUnavailableException</code> error, the type of resource that isn't available.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource isn't available.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource isn't available.</p>\n\t     ",
          "shape_name": "ResourceUnavailableException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to create already exists.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to create already exists.</p>\n\t     ",
          "shape_name": "ResourceExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Associates a resolver rule with a VPC. When you associate a rule with a VPC, Resolver forwards all DNS queries \n\t\t\tfor the domain name that is specified in the rule and that originate in the VPC. The queries are forwarded to the \n\t\t\tIP addresses for the DNS resolvers that are specified in the rule. For more information about rules, see \n\t\t\t<a>CreateResolverRule</a>. </p>\n\n\t\t\n\t\t\n\t     "
    },
    "PutResolverRulePolicy": {
      "name": "PutResolverRulePolicy",
      "input": {
        "type": "structure",
        "members": {
          "Arn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) of the account that you want to grant permissions to.</p>\n\t     ",
            "required": true,
            "shape_name": "Arn",
            "min_length": 1,
            "max_length": 255
          },
          "ResolverRulePolicy": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</para>\n\t     ",
            "documentation": "\n\t\t       <p>An AWS Identity and Access Management policy statement that lists the permissions that you want to grant to another AWS account.</p>\n\t     ",
            "required": true,
            "shape_name": "ResolverRulePolicy",
            "max_length": 5000
          }
        },
        "shape_name": "PutResolverRulePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ReturnValue": {
            "type": "boolean",
            "zonbookDocumentation": "\n\t\t       <para>Whether the <code>PutResolverRulePolicy</code> request was successful.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Whether the <code>PutResolverRulePolicy</code> request was successful.</p>\n\t     ",
            "shape_name": "Boolean"
          }
        },
        "zonbookDocumentation": "\n\t\t       <para>The response to a <code>PutResolverRulePolicy</code> request.</para>\n\t     ",
        "documentation": "\n\t\t       <p>The response to a <code>PutResolverRulePolicy</code> request.</p>\n\t     ",
        "shape_name": "PutResolverRulePolicyResponse"
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resolver rule policy is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resolver rule policy is invalid.</p>\n\t     ",
          "shape_name": "InvalidPolicyDocument"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "UnknownResourceException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Specifies the Resolver operations and resources that you want to allow another AWS account to be able to use.</p>\n\n\t\t\n\t\t\n\t\t\n\n\t     "
    },
    "GetResolverRulePolicy": {
      "name": "GetResolverRulePolicy",
      "input": {
        "type": "structure",
        "members": {
          "Arn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule policy that you want to get information about.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule policy that you want to get information about.</p>\n\t     ",
            "required": true,
            "shape_name": "Arn",
            "min_length": 1,
            "max_length": 255
          }
        },
        "shape_name": "GetResolverRulePolicyRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRulePolicy": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the resolver rule policy that you specified in a <code>GetResolverRulePolicy</code> request.</p>\n\t     ",
            "shape_name": "ResolverRulePolicy",
            "max_length": 5000
          }
        },
        "shape_name": "GetResolverRulePolicyResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "UnknownResourceException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about a resolver rule policy. A resolver rule policy specifies the Resolver operations and resources \n\t\t\tthat you want to allow another AWS account to be able to use. </p>\n\t\t\n\t\t\n\n\t     "
    },
    "GetResolverRuleAssociation": {
      "name": "GetResolverRuleAssociation",
      "input": {
        "type": "structure",
        "members": {
          "ResolverRuleAssociationId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule association that you want to get information about.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule association that you want to get information about.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "GetResolverRuleAssociationRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRuleAssociation": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<xref linkend=\"AssociateResolverRule\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<a>AssociateResolverRule</a> request.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "ResolverRuleId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name of an association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name of an association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "VPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you associated the resolver rule with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you associated the resolver rule with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "COMPLETE",
                  "DELETING",
                  "FAILED",
                  "OVERRIDDEN"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "ResolverRuleAssociationStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the resolver rule association that you specified in a <code>GetResolverRuleAssociation</code> request.</p>\n\t     ",
            "shape_name": "ResolverRuleAssociation"
          }
        },
        "shape_name": "GetResolverRuleAssociationResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about an association between a specified resolver rule and a VPC. You associate a resolver rule and a VPC using \n\t\t\t<a>AssociateResolverRule</a>. </p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "DisassociateResolverRule": {
      "name": "DisassociateResolverRule",
      "input": {
        "type": "structure",
        "members": {
          "VPCId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to disassociate the resolver rule from.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the VPC that you want to disassociate the resolver rule from.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "ResolverRuleId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you want to disassociate from the specified VPC.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver rule that you want to disassociate from the specified VPC.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "DisassociateResolverRuleRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverRuleAssociation": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<xref linkend=\"AssociateResolverRule\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<a>AssociateResolverRule</a> request.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "ResolverRuleId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name of an association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name of an association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "VPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you associated the resolver rule with.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you associated the resolver rule with.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "COMPLETE",
                  "DELETING",
                  "FAILED",
                  "OVERRIDDEN"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "ResolverRuleAssociationStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the association between a resolver rule and a VPC.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>DisassociateResolverRule</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverRuleAssociation"
          }
        },
        "shape_name": "DisassociateResolverRuleResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Removes the association between a specified resolver rule and a specified VPC.</p>\n\t\t       <important>\n\t\t\t         <p>If you disassociate a resolver rule from a VPC, Resolver stops forwarding DNS queries for the \n\t\t\t\tdomain name that you specified in the resolver rule. </p>\n\t\t       </important>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "ListResolverRuleAssociations": {
      "name": "ListResolverRuleAssociations",
      "input": {
        "type": "structure",
        "members": {
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of rule associations that you want to return in the response to a <code>ListResolverRuleAssociations</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 rule associations. </p>\n\t     ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</para>\n\t\t       <para>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request \n\t\t\tto get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>For the first <code>ListResolverRuleAssociation</code> request, omit this value.</p>\n\t\t       <p>If you have more than <code>MaxResults</code> rule associations, you can submit another <code>ListResolverRuleAssociation</code> request \n\t\t\tto get the next group of rule associations. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "box": true,
            "shape_name": "NextToken"
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</para>\n\t\t       <note>\n            <para>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</para>\n         </note>\n\t\t\n\n\t     ",
            "documentation": "\n\t\t       <p>An optional specification to return a subset of resolver rules, such as resolver rules that are associated with the same VPC ID.</p>\n\t\t       <note>\n            <p>If you submit a second or subsequent <code>ListResolverRuleAssociations</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n         </note>\n\t\t\n\n\t     ",
            "box": true,
            "shape_name": "Filters",
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</p>\n\t     ",
                  "shape_name": "FilterName",
                  "min_length": 1,
                  "max_length": 64
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</p>\n\t     ",
                  "shape_name": "FilterValues",
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 64
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</p>\n\t     ",
              "shape_name": "Filter"
            }
          }
        },
        "shape_name": "ListResolverRuleAssociationsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another \n\t\t\t<code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>If more than <code>MaxResults</code> rule associations match the specified criteria, you can submit another \n\t\t\t<code>ListResolverRuleAssociation</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </p>\n\t     ",
            "shape_name": "NextToken"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>MaxResults</code> in the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The value that you specified for <code>MaxResults</code> in the request.</p>\n\t     ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "ResolverRuleAssociations": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the \n\t\t\tspecified filters, if any.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The associations that were created between resolver rules and VPCs using the current AWS account, and that match the \n\t\t\tspecified filters, if any.</p>\n\t     ",
            "shape_name": "ResolverRuleAssociations",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<xref linkend=\"AssociateResolverRule\"/> request.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the association between a resolver rule and a VPC. Resolver assigns this value when you submit an \n\t\t\t<a>AssociateResolverRule</a> request.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "ResolverRuleId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the resolver rule that you associated with the VPC that is specified by <code>VPCId</code>.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "Name": {
                  "type": "string",
                  "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                  "zonbookDocumentation": "\n\t\t       <para>The name of an association between a resolver rule and a VPC.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name of an association between a resolver rule and a VPC.</p>\n\t     ",
                  "shape_name": "Name",
                  "max_length": 64
                },
                "VPCId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you associated the resolver rule with.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the VPC that you associated the resolver rule with.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "Status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "COMPLETE",
                    "DELETING",
                    "FAILED",
                    "OVERRIDDEN"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the association between a resolver rule and a VPC.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A code that specifies the current status of the association between a resolver rule and a VPC.</p>\n\t     ",
                  "shape_name": "ResolverRuleAssociationStatus"
                },
                "StatusMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the association between a resolver rule and a VPC.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A detailed description of the status of the association between a resolver rule and a VPC.</p>\n\t     ",
                  "shape_name": "StatusMessage",
                  "max_length": 255
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>In the response to an <xref linkend=\"AssociateResolverRule\"/>,  \n\t\t\t<xref linkend=\"DisassociateResolverRule\"/>, or <xref linkend=\"ListResolverRuleAssociations\"/> request, \n\t\t\tinformation about an association between a resolver rule and a VPC.</para>\n\t     ",
              "documentation": "\n\t\t       <p>In the response to an <a>AssociateResolverRule</a>,  \n\t\t\t<a>DisassociateResolverRule</a>, or <a>ListResolverRuleAssociations</a> request, \n\t\t\tinformation about an association between a resolver rule and a VPC.</p>\n\t     ",
              "shape_name": "ResolverRuleAssociation"
            }
          }
        },
        "shape_name": "ListResolverRuleAssociationsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>\n\t     ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the associations that were created between resolver rules and VPCs using the current AWS account.</p>\n\t\t\n\t\t\n\n\t     "
    },
    "CreateResolverEndpoint": {
      "name": "CreateResolverEndpoint",
      "input": {
        "type": "structure",
        "members": {
          "CreatorRequestId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. \n\t\t\t<code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </para>\n\t     ",
            "documentation": "\n\t\t       <p>A unique string that identifies the request and that allows failed requests to be retried without the risk of executing the operation twice. \n\t\t\t<code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp. </p>\n\t     ",
            "required": true,
            "shape_name": "CreatorRequestId",
            "min_length": 1,
            "max_length": 255
          },
          "Name": {
            "type": "string",
            "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "zonbookDocumentation": "\n\t\t       <para>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route 53 console.</p>\n\t     ",
            "shape_name": "Name",
            "max_length": 64
          },
          "SecurityGroupIds": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify \n\t\t\tmust include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of one or more security groups that you want to use to control access to this VPC. The security group that you specify \n\t\t\tmust include one or more inbound rules (for inbound resolver endpoints) or outbound rules (for outbound resolver endpoints).</p>\n\t     ",
            "required": true,
            "box": true,
            "shape_name": "SecurityGroupIds",
            "members": {
              "type": "string",
              "shape_name": "ResourceId",
              "documentation": null,
              "min_length": 1,
              "max_length": 64
            }
          },
          "Direction": {
            "type": "string",
            "enum": [
              "INBOUND",
              "OUTBOUND"
            ],
            "zonbookDocumentation": "\n\t\t       <para>Specify the applicable value:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
            "documentation": "\n\t\t       <p>Specify the applicable value:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: Resolver forwards DNS queries to the DNS service for a VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: Resolver forwards DNS queries from the DNS service for a VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
            "required": true,
            "shape_name": "ResolverEndpointDirection"
          },
          "IpAddresses": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network \n\t\t\t(for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </para>\n\t     ",
            "documentation": "\n\t\t       <p>The subnets and IP addresses in your VPC that you want DNS queries to pass through on the way from your VPCs to your network \n\t\t\t(for outbound endpoints) or on the way from your network to your VPCs (for inbound resolver endpoints). </p>\n\t     ",
            "required": true,
            "shape_name": "IpAddressesRequest",
            "min_length": 1,
            "max_length": 10,
            "members": {
              "type": "structure",
              "members": {
                "SubnetId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The subnet that contains the IP address.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The subnet that contains the IP address.</p>\n\t     ",
                  "required": true,
                  "shape_name": "SubnetId",
                  "min_length": 1,
                  "max_length": 32
                },
                "Ip": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The IP address that you want to use for DNS queries.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The IP address that you want to use for DNS queries.</p>\n\t     ",
                  "box": true,
                  "shape_name": "Ip",
                  "min_length": 7,
                  "max_length": 36
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>In an <xref linkend=\"CreateResolverEndpoint\"/> request, a subnet and IP address that you want to use for DNS queries.</para>\n\t     ",
              "documentation": "\n\t\t       <p>In an <a>CreateResolverEndpoint</a> request, a subnet and IP address that you want to use for DNS queries.</p>\n\t     ",
              "shape_name": "IpAddressRequest"
            }
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>A list of the tag keys and values that you want to associate with the endpoint.</para>\n\t     ",
            "documentation": "\n\t\t       <p>A list of the tag keys and values that you want to associate with the endpoint.</p>\n\t     ",
            "box": true,
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</p>\n\t     ",
                  "shape_name": "TagKey"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</p>\n\t     ",
                  "shape_name": "TagValue"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</para>\n\t     ",
              "documentation": "\n\t\t       <p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>\n\t     ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "CreateResolverEndpointRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>CreateResolverEndpoint</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "CreateResolverEndpointResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to create already exists.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to create already exists.</p>\n\t     ",
          "shape_name": "ResourceExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request caused one or more limits to be exceeded.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request caused one or more limits to be exceeded.</p>\n\t     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Creates a resolver endpoint. There are two types of resolver endpoints, inbound and outbound:</p>\n\t\t       <ul>\n            <li>\n               <p>An <i>inbound resolver endpoint</i> forwards DNS queries to the DNS service for a VPC \n\t\t\t\tfrom your network or another VPC.</p>\n            </li>\n            <li>\n               <p>An <i>outbound resolver endpoint</i> forwards DNS queries from the DNS service for a VPC \n\t\t\t\tto your network or another VPC.</p>\n            </li>\n         </ul>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "DeleteResolverEndpoint": {
      "name": "DeleteResolverEndpoint",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to delete.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to delete.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "DeleteResolverEndpointRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the <code>DeleteResolverEndpoint</code> request, including the status of the request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "DeleteResolverEndpointResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Deletes a resolver endpoint. The effect of deleting a resolver endpoint depends on whether it's an inbound or an outbound \n\t\t\tresolver endpoint:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <b>Inbound</b>: DNS queries from your network or another VPC are no longer routed \n\t\t\t\tto the DNS service for the specified VPC.</p>\n            </li>\n            <li>\n               <p>\n                  <b>Outbound</b>: DNS queries from a VPC are no longer routed to your network or \n\t\t\t\tto another VPC.</p>\n            </li>\n         </ul>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "GetResolverEndpoint": {
      "name": "GetResolverEndpoint",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to get information about.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to get information about.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          }
        },
        "shape_name": "GetResolverEndpointRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Information about the resolver endpoint that you specified in a <code>GetResolverEndpoint</code> request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "GetResolverEndpointResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets information about a specified resolver endpoint, such as whether it's an inbound or an outbound resolver endpoint, and the \n\t\t\tcurrent status of the endpoint.</p>\n\t\t\n\t\t\n\n\t     "
    },
    "ListResolverEndpoints": {
      "name": "ListResolverEndpoints",
      "input": {
        "type": "structure",
        "members": {
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of resolver endpoints that you want to return in the response to a <code>ListResolverEndpoints</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 resolver endpoints. </p>\n\t     ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>For the first <code>ListResolverEndpoints</code> request, omit this value.</para>\n\t\t       <para>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request \n\t\t\tto get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>For the first <code>ListResolverEndpoints</code> request, omit this value.</p>\n\t\t       <p>If you have more than <code>MaxResults</code> resolver endpoints, you can submit another <code>ListResolverEndpoints</code> request \n\t\t\tto get the next group of resolver endpoints. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "box": true,
            "shape_name": "NextToken"
          },
          "Filters": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</para>\n\t\t       <note>\n            <para>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</para>\n         </note>\n\n\t\t\n\t     ",
            "documentation": "\n\t\t       <p>An optional specification to return a subset of resolver endpoints, such as all inbound resolver endpoints.</p>\n\t\t       <note>\n            <p>If you submit a second or subsequent <code>ListResolverEndpoints</code> request and specify the <code>NextToken</code> parameter, \n\t\t\tyou must use the same values for <code>Filters</code>, if any, as in the previous request.</p>\n         </note>\n\n\t\t\n\t     ",
            "box": true,
            "shape_name": "Filters",
            "members": {
              "type": "structure",
              "members": {
                "Name": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe name of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>Direction</code> for the value of <code>Name</code>.</p>\n\t     ",
                  "shape_name": "FilterName",
                  "min_length": 1,
                  "max_length": 64
                },
                "Values": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>When you're using a <code>List</code> operation and you want the operation to return a subset of objects, such as resolver endpoints or resolver rules,\n\t\t\tthe value of the parameter that you want to use to filter objects. For example, to list only inbound resolver endpoints, specify \n\t\t\t<code>INBOUND</code> for the value of <code>Values</code>.</p>\n\t     ",
                  "shape_name": "FilterValues",
                  "members": {
                    "type": "string",
                    "shape_name": "FilterValue",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 64
                  }
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For <code>List</code> operations, an optional specification to return a subset of objects, such as resolver endpoints or resolver rules.</p>\n\t     ",
              "shape_name": "Filter"
            }
          }
        },
        "shape_name": "ListResolverEndpointsRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request \n\t\t\tto get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>If more than <code>MaxResults</code> IP addresses match the specified criteria, you can submit another <code>ListResolverEndpoint</code> request \n\t\t\tto get the next group of results. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "shape_name": "NextToken"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>MaxResults</code> in the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The value that you specified for <code>MaxResults</code> in the request.</p>\n\t     ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "ResolverEndpoints": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The resolver endpoints that were created by using the current AWS account, and that match the specified filters, if any.</p>\n\t     ",
            "shape_name": "ResolverEndpoints",
            "members": {
              "type": "structure",
              "members": {
                "Id": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "CreatorRequestId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                  "shape_name": "CreatorRequestId",
                  "min_length": 1,
                  "max_length": 255
                },
                "Arn": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                  "shape_name": "Arn",
                  "min_length": 1,
                  "max_length": 255
                },
                "Name": {
                  "type": "string",
                  "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                  "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                  "shape_name": "Name",
                  "max_length": 64
                },
                "SecurityGroupIds": {
                  "type": "list",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                  "shape_name": "SecurityGroupIds",
                  "members": {
                    "type": "string",
                    "shape_name": "ResourceId",
                    "documentation": null,
                    "min_length": 1,
                    "max_length": 64
                  }
                },
                "Direction": {
                  "type": "string",
                  "enum": [
                    "INBOUND",
                    "OUTBOUND"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                  "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                  "shape_name": "ResolverEndpointDirection"
                },
                "IpAddressCount": {
                  "type": "integer",
                  "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                  "shape_name": "IpAddressCount"
                },
                "HostVPCId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "Status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "OPERATIONAL",
                    "UPDATING",
                    "AUTO_RECOVERING",
                    "ACTION_NEEDED",
                    "DELETING"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                  "shape_name": "ResolverEndpointStatus"
                },
                "StatusMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                  "shape_name": "StatusMessage",
                  "max_length": 255
                },
                "CreationTime": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                  "shape_name": "Rfc3339TimeString",
                  "min_length": 20,
                  "max_length": 40
                },
                "ModificationTime": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                  "shape_name": "Rfc3339TimeString",
                  "min_length": 20,
                  "max_length": 40
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>In the response to a <xref linkend=\"CreateResolverEndpoint\"/>, <xref linkend=\"DeleteResolverEndpoint\"/>, <xref linkend=\"GetResolverEndpoint\"/>,\n\t\t\t<xref linkend=\"ListResolverEndpoints\"/>, or <xref linkend=\"UpdateResolverEndpoint\"/> request, a complex type that contains settings \n\t\t\tfor an existing inbound or outbound resolver endpoint.</para>\n\t     ",
              "documentation": "\n\t\t       <p>In the response to a <a>CreateResolverEndpoint</a>, <a>DeleteResolverEndpoint</a>, <a>GetResolverEndpoint</a>,\n\t\t\t<a>ListResolverEndpoints</a>, or <a>UpdateResolverEndpoint</a> request, a complex type that contains settings \n\t\t\tfor an existing inbound or outbound resolver endpoint.</p>\n\t     ",
              "shape_name": "ResolverEndpoint"
            }
          }
        },
        "shape_name": "ListResolverEndpointsResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>\n\t     ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists all the resolver endpoints that were created using the current AWS account.</p>\n\n\t\t\n\t\t\n\t     "
    },
    "UpdateResolverEndpoint": {
      "name": "UpdateResolverEndpoint",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to update.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "Name": {
            "type": "string",
            "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
            "zonbookDocumentation": "\n\t\t       <para>The name of the resolver endpoint that you want to update.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The name of the resolver endpoint that you want to update.</p>\n\t     ",
            "box": true,
            "shape_name": "Name",
            "max_length": 64
          }
        },
        "shape_name": "UpdateResolverEndpointRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The response to an <code>UpdateResolverEndpoint</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The response to an <code>UpdateResolverEndpoint</code> request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "UpdateResolverEndpointResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Updates the name of an inbound or an outbound resolver endpoint.  </p>\n\n\t\t\n\t\t\n\t     "
    },
    "AssociateResolverEndpointIpAddress": {
      "name": "AssociateResolverEndpointIpAddress",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to associate IP addresses with.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to associate IP addresses with.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "IpAddress": {
            "type": "structure",
            "members": {
              "IpId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>\n            <emphasis>Only when removing an IP address from a resolver endpoint</emphasis>: The ID of the IP address that you want to remove. \n\t\t\tTo get this ID, use <xref linkend=\"GetResolverEndpoint\"/>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>\n            <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. \n\t\t\tTo get this ID, use <a>GetResolverEndpoint</a>.</p>\n\t     ",
                "box": true,
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "SubnetId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <xref linkend=\"GetResolverEndpoint\"/>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n\t     ",
                "box": true,
                "shape_name": "SubnetId",
                "min_length": 1,
                "max_length": 32
              },
              "Ip": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The new IP address.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The new IP address.</p>\n\t     ",
                "box": true,
                "shape_name": "Ip",
                "min_length": 7,
                "max_length": 36
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, \n\t\t\tResolver chooses an IP address for you from the available IPs in the specified subnet.</para>\n\t     ",
            "documentation": "\n\t\t       <p>Either the IPv4 address that you want to add to a resolver endpoint or a subnet ID. If you specify a subnet ID, \n\t\t\tResolver chooses an IP address for you from the available IPs in the specified subnet.</p>\n\t     ",
            "required": true,
            "shape_name": "IpAddressUpdate"
          }
        },
        "shape_name": "AssociateResolverEndpointIpAddressRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The response to an <code>AssociateResolverEndpointIpAddress</code> request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "AssociateResolverEndpointIpAddressResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to create already exists.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to create already exists.</p>\n\t     ",
          "shape_name": "ResourceExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request caused one or more limits to be exceeded.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request caused one or more limits to be exceeded.</p>\n\t     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Adds IP addresses to an inbound or an outbound resolver endpoint. If you want to adding more than one IP address, \n\t\t\tsubmit one <code>AssociateResolverEndpointIpAddress</code> request for each IP address.</p>\n\t\t       <p>To remove an IP address from an endpoint, see <a>DisassociateResolverEndpointIpAddress</a>.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "DisassociateResolverEndpointIpAddress": {
      "name": "DisassociateResolverEndpointIpAddress",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to disassociate an IP address from.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to disassociate an IP address from.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "IpAddress": {
            "type": "structure",
            "members": {
              "IpId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>\n            <emphasis>Only when removing an IP address from a resolver endpoint</emphasis>: The ID of the IP address that you want to remove. \n\t\t\tTo get this ID, use <xref linkend=\"GetResolverEndpoint\"/>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>\n            <i>Only when removing an IP address from a resolver endpoint</i>: The ID of the IP address that you want to remove. \n\t\t\tTo get this ID, use <a>GetResolverEndpoint</a>.</p>\n\t     ",
                "box": true,
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "SubnetId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <xref linkend=\"GetResolverEndpoint\"/>.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the subnet that includes the IP address that you want to update. To get this ID, use <a>GetResolverEndpoint</a>.</p>\n\t     ",
                "box": true,
                "shape_name": "SubnetId",
                "min_length": 1,
                "max_length": 32
              },
              "Ip": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The new IP address.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The new IP address.</p>\n\t     ",
                "box": true,
                "shape_name": "Ip",
                "min_length": 7,
                "max_length": 36
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The IPv4 address that you want to remove from a resolver endpoint.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IPv4 address that you want to remove from a resolver endpoint.</p>\n\t     ",
            "required": true,
            "shape_name": "IpAddressUpdate"
          }
        },
        "shape_name": "DisassociateResolverEndpointIpAddressRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "ResolverEndpoint": {
            "type": "structure",
            "members": {
              "Id": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "CreatorRequestId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A unique string that identifies the request that created the resolver endpoint. The <code>CreatorRequestId</code> allows failed requests \n\t\t\tto be retried without the risk of executing the operation twice.</p>\n\t     ",
                "shape_name": "CreatorRequestId",
                "min_length": 1,
                "max_length": 255
              },
              "Arn": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ARN (Amazon Resource Name) for the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ARN (Amazon Resource Name) for the resolver endpoint.</p>\n\t     ",
                "shape_name": "Arn",
                "min_length": 1,
                "max_length": 255
              },
              "Name": {
                "type": "string",
                "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_' ']+)",
                "zonbookDocumentation": "\n\t\t       <para>The name that you assigned to the resolver endpoint when you submitted a <xref linkend=\"CreateResolverEndpoint\"/> request.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The name that you assigned to the resolver endpoint when you submitted a <a>CreateResolverEndpoint</a> request.</p>\n\t     ",
                "shape_name": "Name",
                "max_length": 64
              },
              "SecurityGroupIds": {
                "type": "list",
                "zonbookDocumentation": "\n\t\t       <para>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of one or more security groups that control access to this VPC. The security group must include one or more inbound resolver rules.</p>\n\t     ",
                "shape_name": "SecurityGroupIds",
                "members": {
                  "type": "string",
                  "shape_name": "ResourceId",
                  "documentation": null,
                  "min_length": 1,
                  "max_length": 64
                }
              },
              "Direction": {
                "type": "string",
                "enum": [
                  "INBOUND",
                  "OUTBOUND"
                ],
                "zonbookDocumentation": "\n\t\t       <para>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</para>\n\t\t       <itemizedlist>\n\t\t\t         <listitem>\n               <para>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</para>\n            </listitem>\n\t\t\t         <listitem>\n               <para>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</para>\n            </listitem>\n\t\t       </itemizedlist>\n\t     ",
                "documentation": "\n\t\t       <p>Indicates whether the resolver endpoint allows inbound or outbound DNS queries:</p>\n\t\t       <ul>\n            <li>\n               <p>\n                  <code>INBOUND</code>: allows DNS queries to your VPC from your network or another VPC</p>\n            </li>\n            <li>\n               <p>\n                  <code>OUTBOUND</code>: allows DNS queries from your VPC to your network or another VPC</p>\n            </li>\n         </ul>\n\t     ",
                "shape_name": "ResolverEndpointDirection"
              },
              "IpAddressCount": {
                "type": "integer",
                "zonbookDocumentation": "\n\t\t       <para>The number of IP addresses that the resolver endpoint can use for DNS queries.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The number of IP addresses that the resolver endpoint can use for DNS queries.</p>\n\t     ",
                "shape_name": "IpAddressCount"
              },
              "HostVPCId": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The ID of the VPC that you want to create the resolver endpoint in.</para>\n\t     ",
                "documentation": "\n\t\t       <p>The ID of the VPC that you want to create the resolver endpoint in.</p>\n\t     ",
                "shape_name": "ResourceId",
                "min_length": 1,
                "max_length": 64
              },
              "Status": {
                "type": "string",
                "enum": [
                  "CREATING",
                  "OPERATIONAL",
                  "UPDATING",
                  "AUTO_RECOVERING",
                  "ACTION_NEEDED",
                  "DELETING"
                ],
                "zonbookDocumentation": "\n\t\t       <para>A code that specifies the current status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A code that specifies the current status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "ResolverEndpointStatus"
              },
              "StatusMessage": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>A detailed description of the status of the resolver endpoint.</para>\n\t     ",
                "documentation": "\n\t\t       <p>A detailed description of the status of the resolver endpoint.</p>\n\t     ",
                "shape_name": "StatusMessage",
                "max_length": 255
              },
              "CreationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              },
              "ModificationTime": {
                "type": "string",
                "zonbookDocumentation": "\n\t\t       <para>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                "documentation": "\n\t\t       <p>The date and time that the endpoint was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                "shape_name": "Rfc3339TimeString",
                "min_length": 20,
                "max_length": 40
              }
            },
            "zonbookDocumentation": "\n\t\t       <para>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The response to an <code>DisassociateResolverEndpointIpAddress</code> request.</p>\n\t     ",
            "shape_name": "ResolverEndpoint"
          }
        },
        "shape_name": "DisassociateResolverEndpointIpAddressResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceExistsException</code> error, the type of resource that the error applies to.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The resource that you tried to create already exists.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The resource that you tried to create already exists.</p>\n\t     ",
          "shape_name": "ResourceExistsException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Removes IP addresses from an inbound or an outbound resolver endpoint. If you want to remove more than one IP address, \n\t\t\tsubmit one <code>DisassociateResolverEndpointIpAddress</code> request for each IP address.</p>\n\t\t       <p>To add an IP address to an endpoint, see <a>AssociateResolverEndpointIpAddress</a>.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "ListResolverEndpointIpAddresses": {
      "name": "ListResolverEndpointIpAddresses",
      "input": {
        "type": "structure",
        "members": {
          "ResolverEndpointId": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The ID of the resolver endpoint that you want to get IP addresses for.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The ID of the resolver endpoint that you want to get IP addresses for.</p>\n\t     ",
            "required": true,
            "shape_name": "ResourceId",
            "min_length": 1,
            "max_length": 64
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of IP addresses that you want to return in the response to a <code>ListResolverEndpointIpAddresses</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 IP addresses. </p>\n\t     ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</para>\n\t\t       <para>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another \n\t\t\t<code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>For the first <code>ListResolverEndpointIpAddresses</code> request, omit this value.</p>\n\t\t       <p>If the specified resolver endpoint has more than <code>MaxResults</code> IP addresses, you can submit another \n\t\t\t<code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </p>\n\t     ",
            "box": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListResolverEndpointIpAddressesRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another \n\t\t\t<code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, \n\t\t\tspecify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>If the specified endpoint has more than <code>MaxResults</code> IP addresses, you can submit another \n\t\t\t<code>ListResolverEndpointIpAddresses</code> request to get the next group of IP addresses. In the next request, \n\t\t\tspecify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "shape_name": "NextToken"
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>MaxResults</code> in the request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The value that you specified for <code>MaxResults</code> in the request.</p>\n\t     ",
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "IpAddresses": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to \n\t\t\tResolver (inbound endpoint).</para>\n\t     ",
            "documentation": "\n\t\t       <p>The IP addresses that DNS queries pass through on their way to your network (outbound endpoint) or on the way to \n\t\t\tResolver (inbound endpoint).</p>\n\t     ",
            "shape_name": "IpAddressesResponse",
            "members": {
              "type": "structure",
              "members": {
                "IpId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of one IP address.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of one IP address.</p>\n\t     ",
                  "shape_name": "ResourceId",
                  "min_length": 1,
                  "max_length": 64
                },
                "SubnetId": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The ID of one subnet.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The ID of one subnet.</p>\n\t     ",
                  "shape_name": "SubnetId",
                  "min_length": 1,
                  "max_length": 32
                },
                "Ip": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>One IP address that the resolver endpoint uses for DNS queries.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>One IP address that the resolver endpoint uses for DNS queries.</p>\n\t     ",
                  "shape_name": "Ip",
                  "min_length": 7,
                  "max_length": 36
                },
                "Status": {
                  "type": "string",
                  "enum": [
                    "CREATING",
                    "FAILED_CREATION",
                    "ATTACHING",
                    "ATTACHED",
                    "REMAP_DETACHING",
                    "REMAP_ATTACHING",
                    "DETACHING",
                    "FAILED_RESOURCE_GONE",
                    "DELETING",
                    "DELETE_FAILED_FAS_EXPIRED"
                  ],
                  "zonbookDocumentation": "\n\t\t       <para>A status code that gives the current status of the request.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A status code that gives the current status of the request.</p>\n\t     ",
                  "shape_name": "IpAddressStatus"
                },
                "StatusMessage": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>A message that provides additional information about the status of the request.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>A message that provides additional information about the status of the request.</p>\n\t     ",
                  "shape_name": "StatusMessage",
                  "max_length": 255
                },
                "CreationTime": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date and time that the IP address was created, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                  "shape_name": "Rfc3339TimeString",
                  "min_length": 20,
                  "max_length": 40
                },
                "ModificationTime": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The date and time that the IP address was last modified, in Unix time format and Coordinated Universal Time (UTC).</p>\n\t     ",
                  "shape_name": "Rfc3339TimeString",
                  "min_length": 20,
                  "max_length": 40
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>In the response to a <xref linkend=\"GetResolverEndpoint\"/> request, information about the IP addresses that \n\t\t\tthe resolver endpoint uses for DNS queries.</para>\n\t     ",
              "documentation": "\n\t\t       <p>In the response to a <a>GetResolverEndpoint</a> request, information about the IP addresses that \n\t\t\tthe resolver endpoint uses for DNS queries.</p>\n\t     ",
              "shape_name": "IpAddressResponse"
            }
          }
        },
        "shape_name": "ListResolverEndpointIpAddressesResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>\n\t     ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Gets the IP addresses for a specified resolver endpoint.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "TagResource": {
      "name": "TagResource",
      "input": {
        "type": "structure",
        "members": {
          "ResourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable \n\t\t\t<code>Get</code> or <code>List</code> command: </para>\n\t\t\t      <itemizedlist>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverEndpoint\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverRule\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverRuleAssociation\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverEndpoints\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverRuleAssociations\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverRules\"/>\n               </para>\n            </listitem>\n\t\t\t      </itemizedlist>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) for the resource that you want to add tags to. To get the ARN for a resource, use the applicable \n\t\t\t<code>Get</code> or <code>List</code> command: </p>\n\t\t\t      <ul>\n            <li>\n               <p>\n                  <a>GetResolverEndpoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GetResolverRule</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GetResolverRuleAssociation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverEndpoints</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverRuleAssociations</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverRules</a>\n               </p>\n            </li>\n         </ul>\n\t     ",
            "required": true,
            "shape_name": "Arn",
            "min_length": 1,
            "max_length": 255
          },
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The tags that you want to add to the specified resource.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The tags that you want to add to the specified resource.</p>\n\t     ",
            "required": true,
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</p>\n\t     ",
                  "shape_name": "TagKey"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</p>\n\t     ",
                  "shape_name": "TagValue"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</para>\n\t     ",
              "documentation": "\n\t\t       <p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>\n\t     ",
              "shape_name": "Tag"
            }
          }
        },
        "shape_name": "TagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "TagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>LimitExceededException</code> error, the type of resource that exceeded the current limit.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request caused one or more limits to be exceeded.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request caused one or more limits to be exceeded.</p>\n\t     ",
          "shape_name": "LimitExceededException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified tag is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified tag is invalid.</p>\n\t     ",
          "shape_name": "InvalidTagException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Adds one or more tags to a specified resource.</p>\n\t\t\n\t\t\n\n\t     "
    },
    "UntagResource": {
      "name": "UntagResource",
      "input": {
        "type": "structure",
        "members": {
          "ResourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable \n\t\t\t<code>Get</code> or <code>List</code> command: </para>\n\t\t\t      <itemizedlist>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverEndpoint\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverRule\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"GetResolverRuleAssociation\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverEndpoints\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverRuleAssociations\"/>\n               </para>\n            </listitem>\n\t\t\t\t        <listitem>\n               <para>\n                  <xref linkend=\"ListResolverRules\"/>\n               </para>\n            </listitem>\n\t\t\t      </itemizedlist>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) for the resource that you want to remove tags from. To get the ARN for a resource, use the applicable \n\t\t\t<code>Get</code> or <code>List</code> command: </p>\n\t\t\t      <ul>\n            <li>\n               <p>\n                  <a>GetResolverEndpoint</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GetResolverRule</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>GetResolverRuleAssociation</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverEndpoints</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverRuleAssociations</a>\n               </p>\n            </li>\n            <li>\n               <p>\n                  <a>ListResolverRules</a>\n               </p>\n            </li>\n         </ul>\n\t     ",
            "required": true,
            "shape_name": "Arn",
            "min_length": 1,
            "max_length": 255
          },
          "TagKeys": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The tags that you want to remove to the specified resource.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The tags that you want to remove to the specified resource.</p>\n\t     ",
            "required": true,
            "shape_name": "TagKeyList",
            "members": {
              "type": "string",
              "shape_name": "TagKey",
              "documentation": null
            }
          }
        },
        "shape_name": "UntagResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
        },
        "shape_name": "UntagResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Removes one or more tags from a specified resource.</p>\n\t\t\n\t\t\n\t\t\n\t     "
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "input": {
        "type": "structure",
        "members": {
          "ResourceArn": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The Amazon Resource Name (ARN) for the resource that you want to list tags for.</p>\n\t     ",
            "required": true,
            "shape_name": "Arn",
            "min_length": 1,
            "max_length": 255
          },
          "MaxResults": {
            "type": "integer",
            "zonbookDocumentation": "\n\t\t       <para>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The maximum number of tags that you want to return in the response to a <code>ListTagsForResource</code> request. \n\t\t\tIf you don't specify a value for <code>MaxResults</code>, Resolver returns up to 100 tags.</p>\n\t     ",
            "box": true,
            "shape_name": "MaxResults",
            "min_length": 1,
            "max_length": 100
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>For the first <code>ListTagsForResource</code> request, omit this value.</para>\n\t\t       <para>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request \n\t\t\tto get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>For the first <code>ListTagsForResource</code> request, omit this value.</p>\n\t\t       <p>If you have more than <code>MaxResults</code> tags, you can submit another <code>ListTagsForResource</code> request \n\t\t\tto get the next group of tags for the resource. In the next request, specify the value of <code>NextToken</code> from the previous response. </p>\n\t     ",
            "box": true,
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListTagsForResourceRequest",
        "documentation": null
      },
      "output": {
        "type": "structure",
        "members": {
          "Tags": {
            "type": "list",
            "zonbookDocumentation": "\n\t\t       <para>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</para>\n\t     ",
            "documentation": "\n\t\t       <p>The tags that are associated with the resource that you specified in the <code>ListTagsForResource</code> request.</p>\n\t     ",
            "shape_name": "TagList",
            "members": {
              "type": "structure",
              "members": {
                "Key": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The name for the tag. For example, if you want to associate Resolver resources with the account IDs of your customers for billing purposes, \n\t\t\tthe value of <code>Key</code> might be <code>account-id</code>.</p>\n\t     ",
                  "shape_name": "TagKey"
                },
                "Value": {
                  "type": "string",
                  "zonbookDocumentation": "\n\t\t       <para>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</para>\n\t     ",
                  "documentation": "\n\t\t       <p>The value for the tag. For example, if <code>Key</code> is <code>account-id</code>, then <code>Value</code> might be the ID of the \n\t\t\tcustomer account that you're creating the resource for.</p>\n\t     ",
                  "shape_name": "TagValue"
                }
              },
              "zonbookDocumentation": "\n\t\t       <para>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</para>\n\t     ",
              "documentation": "\n\t\t       <p>One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.</p>\n\t     ",
              "shape_name": "Tag"
            }
          },
          "NextToken": {
            "type": "string",
            "zonbookDocumentation": "\n\t\t       <para>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another \n\t\t\t<code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </para>\n\t     ",
            "documentation": "\n\t\t       <p>If more than <code>MaxResults</code> tags match the specified criteria, you can submit another \n\t\t\t<code>ListTagsForResource</code> request to get the next group of results. In the next request, specify the value of \n\t\t\t<code>NextToken</code> from the previous response. </p>\n\t     ",
            "shape_name": "NextToken"
          }
        },
        "shape_name": "ListTagsForResourceResponse",
        "documentation": null
      },
      "errors": [
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            },
            "ResourceType": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For a <code>ResourceNotFoundException</code> error, the type of resource that doesn't exist.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The specified resource doesn't exist.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The specified resource doesn't exist.</p>\n\t     ",
          "shape_name": "ResourceNotFoundException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "required": true,
              "shape_name": "ExceptionMessage",
              "documentation": null
            },
            "FieldName": {
              "type": "string",
              "zonbookDocumentation": "\n\t\t       <para>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</para>\n\t     ",
              "documentation": "\n\t\t       <p>For an <code>InvalidParameterException</code> error, the name of the parameter that's invalid.</p>\n\t     ",
              "shape_name": "String"
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>One or more parameters in this request are not valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>One or more parameters in this request are not valid.</p>\n\t     ",
          "shape_name": "InvalidParameterException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "String",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The value that you specified for <code>NextToken</code> in a <code>List</code> request isn't valid.</p>\n\t     ",
          "shape_name": "InvalidNextTokenException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request is invalid.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request is invalid.</p>\n\t     ",
          "shape_name": "InvalidRequestException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>We encountered an unknown error. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>We encountered an unknown error. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "InternalServiceErrorException"
        },
        {
          "type": "structure",
          "members": {
            "Message": {
              "type": "string",
              "shape_name": "ExceptionMessage",
              "documentation": null
            }
          },
          "zonbookDocumentation": "\n\t\t       <para>The request was throttled. Try again in a few minutes.</para>\n\t     ",
          "documentation": "\n\t\t       <p>The request was throttled. Try again in a few minutes.</p>\n\t     ",
          "shape_name": "ThrottlingException"
        }
      ],
      "documentation": "\n\t\t       <p>Lists the tags that you associated with the specified resource.</p>\n\t\t\n\t\t\n\t\t\n\t\t\n\t     "
    }
  }
}
